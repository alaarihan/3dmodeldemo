{"version":3,"sources":["webpack:///./node_modules/vue-loader/lib/runtime/componentNormalizer.js","webpack:///./node_modules/vue/dist/vue.runtime.esm.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/vue-3d-model/dist/vue-3d-model.umd.js"],"names":["normalizeComponent","scriptExports","render","staticRenderFns","functionalTemplate","injectStyles","scopeId","moduleIdentifier","shadowMode","hook","options","_compiled","functional","_scopeId","context","this","$vnode","ssrContext","parent","__VUE_SSR_CONTEXT__","call","_registeredComponents","add","_ssrRegister","$root","$options","shadowRoot","_injectStyles","originalRender","h","existing","beforeCreate","concat","exports","__webpack_require__","d","__webpack_exports__","r","global","emptyObject","Object","freeze","isUndef","v","undefined","isDef","isTrue","isFalse","isPrimitive","value","isObject","obj","_toString","prototype","toString","isPlainObject","isRegExp","isValidArrayIndex","val","n","parseFloat","String","Math","floor","isFinite","isPromise","then","catch","Array","isArray","JSON","stringify","toNumber","isNaN","makeMap","str","expectsLowerCase","map","create","list","split","i","length","toLowerCase","isReservedAttribute","remove","arr","item","index","indexOf","splice","hasOwnProperty","hasOwn","key","cached","fn","cache","hit","camelizeRE","camelize","replace","_","c","toUpperCase","capitalize","charAt","slice","hyphenateRE","hyphenate","polyfillBind","ctx","boundFn","a","l","arguments","apply","_length","nativeBind","bind","Function","toArray","start","ret","extend","to","_from","toObject","res","noop","b","no","identity","looseEqual","isObjectA","isObjectB","isArrayA","isArrayB","every","e","Date","getTime","keysA","keys","keysB","looseIndexOf","once","called","SSR_ATTR","ASSET_TYPES","LIFECYCLE_HOOKS","config","optionMergeStrategies","silent","productionTip","devtools","performance","errorHandler","warnHandler","ignoredElements","keyCodes","isReservedTag","isReservedAttr","isUnknownElement","getTagNamespace","parsePlatformTagName","mustUseProp","async","_lifecycleHooks","unicodeRegExp","isReserved","charCodeAt","def","enumerable","defineProperty","writable","configurable","bailRE","RegExp","parsePath","path","test","segments","_isServer","hasProto","inBrowser","window","inWeex","WXEnvironment","platform","weexPlatform","UA","navigator","userAgent","isIE","isIE9","isEdge","isIOS","isFF","match","nativeWatch","watch","supportsPassive","opts","get","addEventListener","isServerRendering","env","VUE_ENV","__VUE_DEVTOOLS_GLOBAL_HOOK__","isNative","Ctor","_Set","hasSymbol","Symbol","Reflect","ownKeys","Set","set","has","clear","warn","uid","Dep","id","subs","addSub","sub","push","removeSub","depend","target","addDep","notify","update","targetStack","pushTarget","popTarget","pop","VNode","tag","data","children","text","elm","componentOptions","asyncFactory","ns","fnContext","fnOptions","fnScopeId","componentInstance","raw","isStatic","isRootInsert","isComment","isCloned","isOnce","asyncMeta","isAsyncPlaceholder","prototypeAccessors","child","defineProperties","createEmptyVNode","node","createTextVNode","cloneVNode","vnode","cloned","arrayProto","arrayMethods","methodsToPatch","forEach","method","original","args","len","inserted","result","ob","__ob__","observeArray","dep","arrayKeys","getOwnPropertyNames","shouldObserve","toggleObserving","Observer","vmCount","protoAugment","copyAugment","walk","src","__proto__","observe","asRootData","isExtensible","_isVue","defineReactive$$1","customSetter","shallow","property","getOwnPropertyDescriptor","getter","setter","childOb","dependArray","newVal","max","del","items","strats","mergeData","from","toVal","fromVal","mergeDataOrFn","parentVal","childVal","vm","instanceData","defaultData","mergeHook","dedupeHooks","hooks","mergeAssets","type","key$1","props","methods","inject","computed","provide","defaultStrat","normalizeProps","name","normalizeInject","normalized","normalizeDirectives","dirs","directives","def$$1","mergeOptions","_base","extends","mixins","mergeField","strat","resolveAsset","warnMissing","assets","camelizedId","PascalCaseId","validateProp","propOptions","propsData","prop","absent","booleanIndex","getTypeIndex","Boolean","stringIndex","getPropDefaultValue","prevShouldObserve","default","_props","getType","isSameType","expectedTypes","handleError","err","info","cur","$parent","errorCaptured","capture","globalHandleError","invokeWithErrorHandling","handler","_handled","logError","console","error","timerFunc","isUsingMicroTask","callbacks","pending","flushCallbacks","copies","Promise","p","resolve","setTimeout","MutationObserver","setImmediate","counter","observer","textNode","document","createTextNode","characterData","nextTick","cb","_resolve","seenObjects","traverse","_traverse","seen","isA","isFrozen","depId","normalizeEvent","passive","once$$1","createFnInvoker","fns","invoker","arguments$1","updateListeners","on","oldOn","remove$$1","createOnceHandler","old","event","params","mergeVNodeHook","hookKey","oldHook","wrappedHook","merged","extractPropsFromVNodeData","attrs","altKey","checkProp","hash","preserve","simpleNormalizeChildren","normalizeChildren","normalizeArrayChildren","isTextNode","nestedIndex","lastIndex","last","shift","_isVList","initProvide","_provided","initInjections","resolveInject","provideKey","source","provideDefault","resolveSlots","slots","slot","name$1","isWhitespace","normalizeScopedSlots","normalSlots","prevSlots","hasNormalSlots","isStable","$stable","$key","_normalized","$hasNormal","normalizeScopedSlot","key$2","proxyNormalSlot","proxy","renderList","iterator","next","done","renderSlot","fallback","bindObject","nodes","scopedSlotFn","$scopedSlots","$slots","$createElement","resolveFilter","isKeyNotMatch","expect","actual","checkKeyCodes","eventKeyCode","builtInKeyCode","eventKeyName","builtInKeyName","mappedKeyCode","bindObjectProps","asProp","isSync","loop","domProps","camelizedKey","hyphenatedKey","$event","renderStatic","isInFor","_staticTrees","tree","_renderProxy","markStatic","markOnce","markStaticNode","bindObjectListeners","ours","resolveScopedSlots","hasDynamicKeys","contentHashKey","bindDynamicKeys","baseObj","values","prependModifier","symbol","installRenderHelpers","_o","_n","_s","_l","_t","_q","_i","_m","_f","_k","_b","_v","_e","_u","_g","_d","_p","FunctionalRenderContext","contextVm","this$1","_original","isCompiled","needNormalization","listeners","injections","scopedSlots","_c","createElement","createFunctionalComponent","mergeProps","renderContext","cloneAndMarkFunctionalResult","vnodes","clone","componentVNodeHooks","init","hydrating","_isDestroyed","keepAlive","mountedNode","prepatch","createComponentInstanceForVnode","activeInstance","$mount","oldVnode","updateChildComponent","insert","_isMounted","callHook","queueActivatedComponent","activateChildComponent","destroy","deactivateChildComponent","$destroy","hooksToMerge","createComponent","baseCtor","cid","resolveAsyncComponent","createAsyncPlaceholder","resolveConstructorOptions","model","transformModel","nativeOn","abstract","installComponentHooks","_isComponent","_parentVnode","inlineTemplate","toMerge","_merged","mergeHook$1","f1","f2","callback","SIMPLE_NORMALIZE","ALWAYS_NORMALIZE","normalizationType","alwaysNormalize","_createElement","is","pre","applyNS","registerDeepBindings","force","style","class","initRender","_vnode","parentVnode","_renderChildren","parentData","_parentListeners","currentRenderingInstance","renderMixin","Vue","$nextTick","_render","ref","ensureCtor","comp","base","__esModule","toStringTag","factory","errorComp","resolved","owner","owners","loading","loadingComp","sync","timerLoading","timerTimeout","$on","forceRender","renderCompleted","$forceUpdate","clearTimeout","reject","reason","component","delay","timeout","getFirstComponentChild","initEvents","_events","_hasHookEvent","updateComponentListeners","remove$1","$off","_target","onceHandler","oldListeners","eventsMixin","hookRE","$once","i$1","cbs","$emit","setActiveInstance","prevActiveInstance","initLifecycle","$children","$refs","_watcher","_inactive","_directInactive","_isBeingDestroyed","lifecycleMixin","_update","prevEl","$el","prevVnode","restoreActiveInstance","__patch__","__vue__","teardown","_watchers","_data","mountComponent","el","updateComponent","Watcher","before","renderChildren","newScopedSlots","oldScopedSlots","hasDynamicScopedSlot","needsForceUpdate","$attrs","$listeners","propKeys","_propKeys","isInInactiveTree","direct","handlers","j","queue","activatedChildren","waiting","flushing","resetSchedulerState","currentFlushTimestamp","getNow","now","createEvent","timeStamp","flushSchedulerQueue","watcher","sort","run","activatedQueue","updatedQueue","callActivatedHooks","callUpdatedHooks","emit","queueWatcher","uid$2","expOrFn","isRenderWatcher","deep","user","lazy","active","dirty","deps","newDeps","depIds","newDepIds","expression","cleanupDeps","tmp","oldValue","evaluate","sharedPropertyDefinition","sourceKey","initState","initProps","initMethods","initData","initComputed","initWatch","propsOptions","isRoot","getData","computedWatcherOptions","watchers","_computedWatchers","isSSR","userDef","defineComputed","shouldCache","createComputedGetter","createGetterInvoker","createWatcher","$watch","stateMixin","dataDef","propsDef","$set","$delete","immediate","uid$3","initMixin","_init","_uid","initInternalComponent","constructor","_self","vnodeComponentOptions","_componentTag","super","superOptions","cachedSuperOptions","modifiedOptions","resolveModifiedOptions","extendOptions","components","modified","latest","sealed","sealedOptions","initUse","use","plugin","installedPlugins","_installedPlugins","unshift","install","initMixin$1","mixin","initExtend","Super","SuperId","cachedCtors","_Ctor","Sub","initProps$1","initComputed$1","Comp","initAssetRegisters","definition","getComponentName","matches","pattern","pruneCache","keepAliveInstance","filter","cachedNode","pruneCacheEntry","current","cached$$1","patternTypes","KeepAlive","include","exclude","Number","created","destroyed","mounted","ref$1","parseInt","builtInComponents","initGlobalAPI","configDef","util","defineReactive","delete","observable","version","acceptValue","attr","isEnumeratedAttr","isValidContentEditableValue","convertEnumeratedValue","isFalsyAttrValue","isBooleanAttr","xlinkNS","isXlink","getXlinkProp","genClassForVnode","parentNode","childNode","mergeClassData","renderClass","staticClass","dynamicClass","stringifyClass","stringifyArray","stringifyObject","stringified","namespaceMap","svg","math","isHTMLTag","isSVG","unknownElementCache","HTMLUnknownElement","HTMLElement","isTextInputType","query","selected","querySelector","createElement$1","tagName","multiple","setAttribute","createElementNS","namespace","createComment","insertBefore","newNode","referenceNode","removeChild","appendChild","nextSibling","setTextContent","textContent","setStyleScope","nodeOps","registerRef","isRemoval","refs","refInFor","emptyNode","sameVnode","sameInputType","typeA","typeB","createKeyToOldIdx","beginIdx","endIdx","createPatchFunction","backend","modules","emptyNodeAt","createRmCb","childElm","removeNode","createElm","insertedVnodeQueue","parentElm","refElm","nested","ownerArray","setScope","createChildren","invokeCreateHooks","isReactivated","initComponent","reactivateComponent","pendingInsert","isPatchable","innerNode","transition","activate","ref$$1","ancestor","addVnodes","startIdx","invokeDestroyHook","removeVnodes","ch","removeAndInvokeRemoveHook","rm","updateChildren","oldCh","newCh","removeOnly","oldKeyToIdx","idxInOld","vnodeToMove","oldStartIdx","newStartIdx","oldEndIdx","oldStartVnode","oldEndVnode","newEndIdx","newStartVnode","newEndVnode","canMove","patchVnode","findIdxInOld","end","hydrate","postpatch","invokeInsertHook","initial","isRenderedModule","inVPre","hasChildNodes","innerHTML","childrenMatch","firstChild","fullInvoke","isInitialPatch","isRealElement","nodeType","hasAttribute","removeAttribute","oldElm","_leaveCb","patchable","i$2","updateDirectives","oldDir","dir","isCreate","isDestroy","oldDirs","normalizeDirectives$1","newDirs","dirsWithInsert","dirsWithPostpatch","oldArg","arg","callHook$1","componentUpdated","callInsert","emptyModifiers","modifiers","getRawDirName","rawName","join","baseModules","updateAttrs","inheritAttrs","oldAttrs","setAttr","removeAttributeNS","baseSetAttr","setAttributeNS","__ieph","blocker","stopImmediatePropagation","removeEventListener","updateClass","oldData","cls","transitionClass","_transitionClasses","_prevClass","target$1","klass","RANGE_TOKEN","CHECKBOX_RADIO_TOKEN","normalizeEvents","change","createOnceHandler$1","remove$2","useMicrotaskFix","add$1","attachedTimestamp","_wrapper","currentTarget","ownerDocument","updateDOMListeners","svgContainer","events","updateDOMProps","oldProps","childNodes","_value","strCur","shouldUpdateValue","checkVal","composing","isNotInFocusAndDirty","isDirtyWithModifiers","notInFocus","activeElement","_vModifiers","number","trim","parseStyleText","cssText","listDelimiter","propertyDelimiter","normalizeStyleData","normalizeStyleBinding","staticStyle","bindingStyle","getStyle","checkChild","styleData","emptyStyle","cssVarRE","importantRE","setProp","setProperty","normalizedName","normalize","vendorNames","capName","updateStyle","oldStaticStyle","oldStyleBinding","normalizedStyle","oldStyle","newStyle","whitespaceRE","addClass","classList","getAttribute","removeClass","tar","resolveTransition","css","autoCssTransition","enterClass","enterToClass","enterActiveClass","leaveClass","leaveToClass","leaveActiveClass","hasTransition","TRANSITION","ANIMATION","transitionProp","transitionEndEvent","animationProp","animationEndEvent","ontransitionend","onwebkittransitionend","onanimationend","onwebkitanimationend","raf","requestAnimationFrame","nextFrame","addTransitionClass","transitionClasses","removeTransitionClass","whenTransitionEnds","expectedType","getTransitionInfo","propCount","ended","onEnd","transformRE","styles","getComputedStyle","transitionDelays","transitionDurations","transitionTimeout","getTimeout","animationDelays","animationDurations","animationTimeout","hasTransform","delays","durations","toMs","s","enter","toggleDisplay","cancelled","_enterCb","appearClass","appearToClass","appearActiveClass","beforeEnter","afterEnter","enterCancelled","beforeAppear","appear","afterAppear","appearCancelled","duration","transitionNode","isAppear","startClass","activeClass","toClass","beforeEnterHook","enterHook","afterEnterHook","enterCancelledHook","explicitEnterDuration","expectsCSS","userWantsControl","getHookArgumentsLength","show","pendingNode","_pending","isValidDuration","leave","beforeLeave","afterLeave","leaveCancelled","delayLeave","explicitLeaveDuration","performLeave","invokerFns","_enter","platformModules","patch","vmodel","trigger","directive","binding","_vOptions","setSelected","getValue","onCompositionStart","onCompositionEnd","prevOptions","curOptions","some","o","needReset","hasNoMatchingOption","actuallySetSelected","isMultiple","option","selectedIndex","initEvent","dispatchEvent","locateNode","transition$$1","originalDisplay","__vOriginalDisplay","display","unbind","platformDirectives","transitionProps","mode","getRealChild","compOptions","extractTransitionData","placeholder","rawChild","hasParentTransition","isSameChild","oldChild","isNotTextNode","isVShowDirective","Transition","_leaving","oldRawChild","delayedLeave","moveClass","TransitionGroup","beforeMount","kept","prevChildren","rawChildren","transitionData","removed","c$1","pos","getBoundingClientRect","updated","hasMove","callPendingCbs","recordPosition","applyTranslation","_reflow","body","offsetHeight","moved","transform","WebkitTransform","transitionDuration","_moveCb","propertyName","_hasMove","cloneNode","newPos","oldPos","dx","left","dy","top","platformComponents","g","module","root","self","__WEBPACK_EXTERNAL_MODULE__8bbf__","installedModules","moduleId","m","t","object","01f5","aFunction","that","03b3","it","0d5f","anObject","SPECIES","O","D","S","C","0e44","check","proto","TypeError","setPrototypeOf","buggy","f","14fc","15c2","toAbsoluteIndex","toLength","aLen","endPos","1a9b","classof","ITERATOR","Iterators","getIteratorMethod","265a","documentElement","2d43","IObject","asc","TYPE","$create","IS_MAP","IS_FILTER","IS_SOME","IS_EVERY","IS_FIND_INDEX","NO_HOLES","$this","callbackfn","3754","__g","3a68","defined","4169","DESCRIPTORS","LIBRARY","$typed","hide","redefineAll","fails","anInstance","toInteger","toIndex","gOPN","dP","arrayFill","setToStringTag","ARRAY_BUFFER","DATA_VIEW","PROTOTYPE","WRONG_LENGTH","WRONG_INDEX","$ArrayBuffer","$DataView","RangeError","Infinity","BaseBuffer","abs","pow","log","LN2","BUFFER","BYTE_LENGTH","BYTE_OFFSET","$BUFFER","$LENGTH","$OFFSET","packIEEE754","mLen","nBytes","buffer","eLen","eMax","eBias","rt","unpackIEEE754","nBits","NaN","unpackI32","bytes","packI8","packI16","packI32","packF64","packF32","addGetter","internal","view","isLittleEndian","numIndex","intIndex","store","pack","reverse","conversion","ABV","ArrayBufferProto","$setInt8","setInt8","getInt8","byteOffset","setUint8","byteLength","bufferLength","offset","getUint8","getInt16","getUint16","getInt32","getUint32","getFloat32","getFloat64","setInt16","setUint16","setInt32","setUint32","setFloat32","setFloat64","VIEW","44de","P","4713","IE_PROTO","ObjectProto","getPrototypeOf","4819","cof","TAG","ARG","tryGet","T","B","callee","5325","valueOf","539d","$export","spaces","space","non","ltrim","rtrim","exporter","KEY","exec","ALIAS","exp","FORCE","F","string","54c8","568a","5824","speciesConstructor","5b55","SAFE_CLOSING","riter","skipClosing","safe","iter","5fe5","min","644a","UNSCOPABLES","ArrayProto","6462","propertyIsEnumerable","648a","6594","stat","7266","descriptor","IteratorPrototype","Constructor","NAME","7364","FProto","nameRE","743d","createDesc","7656","redefine","$iterCreate","BUGGY","FF_ITERATOR","KEYS","VALUES","returnThis","Base","DEFAULT","IS_SET","FORCED","getMethod","kind","DEF_VALUES","VALUES_BUG","$native","$default","$entries","$anyNative","entries","7d30","copyWithin","count","inc","7dea","bitmap","88dd","8b37","USE_SYMBOL","$exports","8bbf","9241","9253","$buffer","propertyDesc","toPrimitive","isArrayIter","getIterFn","wks","createArrayMethod","createArrayIncludes","ArrayIterators","$iterDetect","setSpecies","arrayCopyWithin","$DP","$GOPD","gOPD","Uint8Array","SHARED_BUFFER","BYTES_PER_ELEMENT","ArrayBuffer","DataView","arrayForEach","arrayFilter","arraySome","arrayEvery","arrayFind","arrayFindIndex","arrayIncludes","arrayIndexOf","arrayValues","arrayEntries","arrayLastIndexOf","lastIndexOf","arrayReduce","reduce","arrayReduceRight","reduceRight","arrayJoin","arraySort","arraySlice","arrayToString","arrayToLocaleString","toLocaleString","TYPED_CONSTRUCTOR","DEF_CONSTRUCTOR","ALL_CONSTRUCTORS","CONSTR","TYPED_ARRAY","TYPED","$map","allocate","LITTLE_ENDIAN","Uint16Array","FORCED_SET","toOffset","BYTES","validate","speciesFromList","fromList","$from","step","mapfn","mapping","iterFn","$of","TO_LOCALE_BUG","$toLocaleString","fill","find","predicate","findIndex","searchElement","includes","separator","middle","comparefn","subarray","begin","$begin","$slice","arrayLike","$iterators","isTAIndex","$getDesc","$setDesc","desc","$TypedArrayPrototype$","wrapper","CLAMPED","GETTER","SETTER","TypedArray","TAC","TypedArrayPrototype","round","addElement","$offset","$length","$len","$nativeIterator","CORRECT_ITER_NAME","$iterator","G","W","of","94ac","98ce","Typed","TypedArrayConstructors","9d01","px","random","9f58","toIObject","IS_INCLUDES","fromIndex","a013","a4cc","core","__e","a7b8","dPs","enumBugKeys","Empty","createDict","iframeDocument","iframe","lt","gt","contentWindow","open","write","close","Properties","a891","$keys","hiddenKeys","acb9","pIE","IE8_DOM_DEFINE","adbd","SHARED","copyright","b146","b2f5","own","out","IS_FORCED","IS_GLOBAL","IS_STATIC","IS_PROTO","IS_BIND","expProto","U","R","b4e0","b5b8","b6f1","bf29","getKeys","c481","ceil","c497","setPublicPath_i","currentScript","external_commonjs_vue_commonjs2_vue_root_Vue_","external_commonjs_vue_commonjs2_vue_root_Vue_default","EventDispatcher","EPSILON","isInteger","sign","x","assign","output","nextKey","listener","_listeners","hasEventListener","listenerArray","array","_canvas","REVISION","MOUSE","LEFT","MIDDLE","RIGHT","CullFaceNone","CullFaceBack","CullFaceFront","PCFShadowMap","PCFSoftShadowMap","FrontSide","BackSide","DoubleSide","FlatShading","NoColors","FaceColors","VertexColors","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","Uncharted2ToneMapping","CineonToneMapping","ACESFilmicToneMapping","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","SphericalReflectionMapping","CubeUVReflectionMapping","CubeUVRefractionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipMapNearestFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipMapNearestFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedShort565Type","UnsignedInt248Type","AlphaFormat","RGBFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","DepthFormat","DepthStencilFormat","RedFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_10x10_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","LoopOnce","LoopRepeat","LoopPingPong","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","ZeroCurvatureEnding","ZeroSlopeEnding","WrapAroundEnding","TrianglesDrawMode","TriangleStripDrawMode","TriangleFanDrawMode","LinearEncoding","sRGBEncoding","GammaEncoding","RGBEEncoding","RGBM7Encoding","RGBM16Encoding","RGBDEncoding","BasicDepthPacking","RGBADepthPacking","TangentSpaceNormalMap","ObjectSpaceNormalMap","_Math","DEG2RAD","PI","RAD2DEG","generateUUID","lut","d0","d1","d2","d3","uuid","clamp","euclideanModulo","mapLinear","a1","a2","b1","b2","lerp","y","smoothstep","smootherstep","randInt","low","high","randFloat","randFloatSpread","range","degToRad","degrees","radToDeg","radians","isPowerOfTwo","ceilPowerOfTwo","floorPowerOfTwo","Vector2","Quaternion","z","w","_x","_y","_z","_w","Vector3","Matrix3","elements","width","height","isVector2","setScalar","scalar","setX","setY","setComponent","Error","getComponent","copy","addVectors","addScalar","addScaledVector","subVectors","subScalar","multiply","multiplyScalar","divide","divideScalar","applyMatrix3","clampScalar","minVal","maxVal","clampLength","roundToZero","negate","dot","cross","lengthSq","sqrt","manhattanLength","angle","atan2","distanceTo","distanceToSquared","manhattanDistanceTo","setLength","alpha","lerpVectors","v1","v2","equals","fromArray","fromBufferAttribute","attribute","getX","getY","rotateAround","center","cos","sin","slerp","qa","qb","qm","slerpFlat","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","sqrSin","tDir","onChangeCallback","isQuaternion","quaternion","setFromEuler","euler","isEuler","order","c1","c2","c3","s1","s2","s3","setFromAxisAngle","axis","halfAngle","setFromRotationMatrix","te","m11","m12","m13","m21","m22","m23","m31","m32","m33","trace","setFromUnitVectors","vFrom","vTo","EPS","angleTo","q","acos","rotateTowards","inverse","conjugate","multiplyQuaternions","premultiply","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","onChange","isVector3","setZ","multiplyVectors","applyEuler","applyQuaternion","applyAxisAngle","applyMatrix4","qx","qy","qz","qw","ix","iy","iz","iw","project","camera","matrixWorldInverse","projectionMatrix","unproject","projectionMatrixInverse","matrixWorld","transformDirection","crossVectors","ax","ay","az","bx","by","bz","projectOnVector","vector","projectOnPlane","planeNormal","reflect","normal","theta","dz","setFromSpherical","setFromSphericalCoords","radius","phi","sinPhiRadius","setFromCylindrical","setFromCylindricalCoords","setFromMatrixPosition","setFromMatrixScale","sx","setFromMatrixColumn","sy","sz","getZ","isMatrix3","n11","n12","n13","n21","n22","n23","n31","n32","n33","me","setFromMatrix4","applyToBufferAttribute","setXYZ","multiplyMatrices","ae","be","a11","a12","a13","a21","a22","a23","a31","a32","a33","b11","b12","b13","b21","b22","b23","b31","b32","b33","determinant","getInverse","matrix","throwOnDegenerate","isMatrix4","t11","t12","t13","det","msg","detInv","transpose","getNormalMatrix","matrix4","transposeIntoArray","setUvTransform","tx","ty","rotation","cx","cy","scale","rotate","translate","ImageUtils","getDataURL","image","canvas","HTMLCanvasElement","getContext","ImageData","putImageData","drawImage","toDataURL","textureId","Texture","wrapS","wrapT","magFilter","minFilter","format","anisotropy","encoding","DEFAULT_IMAGE","mipmaps","DEFAULT_MAPPING","repeat","matrixAutoUpdate","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","onUpdate","Vector4","WebGLRenderTarget","scissor","scissorTest","viewport","texture","depthBuffer","stencilBuffer","depthTexture","WebGLMultisampleRenderTarget","samples","WebGLRenderTargetCube","DataTexture","Box3","Sphere","Plane","constant","Frustum","p0","p1","p2","p3","p4","p5","planes","Matrix4","isTexture","updateMatrix","toJSON","meta","isRootObject","textures","metadata","generator","wrap","images","url","dispose","transformUv","uv","isVector4","setW","setAxisAngleFromQuaternion","setAxisAngleFromRotationMatrix","epsilon","epsilon2","xx","yy","zz","xy","xz","yz","getW","isWebGLRenderTarget","setSize","isWebGLMultisampleRenderTarget","isWebGLRenderTargetCube","isDataTexture","isBox3","setFromArray","minX","minY","minZ","maxX","maxY","maxZ","setFromBufferAttribute","setFromPoints","points","makeEmpty","il","expandByPoint","setFromCenterAndSize","size","halfSize","setFromObject","expandByObject","box","isEmpty","getCenter","getSize","point","expandByVector","expandByScalar","scope","geometry","isGeometry","vertices","isBufferGeometry","attributes","position","updateMatrixWorld","containsPoint","containsBox","getParameter","intersectsBox","intersectsSphere","closestPoint","sphere","clampPoint","intersectsPlane","plane","intersectsTriangle","v0","f0","testAxis","extents","triangleNormal","satForAxes","axes","triangle","distanceToPoint","clampedPoint","getBoundingSphere","intersect","union","optionalCenter","maxRadiusSq","empty","radiusSum","deltaLengthSq","getBoundingBox","getMaxScaleOnAxis","setComponents","setFromNormalAndCoplanarPoint","setFromCoplanarPoints","inverseNormalLength","distanceToSphere","projectPoint","intersectLine","line","direction","delta","denominator","intersectsLine","startSign","endSign","coplanarPoint","m1","optionalNormalMatrix","normalMatrix","referencePoint","frustum","setFromMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","intersectsObject","boundingSphere","computeBoundingSphere","intersectsSprite","sprite","negRadius","distance","n14","n24","n34","n41","n42","n43","n44","copyPosition","extractBasis","xAxis","yAxis","zAxis","makeBasis","extractRotation","scaleX","scaleY","scaleZ","makeRotationFromEuler","af","bf","ce","cf","de","df","ac","ad","bc","bd","makeRotationFromQuaternion","zero","one","compose","lookAt","eye","up","a14","a24","a34","a41","a42","a43","a44","b14","b24","b34","b41","b42","b43","b44","setPosition","t14","scaleXSq","scaleYSq","scaleZSq","makeTranslation","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","makeScale","makeShear","x2","y2","z2","wx","wy","wz","decompose","invSX","invSY","invSZ","makePerspective","right","bottom","near","far","makeOrthographic","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","aomap_fragment","aomap_pars_fragment","begin_vertex","beginnormal_vertex","bsdfs","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","encodings_fragment","encodings_pars_fragment","envmap_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_vertex","lights_pars_begin","envmap_physical_pars_fragment","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment_begin","normal_fragment_maps","normalmap_pars_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","uv2_pars_fragment","uv2_pars_vertex","uv2_vertex","worldpos_vertex","background_frag","background_vert","cube_frag","cube_vert","depth_frag","depth_vert","distanceRGBA_frag","distanceRGBA_vert","equirect_frag","equirect_vert","linedashed_frag","linedashed_vert","meshbasic_frag","meshbasic_vert","meshlambert_frag","meshlambert_vert","meshmatcap_frag","meshmatcap_vert","meshphong_frag","meshphong_vert","meshphysical_frag","meshphysical_vert","normal_frag","normal_vert","points_frag","points_vert","shadow_frag","shadow_vert","sprite_frag","sprite_vert","ShaderChunk","cloneUniforms","u","isColor","mergeUniforms","uniforms","UniformsUtils","merge","ColorKeywords","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","Color","setRGB","setHex","setStyle","hex","setHSL","hue2rgb","handleAlpha","color","copyGammaToLinear","gammaFactor","copyLinearToGamma","safeInverse","convertGammaToLinear","convertLinearToGamma","copySRGBToLinear","SRGBToLinear","copyLinearToSRGB","LinearToSRGB","convertSRGBToLinear","convertLinearToSRGB","getHex","getHexString","getHSL","hue","saturation","lightness","offsetHSL","hsl","addColors","color1","color2","lerpHSL","hslA","hslB","UniformsLib","diffuse","opacity","uvTransform","alphaMap","specularmap","specularMap","envmap","envMap","flipEnvMap","reflectivity","refractionRatio","maxMipLevel","aomap","aoMap","aoMapIntensity","lightmap","lightMap","lightMapIntensity","emissivemap","emissiveMap","bumpmap","bumpMap","bumpScale","normalmap","normalMap","normalScale","displacementmap","displacementMap","displacementScale","displacementBias","roughnessmap","roughnessMap","metalnessmap","metalnessMap","gradientmap","gradientMap","fog","fogDensity","fogNear","fogFar","fogColor","lights","ambientLightColor","lightProbe","directionalLights","properties","shadow","shadowBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","coneCos","penumbraCos","decay","spotShadowMap","spotShadowMatrix","pointLights","shadowCameraNear","shadowCameraFar","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","groundColor","rectAreaLights","ShaderLib","basic","vertexShader","fragmentShader","lambert","emissive","phong","specular","shininess","standard","roughness","metalness","envMapIntensity","matcap","dashed","dashSize","totalSize","depth","background","t2D","cube","tCube","tFlip","equirect","tEquirect","distanceRGBA","referencePosition","nearDistance","farDistance","WebGLAnimation","isAnimating","animationLoop","onAnimationFrame","time","frame","stop","setAnimationLoop","setContext","WebGLAttributes","gl","buffers","WeakMap","createBuffer","bufferType","usage","dynamic","bindBuffer","bufferData","onUploadCallback","Float32Array","Float64Array","Int16Array","Uint32Array","Int32Array","Int8Array","bytesPerElement","updateBuffer","updateRange","bufferSubData","isInterleavedBufferAttribute","deleteBuffer","Face3","materialIndex","vertexNormals","vertexColors","Euler","_order","DefaultOrder","Layers","mask","physical","clearCoat","clearCoatRoughness","RotationOrders","asin","setFromQuaternion","setFromVector3","reorder","newOrder","toVector3","optionalResult","channel","enable","toggle","disable","layers","object3DId","Object3D","DefaultUp","onRotationChange","onQuaternionChange","modelViewMatrix","DefaultMatrixAutoUpdate","matrixWorldNeedsUpdate","visible","castShadow","receiveShadow","frustumCulled","renderOrder","userData","isObject3D","onBeforeRender","onAfterRender","applyMatrix","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","q1","rotateOnWorldAxis","rotateX","rotateY","rotateZ","translateOnAxis","translateX","translateY","translateZ","localToWorld","worldToLocal","updateWorldMatrix","isCamera","isLight","attach","getObjectById","getObjectByProperty","getObjectByName","getWorldPosition","getWorldQuaternion","getWorldScale","getWorldDirection","raycast","traverseVisible","traverseAncestors","updateParents","geometries","materials","shapes","serialize","library","element","isMesh","drawMode","isLine","isPoints","parameters","shape","material","uuids","extractFromCache","recursive","parse","geometryId","Geometry","colors","faces","faceVertexUvs","morphTargets","morphNormals","skinWeights","skinIndices","lineDistances","boundingBox","elementsNeedUpdate","verticesNeedUpdate","uvsNeedUpdate","normalsNeedUpdate","colorsNeedUpdate","lineDistancesNeedUpdate","groupsNeedUpdate","BufferAttribute","itemSize","Int8BufferAttribute","Uint8BufferAttribute","Uint8ClampedBufferAttribute","Uint8ClampedArray","Int16BufferAttribute","Uint16BufferAttribute","Int32BufferAttribute","Uint32BufferAttribute","Float32BufferAttribute","Float64BufferAttribute","DirectGeometry","normals","uvs","uvs2","groups","arrayMax","vertex","face","jl","computeBoundingBox","fromBufferGeometry","indices","positions","uv2","addFace","group","computeFaceNormals","ab","fl","vA","vB","vC","computeVertexNormals","areaWeighted","vl","computeFlatVertexNormals","computeMorphNormals","__originalFaceNormal","__originalVertexNormals","tmpGeo","faceNormals","dstNormalsFace","dstNormalsVertex","faceNormal","materialIndexOffset","vertexOffset","vertices1","vertices2","faces1","faces2","uvs1","colors1","colors2","vertexCopy","faceCopy","faceVertexNormals","faceVertexColors","uvCopy","mergeMesh","mesh","mergeVertices","verticesMap","unique","changes","precisionPoints","precision","faceIndicesToRemove","idx","diff","sortFacesByMaterialIndex","_id","materialIndexSort","newUvs1","newUvs2","normalsHash","colorsHash","uvsHash","hasMaterial","hasFaceUv","hasFaceVertexUv","hasFaceNormal","hasFaceVertexNormal","hasFaceColor","hasFaceVertexColor","faceType","setBit","getUvIndex","getNormalIndex","getColorIndex","enabled","k","kl","uvsCopy","morphTarget","morphNormal","srcVertexNormal","destVertexNormal","isBufferAttribute","setArray","setDynamic","copyAt","index1","index2","copyArray","copyColorsArray","copyVector2sArray","vectors","copyVector3sArray","copyVector4sArray","setXY","setXYZW","onUpload","computeGroups","fromGeometry","morphTargetsPosition","hasFaceVertexUv2","morphTargetsLength","morphTargetsNormal","morphNormalsLength","hasSkinIndices","hasSkinWeights","vertexUvs","bufferGeometryId","BufferGeometry","morphAttributes","drawRange","BoxGeometry","widthSegments","heightSegments","depthSegments","BoxBufferGeometry","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","addGroup","setIndex","addAttribute","PlaneGeometry","PlaneBufferGeometry","width_half","height_half","segment_width","segment_height","getIndex","clearGroups","setDrawRange","needsUpdate","tangent","updateFromObject","__directGeometry","lineDistance","fromDirectGeometry","morphAttributesPosition","morphAttribute","boxMorphTargets","pA","pB","pC","normalizeNormals","attribute1","attributeArray1","attribute2","attributeArray2","attributeOffset","toNonIndexed","convertBufferAttribute","array2","geometry2","newAttribute","morphArray","attributeData","hasMorphAttributes","attributeArray","materialId","Material","blending","side","flatShading","vertexTangents","transparent","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","depthFunc","depthTest","depthWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaTest","premultipliedAlpha","isMaterial","onBeforeCompile","setValues","newValue","currentValue","emissiveIntensity","normalMapType","combine","sizeAttenuation","linewidth","gapSize","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","skinning","srcPlanes","dstPlanes","default_vertex","default_fragment","ShaderMaterial","defines","clipping","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","defaultAttributeValues","index0AttributeName","uniformsNeedUpdate","Ray","origin","Triangle","MeshBasicMaterial","Mesh","updateMorphTargets","WebGLBackground","renderer","state","objects","planeMesh","boxMesh","clearColor","clearAlpha","currentBackground","currentBackgroundVersion","scene","forceClear","vr","session","getSession","environmentBlendMode","setClear","autoClear","autoClearColor","autoClearDepth","autoClearStencil","isCubeTexture","getClearColor","setClearColor","getClearAlpha","setClearAlpha","WebGLBufferRenderer","capabilities","setMode","drawArrays","renderInstances","extension","isWebGL2","maxInstancedCount","WebGLCapabilities","maxAnisotropy","getMaxAnisotropy","MAX_TEXTURE_MAX_ANISOTROPY_EXT","getMaxPrecision","getShaderPrecisionFormat","WebGL2RenderingContext","maxPrecision","logarithmicDepthBuffer","maxTextures","maxVertexTextures","maxTextureSize","maxCubemapSize","maxAttributes","maxVertexUniforms","maxVaryings","maxFragmentUniforms","vertexTextures","floatFragmentTextures","floatVertexTextures","maxSamples","WebGLClipping","globalState","numGlobalPlanes","localClippingEnabled","renderingShadows","viewNormalMatrix","uniform","resetGlobalState","numPlanes","numIntersection","projectPlanes","skipTransform","nPlanes","dstArray","flatSize","viewMatrix","i4","enableLocalClipping","beginShadows","endShadows","setState","fromCache","nGlobal","lGlobal","clippingState","WebGLExtensions","getExtension","WebGLGeometries","wireframeAttributes","onGeometryDispose","buffergeometry","memory","_bufferGeometry","geometryAttributes","getWireframeAttribute","geometryIndex","WebGLIndexedBufferRenderer","drawElements","WebGLInfo","calls","triangles","lines","instanceCount","reset","programs","autoReset","absNumericalSort","WebGLMorphtargets","influencesList","morphInfluences","program","objectInfluences","morphTargetInfluences","influences","influence","getUniforms","setValue","WebGLObjects","updateList","CubeTexture","DataTexture2DArray","wrapR","DataTexture3D","isShaderMaterial","ray","at","recast","closestPointToPoint","directionDistance","distanceSqToPoint","distanceSqToSegment","segCenter","segDir","optionalPointOnRay","optionalPointOnSegment","s0","sqrDist","extDet","segExtent","a01","b0","invDet","intersectSphere","tca","radius2","thc","t0","t1","distanceToPlane","intersectPlane","distToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","edge1","edge2","backfaceCulling","DdN","DdQxE2","DdE1xQ","QdN","getNormal","targetLengthSq","getBarycoord","dot00","dot01","dot02","dot11","dot12","denom","invDenom","getUV","barycoord","uv1","uv3","isFrontFacing","setFromPointsAndIndices","i0","i1","i2","getArea","getMidpoint","getPlane","vab","vac","vbc","vap","vbp","vcp","d4","vc","d5","d6","vb","va","isMeshBasicMaterial","setDrawMode","morphTargetDictionary","ml","inverseMatrix","tempA","tempB","tempC","morphA","morphB","morphC","uvA","uvB","uvC","intersectionPoint","intersectionPointWorld","checkIntersection","raycaster","checkBufferGeometryIntersection","morphPosition","intersection","intersects","groupMaterial","faceIndex","fvA","fvB","fvC","isMultiMaterial","faceMaterial","uvs_f","isDataTexture2DArray","isDataTexture3D","emptyTexture","emptyTexture2dArray","emptyTexture3d","emptyCubeTexture","arrayCacheF32","arrayCacheI32","mat4array","mat3array","mat2array","flatten","nBlocks","blockSize","firstElem","arraysEqual","allocTexUnits","allocateTextureUnit","setValueV1f","uniform1f","addr","setValueV2f","uniform2f","uniform2fv","setValueV3f","uniform3f","uniform3fv","setValueV4f","uniform4f","uniform4fv","setValueM2","uniformMatrix2fv","setValueM3","uniformMatrix3fv","setValueM4","uniformMatrix4fv","setValueT1","unit","uniform1i","safeSetTexture2D","setValueT2DArray1","setTexture2DArray","setValueT3D1","setTexture3D","setValueT6","safeSetTextureCube","setValueV1i","setValueV2i","uniform2iv","setValueV3i","uniform3iv","setValueV4i","uniform4iv","getSingularSetter","setValueV1fArray","uniform1fv","setValueV1iArray","uniform1iv","setValueV2iArray","setValueV3iArray","setValueV4iArray","setValueV2fArray","setValueV3fArray","setValueV4fArray","setValueM2Array","setValueM3Array","setValueM4Array","setValueT1Array","units","setValueT6Array","getPureArraySetter","SingleUniform","activeInfo","PureArrayUniform","StructuredUniform","seq","updateCache","RePathPart","addUniform","container","uniformObject","parseUniform","pathLength","matchEnd","idIsIndex","subscript","WebGLUniforms","getProgramParameter","getActiveUniform","getUniformLocation","addLineNumbers","WebGLShader","debug","shader","createShader","shaderSource","compileShader","getShaderParameter","getShaderInfoLog","setOptional","upload","seqWithValue","programIdCount","getEncodingComponents","getTexelDecodingFunction","functionName","getTexelEncodingFunction","getToneMappingFunction","toneMapping","toneMappingName","generateExtensions","rendererExtensions","chunks","envMapCubeUV","objectSpaceNormalMap","filterEmptyLine","generateDefines","fetchAttributeLocations","getActiveAttrib","getAttribLocation","replaceLightNums","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","parseIncludes","unrollLoops","snippet","unroll","WebGLProgram","code","shadowMapTypeDefine","shadowMapType","envMapTypeDefine","envMapModeDefine","envMapBlendingDefine","prefixVertex","prefixFragment","gammaFactorDefine","customExtensions","customDefines","createProgram","isRawShaderMaterial","supportsVertexTextures","maxBones","useFog","fogExp","useVertexTexture","doubleSided","flipSided","shadowMapEnabled","physicallyCorrectLights","outputEncoding","mapEncoding","matcapEncoding","envMapEncoding","emissiveMapEncoding","depthPacking","isGLSL3ShaderMaterial","versionRegex","cachedUniforms","cachedAttributes","vertexGlsl","fragmentGlsl","glVertexShader","checkShaderErrors","glFragmentShader","attachShader","bindAttribLocation","linkProgram","programLog","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","getError","diagnostics","prefix","deleteShader","getAttributes","deleteProgram","usedTimes","WebGLPrograms","shaderIDs","MeshDepthMaterial","MeshDistanceMaterial","MeshNormalMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","MeshMatcapMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","ShadowMaterial","SpriteMaterial","parameterNames","allocateBones","skeleton","bones","nVertexUniforms","nVertexMatrices","getTextureEncodingFromMap","gammaOverrideLinear","getParameters","shadows","nClipPlanes","nClipIntersection","shaderID","isSkinnedMesh","currentRenderTarget","getRenderTarget","gammaOutput","gammaInput","envMapMode","isFogExp2","maxMorphTargets","maxMorphNormals","directional","spot","rectArea","hemi","shadowMap","getProgramCode","acquireProgram","pl","programInfo","releaseProgram","WebGLProperties","painterSortStable","groupOrder","reversePainterSortStable","WebGLRenderList","renderItems","renderItemsIndex","opaque","defaultProgram","getNextRenderItem","renderItem","WebGLRenderLists","lists","onSceneDispose","cameras","UniformsCache","light","halfWidth","halfHeight","three_module_count","WebGLLights","stateID","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","shadowsLength","ambient","probe","vector3","matrix42","setup","intensity","isAmbientLight","isLightProbe","sh","coefficients","isDirectionalLight","bias","mapSize","isSpotLight","penumbra","isRectAreaLight","isPointLight","isHemisphereLight","WebGLRenderState","lightsArray","shadowsArray","pushLight","pushShadow","shadowLight","setupLights","WebGLRenderStates","renderStates","renderState","WebGLShadowMap","_renderer","_objects","_frustum","_projScreenMatrix","_shadowMapSize","_maxShadowMapSize","_lookTarget","_lightPositionWorld","_MorphingFlag","_SkinningFlag","_NumberOfMaterialVariants","_depthMaterials","_distanceMaterials","_materialCache","0","1","2","cubeDirections","cubeUps","cube2DViewPorts","useMorphing","useSkinning","depthMaterial","distanceMaterial","getDepthMaterial","lightPositionWorld","materialVariants","customMaterial","customDepthMaterial","customDistanceMaterial","variantIndex","keyA","keyB","materialsForVariant","cachedMaterial","isMeshDistanceMaterial","renderObject","shadowCamera","renderBufferDirect","autoUpdate","faceCount","activeCubeFace","getActiveCubeFace","activeMipMapLevel","getActiveMipMapLevel","_state","setBlending","setTest","setScissorTest","vpWidth","vpHeight","pars","updateProjectionMatrix","isSpotLightShadow","shadowMatrix","setRenderTarget","vpDimensions","WebGLState","utils","ColorBuffer","locked","currentColorMask","currentColorClear","setMask","colorMask","setLocked","lock","DepthBuffer","currentDepthMask","currentDepthFunc","currentDepthClear","depthMask","setFunc","clearDepth","StencilBuffer","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","stencilMask","stencilFunc","stencilRef","setOp","stencilFail","stencilZFail","stencilZPass","stencilOp","stencil","clearStencil","colorBuffer","maxVertexAttributes","newAttributes","enabledAttributes","attributeDivisors","enabledCapabilities","compressedTextureFormats","currentProgram","currentBlendingEnabled","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","lineWidthAvailable","glVersion","currentTextureSlot","currentBoundTextures","currentScissor","currentViewport","createTexture","bindTexture","texParameteri","texImage2D","emptyTextures","initAttributes","enableAttribute","enableAttributeAndDivisor","meshPerAttribute","enableVertexAttribArray","disableUnusedAttributes","disableVertexAttribArray","getCompressedTextureFormats","formats","useProgram","blendEquationSeparate","convert","blendFuncSeparate","blendFunc","setMaterial","frontFaceCW","setFlipSided","setPolygonOffset","frontFace","setCullFace","cullFace","setLineWidth","lineWidth","factor","activeTexture","webglSlot","webglType","webglTexture","boundTexture","compressedTexImage2D","texImage3D","WebGLTextures","_gl","_videoTextures","useOffscreenCanvas","OffscreenCanvas","createCanvas","resizeImage","needsPowerOfTwo","needsNewCanvas","maxSize","HTMLImageElement","ImageBitmap","textureNeedsPowerOfTwo","textureNeedsGenerateMipmaps","supportsMips","generateMipmap","textureProperties","__maxMipLevel","LOG2E","getInternalFormat","glFormat","glType","internalFormat","filterFallback","onTextureDispose","deallocateTexture","isVideoTexture","onRenderTargetDispose","renderTarget","deallocateRenderTarget","__webglInit","deleteTexture","__webglTexture","renderTargetProperties","deleteFramebuffer","__webglFramebuffer","__webglDepthbuffer","deleteRenderbuffer","textureUnits","resetTextureUnits","textureUnit","setTexture2D","updateVideoTexture","__version","complete","uploadTexture","setTextureCube","initTexture","pixelStorei","isCompressed","isCompressedTexture","cubeImage","glInternalFormat","setTextureParameters","mipmap","setTextureCubeDynamic","textureType","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","isDepthTexture","setupFrameBufferTexture","framebuffer","attachment","textureTarget","bindFramebuffer","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","isMultisample","bindRenderbuffer","getRenderTargetSamples","renderbufferStorageMultisample","renderbufferStorage","framebufferRenderbuffer","setupDepthTexture","isCube","webglDepthTexture","setupDepthRenderbuffer","createRenderbuffer","setupRenderTarget","createFramebuffer","__webglMultisampledFramebuffer","__webglColorRenderbuffer","__webglDepthRenderbuffer","updateRenderTargetMipmap","updateMultisampleRenderTarget","blitFramebuffer","warnedTexture2D","warnedTextureCube","WebGLUtils","HALF_FLOAT_OES","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","MIN_EXT","MAX_EXT","UNSIGNED_INT_24_8_WEBGL","Group","Camera","PerspectiveCamera","fov","aspect","zoom","focus","filmGauge","filmOffset","ArrayCamera","isMeshDepthMaterial","isGroup","isPerspectiveCamera","setFocalLength","focalLength","vExtentSlope","getFilmHeight","atan","getFocalLength","getEffectiveFOV","getFilmWidth","setViewOffset","fullWidth","fullHeight","offsetX","offsetY","clearViewOffset","skew","isArrayCamera","three_module_geometry","cameraLPos","cameraRPos","setProjectionFromUnion","cameraL","cameraR","ipd","projL","projR","topFov","bottomFov","leftFov","rightFov","zOffset","xOffset","near2","far2","left2","right2","top2","bottom2","WebVRManager","renderWidth","renderHeight","device","frameData","poseTarget","controllers","standingMatrix","standingMatrixInverse","framebufferScaleFactor","referenceSpaceType","VRFrameData","onVRDisplayPresentChange","tempQuaternion","tempPosition","cameraVR","isPresenting","currentPixelRatio","currentSize","eyeParameters","getEyeParameters","getPixelRatio","setDrawingBufferSize","animation","triggers","findGamepad","gamepads","getGamepads","gamepad","startsWith","updateControllers","controller","pose","hasPosition","orientation","buttonId","buttons","pressed","updateViewportFromBounds","bounds","getController","getDevice","setDevice","setFramebufferScaleFactor","setReferenceSpaceType","setPoseTarget","getCamera","userHeight","depthNear","depthFar","getFrameData","stageParameters","sittingToStandingTransform","poseObject","leftViewMatrix","rightViewMatrix","leftProjectionMatrix","rightProjectionMatrix","getLayers","layer","leftBounds","rightBounds","getStandingMatrix","submitFrame","setFrameOfReferenceType","WebXRManager","referenceSpace","inputSources","onSessionEvent","inputSource","onSessionEnd","setFramebuffer","onRequestReferenceSpace","updateCamera","setSession","updateRenderState","baseLayer","XRWebGLLayer","requestReferenceSpace","onAnimationFrameCallback","getViewerPose","views","getViewport","inputPose","getPose","targetRaySpace","WebGLRenderer","_context","_alpha","_depth","_stencil","_antialias","antialias","_premultipliedAlpha","_preserveDrawingBuffer","preserveDrawingBuffer","_powerPreference","powerPreference","_failIfMajorPerformanceCaveat","failIfMajorPerformanceCaveat","currentRenderList","currentRenderState","domElement","sortObjects","toneMappingExposure","toneMappingWhitePoint","programCache","renderLists","morphtargets","bufferRenderer","indexedBufferRenderer","_this","_isContextLost","_framebuffer","_currentActiveCubeFace","_currentActiveMipmapLevel","_currentRenderTarget","_currentFramebuffer","_currentMaterialId","_currentGeometryProgram","_currentCamera","_currentArrayCamera","_currentViewport","_currentScissor","_currentScissorTest","_width","_height","_pixelRatio","_viewport","_scissor","_scissorTest","_clipping","_clippingEnabled","_localClippingEnabled","_vector3","getTargetPixelRatio","contextAttributes","xrCompatible","onContextLost","onContextRestore","rangeMin","rangeMax","message","initGLContext","xr","preventDefault","onMaterialDispose","deallocateMaterial","releaseMaterialProgramReference","renderObjectImmediate","renderBufferImmediate","setupVertexAttributes","isInstancedBufferGeometry","programAttributes","materialDefaultAttributeValues","programAttribute","geometryAttribute","stride","isInstancedInterleavedBuffer","vertexAttribPointer","isInstancedBufferAttribute","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","getContextAttributes","forceContextLoss","loseContext","forceContextRestore","restoreContext","setPixelRatio","setViewport","getDrawingBufferSize","pixelRatio","getCurrentViewport","getScissor","setScissor","getScissorTest","boolean","bits","hasPositions","hasNormals","hasUvs","hasColors","positionArray","normalArray","uvArray","colorArray","setProgram","updateBuffers","rangeFactor","dataCount","rangeStart","rangeCount","drawStart","drawEnd","drawCount","isLineSegments","isLineLoop","isSprite","compile","initMaterial","projectObject","isImmediateRenderObject","renderObjects","overrideMaterial","camera2","materialProperties","lightsHash","lightsStateHash","programChange","numSupportedMorphTargets","numSupportedMorphNormals","progUniforms","uniformsList","useCache","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","isMeshPhongMaterial","isMeshStandardMaterial","uCamPos","cameraPosition","isMeshLambertMaterial","boneTexture","boneMatrices","boneTextureSize","markUniformsLightsNeedsUpdate","refreshUniformsFog","refreshUniformsCommon","refreshUniformsLambert","isMeshToonMaterial","refreshUniformsToon","refreshUniformsPhong","isMeshPhysicalMaterial","refreshUniformsPhysical","refreshUniformsStandard","isMeshMatcapMaterial","refreshUniformsMatcap","refreshUniformsDepth","refreshUniformsDistance","isMeshNormalMaterial","refreshUniformsNormal","isLineBasicMaterial","refreshUniformsLine","isLineDashedMaterial","refreshUniformsDash","isPointsMaterial","refreshUniformsPoints","isSpriteMaterial","refreshUniformsSprites","isShadowMaterial","ltc_1","LTC_1","ltc_2","LTC_2","uvScaleMap","isFog","density","opaqueObjects","transparentObjects","readRenderTargetPixels","activeCubeFaceIndex","restore","textureFormat","checkFramebufferStatus","readPixels","copyFramebufferToTexture","level","copyTexImage2D","copyTextureToTexture","srcTexture","dstTexture","texSubImage2D","FogExp2","Fog","Scene","InterleavedBuffer","InterleavedBufferAttribute","interleavedBuffer","Sprite","float32Array","LOD","levels","SkinnedMesh","bindMode","bindMatrix","bindMatrixInverse","Skeleton","boneInverses","calculateInverses","Bone","linecap","linejoin","Line","LineSegments","LineLoop","Points","VideoTexture","video","CompressedTexture","CanvasTexture","DepthTexture","WireframeGeometry","ol","edge","edges","ParametricGeometry","func","slices","stacks","ParametricBufferGeometry","pu","pv","sliceCount","PolyhedronGeometry","detail","PolyhedronBufferGeometry","vertexBuffer","uvBuffer","subdivide","getVertexByIndex","subdivideFace","cols","aj","bj","rows","pushVertex","appplyRadius","generateUVs","azimuth","inclination","correctUVs","correctSeam","centroid","azi","correctUV","TetrahedronGeometry","TetrahedronBufferGeometry","OctahedronGeometry","OctahedronBufferGeometry","IcosahedronGeometry","IcosahedronBufferGeometry","DodecahedronGeometry","DodecahedronBufferGeometry","TubeGeometry","tubularSegments","radialSegments","closed","taper","bufferGeometry","TubeBufferGeometry","tangents","binormals","frames","computeFrenetFrames","generateBufferData","generateSegment","generateIndices","getPointAt","N","TorusKnotGeometry","tube","heightScale","TorusKnotBufferGeometry","P1","P2","calculatePositionOnCurve","cu","su","quOverP","cs","TorusGeometry","arc","TorusBufferGeometry","isScene","isInterleavedBuffer","intersectPoint","worldScale","mvPosition","alignedPosition","rotatedPosition","viewWorldMatrix","transformVertex","vertexPosition","isLOD","addLevel","getObjectForDistance","matrixPosition","normalizeSkinWeights","skinWeight","bone","isBone","offsetMatrix","identityMatrix","getBoneByName","computeLineDistances","positionAttribute","linePrecision","localPrecision","localPrecisionSq","vStart","vEnd","interSegment","interRay","distSq","nbVertices","threshold","localThreshold","localThresholdSq","testPoint","rayPointDistanceSq","distanceToRay","readyState","HAVE_CURRENT_DATA","isCanvasTexture","Earcut","triangulate","holeIndices","dim","invSize","hasHoles","outerLen","outerNode","linkedList","eliminateHoles","earcutLinked","clockwise","signedArea","insertNode","filterPoints","again","steiner","three_module_area","prev","ear","pass","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","minTX","minTY","maxTX","maxTY","zOrder","nextZ","prevZ","locallyInside","isValidDiagonal","splitPolygon","getLeftmost","compareX","eliminateHole","hole","findHoleBridge","hx","hy","mx","my","tanMin","sortLinked","tail","numMerges","pSize","qSize","inSize","leftmost","py","intersectsPolygon","middleInside","q2","inside","three_module_Node","an","bp","sum","ShapeUtils","area","contour","isClockWise","pts","triangulateShape","holes","removeDupEndPts","addContour","holeIndex","ExtrudeGeometry","ExtrudeBufferGeometry","verticesArray","addShape","curveSegments","steps","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","extrudePath","uvgen","UVGenerator","WorldUVGenerator","amount","extrudePts","splineTube","binormal","position2","ahole","hl","extrudeByPath","getSpacedPoints","shapePoints","extractPoints","scalePt2","pt","vec","bs","vert","vlen","flen","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","ptNextShift_x","ptNextShift_y","sf","v_trans_lensq","direction_eq","contourMovements","oneHoleMovements","holesMovements","verticesMovements","buildLidFaces","f3","buildSideFaces","layeroffset","sidewalls","sl","slen1","slen2","f4","addVertex","nextIndex","generateTopUV","addUV","generateSideWallUV","vector2","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","TextGeometry","TextBufferGeometry","font","isFont","generateShapes","SphereGeometry","phiStart","phiLength","thetaStart","thetaLength","SphereBufferGeometry","thetaEnd","grid","verticesRow","uOffset","RingGeometry","innerRadius","outerRadius","thetaSegments","phiSegments","RingBufferGeometry","segment","radiusStep","thetaSegmentLevel","LatheGeometry","LatheBufferGeometry","inverseSegments","n1","n2","ShapeGeometry","ShapeBufferGeometry","shapeHole","indexOffset","shapeVertices","shapeHoles","toJSON$1","EdgesGeometry","thresholdAngle","thresholdDot","sourceVertices","face1","face2","CylinderGeometry","radiusTop","radiusBottom","openEnded","CylinderBufferGeometry","indexArray","generateTorso","slope","indexRow","sinTheta","cosTheta","generateCap","centerIndexStart","centerIndexEnd","ConeGeometry","ConeBufferGeometry","CircleGeometry","CircleBufferGeometry","Geometries","RawShaderMaterial","STANDARD","PHYSICAL","TOON","MATCAP","Materials","AnimationUtils","isTypedArray","convertArray","forceClone","isView","getKeyframeOrder","times","compareTime","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","Interpolant","parameterPositions","sampleValues","sampleSize","resultBuffer","_cachedIndex","valueSize","CubicInterpolant","_weightPrev","_offsetPrev","_weightNext","_offsetNext","LinearInterpolant","DiscreteInterpolant","KeyframeTrack","interpolation","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","BooleanKeyframeTrack","ColorKeyframeTrack","NumberKeyframeTrack","QuaternionLinearInterpolant","QuaternionKeyframeTrack","StringKeyframeTrack","VectorKeyframeTrack","AnimationClip","tracks","resetDuration","getTrackTypeForValueTypeName","typeName","parseKeyframeTrack","json","trackType","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","afterEnd_","t1global","beforeStart_","mid","intervalChanged_","interpolate_","settings","DefaultSettings_","getSettings_","copySampleValue_","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","halfDt","o1","o0","oP","oN","wP","wN","ppp","sP","sN","offset1","offset0","weight1","weight0","track","getInterpolation","ValueTypeName","InterpolantFactoryMethodDiscrete","getValueSize","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","factoryMethod","createInterpolant","timeOffset","timeScale","startTime","endTime","nKeys","valid","prevTime","currTime","optimize","smoothInterpolation","writeIndex","keep","timeNext","offsetP","offsetN","readOffset","writeOffset","TypedKeyframeTrack","jsonTracks","frameTime","fps","clip","clipTracks","CreateFromMorphTargetSequence","morphTargetSequence","noLoop","numMorphTargets","findByName","objectOrClipArray","clipArray","animations","CreateClipsFromMorphTargetSequences","animationToMorphTargets","parts","animationMorphTargets","clips","parseAnimation","addNonemptyTrack","trackName","animationKeys","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","Cache","files","file","LoadingManager","onLoad","onProgress","onError","isLoading","itemsLoaded","itemsTotal","urlModifier","onStart","itemStart","itemEnd","itemError","resolveURL","setURLModifier","DefaultLoadingManager","FileLoader","manager","AnimationLoader","CompressedTextureLoader","_parser","DataTextureLoader","ImageLoader","CubeTextureLoader","TextureLoader","Curve","arcLengthDivisions","EllipseCurve","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","ArcCurve","aRadius","CubicPoly","c0","initCatmullRom","x3","tension","initNonuniformCatmullRom","dt0","dt1","dt2","t2","calc","t3","load","dataUriRegex","dataUriRegexResult","mimeType","isBase64","decodeURIComponent","atob","response","responseType","Blob","parser","DOMParser","parseFromString","request","XMLHttpRequest","header","status","withCredentials","overrideMimeType","requestHeader","setRequestHeader","send","setPath","setResponseType","setWithCredentials","setMimeType","loader","loadTexture","texDatas","loaded","mipmapCount","isCubemap","texData","crossOrigin","onImageLoad","onImageError","substr","setCrossOrigin","urls","isJPEG","search","getPoint","optionalTarget","getUtoTmapping","getPoints","divisions","getLength","lengths","getLengths","cacheArcLengths","updateArcLengths","targetArcLength","arcLengths","comparison","lengthBefore","lengthAfter","segmentLength","segmentFraction","getTangent","pt1","pt2","getTangentAt","mat","MAX_VALUE","tz","fromJSON","isEllipseCurve","twoPi","deltaAngle","samePoints","isArcCurve","pz","CatmullRomCurve3","curveType","CatmullRom","QuadraticBezierP0","QuadraticBezierP1","QuadraticBezierP2","QuadraticBezier","CubicBezierP0","CubicBezierP1","CubicBezierP2","CubicBezierP3","CubicBezier","CubicBezierCurve","v3","CubicBezierCurve3","LineCurve","LineCurve3","QuadraticBezierCurve","QuadraticBezierCurve3","SplineCurve","isCatmullRomCurve3","intPoint","weight","isCubicBezierCurve","isCubicBezierCurve3","isLineCurve","isLineCurve3","isQuadraticBezierCurve","isQuadraticBezierCurve3","isSplineCurve","Curves","CurvePath","curves","autoClose","Path","currentPoint","Shape","Light","HemisphereLight","LightShadow","SpotLightShadow","SpotLight","power","PointLight","OrthographicCamera","DirectionalLightShadow","DirectionalLight","AmbientLight","RectAreaLight","MaterialLoader","curve","closePath","startPoint","endPoint","curveLengths","getCurveLengths","lens","cacheLengths","sums","resolution","moveTo","lineTo","quadraticCurveTo","aCPx","aCPy","bezierCurveTo","aCP1x","aCP1y","aCP2x","aCP2y","splineThru","npts","absarc","absellipse","ellipse","firstPoint","lastPoint","getPointsHoles","holesPts","isOrthographicCamera","zoomW","zoomH","scaleW","scaleH","getTexture","shading","setTextures","LoaderUtils","decodeText","TextDecoder","decode","fromCharCode","escape","extractUrlBase","InstancedBufferGeometry","InstancedBufferAttribute","BufferGeometryLoader","typedArray","TYPED_ARRAYS","bufferAttributeConstr","bufferAttribute","drawcalls","offsets","ObjectLoader","resourcePath","setResourcePath","parseShape","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","parseAnimations","bufferGeometryLoader","details","geometryShapes","THREE","geometryLoader","LegacyJSONLoader","loadImage","currentUrl","parseConstant","TEXTURE_MAPPING","TEXTURE_WRAPPING","TEXTURE_FILTER","getGeometry","getMaterial","ImageBitmapLoader","createImageBitmap","fetch","ShapePath","subPaths","currentPath","Font","createPaths","chars","line_height","yMax","yMin","underlineThickness","paths","char","createPath","glyph","glyphs","cpx","cpy","cpx1","cpy1","cpx2","cpy2","outline","_cachedOutline","action","ha","FontLoader","Loader","setOptions","blob","imageBitmap","toShapes","isCCW","noHoles","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPolygon","polyLen","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","tmpPoints","tmpHoles","betterShapeHoles","newShapes","newShapeHoles","mainIdx","ambiguous","toChange","sIdx","sLen","sho","hIdx","ho","hole_unassigned","s2Idx","froms","tos","substring","Handlers","regex","onLoadStart","onLoadProgress","onLoadComplete","initMaterials","texturePath","createMaterial","BlendingMode","textureLoader","materialLoader","fullPath","mapDiffuseRepeat","mapDiffuseOffset","mapDiffuseWrap","mapDiffuseAnisotropy","mapEmissiveRepeat","mapEmissiveOffset","mapEmissiveWrap","mapEmissiveAnisotropy","mapLightRepeat","mapLightOffset","mapLightWrap","mapLightAnisotropy","mapAORepeat","mapAOOffset","mapAOWrap","mapAOAnisotropy","mapBumpRepeat","mapBumpOffset","mapBumpWrap","mapBumpAnisotropy","mapNormalRepeat","mapNormalOffset","mapNormalWrap","mapNormalAnisotropy","mapSpecularRepeat","mapSpecularOffset","mapSpecularWrap","mapSpecularAnisotropy","mapMetalnessRepeat","mapMetalnessOffset","mapMetalnessWrap","mapMetalnessAnisotropy","mapRoughnessRepeat","mapRoughnessOffset","mapRoughnessWrap","mapRoughnessAnisotropy","mapAlphaRepeat","mapAlphaOffset","mapAlphaWrap","mapAlphaAnisotropy","AudioContext","webkitAudioContext","AudioLoader","SphericalHarmonics3","LightProbe","HemisphereLightProbe","sky","ground","AmbientLightProbe","StereoCamera","eyeSep","bufferCopy","decodeAudioData","audioBuffer","isSphericalHarmonics3","getAt","coeff","getIrradianceAt","getBasisAt","shBasis","isHemisphereLightProbe","isAmbientLightProbe","instance","eyeRight","eyeLeft","xmin","xmax","eyeSepOnProjection","ymax","CubeCamera","cubeResolution","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","Clock","autoStart","oldTime","elapsedTime","running","AudioListener","gain","createGain","connect","destination","timeDelta","Audio","getInput","autoplay","detune","playbackRate","isPlaying","hasPlaybackControl","sourceType","filters","PositionalAudio","panner","createPanner","panningModel","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getOutput","PropertyMixer","mixFunction","_slerp","_select","_lerp","_mixBufferRegion","cumulativeWeight","useCount","referenceCount","getElapsedTime","getDelta","newTime","removeFilter","disconnect","getFilter","setFilter","getMasterVolume","setMasterVolume","setTargetAtTime","currentTime","clock","positionX","linearRampToValueAtTime","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","setNodeSource","audioNode","setMediaElementSource","mediaElement","createMediaElementSource","setBuffer","play","createBufferSource","onended","onEnded","setDetune","setPlaybackRate","pause","getFilters","setFilters","getDetune","getPlaybackRate","getLoop","setLoop","getVolume","setVolume","getRefDistance","refDistance","setRefDistance","getRolloffFactor","rolloffFactor","setRolloffFactor","getDistanceModel","distanceModel","setDistanceModel","getMaxDistance","maxDistance","setMaxDistance","setDirectionalCone","coneInnerAngle","coneOuterAngle","coneOuterGain","orientationX","orientationY","orientationZ","getFrequencyData","getByteFrequencyData","getAverageFrequency","accumulate","accuIndex","currentWeight","mix","originalValueOffset","saveOriginalState","restoreOriginalState","lineGeometry","coneGeometry","RESERVED_CHARS_RE","Composite","targetGroup","optionalParsedPath","parsedPath","PropertyBinding","parseTrackName","_targetGroup","_bindings","subscribe_","rootNode","findNode","nodeName","AnimationObjectGroup","nCachedObjects_","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","stats","total","inUse","bindingsPerObject","AnimationAction","mixer","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","interpolant","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","AnimationMixer","_root","_initMemoryManager","_accuIndex","Uniform","InstancedInterleavedBuffer","Raycaster","PointCloud","ascSort","intersectObject","Spherical","Cylindrical","Box2","Line3","ImmediateRenderObject","VertexNormalsHelper","nNormals","objGeometry","SpotLightHelper","cone","getBoneList","boneList","SkeletonHelper","PointLightHelper","sphereSize","RectAreaLightHelper","positions2","HemisphereLightHelper","LightProbeHelper","GAMMA_OUTPUT","GridHelper","PolarGridHelper","radials","circles","PositionalAudioHelper","divisionsInnerAngle","divisionsOuterAngle","materialInnerAngle","materialOuterAngle","FaceNormalsHelper","DirectionalLightHelper","lightPlane","targetLine","CameraHelper","pointMap","colorFrustum","colorCone","colorUp","colorTarget","colorCross","addLine","addPoint","BoxHelper","Box3Helper","PlaneHelper","ArrowHelper","headLength","headWidth","setDirection","AxesHelper","firstValidIndex","bindings","isAnimationObjectGroup","sanitizeNodeName","reservedRe","wordChar","wordCharOrDot","directoryRe","nodeRe","objectRe","propertyRe","trackRe","supportedObjectNames","results","objectName","objectIndex","propertyIndex","lastDot","searchNodeSubtree","subTreeNode","_getValue_unavailable","_setValue_unavailable","BindingType","Direct","EntireArray","ArrayElement","HasFromToArray","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","GetterByBindingType","resolvedProperty","SetterByBindingTypeAndVersioning","targetObject","dest","targetArray","sourceArray","nodeProperty","versioning","bindingType","_getValue_unbound","_setValue_unbound","nObjects","nCachedObjects","indicesByUUID","parsedPaths","nBindings","knownObject","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","uncache","lastObject","indicesByPath","unsubscribe_","lastBindingsIndex","lastBindings","lastBindingsPath","_activateAction","_deactivateAction","stopFading","stopWarping","isRunning","_isActiveAction","isScheduled","startAt","setEffectiveWeight","getEffectiveWeight","fadeIn","_scheduleFading","fadeOut","crossFadeFrom","fadeOutAction","warp","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","crossFadeTo","fadeInAction","weightInterpolant","_takeBackControlInterpolant","setEffectiveTimeScale","getEffectiveTimeScale","setDuration","syncWith","halt","startTimeScale","endTimeScale","_lendControlInterpolant","timeScaleInterpolant","getMixer","getClip","getRoot","deltaTime","timeDirection","timeRunning","_updateTimeScale","clipTime","_updateTime","_updateWeight","propertyMixers","interpolantValue","loopCount","pingPong","_setEndings","handle_stop","loopDelta","atStart","atEnd","weightNow","weightThen","_bindAction","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","clipUuid","actionsForClip","_actionsByClip","knownActions","_addInactiveAction","_lendBinding","_lendAction","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","actions","controlInterpolants","actionsByClip","actionByRoot","_removeInactiveAction","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","remove_empty_map","firstInactiveBinding","lastActiveBinding","_controlInterpolantsResultBuffer","__cacheIndex","lastActiveInterpolant","clipAction","optionalRoot","clipObject","existingAction","newAction","stopAllAction","nActions","uncacheClip","actionsToRemove","uncacheRoot","uncacheAction","setFromCamera","coords","intersectObjects","other","makeSafe","setFromCartesianCoords","distanceSq","closestPointToPointParameter","startP","startEnd","clampToLine","startEnd2","startEnd_startP","objPos","objNorm","coneLength","coneWidth","boneMatrix","matrixWorldInv","halfConeInnerAngle","halfConeOuterAngle","setPoint","setColor","ClosedSplineCurve3","SplineCurve3","Spline","construct","createPointsGeometry","createGeometry","createSpacedPointsGeometry","fromPoints","initFromArray","getControlPointsArray","reparametrizeByArcLength","setColors","setTexturePath","isIntersectionBox","isIntersectionSphere","random16","nearestPowerOfTwo","nextPowerOfTwo","flattenToArrayOffset","multiplyVector3","multiplyVector3Array","applyToBuffer","applyToVector3Array","extractPosition","getPosition","multiplyToArray","multiplyVector4","rotateAxis","crossVector","rotateByAxis","makeFrustum","isIntersectionLine","isIntersectionPlane","barycoordFromPoint","midpoint","extractAllPoints","extrude","makeGeometry","fromAttribute","distanceToManhattan","lengthManhattan","setEulerFromRotationMatrix","setEulerFromQuaternion","getPositionFromMatrix","getScaleFromMatrix","getColumnFromMatrix","applyProjection","computeTangents","getChildByName","renderDepth","getWorldRotation","eulerOrder","useQuaternion","initBones","setLens","onlyShadow","shadowCameraFov","shadowCameraLeft","shadowCameraRight","shadowCameraTop","shadowCameraBottom","shadowCameraVisible","shadowDarkness","shadowMapWidth","shadowMapHeight","copyIndicesArray","addIndex","addDrawCall","clearDrawCalls","computeOffsets","getArrays","addShapeList","wrapAround","overdraw","wrapRGB","metal","clearTarget","animate","getCurrentRenderTarget","getPrecision","resetGLState","supportsFloatTextures","supportsHalfFloatTextures","supportsStandardDerivatives","supportsCompressedTextureS3TC","supportsCompressedTexturePVRTC","supportsBlendMinMax","supportsInstancedArrays","enableScissorTest","addPrePlugin","addPostPlugin","updateShadowMap","setFaceCulling","allocTextureUnit","setTexture","shadowMapCullFace","renderReverseSided","renderSingleSided","standing","audioLoader","updateCubeMap","loadTextureCube","loadCompressedTexture","loadCompressedTextureCube","OBJLoader_OBJLoader","object_pattern","material_library_pattern","material_use_pattern","ParserState","materialLibraries","startObject","fromDeclaration","previousMaterial","currentMaterial","_finalize","smooth","startMaterial","libraries","previous","inherited","mtllib","groupEnd","lastMultiMaterial","mi","declared","finalize","parseVertexIndex","parseNormalIndex","parseUVIndex","addVertexPoint","addVertexLine","addNormal","addColor","addUVLine","ua","ub","uc","na","nb","nc","vLen","ia","ib","ic","uvLen","nLen","addPointGeometry","vi","addLineGeometry","uvi","OBJLoader","setMaterials","lineFirstChar","lineLength","trimLeft","lineData","vertexData","faceVertices","vertexParts","lineParts","lineVertices","lineUVs","li","llen","pointData","hasVertexColors","createdMaterials","miLen","sourceMaterial","materialPoints","materialLine","timeEnd","MTLLoader","setMaterialOptions","materialOptions","delimiter_pattern","materialsInfo","ss","materialCreator","MaterialCreator","setManager","baseUrl","materialsArray","nameLookup","converted","mn","covmat","save","lprop","normalizeRGB","ignoreZeroRGBs","preload","materialName","getAsArray","createMaterial_","setMapForType","mapType","texParams","getTextureParams","invertTrProperty","matParams","DDSLoader","loadMipmaps","dds","DDS_MAGIC","DDSD_MIPMAPCOUNT","DDSCAPS2_CUBEMAP","DDSCAPS2_CUBEMAP_POSITIVEX","DDSCAPS2_CUBEMAP_NEGATIVEX","DDSCAPS2_CUBEMAP_POSITIVEY","DDSCAPS2_CUBEMAP_NEGATIVEY","DDSCAPS2_CUBEMAP_POSITIVEZ","DDSCAPS2_CUBEMAP_NEGATIVEZ","DDPF_FOURCC","fourCCToInt32","int32ToFourCC","loadARGBMip","dataOffset","dataLength","srcBuffer","byteArray","blockBytes","FOURCC_DXT1","FOURCC_DXT3","FOURCC_DXT5","FOURCC_ETC1","headerLengthInt","off_magic","off_size","off_flags","off_height","off_width","off_mipmapCount","off_pfFlags","off_pfFourCC","off_RGBBitCount","off_RBitMask","off_GBitMask","off_BBitMask","off_ABitMask","off_caps2","fourCC","isRGBAUncompressed","caps2","toIndexed","rawUvs","rawNormals","rawPositions","hasUV","hasNormal","faceNormalss","faceUvs","tmpIndices","n0","uv0","exists","normalBuffer","positionBuffer","i3","_i2","_vm","_h","margin","border","padding","href","_arrayWithoutHoles","arr2","_iterableToArray","_nonIterableSpread","_toConsumableArray","OrbitControls","minDistance","minZoom","maxZoom","minPolarAngle","maxPolarAngle","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","autoRotate","autoRotateSpeed","enableKeys","UP","BOTTOM","mouseButtons","target0","position0","zoom0","getPolarAngle","spherical","getAzimuthalAngle","saveState","changeEvent","STATE","NONE","quat","quatInverse","lastPosition","lastQuaternion","rotateLeft","getAutoRotationAngle","sphericalDelta","panOffset","zoomChanged","onContextMenu","onMouseDown","onMouseWheel","onTouchStart","onTouchEnd","onTouchMove","onMouseMove","onMouseUp","onKeyDown","startEvent","endEvent","ROTATE","DOLLY","PAN","TOUCH_ROTATE","TOUCH_DOLLY_PAN","rotateStart","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","getZoomScale","rotateUp","panLeft","objectMatrix","panUp","pan","deltaX","deltaY","targetDistance","clientHeight","clientWidth","dollyIn","dollyScale","dollyOut","handleMouseDownRotate","clientX","clientY","handleMouseDownDolly","handleMouseDownPan","handleMouseMoveRotate","handleMouseMoveDolly","handleMouseMovePan","handleMouseUp","handleMouseWheel","handleKeyDown","keyCode","handleTouchStartRotate","touches","pageX","pageY","handleTouchStartDollyPan","handleTouchMoveRotate","handleTouchMoveDollyPan","handleTouchEnd","button","ctrlKey","metaKey","shiftKey","stopPropagation","noZoom","noRotate","noPan","noKeys","staticMoving","dynamicDampingFactor","suportWebGL","WebGLRenderingContext","model_mixinvue_type_script_lang_js_","cameraRotation","cameraUp","cameraLookAt","backgroundColor","backgroundAlpha","controllable","mouse","controls","allLights","reqId","hasListener","offsetWidth","onClick","onResize","beforeDestroy","cancelAnimationFrame","updateLights","updateRenderer","updateControls","intersected","pick","rect","updateModel","devicePixelRatio","_this$scene","_this2","_color","_intensity","_color2","_intensity2","_intensity3","_this3","getObject","process","addObject","xhr","src_model_mixinvue_type_script_lang_js_","model_mixin","model_obj_render","model_obj_staticRenderFns","model_three_render","model_three_staticRenderFns","model_objvue_type_script_lang_js_","smoothing","mtlPath","mtl","objLoader","mtlLoader","mtlSrc","src_model_objvue_type_script_lang_js_","model_obj_component","model_obj","model_threevue_type_script_lang_js_","src_model_threevue_type_script_lang_js_","model_three_component","model_three","STLLoader","exception","isBinary","face_size","n_faces","reader","off","matchDataViewAt","parseBinary","defaultR","defaultG","defaultB","faceLength","normalX","normalY","normalZ","packedColor","vertexstart","parseASCII","patternFace","faceCounter","patternFloat","patternVertex","patternNormal","vertexCountPerFace","normalCountPerFace","ensureString","ensureBinary","array_buffer","binData","model_stl_render","model_stl_staticRenderFns","model_stlvue_type_script_lang_js_","src_model_stlvue_type_script_lang_js_","model_stl_component","model_stl","PLYLoader","propertyNameMapping","setPropertyNameMapping","parseHeader","patternHeader","headerText","headerLength","currentElement","lineType","lineValues","comments","make_ply_element_property","propertValues","countType","itemType","parseASCIINumber","parseASCIIElement","patternBody","currentElementCount","handleElement","postProcess","elementName","nx","ny","nz","vertex_indices","vertex_index","texcoord","binaryRead","dataview","little_endian","binaryReadElement","read","loc","model_ply_render","model_ply_staticRenderFns","model_plyvue_type_script_lang_js_","src_model_plyvue_type_script_lang_js_","model_ply_component","model_ply","TGALoader","tgaCheckHeader","image_type","TGA_TYPE_INDEXED","TGA_TYPE_RLE_INDEXED","colormap_length","colormap_size","colormap_type","TGA_TYPE_RGB","TGA_TYPE_GREY","TGA_TYPE_RLE_RGB","TGA_TYPE_RLE_GREY","TGA_TYPE_NO_DATA","pixel_size","tgaParse","use_rle","use_pal","pixel_data","pixel_total","palettes","pixels","tgaGetImageData8bits","imageData","y_start","y_step","y_end","x_start","x_step","x_end","colormap","tgaGetImageData16bits","tgaGetImageData24bits","tgaGetImageData32bits","tgaGetImageDataGrey8bits","tgaGetImageDataGrey16bits","getTgaRGBA","palette","flags","TGA_ORIGIN_MASK","TGA_ORIGIN_SHIFT","TGA_ORIGIN_UL","TGA_ORIGIN_BL","TGA_ORIGIN_UR","TGA_ORIGIN_BR","use_grey","content","id_length","colormap_index","useOffscreen","createImageData","transferToImageBitmap","ColladaLoader","convertUpAxis","getElementsByTagName","xml","parseStrings","parseFloats","parseInts","parseId","generateId","parseAsset","parseAssetUnit","upAxis","parseAssetUpAxis","parseLibrary","libraryName","buildLibrary","builder","build","getBuild","sources","samplers","channels","parseSource","parseAnimationSampler","parseAnimationChannel","inputs","semantic","sid","arraySyntax","memberSyntax","member","sampler","buildAnimation","inputId","INPUT","outputId","OUTPUT","outputSource","buildAnimationChannel","createKeyframeTracks","getAnimation","object3D","getNode","transforms","defaultMatrix","keyframes","prepareAnimationData","ascending","transformAnimationData","positionData","quaternionData","scaleData","keyframe","defaultValue","createMissingKeyframes","getPrev","getNext","interpolate","parseAnimationClip","buildAnimationClip","animationTracks","getAnimationClip","parseController","skin","parseSkin","bindShapeMatrix","joints","parseJoints","vertexWeights","parseVertexWeights","vcount","buildController","buildSkin","weights","BONE_LIMIT","jointOffset","JOINT","weightOffset","WEIGHT","jointSource","inverseSource","INV_BIND_MATRIX","jointCount","vertexSkinData","skinIndex","weightId","descending","boneInverse","parseImage","init_from","buildImage","getImage","parseEffect","profile","parseEffectProfileCOMMON","effects","surfaces","parseEffectNewparam","technique","parseEffectTechnique","extra","parseEffectExtra","parseEffectSurface","parseEffectSampler","parseEffectParameters","parseEffectParameter","parseEffectParameterTexture","parseEffectParameterTextureExtra","parseEffectParameterTextureExtraTechnique","parseEffectExtraTechnique","buildEffect","getEffect","parseMaterial","getTextureLoader","tgaLoader","buildMaterial","effect","textureObject","surface","wrapU","wrapV","offsetU","offsetV","repeatU","repeatV","parameter","float","transparency","double_sided","parseCamera","optics","parseCameraOptics","parseCameraTechnique","parseCameraParameters","buildCamera","yfov","aspect_ratio","znear","zfar","ymag","xmag","aspectRatio","parseLight","parseLightTechnique","parseLightParameters","falloffAngle","buildLight","getLight","parseGeometry","primitives","parseGeometryVertices","parseGeometryPrimitive","accessor","primitive","inputname","groupPrimitives","checkUVCoordinates","uvsNeedsFix","buildGeometry","groupedPrimitives","primitiveType","buildGeometryType","materialKeys","input","prevLength","buildGeometryData","pushVector","sourceStride","parseKinematicsModel","links","parseKinematicsTechniqueCommon","kinematicsModels","buildKinematicsModel","getKinematicsModel","parseKinematicsJoint","parseKinematicsLink","parseKinematicsJointParameter","limits","static","zeroPosition","middlePosition","attachments","parseKinematicsAttachment","parseKinematicsTransform","joint","parsePhysicsModel","rigidBodies","parsePhysicsRigidBody","physicsModels","parsePhysicsTechniqueCommon","inertia","mass","parseKinematicsScene","bindJointAxis","parseKinematicsBindJointAxis","kinematicsScenes","param","tmpJointIndex","jointIndex","buildKinematicsScene","getKinematicsScene","setupKinematics","kinematicsModelId","kinematicsSceneId","visualSceneId","visualScenes","kinematicsModel","kinematicsScene","visualScene","getVisualScene","jointMap","targetElement","collada","parentVisualElement","parentElement","m0","kinematics","getJointValue","jointData","setJointValue","visualElement","visualElementName","buildTransformList","prepareNodes","parseNode","instanceCameras","instanceControllers","instanceLights","instanceGeometries","instanceNodes","parseNodeInstance","hasNode","skeletons","instances","buildSkeleton","boneData","sortedBoneData","buildBoneHierarchy","hasVisualScene","processed","buildNode","instanceCamera","newObjects","buildObjects","instanceLight","fallbackMaterial","resolveMaterialBinding","instanceMaterials","parseVisualScene","buildVisualScene","parseScene","setupAnimations","parserErrorToText","parserError","stack","Node","TEXT_NODE","errorText","errorElement","asset","model_collada_render","model_collada_staticRenderFns","model_gltf_render","model_gltf_staticRenderFns","model_colladavue_type_script_lang_js_","src_model_colladavue_type_script_lang_js_","model_collada_component","model_collada","GLTFLoader_GLTFLoader","GLTFLoader","dracoLoader","GLTFRegistry","removeAll","_onError","gltf","setDRACOLoader","magic","BINARY_EXTENSION_HEADER_MAGIC","EXTENSIONS","KHR_BINARY_GLTF","GLTFBinaryExtension","extensionsUsed","extensionName","extensionsRequired","KHR_LIGHTS_PUNCTUAL","GLTFLightsExtension","KHR_MATERIALS_UNLIT","GLTFMaterialsUnlitExtension","KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS","GLTFMaterialsPbrSpecularGlossinessExtension","KHR_DRACO_MESH_COMPRESSION","GLTFDracoMeshCompressionExtension","MSFT_TEXTURE_DDS","GLTFTextureDDSExtension","KHR_TEXTURE_TRANSFORM","GLTFTextureTransformExtension","GLTFParser","ddsLoader","lightDefs","loadLight","lightIndex","lightNode","lightDef","innerConeAngle","outerConeAngle","getMaterialType","extendParams","materialParams","materialDef","metallicRoughness","pbrMetallicRoughness","baseColorFactor","baseColorTexture","assignTexture","all","BINARY_EXTENSION_HEADER_LENGTH","BINARY_EXTENSION_CHUNK_TYPES","BIN","headerView","chunkView","chunkIndex","chunkLength","chunkType","contentArray","specularGlossinessParams","pbrSpecularGlossiness","specularMapParsFragmentChunk","glossinessMapParsFragmentChunk","specularMapFragmentChunk","glossinessMapFragmentChunk","lightPhysicalFragmentChunk","glossiness","glossinessMap","diffuseFactor","diffuseTexture","glossinessFactor","specularFactor","specularGlossinessTexture","specGlossMapDef","isGLTFSpecularGlossinessMaterial","cloneMaterial","refreshUniforms","USE_GLOSSINESSMAP","USE_ROUGHNESSMAP","GLTFCubicSplineInterpolant","decodePrimitive","bufferViewIndex","bufferView","gltfAttributeMap","threeAttributeMap","attributeNormalizedMap","attributeTypeMap","attributeName","threeAttributeName","ATTRIBUTES","accessorDef","accessors","componentType","WEBGL_COMPONENT_TYPES","getDependency","decodeDracoFile","extendTexture","texCoord","stride2","stride3","td","defaultMaterial","WEBGL_CONSTANTS","FLOAT","FLOAT_MAT3","FLOAT_MAT4","FLOAT_VEC2","FLOAT_VEC3","FLOAT_VEC4","LINEAR","REPEAT","SAMPLER_2D","POINTS","LINES","LINE_LOOP","LINE_STRIP","TRIANGLES","TRIANGLE_STRIP","TRIANGLE_FAN","UNSIGNED_BYTE","UNSIGNED_SHORT","5120","5121","5122","5123","5125","5126","WEBGL_FILTERS","9728","9729","9984","9985","9986","9987","WEBGL_WRAPPINGS","33071","33648","10497","WEBGL_TYPE_SIZES","SCALAR","VEC2","VEC3","VEC4","MAT2","MAT3","MAT4","POSITION","NORMAL","TANGENT","TEXCOORD_0","TEXCOORD_1","COLOR_0","WEIGHTS_0","JOINTS_0","PATH_PROPERTIES","translation","INTERPOLATION","CUBICSPLINE","STEP","ALPHA_MODES","OPAQUE","MASK","BLEND","MIME_TYPE_FORMATS","image/png","image/jpeg","createDefaultMaterial","addUnknownExtensionsToUserData","knownExtensions","objectDef","gltfExtensions","assignExtrasToUserData","gltfDef","extras","addMorphTargets","targets","hasMorphPosition","hasMorphNormal","pendingPositionAccessors","pendingNormalAccessors","pendingAccessor","morphPositions","cloneBufferAttribute","normalAttribute","meshDef","targetNames","createPrimitiveKey","primitiveDef","geometryKey","dracoExtension","createAttributesKey","attributesKey","primitiveCache","fileLoader","addPrimitiveAttributes","assignAttributeAccessor","accessorIndex","gltfAttributeName","markDefs","getDependencies","dependencies","scenes","nodeDefs","skinDefs","skins","meshDefs","meshes","meshReferences","meshUses","skinLength","nodeIndex","nodeLength","nodeDef","cacheKey","dependency","loadScene","loadNode","loadMesh","loadAccessor","loadBufferView","loadBuffer","loadMaterial","loadSkin","loadAnimation","loadCamera","defs","bufferIndex","bufferDef","uri","bufferViewDef","bufferViews","sparse","pendingBufferViews","elementBytes","itemBytes","byteStride","ibCacheKey","itemSizeIndices","TypedArrayIndices","byteOffsetIndices","byteOffsetValues","sparseIndices","sparseValues","textureIndex","URL","webkitURL","textureDef","textureExtensions","sourceURI","isObjectURL","createObjectURL","revokeObjectURL","mapName","mapDef","assignFinalMaterial","useVertexTangents","useVertexColors","useFlatShading","useMorphTargets","useMorphNormals","pointsMaterial","lineMaterial","materialType","materialExtensions","sgExtension","kmuExtension","metallicFactor","roughnessFactor","metallicRoughnessTexture","alphaMode","alphaCutoff","normalTexture","occlusionTexture","strength","emissiveFactor","emissiveTexture","loadGeometries","createDracoPrimitive","geometryPromise","promise","meshIndex","originalMaterials","cameraIndex","cameraDef","skinDef","skinEntry","inverseBindMatrices","animationIndex","animationDef","pendingNodes","pendingInputAccessors","pendingOutputAccessors","pendingSamplers","pendingTargets","inputAccessors","outputAccessors","inputAccessor","outputAccessor","targetName","isInterpolantFactoryMethodGLTFCubicSpline","instanceNum","buildNodeHierachy","nodeId","parentObject","pendingJoints","jointNodes","jointNode","sceneIndex","sceneDef","nodeIds","model_gltfvue_type_script_lang_js_","src_model_gltfvue_type_script_lang_js_","model_gltf_component","model_gltf","ModelJson","ModelDae","ModelObj","ModelThree","ModelStl","ModelPly","ModelCollada","ModelGltf","c615","c650","c847","c9ea","ca2b","cfc7","d217","d4d5","inheritIfRequired","$trim","NUMBER","$Number","BROKEN_COF","TRIM","argument","third","radix","maxCode","first","digits","d74e","forbiddenField","dac5","addToUnscopables","iterated","Arguments","dad2","daf2","db4b","ddf7","Attributes","dfab","shared","e3e0","e5ef","SRC","$toString","TO_STRING","TPL","inspectSource","isFunction","e650","e67d","scripts","f01a","f216","f691","f763","TO_STRING_TAG","ArrayValues","DOMIterables","CSSRuleList","CSSStyleDeclaration","CSSValueList","ClientRectList","DOMRectList","DOMStringList","DOMTokenList","DataTransferItemList","FileList","HTMLAllCollection","HTMLCollection","HTMLFormElement","HTMLSelectElement","MediaList","MimeTypeArray","NamedNodeMap","NodeList","PaintRequestList","Plugin","PluginArray","SVGLengthList","SVGNumberList","SVGPathSegList","SVGPointList","SVGStringList","SVGTransformList","SourceBufferList","StyleSheetList","TextTrackCueList","TextTrackList","TouchList","collections","explicit","Collection","fb6d","names"],"mappings":"+GAMe,SAAAA,EACfC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAGA,IAqBAC,EArBAC,EAAA,oBAAAT,EACAA,EAAAS,QACAT,EAiDA,GA9CAC,IACAQ,EAAAR,SACAQ,EAAAP,kBACAO,EAAAC,WAAA,GAIAP,IACAM,EAAAE,YAAA,GAIAN,IACAI,EAAAG,SAAA,UAAAP,GAIAC,GACAE,EAAA,SAAAK,GAEAA,EACAA,GACAC,KAAAC,QAAAD,KAAAC,OAAAC,YACAF,KAAAG,QAAAH,KAAAG,OAAAF,QAAAD,KAAAG,OAAAF,OAAAC,WAEAH,GAAA,qBAAAK,sBACAL,EAAAK,qBAGAd,GACAA,EAAAe,KAAAL,KAAAD,GAGAA,KAAAO,uBACAP,EAAAO,sBAAAC,IAAAf,IAKAG,EAAAa,aAAAd,GACGJ,IACHI,EAAAD,EACA,WAAqBH,EAAAe,KAAAL,UAAAS,MAAAC,SAAAC,aACrBrB,GAGAI,EACA,GAAAC,EAAAE,WAAA,CAGAF,EAAAiB,cAAAlB,EAEA,IAAAmB,EAAAlB,EAAAR,OACAQ,EAAAR,OAAA,SAAA2B,EAAAf,GAEA,OADAL,EAAAW,KAAAN,GACAc,EAAAC,EAAAf,QAEK,CAEL,IAAAgB,EAAApB,EAAAqB,aACArB,EAAAqB,aAAAD,EACA,GAAAE,OAAAF,EAAArB,GACA,CAAAA,GAIA,OACAwB,QAAAhC,EACAS,WA1FAwB,EAAAC,EAAAC,EAAA,sBAAApC,yCCAAkC,EAAAG,EAAAD,GAAA,SAAAE;;;;;;AAOA,IAAAC,EAAAC,OAAAC,OAAA,IAIA,SAAAC,EAAAC,GACA,YAAAC,IAAAD,GAAA,OAAAA,EAGA,SAAAE,EAAAF,GACA,YAAAC,IAAAD,GAAA,OAAAA,EAGA,SAAAG,EAAAH,GACA,WAAAA,EAGA,SAAAI,EAAAJ,GACA,WAAAA,EAMA,SAAAK,EAAAC,GACA,MACA,kBAAAA,GACA,kBAAAA,GAEA,kBAAAA,GACA,mBAAAA,EASA,SAAAC,EAAAC,GACA,cAAAA,GAAA,kBAAAA,EAMA,IAAAC,EAAAZ,OAAAa,UAAAC,SAUA,SAAAC,EAAAJ,GACA,0BAAAC,EAAAhC,KAAA+B,GAGA,SAAAK,EAAAb,GACA,0BAAAS,EAAAhC,KAAAuB,GAMA,SAAAc,EAAAC,GACA,IAAAC,EAAAC,WAAAC,OAAAH,IACA,OAAAC,GAAA,GAAAG,KAAAC,MAAAJ,QAAAK,SAAAN,GAGA,SAAAO,EAAAP,GACA,OACAb,EAAAa,IACA,oBAAAA,EAAAQ,MACA,oBAAAR,EAAAS,MAOA,SAAAb,EAAAI,GACA,aAAAA,EACA,GACAU,MAAAC,QAAAX,IAAAH,EAAAG,MAAAJ,WAAAF,EACAkB,KAAAC,UAAAb,EAAA,QACAG,OAAAH,GAOA,SAAAc,EAAAd,GACA,IAAAC,EAAAC,WAAAF,GACA,OAAAe,MAAAd,GAAAD,EAAAC,EAOA,SAAAe,EACAC,EACAC,GAIA,IAFA,IAAAC,EAAArC,OAAAsC,OAAA,MACAC,EAAAJ,EAAAK,MAAA,KACAC,EAAA,EAAiBA,EAAAF,EAAAG,OAAiBD,IAClCJ,EAAAE,EAAAE,KAAA,EAEA,OAAAL,EACA,SAAAlB,GAAsB,OAAAmB,EAAAnB,EAAAyB,gBACtB,SAAAzB,GAAsB,OAAAmB,EAAAnB,IAMtBgB,EAAA,yBAKAU,EAAAV,EAAA,8BAKA,SAAAW,EAAAC,EAAAC,GACA,GAAAD,EAAAJ,OAAA,CACA,IAAAM,EAAAF,EAAAG,QAAAF,GACA,GAAAC,GAAA,EACA,OAAAF,EAAAI,OAAAF,EAAA,IAQA,IAAAG,EAAAnD,OAAAa,UAAAsC,eACA,SAAAC,EAAAzC,EAAA0C,GACA,OAAAF,EAAAvE,KAAA+B,EAAA0C,GAMA,SAAAC,EAAAC,GACA,IAAAC,EAAAxD,OAAAsC,OAAA,MACA,gBAAAH,GACA,IAAAsB,EAAAD,EAAArB,GACA,OAAAsB,IAAAD,EAAArB,GAAAoB,EAAApB,KAOA,IAAAuB,EAAA,SACAC,EAAAL,EAAA,SAAAnB,GACA,OAAAA,EAAAyB,QAAAF,EAAA,SAAAG,EAAAC,GAAkD,OAAAA,IAAAC,cAAA,OAMlDC,EAAAV,EAAA,SAAAnB,GACA,OAAAA,EAAA8B,OAAA,GAAAF,cAAA5B,EAAA+B,MAAA,KAMAC,EAAA,aACAC,EAAAd,EAAA,SAAAnB,GACA,OAAAA,EAAAyB,QAAAO,EAAA,OAAAxB,gBAYA,SAAA0B,EAAAd,EAAAe,GACA,SAAAC,EAAAC,GACA,IAAAC,EAAAC,UAAAhC,OACA,OAAA+B,EACAA,EAAA,EACAlB,EAAAoB,MAAAL,EAAAI,WACAnB,EAAA3E,KAAA0F,EAAAE,GACAjB,EAAA3E,KAAA0F,GAIA,OADAC,EAAAK,QAAArB,EAAAb,OACA6B,EAGA,SAAAM,EAAAtB,EAAAe,GACA,OAAAf,EAAAuB,KAAAR,GAGA,IAAAQ,EAAAC,SAAAlE,UAAAiE,KACAD,EACAR,EAKA,SAAAW,EAAAzC,EAAA0C,GACAA,KAAA,EACA,IAAAxC,EAAAF,EAAAG,OAAAuC,EACAC,EAAA,IAAAtD,MAAAa,GACA,MAAAA,IACAyC,EAAAzC,GAAAF,EAAAE,EAAAwC,GAEA,OAAAC,EAMA,SAAAC,EAAAC,EAAAC,GACA,QAAAhC,KAAAgC,EACAD,EAAA/B,GAAAgC,EAAAhC,GAEA,OAAA+B,EAMA,SAAAE,EAAAxC,GAEA,IADA,IAAAyC,EAAA,GACA9C,EAAA,EAAiBA,EAAAK,EAAAJ,OAAgBD,IACjCK,EAAAL,IACA0C,EAAAI,EAAAzC,EAAAL,IAGA,OAAA8C,EAUA,SAAAC,EAAAhB,EAAAiB,EAAA3B,IAKA,IAAA4B,EAAA,SAAAlB,EAAAiB,EAAA3B,GAA6B,UAO7B6B,EAAA,SAAA9B,GAA6B,OAAAA,GAM7B,SAAA+B,EAAApB,EAAAiB,GACA,GAAAjB,IAAAiB,EAAgB,SAChB,IAAAI,EAAAnF,EAAA8D,GACAsB,EAAApF,EAAA+E,GACA,IAAAI,IAAAC,EAwBG,OAAAD,IAAAC,GACHzE,OAAAmD,KAAAnD,OAAAoE,GAxBA,IACA,IAAAM,EAAAnE,MAAAC,QAAA2C,GACAwB,EAAApE,MAAAC,QAAA4D,GACA,GAAAM,GAAAC,EACA,OAAAxB,EAAA9B,SAAA+C,EAAA/C,QAAA8B,EAAAyB,MAAA,SAAAC,EAAAzD,GACA,OAAAmD,EAAAM,EAAAT,EAAAhD,MAEO,GAAA+B,aAAA2B,MAAAV,aAAAU,KACP,OAAA3B,EAAA4B,YAAAX,EAAAW,UACO,GAAAL,GAAAC,EAQP,SAPA,IAAAK,EAAArG,OAAAsG,KAAA9B,GACA+B,EAAAvG,OAAAsG,KAAAb,GACA,OAAAY,EAAA3D,SAAA6D,EAAA7D,QAAA2D,EAAAJ,MAAA,SAAA5C,GACA,OAAAuC,EAAApB,EAAAnB,GAAAoC,EAAApC,MAMK,MAAA6C,GAEL,UAcA,SAAAM,EAAA1D,EAAA5B,GACA,QAAAuB,EAAA,EAAiBA,EAAAK,EAAAJ,OAAgBD,IACjC,GAAAmD,EAAA9C,EAAAL,GAAAvB,GAAkC,OAAAuB,EAElC,SAMA,SAAAgE,EAAAlD,GACA,IAAAmD,GAAA,EACA,kBACAA,IACAA,GAAA,EACAnD,EAAAoB,MAAApG,KAAAmG,aAKA,IAAAiC,EAAA,uBAEAC,EAAA,CACA,YACA,YACA,UAGAC,EAAA,CACA,eACA,UACA,cACA,UACA,eACA,UACA,gBACA,YACA,YACA,cACA,gBACA,kBAOAC,EAAA,CAKAC,sBAAA/G,OAAAsC,OAAA,MAKA0E,QAAA,EAKAC,eAAiB,EAKjBC,UAAY,EAKZC,aAAA,EAKAC,aAAA,KAKAC,YAAA,KAKAC,gBAAA,GAMAC,SAAAvH,OAAAsC,OAAA,MAMAkF,cAAA9B,EAMA+B,eAAA/B,EAMAgC,iBAAAhC,EAKAiC,gBAAAnC,EAKAoC,qBAAAjC,EAMAkC,YAAAnC,EAMAoC,OAAA,EAKAC,gBAAAlB,GAUAmB,EAAA,8JAKA,SAAAC,EAAA9F,GACA,IAAA2B,GAAA3B,EAAA,IAAA+F,WAAA,GACA,YAAApE,GAAA,KAAAA,EAMA,SAAAqE,EAAAxH,EAAA0C,EAAAnC,EAAAkH,GACApI,OAAAqI,eAAA1H,EAAA0C,EAAA,CACA5C,MAAAS,EACAkH,eACAE,UAAA,EACAC,cAAA,IAOA,IAAAC,EAAA,IAAAC,OAAA,KAAAT,EAAA,kBACA,SAAAU,EAAAC,GACA,IAAAH,EAAAI,KAAAD,GAAA,CAGA,IAAAE,EAAAF,EAAAnG,MAAA,KACA,gBAAA7B,GACA,QAAA8B,EAAA,EAAmBA,EAAAoG,EAAAnG,OAAqBD,IAAA,CACxC,IAAA9B,EAAiB,OACjBA,IAAAkI,EAAApG,IAEA,OAAA9B,IAOA,IAmCAmI,EAnCAC,EAAA,gBAGAC,EAAA,qBAAAC,OACAC,EAAA,qBAAAC,+BAAAC,SACAC,EAAAH,GAAAC,cAAAC,SAAAzG,cACA2G,EAAAN,GAAAC,OAAAM,UAAAC,UAAA7G,cACA8G,GAAAH,GAAA,eAAAV,KAAAU,GACAI,GAAAJ,KAAArG,QAAA,cACA0G,GAAAL,KAAArG,QAAA,WAEA2G,IADAN,KAAArG,QAAA,WACAqG,GAAA,uBAAAV,KAAAU,IAAA,QAAAD,GAGAQ,IAFAP,GAAA,cAAAV,KAAAU,GACAA,GAAA,YAAAV,KAAAU,GACAA,KAAAQ,MAAA,mBAGAC,GAAA,GAAqBC,MAErBC,IAAA,EACA,GAAAjB,EACA,IACA,IAAAkB,GAAA,GACAlK,OAAAqI,eAAA6B,GAAA,WACAC,IAAA,WAEAF,IAAA,KAGAhB,OAAAmB,iBAAA,oBAAAF,IACG,MAAAhE,KAMH,IAAAmE,GAAA,WAWA,YAVAjK,IAAA0I,IAOAA,GALAE,IAAAE,GAAA,qBAAApJ,IAGAA,EAAA,uBAAAA,EAAA,WAAAwK,IAAAC,UAKAzB,GAIA5B,GAAA8B,GAAAC,OAAAuB,6BAGA,SAAAC,GAAAC,GACA,0BAAAA,GAAA,cAAA9B,KAAA8B,EAAA5J,YAGA,IAIA6J,GAJAC,GACA,qBAAAC,QAAAJ,GAAAI,SACA,qBAAAC,SAAAL,GAAAK,QAAAC,SAMAJ,GAFA,qBAAAK,KAAAP,GAAAO,KAEAA,IAGA,WACA,SAAAA,IACAzM,KAAA0M,IAAAjL,OAAAsC,OAAA,MAYA,OAVA0I,EAAAnK,UAAAqK,IAAA,SAAA7H,GACA,WAAA9E,KAAA0M,IAAA5H,IAEA2H,EAAAnK,UAAA/B,IAAA,SAAAuE,GACA9E,KAAA0M,IAAA5H,IAAA,GAEA2H,EAAAnK,UAAAsK,MAAA,WACA5M,KAAA0M,IAAAjL,OAAAsC,OAAA,OAGA0I,EAdA,GAoBA,IAAAI,GAAA5F,EA8FA6F,GAAA,EAMAC,GAAA,WACA/M,KAAAgN,GAAAF,KACA9M,KAAAiN,KAAA,IAGAF,GAAAzK,UAAA4K,OAAA,SAAAC,GACAnN,KAAAiN,KAAAG,KAAAD,IAGAJ,GAAAzK,UAAA+K,UAAA,SAAAF,GACA7I,EAAAtE,KAAAiN,KAAAE,IAGAJ,GAAAzK,UAAAgL,OAAA,WACAP,GAAAQ,QACAR,GAAAQ,OAAAC,OAAAxN,OAIA+M,GAAAzK,UAAAmL,OAAA,WAEA,IAAAR,EAAAjN,KAAAiN,KAAAtH,QAOA,QAAAzB,EAAA,EAAAgC,EAAA+G,EAAA9I,OAAkCD,EAAAgC,EAAOhC,IACzC+I,EAAA/I,GAAAwJ,UAOAX,GAAAQ,OAAA,KACA,IAAAI,GAAA,GAEA,SAAAC,GAAAL,GACAI,GAAAP,KAAAG,GACAR,GAAAQ,SAGA,SAAAM,KACAF,GAAAG,MACAf,GAAAQ,OAAAI,MAAAxJ,OAAA,GAKA,IAAA4J,GAAA,SACAC,EACAC,EACAC,EACAC,EACAC,EACArO,EACAsO,EACAC,GAEAtO,KAAAgO,MACAhO,KAAAiO,OACAjO,KAAAkO,WACAlO,KAAAmO,OACAnO,KAAAoO,MACApO,KAAAuO,QAAA1M,EACA7B,KAAAD,UACAC,KAAAwO,eAAA3M,EACA7B,KAAAyO,eAAA5M,EACA7B,KAAA0O,eAAA7M,EACA7B,KAAA8E,IAAAmJ,KAAAnJ,IACA9E,KAAAqO,mBACArO,KAAA2O,uBAAA9M,EACA7B,KAAAG,YAAA0B,EACA7B,KAAA4O,KAAA,EACA5O,KAAA6O,UAAA,EACA7O,KAAA8O,cAAA,EACA9O,KAAA+O,WAAA,EACA/O,KAAAgP,UAAA,EACAhP,KAAAiP,QAAA,EACAjP,KAAAsO,eACAtO,KAAAkP,eAAArN,EACA7B,KAAAmP,oBAAA,GAGAC,GAAA,CAA0BC,MAAA,CAASrF,cAAA,IAInCoF,GAAAC,MAAAzD,IAAA,WACA,OAAA5L,KAAA2O,mBAGAlN,OAAA6N,iBAAAvB,GAAAzL,UAAA8M,IAEA,IAAAG,GAAA,SAAApB,QACA,IAAAA,MAAA,IAEA,IAAAqB,EAAA,IAAAzB,GAGA,OAFAyB,EAAArB,OACAqB,EAAAT,WAAA,EACAS,GAGA,SAAAC,GAAA9M,GACA,WAAAoL,QAAAlM,gBAAAiB,OAAAH,IAOA,SAAA+M,GAAAC,GACA,IAAAC,EAAA,IAAA7B,GACA4B,EAAA3B,IACA2B,EAAA1B,KAIA0B,EAAAzB,UAAAyB,EAAAzB,SAAAvI,QACAgK,EAAAxB,KACAwB,EAAAvB,IACAuB,EAAA5P,QACA4P,EAAAtB,iBACAsB,EAAArB,cAWA,OATAsB,EAAArB,GAAAoB,EAAApB,GACAqB,EAAAf,SAAAc,EAAAd,SACAe,EAAA9K,IAAA6K,EAAA7K,IACA8K,EAAAb,UAAAY,EAAAZ,UACAa,EAAApB,UAAAmB,EAAAnB,UACAoB,EAAAnB,UAAAkB,EAAAlB,UACAmB,EAAAlB,UAAAiB,EAAAjB,UACAkB,EAAAV,UAAAS,EAAAT,UACAU,EAAAZ,UAAA,EACAY,EAQA,IAAAC,GAAAxM,MAAAf,UACAwN,GAAArO,OAAAsC,OAAA8L,IAEAE,GAAA,CACA,OACA,MACA,QACA,UACA,SACA,OACA,WAMAA,GAAAC,QAAA,SAAAC,GAEA,IAAAC,EAAAL,GAAAI,GACArG,EAAAkG,GAAAG,EAAA,WACA,IAAAE,EAAA,GAAAC,EAAAjK,UAAAhC,OACA,MAAAiM,IAAAD,EAAAC,GAAAjK,UAAAiK,GAEA,IAEAC,EAFAC,EAAAJ,EAAA9J,MAAApG,KAAAmQ,GACAI,EAAAvQ,KAAAwQ,OAEA,OAAAP,GACA,WACA,cACAI,EAAAF,EACA,MACA,aACAE,EAAAF,EAAAxK,MAAA,GACA,MAKA,OAHA0K,GAAmBE,EAAAE,aAAAJ,GAEnBE,EAAAG,IAAAjD,SACA6C,MAMA,IAAAK,GAAAlP,OAAAmP,oBAAAd,IAMAe,IAAA,EAEA,SAAAC,GAAA5O,GACA2O,GAAA3O,EASA,IAAA6O,GAAA,SAAA7O,GACAlC,KAAAkC,QACAlC,KAAA0Q,IAAA,IAAA3D,GACA/M,KAAAgR,QAAA,EACApH,EAAA1H,EAAA,SAAAlC,MACAqD,MAAAC,QAAApB,IACAsI,EACAyG,GAAA/O,EAAA4N,IAEAoB,GAAAhP,EAAA4N,GAAAa,IAEA3Q,KAAAyQ,aAAAvO,IAEAlC,KAAAmR,KAAAjP,IA+BA,SAAA+O,GAAA1D,EAAA6D,GAEA7D,EAAA8D,UAAAD,EASA,SAAAF,GAAA3D,EAAA6D,EAAArJ,GACA,QAAA7D,EAAA,EAAAgC,EAAA6B,EAAA5D,OAAkCD,EAAAgC,EAAOhC,IAAA,CACzC,IAAAY,EAAAiD,EAAA7D,GACA0F,EAAA2D,EAAAzI,EAAAsM,EAAAtM,KASA,SAAAwM,GAAApP,EAAAqP,GAIA,IAAAhB,EAHA,GAAApO,EAAAD,mBAAA6L,IAkBA,OAdAlJ,EAAA3C,EAAA,WAAAA,EAAAsO,kBAAAO,GACAR,EAAArO,EAAAsO,OAEAK,KACA/E,OACAzI,MAAAC,QAAApB,IAAAM,EAAAN,KACAT,OAAA+P,aAAAtP,KACAA,EAAAuP,SAEAlB,EAAA,IAAAQ,GAAA7O,IAEAqP,GAAAhB,GACAA,EAAAS,UAEAT,EAMA,SAAAmB,GACAtP,EACA0C,EACAnC,EACAgP,EACAC,GAEA,IAAAlB,EAAA,IAAA3D,GAEA8E,EAAApQ,OAAAqQ,yBAAA1P,EAAA0C,GACA,IAAA+M,IAAA,IAAAA,EAAA7H,aAAA,CAKA,IAAA+H,EAAAF,KAAAjG,IACAoG,EAAAH,KAAAnF,IACAqF,IAAAC,GAAA,IAAA7L,UAAAhC,SACAxB,EAAAP,EAAA0C,IAGA,IAAAmN,GAAAL,GAAAN,GAAA3O,GACAlB,OAAAqI,eAAA1H,EAAA0C,EAAA,CACA+E,YAAA,EACAG,cAAA,EACA4B,IAAA,WACA,IAAA1J,EAAA6P,IAAA1R,KAAA+B,GAAAO,EAUA,OATAoK,GAAAQ,SACAmD,EAAApD,SACA2E,IACAA,EAAAvB,IAAApD,SACAjK,MAAAC,QAAApB,IACAgQ,GAAAhQ,KAIAA,GAEAwK,IAAA,SAAAyF,GACA,IAAAjQ,EAAA6P,IAAA1R,KAAA+B,GAAAO,EAEAwP,IAAAjQ,GAAAiQ,OAAAjQ,OAQA6P,IAAAC,IACAA,EACAA,EAAA3R,KAAA+B,EAAA+P,GAEAxP,EAAAwP,EAEAF,GAAAL,GAAAN,GAAAa,GACAzB,EAAAjD,cAUA,SAAAf,GAAAa,EAAAzI,EAAAnC,GAMA,GAAAU,MAAAC,QAAAiK,IAAA7K,EAAAoC,GAGA,OAFAyI,EAAApJ,OAAApB,KAAAqP,IAAA7E,EAAApJ,OAAAW,GACAyI,EAAA5I,OAAAG,EAAA,EAAAnC,GACAA,EAEA,GAAAmC,KAAAyI,KAAAzI,KAAArD,OAAAa,WAEA,OADAiL,EAAAzI,GAAAnC,EACAA,EAEA,IAAA4N,EAAA,EAAAC,OACA,OAAAjD,EAAAkE,QAAAlB,KAAAS,QAKArO,EAEA4N,GAIAmB,GAAAnB,EAAArO,MAAA4C,EAAAnC,GACA4N,EAAAG,IAAAjD,SACA9K,IALA4K,EAAAzI,GAAAnC,EACAA,GAUA,SAAA0P,GAAA9E,EAAAzI,GAMA,GAAAzB,MAAAC,QAAAiK,IAAA7K,EAAAoC,GACAyI,EAAA5I,OAAAG,EAAA,OADA,CAIA,IAAAyL,EAAA,EAAAC,OACAjD,EAAAkE,QAAAlB,KAAAS,SAOAnM,EAAA0I,EAAAzI,YAGAyI,EAAAzI,GACAyL,GAGAA,EAAAG,IAAAjD,WAOA,SAAAyE,GAAAhQ,GACA,QAAAyF,OAAA,EAAAzD,EAAA,EAAAgC,EAAAhE,EAAAiC,OAAiDD,EAAAgC,EAAOhC,IACxDyD,EAAAzF,EAAAgC,GACAyD,KAAA6I,QAAA7I,EAAA6I,OAAAE,IAAApD,SACAjK,MAAAC,QAAAqE,IACAuK,GAAAvK,GAhNAoJ,GAAAzO,UAAA6O,KAAA,SAAA/O,GAEA,IADA,IAAA2F,EAAAtG,OAAAsG,KAAA3F,GACA8B,EAAA,EAAiBA,EAAA6D,EAAA5D,OAAiBD,IAClCwN,GAAAtP,EAAA2F,EAAA7D,KAOA6M,GAAAzO,UAAAmO,aAAA,SAAA6B,GACA,QAAApO,EAAA,EAAAgC,EAAAoM,EAAAnO,OAAmCD,EAAAgC,EAAOhC,IAC1CoN,GAAAgB,EAAApO,KAgNA,IAAAqO,GAAAhK,EAAAC,sBAoBA,SAAAgK,GAAA3L,EAAA4L,GACA,IAAAA,EAAc,OAAA5L,EAOd,IANA,IAAA/B,EAAA4N,EAAAC,EAEA5K,EAAAsE,GACAE,QAAAC,QAAAiG,GACAhR,OAAAsG,KAAA0K,GAEAvO,EAAA,EAAiBA,EAAA6D,EAAA5D,OAAiBD,IAClCY,EAAAiD,EAAA7D,GAEA,WAAAY,IACA4N,EAAA7L,EAAA/B,GACA6N,EAAAF,EAAA3N,GACAD,EAAAgC,EAAA/B,GAGA4N,IAAAC,GACAnQ,EAAAkQ,IACAlQ,EAAAmQ,IAEAH,GAAAE,EAAAC,GANAjG,GAAA7F,EAAA/B,EAAA6N,IASA,OAAA9L,EAMA,SAAA+L,GACAC,EACAC,EACAC,GAEA,OAAAA,EAoBA,WAEA,IAAAC,EAAA,oBAAAF,EACAA,EAAAzS,KAAA0S,KACAD,EACAG,EAAA,oBAAAJ,EACAA,EAAAxS,KAAA0S,KACAF,EACA,OAAAG,EACAR,GAAAQ,EAAAC,GAEAA,GA7BAH,EAGAD,EAQA,WACA,OAAAL,GACA,oBAAAM,IAAAzS,KAAAL,WAAA8S,EACA,oBAAAD,IAAAxS,KAAAL,WAAA6S,IAVAC,EAHAD,EA2DA,SAAAK,GACAL,EACAC,GAEA,IAAA9L,EAAA8L,EACAD,EACAA,EAAA5R,OAAA6R,GACAzP,MAAAC,QAAAwP,GACAA,EACA,CAAAA,GACAD,EACA,OAAA7L,EACAmM,GAAAnM,GACAA,EAGA,SAAAmM,GAAAC,GAEA,IADA,IAAApM,EAAA,GACA9C,EAAA,EAAiBA,EAAAkP,EAAAjP,OAAkBD,KACnC,IAAA8C,EAAAtC,QAAA0O,EAAAlP,KACA8C,EAAAoG,KAAAgG,EAAAlP,IAGA,OAAA8C,EAcA,SAAAqM,GACAR,EACAC,EACAC,EACAjO,GAEA,IAAAkC,EAAAvF,OAAAsC,OAAA8O,GAAA,MACA,OAAAC,EAEAlM,EAAAI,EAAA8L,GAEA9L,EAzEAuL,GAAAtE,KAAA,SACA4E,EACAC,EACAC,GAEA,OAAAA,EAcAH,GAAAC,EAAAC,EAAAC,GAbAD,GAAA,oBAAAA,EAQAD,EAEAD,GAAAC,EAAAC,IAmCAxK,EAAA0H,QAAA,SAAAtQ,GACA6S,GAAA7S,GAAAwT,KAyBA7K,EAAA2H,QAAA,SAAAsD,GACAf,GAAAe,EAAA,KAAAD,KASAd,GAAA9G,MAAA,SACAoH,EACAC,EACAC,EACAjO,GAMA,GAHA+N,IAAArH,KAAkCqH,OAAAhR,GAClCiR,IAAAtH,KAAiCsH,OAAAjR,IAEjCiR,EAAkB,OAAArR,OAAAsC,OAAA8O,GAAA,MAIlB,IAAAA,EAAmB,OAAAC,EACnB,IAAAnM,EAAA,GAEA,QAAA4M,KADA3M,EAAAD,EAAAkM,GACAC,EAAA,CACA,IAAA3S,EAAAwG,EAAA4M,GACAlE,EAAAyD,EAAAS,GACApT,IAAAkD,MAAAC,QAAAnD,KACAA,EAAA,CAAAA,IAEAwG,EAAA4M,GAAApT,EACAA,EAAAc,OAAAoO,GACAhM,MAAAC,QAAA+L,KAAA,CAAAA,GAEA,OAAA1I,GAMA4L,GAAAiB,MACAjB,GAAAkB,QACAlB,GAAAmB,OACAnB,GAAAoB,SAAA,SACAd,EACAC,EACAC,EACAjO,GAKA,IAAA+N,EAAmB,OAAAC,EACnB,IAAAnM,EAAAlF,OAAAsC,OAAA,MAGA,OAFA6C,EAAAD,EAAAkM,GACAC,GAAiBlM,EAAAD,EAAAmM,GACjBnM,GAEA4L,GAAAqB,QAAAhB,GAKA,IAAAiB,GAAA,SAAAhB,EAAAC,GACA,YAAAjR,IAAAiR,EACAD,EACAC,GA+BA,SAAAgB,GAAAnU,EAAAoT,GACA,IAAAS,EAAA7T,EAAA6T,MACA,GAAAA,EAAA,CACA,IACAtP,EAAAvB,EAAAoR,EADA/M,EAAA,GAEA,GAAA3D,MAAAC,QAAAkQ,GAAA,CACAtP,EAAAsP,EAAArP,OACA,MAAAD,IACAvB,EAAA6Q,EAAAtP,GACA,kBAAAvB,IACAoR,EAAA3O,EAAAzC,GACAqE,EAAA+M,GAAA,CAAqBT,KAAA,YAKlB,GAAA9Q,EAAAgR,GACH,QAAA1O,KAAA0O,EACA7Q,EAAA6Q,EAAA1O,GACAiP,EAAA3O,EAAAN,GACAkC,EAAA+M,GAAAvR,EAAAG,GACAA,EACA,CAAW2Q,KAAA3Q,QAEE,EAObhD,EAAA6T,MAAAxM,GAMA,SAAAgN,GAAArU,EAAAoT,GACA,IAAAW,EAAA/T,EAAA+T,OACA,GAAAA,EAAA,CACA,IAAAO,EAAAtU,EAAA+T,OAAA,GACA,GAAArQ,MAAAC,QAAAoQ,GACA,QAAAxP,EAAA,EAAmBA,EAAAwP,EAAAvP,OAAmBD,IACtC+P,EAAAP,EAAAxP,IAAA,CAA+BuO,KAAAiB,EAAAxP,SAE5B,GAAA1B,EAAAkR,GACH,QAAA5O,KAAA4O,EAAA,CACA,IAAA/Q,EAAA+Q,EAAA5O,GACAmP,EAAAnP,GAAAtC,EAAAG,GACAiE,EAAA,CAAkB6L,KAAA3N,GAAYnC,GAC9B,CAAW8P,KAAA9P,QAEE,GAYb,SAAAuR,GAAAvU,GACA,IAAAwU,EAAAxU,EAAAyU,WACA,GAAAD,EACA,QAAArP,KAAAqP,EAAA,CACA,IAAAE,EAAAF,EAAArP,GACA,oBAAAuP,IACAF,EAAArP,GAAA,CAAqByB,KAAA8N,EAAA3G,OAAA2G,KAoBrB,SAAAC,GACAnU,EACAkP,EACA0D,GAkBA,GAZA,oBAAA1D,IACAA,IAAA1P,SAGAmU,GAAAzE,EAAA0D,GACAiB,GAAA3E,EAAA0D,GACAmB,GAAA7E,IAMAA,EAAAkF,QACAlF,EAAAmF,UACArU,EAAAmU,GAAAnU,EAAAkP,EAAAmF,QAAAzB,IAEA1D,EAAAoF,QACA,QAAAvQ,EAAA,EAAAgC,EAAAmJ,EAAAoF,OAAAtQ,OAA8CD,EAAAgC,EAAOhC,IACrD/D,EAAAmU,GAAAnU,EAAAkP,EAAAoF,OAAAvQ,GAAA6O,GAKA,IACAjO,EADAnF,EAAA,GAEA,IAAAmF,KAAA3E,EACAuU,EAAA5P,GAEA,IAAAA,KAAAuK,EACAxK,EAAA1E,EAAA2E,IACA4P,EAAA5P,GAGA,SAAA4P,EAAA5P,GACA,IAAA6P,EAAApC,GAAAzN,IAAA+O,GACAlU,EAAAmF,GAAA6P,EAAAxU,EAAA2E,GAAAuK,EAAAvK,GAAAiO,EAAAjO,GAEA,OAAAnF,EAQA,SAAAiV,GACAjV,EACA2T,EACAtG,EACA6H,GAGA,qBAAA7H,EAAA,CAGA,IAAA8H,EAAAnV,EAAA2T,GAEA,GAAAzO,EAAAiQ,EAAA9H,GAA2B,OAAA8H,EAAA9H,GAC3B,IAAA+H,EAAA3P,EAAA4H,GACA,GAAAnI,EAAAiQ,EAAAC,GAAoC,OAAAD,EAAAC,GACpC,IAAAC,EAAAvP,EAAAsP,GACA,GAAAlQ,EAAAiQ,EAAAE,GAAqC,OAAAF,EAAAE,GAErC,IAAAhO,EAAA8N,EAAA9H,IAAA8H,EAAAC,IAAAD,EAAAE,GAOA,OAAAhO,GAOA,SAAAiO,GACAnQ,EACAoQ,EACAC,EACApC,GAEA,IAAAqC,EAAAF,EAAApQ,GACAuQ,GAAAxQ,EAAAsQ,EAAArQ,GACA5C,EAAAiT,EAAArQ,GAEAwQ,EAAAC,GAAAC,QAAAJ,EAAA9B,MACA,GAAAgC,GAAA,EACA,GAAAD,IAAAxQ,EAAAuQ,EAAA,WACAlT,GAAA,OACK,QAAAA,OAAA2D,EAAAf,GAAA,CAGL,IAAA2Q,EAAAF,GAAAzS,OAAAsS,EAAA9B,OACAmC,EAAA,GAAAH,EAAAG,KACAvT,GAAA,GAKA,QAAAL,IAAAK,EAAA,CACAA,EAAAwT,GAAA3C,EAAAqC,EAAAtQ,GAGA,IAAA6Q,EAAA9E,GACAC,IAAA,GACAQ,GAAApP,GACA4O,GAAA6E,GASA,OAAAzT,EAMA,SAAAwT,GAAA3C,EAAAqC,EAAAtQ,GAEA,GAAAD,EAAAuQ,EAAA,YAGA,IAAAxL,EAAAwL,EAAAQ,QAYA,OAAA7C,KAAArS,SAAAyU,gBACAtT,IAAAkR,EAAArS,SAAAyU,UAAArQ,SACAjD,IAAAkR,EAAA8C,OAAA/Q,GAEAiO,EAAA8C,OAAA/Q,GAIA,oBAAA8E,GAAA,aAAAkM,GAAAV,EAAA9B,MACA1J,EAAAvJ,KAAA0S,GACAnJ,GAqFA,SAAAkM,GAAA9Q,GACA,IAAAuG,EAAAvG,KAAAzC,WAAAgJ,MAAA,sBACA,OAAAA,IAAA,MAGA,SAAAwK,GAAA9P,EAAAiB,GACA,OAAA4O,GAAA7P,KAAA6P,GAAA5O,GAGA,SAAAqO,GAAAjC,EAAA0C,GACA,IAAA3S,MAAAC,QAAA0S,GACA,OAAAD,GAAAC,EAAA1C,GAAA,KAEA,QAAApP,EAAA,EAAAkM,EAAA4F,EAAA7R,OAA6CD,EAAAkM,EAASlM,IACtD,GAAA6R,GAAAC,EAAA9R,GAAAoP,GACA,OAAApP,EAGA,SAgDA,SAAA+R,GAAAC,EAAAnD,EAAAoD,GAGAvI,KACA,IACA,GAAAmF,EAAA,CACA,IAAAqD,EAAArD,EACA,MAAAqD,IAAAC,QAAA,CACA,IAAAjD,EAAAgD,EAAA1V,SAAA4V,cACA,GAAAlD,EACA,QAAAlP,EAAA,EAAyBA,EAAAkP,EAAAjP,OAAkBD,IAC3C,IACA,IAAAqS,GAAA,IAAAnD,EAAAlP,GAAA7D,KAAA+V,EAAAF,EAAAnD,EAAAoD,GACA,GAAAI,EAA4B,OACf,MAAA5O,IACb6O,GAAA7O,GAAAyO,EAAA,wBAMAI,GAAAN,EAAAnD,EAAAoD,GACG,QACHtI,MAIA,SAAA4I,GACAC,EACA3W,EACAoQ,EACA4C,EACAoD,GAEA,IAAAnP,EACA,IACAA,EAAAmJ,EAAAuG,EAAAtQ,MAAArG,EAAAoQ,GAAAuG,EAAArW,KAAAN,GACAiH,MAAAyK,QAAAvO,EAAA8D,OAAA2P,WACA3P,EAAA5D,MAAA,SAAAuE,GAA8B,OAAAsO,GAAAtO,EAAAoL,EAAAoD,EAAA,sBAG9BnP,EAAA2P,UAAA,GAEG,MAAAhP,IACHsO,GAAAtO,GAAAoL,EAAAoD,GAEA,OAAAnP,EAGA,SAAAwP,GAAAN,EAAAnD,EAAAoD,GACA,GAAA5N,EAAAM,aACA,IACA,OAAAN,EAAAM,aAAAxI,KAAA,KAAA6V,EAAAnD,EAAAoD,GACK,MAAAxO,IAGLA,KAAAuO,GACAU,GAAAjP,GAAA,4BAIAiP,GAAAV,EAAAnD,EAAAoD,GAGA,SAAAS,GAAAV,EAAAnD,EAAAoD,GAKA,IAAA1L,IAAAE,GAAA,qBAAAkM,QAGA,MAAAX,EAFAW,QAAAC,MAAAZ,GAQA,IAyBAa,GAzBAC,IAAA,EAEAC,GAAA,GACAC,IAAA,EAEA,SAAAC,KACAD,IAAA,EACA,IAAAE,EAAAH,GAAAtR,MAAA,GACAsR,GAAA9S,OAAA,EACA,QAAAD,EAAA,EAAiBA,EAAAkT,EAAAjT,OAAmBD,IACpCkT,EAAAlT,KAwBA,wBAAAmT,SAAAnL,GAAAmL,SAAA,CACA,IAAAC,GAAAD,QAAAE,UACAR,GAAA,WACAO,GAAAnU,KAAAgU,IAMA9L,IAAgBmM,WAAAvQ,IAEhB+P,IAAA,OACC,GAAA9L,IAAA,qBAAAuM,mBACDvL,GAAAuL,mBAEA,yCAAAA,iBAAAlV,WAoBAwU,GAJC,qBAAAW,cAAAxL,GAAAwL,cAID,WACAA,aAAAP,KAIA,WACAK,WAAAL,GAAA,QAzBA,CAIA,IAAAQ,GAAA,EACAC,GAAA,IAAAH,iBAAAN,IACAU,GAAAC,SAAAC,eAAAjV,OAAA6U,KACAC,GAAAtG,QAAAuG,GAAA,CACAG,eAAA,IAEAjB,GAAA,WACAY,OAAA,KACAE,GAAA5J,KAAAnL,OAAA6U,KAEAX,IAAA,EAeA,SAAAiB,GAAAC,EAAAnS,GACA,IAAAoS,EAiBA,GAhBAlB,GAAA7J,KAAA,WACA,GAAA8K,EACA,IACAA,EAAA7X,KAAA0F,GACO,MAAA4B,IACPsO,GAAAtO,GAAA5B,EAAA,iBAEKoS,GACLA,EAAApS,KAGAmR,KACAA,IAAA,EACAH,OAGAmB,GAAA,qBAAAb,QACA,WAAAA,QAAA,SAAAE,GACAY,EAAAZ,IAiGA,IAAAa,GAAA,IAAAhM,GAOA,SAAAiM,GAAA1V,GACA2V,GAAA3V,EAAAyV,IACAA,GAAAxL,QAGA,SAAA0L,GAAA3V,EAAA4V,GACA,IAAArU,EAAA6D,EACAyQ,EAAAnV,MAAAC,QAAAX,GACA,MAAA6V,IAAArW,EAAAQ,IAAAlB,OAAAgX,SAAA9V,iBAAAoL,IAAA,CAGA,GAAApL,EAAA6N,OAAA,CACA,IAAAkI,EAAA/V,EAAA6N,OAAAE,IAAA1D,GACA,GAAAuL,EAAA5L,IAAA+L,GACA,OAEAH,EAAAhY,IAAAmY,GAEA,GAAAF,EAAA,CACAtU,EAAAvB,EAAAwB,OACA,MAAAD,IAAiBoU,GAAA3V,EAAAuB,GAAAqU,OACd,CACHxQ,EAAAtG,OAAAsG,KAAApF,GACAuB,EAAA6D,EAAA5D,OACA,MAAAD,IAAiBoU,GAAA3V,EAAAoF,EAAA7D,IAAAqU,KA6BjB,IAAAI,GAAA5T,EAAA,SAAAgP,GACA,IAAA6E,EAAA,MAAA7E,EAAArO,OAAA,GACAqO,EAAA6E,EAAA7E,EAAApO,MAAA,GAAAoO,EACA,IAAA8E,EAAA,MAAA9E,EAAArO,OAAA,GACAqO,EAAA8E,EAAA9E,EAAApO,MAAA,GAAAoO,EACA,IAAAwC,EAAA,MAAAxC,EAAArO,OAAA,GAEA,OADAqO,EAAAwC,EAAAxC,EAAApO,MAAA,GAAAoO,EACA,CACAA,OACA7L,KAAA2Q,EACAtC,UACAqC,aAIA,SAAAE,GAAAC,EAAAhG,GACA,SAAAiG,IACA,IAAAC,EAAA9S,UAEA4S,EAAAC,EAAAD,IACA,IAAA1V,MAAAC,QAAAyV,GAOA,OAAAtC,GAAAsC,EAAA,KAAA5S,UAAA4M,EAAA,gBALA,IADA,IAAAnD,EAAAmJ,EAAApT,QACAzB,EAAA,EAAqBA,EAAA0L,EAAAzL,OAAmBD,IACxCuS,GAAA7G,EAAA1L,GAAA,KAAA+U,EAAAlG,EAAA,gBAQA,OADAiG,EAAAD,MACAC,EAGA,SAAAE,GACAC,EACAC,EACA7Y,EACA8Y,EACAC,EACAvG,GAEA,IAAAgB,EAAAqC,EAAAmD,EAAAC,EACA,IAAAzF,KAAAoF,EACA/C,EAAA+C,EAAApF,GACAwF,EAAAH,EAAArF,GACAyF,EAAAb,GAAA5E,GACApS,EAAAyU,KAKKzU,EAAA4X,IACL5X,EAAAyU,EAAA2C,OACA3C,EAAA+C,EAAApF,GAAA+E,GAAA1C,EAAArD,IAEAhR,EAAAyX,EAAAtR,QACAkO,EAAA+C,EAAApF,GAAAuF,EAAAE,EAAAzF,KAAAqC,EAAAoD,EAAAjD,UAEAhW,EAAAiZ,EAAAzF,KAAAqC,EAAAoD,EAAAjD,QAAAiD,EAAAZ,QAAAY,EAAAC,SACKrD,IAAAmD,IACLA,EAAAR,IAAA3C,EACA+C,EAAApF,GAAAwF,IAGA,IAAAxF,KAAAqF,EACAzX,EAAAwX,EAAApF,MACAyF,EAAAb,GAAA5E,GACAsF,EAAAG,EAAAzF,KAAAqF,EAAArF,GAAAyF,EAAAjD,UAOA,SAAAmD,GAAA9P,EAAA+P,EAAAja,GAIA,IAAAsZ,EAHApP,aAAAmE,KACAnE,IAAAqE,KAAAvO,OAAAkK,EAAAqE,KAAAvO,KAAA,KAGA,IAAAka,EAAAhQ,EAAA+P,GAEA,SAAAE,IACAna,EAAA0G,MAAApG,KAAAmG,WAGA7B,EAAA0U,EAAAD,IAAAc,GAGAlY,EAAAiY,GAEAZ,EAAAF,GAAA,CAAAe,IAGA/X,EAAA8X,EAAAb,MAAAhX,EAAA6X,EAAAE,SAEAd,EAAAY,EACAZ,EAAAD,IAAA3L,KAAAyM,IAGAb,EAAAF,GAAA,CAAAc,EAAAC,IAIAb,EAAAc,QAAA,EACAlQ,EAAA+P,GAAAX,EAKA,SAAAe,GACA9L,EACA9B,EACA6B,GAKA,IAAAkH,EAAA/I,EAAAxM,QAAA6T,MACA,IAAA7R,EAAAuT,GAAA,CAGA,IAAAlO,EAAA,GACAgT,EAAA/L,EAAA+L,MACAxG,EAAAvF,EAAAuF,MACA,GAAA1R,EAAAkY,IAAAlY,EAAA0R,GACA,QAAA1O,KAAAoQ,EAAA,CACA,IAAA+E,EAAApU,EAAAf,GAiBAoV,GAAAlT,EAAAwM,EAAA1O,EAAAmV,GAAA,IACAC,GAAAlT,EAAAgT,EAAAlV,EAAAmV,GAAA,GAGA,OAAAjT,GAGA,SAAAkT,GACAlT,EACAmT,EACArV,EACAmV,EACAG,GAEA,GAAAtY,EAAAqY,GAAA,CACA,GAAAtV,EAAAsV,EAAArV,GAKA,OAJAkC,EAAAlC,GAAAqV,EAAArV,GACAsV,UACAD,EAAArV,IAEA,EACK,GAAAD,EAAAsV,EAAAF,GAKL,OAJAjT,EAAAlC,GAAAqV,EAAAF,GACAG,UACAD,EAAAF,IAEA,EAGA,SAiBA,SAAAI,GAAAnM,GACA,QAAAhK,EAAA,EAAiBA,EAAAgK,EAAA/J,OAAqBD,IACtC,GAAAb,MAAAC,QAAA4K,EAAAhK,IACA,OAAAb,MAAAf,UAAArB,OAAAmF,MAAA,GAAA8H,GAGA,OAAAA,EAOA,SAAAoM,GAAApM,GACA,OAAAjM,EAAAiM,GACA,CAAAuB,GAAAvB,IACA7K,MAAAC,QAAA4K,GACAqM,GAAArM,QACArM,EAGA,SAAA2Y,GAAAhL,GACA,OAAA1N,EAAA0N,IAAA1N,EAAA0N,EAAArB,OAAAnM,EAAAwN,EAAAT,WAGA,SAAAwL,GAAArM,EAAAuM,GACA,IACAvW,EAAAqB,EAAAmV,EAAAC,EADA3T,EAAA,GAEA,IAAA9C,EAAA,EAAaA,EAAAgK,EAAA/J,OAAqBD,IAClCqB,EAAA2I,EAAAhK,GACAvC,EAAA4D,IAAA,mBAAAA,IACAmV,EAAA1T,EAAA7C,OAAA,EACAwW,EAAA3T,EAAA0T,GAEArX,MAAAC,QAAAiC,GACAA,EAAApB,OAAA,IACAoB,EAAAgV,GAAAhV,GAAAkV,GAAA,QAAAvW,GAEAsW,GAAAjV,EAAA,KAAAiV,GAAAG,KACA3T,EAAA0T,GAAAjL,GAAAkL,EAAAxM,KAAA5I,EAAA,GAAA4I,MACA5I,EAAAqV,SAEA5T,EAAAoG,KAAAhH,MAAAY,EAAAzB,IAEKtD,EAAAsD,GACLiV,GAAAG,GAIA3T,EAAA0T,GAAAjL,GAAAkL,EAAAxM,KAAA5I,GACO,KAAAA,GAEPyB,EAAAoG,KAAAqC,GAAAlK,IAGAiV,GAAAjV,IAAAiV,GAAAG,GAEA3T,EAAA0T,GAAAjL,GAAAkL,EAAAxM,KAAA5I,EAAA4I,OAGApM,EAAAmM,EAAA2M,WACA/Y,EAAAyD,EAAAyI,MACArM,EAAA4D,EAAAT,MACAhD,EAAA2Y,KACAlV,EAAAT,IAAA,UAAA2V,EAAA,IAAAvW,EAAA,MAEA8C,EAAAoG,KAAA7H,KAIA,OAAAyB,EAKA,SAAA8T,GAAA/H,GACA,IAAAa,EAAAb,EAAArS,SAAAkT,QACAA,IACAb,EAAAgI,UAAA,oBAAAnH,EACAA,EAAAvT,KAAA0S,GACAa,GAIA,SAAAoH,GAAAjI,GACA,IAAAzC,EAAA2K,GAAAlI,EAAArS,SAAAgT,OAAAX,GACAzC,IACAQ,IAAA,GACArP,OAAAsG,KAAAuI,GAAAN,QAAA,SAAAlL,GAYA4M,GAAAqB,EAAAjO,EAAAwL,EAAAxL,MAGAgM,IAAA,IAIA,SAAAmK,GAAAvH,EAAAX,GACA,GAAAW,EAAA,CAOA,IALA,IAAApD,EAAA7O,OAAAsC,OAAA,MACAgE,EAAAsE,GACAE,QAAAC,QAAAkH,GACAjS,OAAAsG,KAAA2L,GAEAxP,EAAA,EAAmBA,EAAA6D,EAAA5D,OAAiBD,IAAA,CACpC,IAAAY,EAAAiD,EAAA7D,GAEA,cAAAY,EAAA,CACA,IAAAoW,EAAAxH,EAAA5O,GAAA2N,KACA0I,EAAApI,EACA,MAAAoI,EAAA,CACA,GAAAA,EAAAJ,WAAAlW,EAAAsW,EAAAJ,UAAAG,GAAA,CACA5K,EAAAxL,GAAAqW,EAAAJ,UAAAG,GACA,MAEAC,IAAA9E,QAEA,IAAA8E,EACA,eAAAzH,EAAA5O,GAAA,CACA,IAAAsW,EAAA1H,EAAA5O,GAAA8Q,QACAtF,EAAAxL,GAAA,oBAAAsW,EACAA,EAAA/a,KAAA0S,GACAqI,OACmB,GAKnB,OAAA9K,GAWA,SAAA+K,GACAnN,EACAnO,GAEA,IAAAmO,MAAA/J,OACA,SAGA,IADA,IAAAmX,EAAA,GACApX,EAAA,EAAAgC,EAAAgI,EAAA/J,OAAsCD,EAAAgC,EAAOhC,IAAA,CAC7C,IAAAmL,EAAAnB,EAAAhK,GACA+J,EAAAoB,EAAApB,KAOA,GALAA,KAAA+L,OAAA/L,EAAA+L,MAAAuB,aACAtN,EAAA+L,MAAAuB,KAIAlM,EAAAtP,aAAAsP,EAAAb,YAAAzO,IACAkO,GAAA,MAAAA,EAAAsN,MAUAD,EAAA1F,UAAA0F,EAAA1F,QAAA,KAAAxI,KAAAiC,OATA,CACA,IAAA0E,EAAA9F,EAAAsN,KACAA,EAAAD,EAAAvH,KAAAuH,EAAAvH,GAAA,IACA,aAAA1E,EAAArB,IACAuN,EAAAnO,KAAAhH,MAAAmV,EAAAlM,EAAAnB,UAAA,IAEAqN,EAAAnO,KAAAiC,IAOA,QAAAmM,KAAAF,EACAA,EAAAE,GAAA9T,MAAA+T,YACAH,EAAAE,GAGA,OAAAF,EAGA,SAAAG,GAAAjM,GACA,OAAAA,EAAAT,YAAAS,EAAAlB,cAAA,MAAAkB,EAAArB,KAKA,SAAAuN,GACAJ,EACAK,EACAC,GAEA,IAAA5U,EACA6U,EAAApa,OAAAsG,KAAA4T,GAAAxX,OAAA,EACA2X,EAAAR,MAAAS,SAAAF,EACA/W,EAAAwW,KAAAU,KACA,GAAAV,EAEG,IAAAA,EAAAW,YAEH,OAAAX,EAAAW,YACG,GACHH,GACAF,GACAA,IAAApa,GACAsD,IAAA8W,EAAAI,OACAH,IACAD,EAAAM,WAIA,OAAAN,EAGA,QAAArI,KADAvM,EAAA,GACAsU,EACAA,EAAA/H,IAAA,MAAAA,EAAA,KACAvM,EAAAuM,GAAA4I,GAAAR,EAAApI,EAAA+H,EAAA/H,UAnBAvM,EAAA,GAwBA,QAAAoV,KAAAT,EACAS,KAAApV,IACAA,EAAAoV,GAAAC,GAAAV,EAAAS,IAWA,OANAd,GAAA7Z,OAAA+P,aAAA8J,KACA,EAAAW,YAAAjV,GAEA4C,EAAA5C,EAAA,UAAA8U,GACAlS,EAAA5C,EAAA,OAAAlC,GACA8E,EAAA5C,EAAA,aAAA6U,GACA7U,EAGA,SAAAmV,GAAAR,EAAA7W,EAAAE,GACA,IAAAiP,EAAA,WACA,IAAAjN,EAAAb,UAAAhC,OAAAa,EAAAoB,MAAA,KAAAD,WAAAnB,EAAA,IAIA,OAHAgC,KAAA,kBAAAA,IAAA3D,MAAAC,QAAA0D,GACA,CAAAA,GACAsT,GAAAtT,GACAA,IACA,IAAAA,EAAA7C,QACA,IAAA6C,EAAA7C,QAAA6C,EAAA,GAAA+H,gBACAlN,EACAmF,GAYA,OAPAhC,EAAAsX,OACA7a,OAAAqI,eAAA6R,EAAA7W,EAAA,CACA8G,IAAAqI,EACApK,YAAA,EACAG,cAAA,IAGAiK,EAGA,SAAAoI,GAAAf,EAAAxW,GACA,kBAAsB,OAAAwW,EAAAxW,IAQtB,SAAAyX,GACA5Z,EACAxD,GAEA,IAAAwH,EAAAzC,EAAAgC,EAAA6B,EAAAjD,EACA,GAAAzB,MAAAC,QAAAX,IAAA,kBAAAA,EAEA,IADAgE,EAAA,IAAAtD,MAAAV,EAAAwB,QACAD,EAAA,EAAAgC,EAAAvD,EAAAwB,OAA+BD,EAAAgC,EAAOhC,IACtCyC,EAAAzC,GAAA/E,EAAAwD,EAAAuB,WAEG,qBAAAvB,EAEH,IADAgE,EAAA,IAAAtD,MAAAV,GACAuB,EAAA,EAAeA,EAAAvB,EAASuB,IACxByC,EAAAzC,GAAA/E,EAAA+E,EAAA,EAAAA,QAEG,GAAA/B,EAAAQ,GACH,GAAA0J,IAAA1J,EAAA2J,OAAAkQ,UAAA,CACA7V,EAAA,GACA,IAAA6V,EAAA7Z,EAAA2J,OAAAkQ,YACAlM,EAAAkM,EAAAC,OACA,OAAAnM,EAAAoM,KACA/V,EAAAyG,KAAAjO,EAAAmR,EAAApO,MAAAyE,EAAAxC,SACAmM,EAAAkM,EAAAC,YAKA,IAFA1U,EAAAtG,OAAAsG,KAAApF,GACAgE,EAAA,IAAAtD,MAAA0E,EAAA5D,QACAD,EAAA,EAAAgC,EAAA6B,EAAA5D,OAAkCD,EAAAgC,EAAOhC,IACzCY,EAAAiD,EAAA7D,GACAyC,EAAAzC,GAAA/E,EAAAwD,EAAAmC,KAAAZ,GAQA,OAJApC,EAAA6E,KACAA,EAAA,IAEA,EAAAkU,UAAA,EACAlU,EAQA,SAAAgW,GACA5I,EACA6I,EACApJ,EACAqJ,GAEA,IACAC,EADAC,EAAA/c,KAAAgd,aAAAjJ,GAEAgJ,GACAvJ,KAAA,GACAqJ,IAOArJ,EAAA5M,IAAA,GAA8BiW,GAAArJ,IAE9BsJ,EAAAC,EAAAvJ,IAAAoJ,GAEAE,EAAA9c,KAAAid,OAAAlJ,IAAA6I,EAGA,IAAArP,EAAAiG,KAAA+H,KACA,OAAAhO,EACAvN,KAAAkd,eAAA,YAA4C3B,KAAAhO,GAAeuP,GAE3DA,EASA,SAAAK,GAAAnQ,GACA,OAAA4H,GAAA5U,KAAAU,SAAA,UAAAsM,GAAA,IAAA5F,EAKA,SAAAgW,GAAAC,EAAAC,GACA,OAAAja,MAAAC,QAAA+Z,IACA,IAAAA,EAAA3Y,QAAA4Y,GAEAD,IAAAC,EASA,SAAAC,GACAC,EACA1Y,EACA2Y,EACAC,EACAC,GAEA,IAAAC,EAAArV,EAAAS,SAAAlE,IAAA2Y,EACA,OAAAE,GAAAD,IAAAnV,EAAAS,SAAAlE,GACAsY,GAAAO,EAAAD,GACGE,EACHR,GAAAQ,EAAAJ,GACGE,EACH7X,EAAA6X,KAAA5Y,OADG,EAUH,SAAA+Y,GACA5P,EACAD,EACA9L,EACA4b,EACAC,GAEA,GAAA7b,EACA,GAAAC,EAAAD,GAKK,CAIL,IAAAiY,EAHA9W,MAAAC,QAAApB,KACAA,EAAA6E,EAAA7E,IAGA,IAAA8b,EAAA,SAAAlZ,GACA,GACA,UAAAA,GACA,UAAAA,GACAT,EAAAS,GAEAqV,EAAAlM,MACS,CACT,IAAAqF,EAAArF,EAAA+L,OAAA/L,EAAA+L,MAAA1G,KACA6G,EAAA2D,GAAAvV,EAAAe,YAAA0E,EAAAsF,EAAAxO,GACAmJ,EAAAgQ,WAAAhQ,EAAAgQ,SAAA,IACAhQ,EAAA+L,QAAA/L,EAAA+L,MAAA,IAEA,IAAAkE,EAAA9Y,EAAAN,GACAqZ,EAAAtY,EAAAf,GACA,KAAAoZ,KAAA/D,MAAAgE,KAAAhE,KACAA,EAAArV,GAAA5C,EAAA4C,GAEAiZ,GAAA,CACA,IAAA5E,EAAAlL,EAAAkL,KAAAlL,EAAAkL,GAAA,IACAA,EAAA,UAAArU,GAAA,SAAAsZ,GACAlc,EAAA4C,GAAAsZ,KAMA,QAAAtZ,KAAA5C,EAAA8b,EAAAlZ,QAGA,OAAAmJ,EAQA,SAAAoQ,GACA5Z,EACA6Z,GAEA,IAAAvZ,EAAA/E,KAAAue,eAAAve,KAAAue,aAAA,IACAC,EAAAzZ,EAAAN,GAGA,OAAA+Z,IAAAF,EACAE,GAGAA,EAAAzZ,EAAAN,GAAAzE,KAAAU,SAAAtB,gBAAAqF,GAAApE,KACAL,KAAAye,aACA,KACAze,MAEA0e,GAAAF,EAAA,aAAA/Z,GAAA,GACA+Z,GAOA,SAAAG,GACAH,EACA/Z,EACAK,GAGA,OADA4Z,GAAAF,EAAA,WAAA/Z,GAAAK,EAAA,IAAAA,EAAA,QACA0Z,EAGA,SAAAE,GACAF,EACA1Z,EACAmK,GAEA,GAAA5L,MAAAC,QAAAkb,GACA,QAAAta,EAAA,EAAmBA,EAAAsa,EAAAra,OAAiBD,IACpCsa,EAAAta,IAAA,kBAAAsa,EAAAta,IACA0a,GAAAJ,EAAAta,GAAAY,EAAA,IAAAZ,EAAA+K,QAIA2P,GAAAJ,EAAA1Z,EAAAmK,GAIA,SAAA2P,GAAApP,EAAA1K,EAAAmK,GACAO,EAAAX,UAAA,EACAW,EAAA1K,MACA0K,EAAAP,SAKA,SAAA4P,GAAA5Q,EAAA/L,GACA,GAAAA,EACA,GAAAM,EAAAN,GAKK,CACL,IAAAiX,EAAAlL,EAAAkL,GAAAlL,EAAAkL,GAAAvS,EAAA,GAA4CqH,EAAAkL,IAAA,GAC5C,QAAArU,KAAA5C,EAAA,CACA,IAAAnB,EAAAoY,EAAArU,GACAga,EAAA5c,EAAA4C,GACAqU,EAAArU,GAAA/D,EAAA,GAAAE,OAAAF,EAAA+d,WAIA,OAAA7Q,EAKA,SAAA8Q,GACAhG,EACA/R,EAEAgY,EACAC,GAEAjY,KAAA,CAAgB+U,SAAAiD,GAChB,QAAA9a,EAAA,EAAiBA,EAAA6U,EAAA5U,OAAgBD,IAAA,CACjC,IAAAqX,EAAAxC,EAAA7U,GACAb,MAAAC,QAAAiY,GACAwD,GAAAxD,EAAAvU,EAAAgY,GACKzD,IAELA,EAAAe,QACAf,EAAAvW,GAAAsX,OAAA,GAEAtV,EAAAuU,EAAAzW,KAAAyW,EAAAvW,IAMA,OAHAia,IACA,EAAAjD,KAAAiD,GAEAjY,EAKA,SAAAkY,GAAAC,EAAAC,GACA,QAAAlb,EAAA,EAAiBA,EAAAkb,EAAAjb,OAAmBD,GAAA,GACpC,IAAAY,EAAAsa,EAAAlb,GACA,kBAAAY,OACAqa,EAAAC,EAAAlb,IAAAkb,EAAAlb,EAAA,IASA,OAAAib,EAMA,SAAAE,GAAAnd,EAAAod,GACA,wBAAApd,EAAAod,EAAApd,IAKA,SAAAqd,GAAAhS,GACAA,EAAAiS,GAAAb,GACApR,EAAAkS,GAAAhc,EACA8J,EAAAmS,GAAAnd,EACAgL,EAAAoS,GAAApD,GACAhP,EAAAqS,GAAAjD,GACApP,EAAAsS,GAAAxY,EACAkG,EAAAuS,GAAA7X,EACAsF,EAAAwS,GAAA1B,GACA9Q,EAAAyS,GAAA7C,GACA5P,EAAA0S,GAAA1C,GACAhQ,EAAA2S,GAAArC,GACAtQ,EAAA4S,GAAA1Q,GACAlC,EAAA6S,GAAA7Q,GACAhC,EAAA8S,GAAAtB,GACAxR,EAAA+S,GAAAzB,GACAtR,EAAAgT,GAAArB,GACA3R,EAAAiT,GAAAnB,GAKA,SAAAoB,GACAxS,EACAuF,EACAtF,EACA/N,EACAgM,GAEA,IAKAuU,EALAC,EAAA3gB,KAEAL,EAAAwM,EAAAxM,QAIAkF,EAAA1E,EAAA,SACAugB,EAAAjf,OAAAsC,OAAA5D,GAEAugB,EAAAE,UAAAzgB,IAKAugB,EAAAvgB,EAEAA,IAAAygB,WAEA,IAAAC,EAAA9e,EAAApC,EAAAC,WACAkhB,GAAAD,EAEA7gB,KAAAiO,OACAjO,KAAAwT,QACAxT,KAAAkO,WACAlO,KAAAG,SACAH,KAAA+gB,UAAA9S,EAAAkL,IAAA3X,EACAxB,KAAAghB,WAAA/F,GAAAtb,EAAA+T,OAAAvT,GACAH,KAAAsb,MAAA,WAOA,OANAqF,EAAA1D,QACAvB,GACAzN,EAAAgT,YACAN,EAAA1D,OAAA5B,GAAAnN,EAAA/N,IAGAwgB,EAAA1D,QAGAxb,OAAAqI,eAAA9J,KAAA,eACA6J,YAAA,EACA+B,IAAA,WACA,OAAA8P,GAAAzN,EAAAgT,YAAAjhB,KAAAsb,YAKAuF,IAEA7gB,KAAAU,SAAAf,EAEAK,KAAAid,OAAAjd,KAAAsb,QACAtb,KAAAgd,aAAAtB,GAAAzN,EAAAgT,YAAAjhB,KAAAid,SAGAtd,EAAAG,SACAE,KAAAkhB,GAAA,SAAAjb,EAAAiB,EAAA3B,EAAAnE,GACA,IAAAuO,EAAAwR,GAAAT,EAAAza,EAAAiB,EAAA3B,EAAAnE,EAAA0f,GAKA,OAJAnR,IAAAtM,MAAAC,QAAAqM,KACAA,EAAAjB,UAAA/O,EAAAG,SACA6P,EAAAnB,UAAArO,GAEAwP,GAGA3P,KAAAkhB,GAAA,SAAAjb,EAAAiB,EAAA3B,EAAAnE,GAAqC,OAAA+f,GAAAT,EAAAza,EAAAiB,EAAA3B,EAAAnE,EAAA0f,IAMrC,SAAAM,GACAjV,EACAgJ,EACAlH,EACAyS,EACAxS,GAEA,IAAAvO,EAAAwM,EAAAxM,QACA6T,EAAA,GACA0B,EAAAvV,EAAA6T,MACA,GAAA1R,EAAAoT,GACA,QAAApQ,KAAAoQ,EACA1B,EAAA1O,GAAAmQ,GAAAnQ,EAAAoQ,EAAAC,GAAA3T,QAGAM,EAAAmM,EAAA+L,QAA4BqH,GAAA7N,EAAAvF,EAAA+L,OAC5BlY,EAAAmM,EAAAuF,QAA4B6N,GAAA7N,EAAAvF,EAAAuF,OAG5B,IAAA8N,EAAA,IAAAb,GACAxS,EACAuF,EACAtF,EACAwS,EACAvU,GAGAwD,EAAAhQ,EAAAR,OAAAkB,KAAA,KAAAihB,EAAAJ,GAAAI,GAEA,GAAA3R,aAAA5B,GACA,OAAAwT,GAAA5R,EAAA1B,EAAAqT,EAAAnhB,OAAAR,EAAA2hB,GACG,GAAAje,MAAAC,QAAAqM,GAAA,CAGH,IAFA,IAAA6R,EAAAlH,GAAA3K,IAAA,GACA3I,EAAA,IAAA3D,MAAAme,EAAArd,QACAD,EAAA,EAAmBA,EAAAsd,EAAArd,OAAmBD,IACtC8C,EAAA9C,GAAAqd,GAAAC,EAAAtd,GAAA+J,EAAAqT,EAAAnhB,OAAAR,EAAA2hB,GAEA,OAAAta,GAIA,SAAAua,GAAA5R,EAAA1B,EAAAyS,EAAA/gB,EAAA2hB,GAIA,IAAAG,EAAA/R,GAAAC,GASA,OARA8R,EAAAjT,UAAAkS,EACAe,EAAAhT,UAAA9O,EAIAsO,EAAAsN,QACAkG,EAAAxT,OAAAwT,EAAAxT,KAAA,KAAmCsN,KAAAtN,EAAAsN,MAEnCkG,EAGA,SAAAJ,GAAAxa,EAAA4L,GACA,QAAA3N,KAAA2N,EACA5L,EAAAzB,EAAAN,IAAA2N,EAAA3N,GA7DAya,GAAAkB,GAAAne,WA0EA,IAAAof,GAAA,CACAC,KAAA,SAAAhS,EAAAiS,GACA,GACAjS,EAAAhB,oBACAgB,EAAAhB,kBAAAkT,cACAlS,EAAA1B,KAAA6T,UACA,CAEA,IAAAC,EAAApS,EACA+R,GAAAM,SAAAD,SACK,CACL,IAAA1S,EAAAM,EAAAhB,kBAAAsT,GACAtS,EACAuS,IAEA7S,EAAA8S,OAAAP,EAAAjS,EAAAvB,SAAAvM,EAAA+f,KAIAI,SAAA,SAAAI,EAAAzS,GACA,IAAAhQ,EAAAgQ,EAAAtB,iBACAgB,EAAAM,EAAAhB,kBAAAyT,EAAAzT,kBACA0T,GACAhT,EACA1P,EAAAwV,UACAxV,EAAAohB,UACApR,EACAhQ,EAAAuO,WAIAoU,OAAA,SAAA3S,GACA,IAAA5P,EAAA4P,EAAA5P,QACA4O,EAAAgB,EAAAhB,kBACAA,EAAA4T,aACA5T,EAAA4T,YAAA,EACAC,GAAA7T,EAAA,YAEAgB,EAAA1B,KAAA6T,YACA/hB,EAAAwiB,WAMAE,GAAA9T,GAEA+T,GAAA/T,GAAA,KAKAgU,QAAA,SAAAhT,GACA,IAAAhB,EAAAgB,EAAAhB,kBACAA,EAAAkT,eACAlS,EAAA1B,KAAA6T,UAGAc,GAAAjU,GAAA,GAFAA,EAAAkU,cAQAC,GAAArhB,OAAAsG,KAAA2Z,IAEA,SAAAqB,GACA5W,EACA8B,EACAlO,EACAmO,EACAF,GAEA,IAAArM,EAAAwK,GAAA,CAIA,IAAA6W,EAAAjjB,EAAAW,SAAA6T,MASA,GANApS,EAAAgK,KACAA,EAAA6W,EAAApc,OAAAuF,IAKA,oBAAAA,EAAA,CAQA,IAAAmC,EACA,GAAA3M,EAAAwK,EAAA8W,OACA3U,EAAAnC,EACAA,EAAA+W,GAAA5U,EAAA0U,QACAnhB,IAAAsK,GAIA,OAAAgX,GACA7U,EACAL,EACAlO,EACAmO,EACAF,GAKAC,KAAA,GAIAmV,GAAAjX,GAGArK,EAAAmM,EAAAoV,QACAC,GAAAnX,EAAAxM,QAAAsO,GAIA,IAAAkH,EAAA4E,GAAA9L,EAAA9B,EAAA6B,GAGA,GAAAjM,EAAAoK,EAAAxM,QAAAE,YACA,OAAAuhB,GAAAjV,EAAAgJ,EAAAlH,EAAAlO,EAAAmO,GAKA,IAAA6S,EAAA9S,EAAAkL,GAKA,GAFAlL,EAAAkL,GAAAlL,EAAAsV,SAEAxhB,EAAAoK,EAAAxM,QAAA6jB,UAAA,CAKA,IAAAjI,EAAAtN,EAAAsN,KACAtN,EAAA,GACAsN,IACAtN,EAAAsN,QAKAkI,GAAAxV,GAGA,IAAA8F,EAAA5H,EAAAxM,QAAAoU,MAAA/F,EACA2B,EAAA,IAAA5B,GACA,iBAAA5B,EAAA,KAAA4H,EAAA,IAAAA,EAAA,IACA9F,OAAApM,gBAAA9B,EACA,CAAKoM,OAAAgJ,YAAA4L,YAAA/S,MAAAE,YACLI,GAGA,OAAAqB,IAGA,SAAAsS,GACAtS,EACAxP,GAEA,IAAAR,EAAA,CACA+jB,cAAA,EACAC,aAAAhU,EACAxP,UAGAyjB,EAAAjU,EAAA1B,KAAA2V,eAKA,OAJA9hB,EAAA8hB,KACAjkB,EAAAR,OAAAykB,EAAAzkB,OACAQ,EAAAP,gBAAAwkB,EAAAxkB,iBAEA,IAAAuQ,EAAAtB,iBAAAlC,KAAAxM,GAGA,SAAA8jB,GAAAxV,GAEA,IADA,IAAAmF,EAAAnF,EAAAvO,OAAAuO,EAAAvO,KAAA,IACAwE,EAAA,EAAiBA,EAAA4e,GAAA3e,OAAyBD,IAAA,CAC1C,IAAAY,EAAAge,GAAA5e,GACAnD,EAAAqS,EAAAtO,GACA+e,EAAAnC,GAAA5c,GACA/D,IAAA8iB,GAAA9iB,KAAA+iB,UACA1Q,EAAAtO,GAAA/D,EAAAgjB,GAAAF,EAAA9iB,GAAA8iB,IAKA,SAAAE,GAAAC,EAAAC,GACA,IAAAnK,EAAA,SAAA7T,EAAAiB,GAEA8c,EAAA/d,EAAAiB,GACA+c,EAAAhe,EAAAiB,IAGA,OADA4S,EAAAgK,SAAA,EACAhK,EAKA,SAAAwJ,GAAA3jB,EAAAsO,GACA,IAAAmH,EAAAzV,EAAA0jB,OAAA1jB,EAAA0jB,MAAAjO,MAAA,QACAoE,EAAA7Z,EAAA0jB,OAAA1jB,EAAA0jB,MAAA7J,OAAA,SACGvL,EAAA+L,QAAA/L,EAAA+L,MAAA,KAA+B5E,GAAAnH,EAAAoV,MAAAnhB,MAClC,IAAAiX,EAAAlL,EAAAkL,KAAAlL,EAAAkL,GAAA,IACApY,EAAAoY,EAAAK,GACA0K,EAAAjW,EAAAoV,MAAAa,SACApiB,EAAAf,IAEAsC,MAAAC,QAAAvC,IACA,IAAAA,EAAA2D,QAAAwf,GACAnjB,IAAAmjB,KAEA/K,EAAAK,GAAA,CAAA0K,GAAAjjB,OAAAF,IAGAoY,EAAAK,GAAA0K,EAMA,IAAAC,GAAA,EACAC,GAAA,EAIA,SAAAjD,GACAphB,EACAiO,EACAC,EACAC,EACAmW,EACAC,GAUA,OARAjhB,MAAAC,QAAA2K,IAAAhM,EAAAgM,MACAoW,EAAAnW,EACAA,EAAAD,EACAA,OAAApM,GAEAE,EAAAuiB,KACAD,EAAAD,IAEAG,GAAAxkB,EAAAiO,EAAAC,EAAAC,EAAAmW,GAGA,SAAAE,GACAxkB,EACAiO,EACAC,EACAC,EACAmW,GAEA,GAAAviB,EAAAmM,IAAAnM,EAAA,EAAA0O,QAMA,OAAAjB,KAMA,GAHAzN,EAAAmM,IAAAnM,EAAAmM,EAAAuW,MACAxW,EAAAC,EAAAuW,KAEAxW,EAEA,OAAAuB,KA2BA,IAAAI,EAAApB,EAEApC,GAdA9I,MAAAC,QAAA4K,IACA,oBAAAA,EAAA,KAEAD,KAAA,GACAA,EAAAgT,YAAA,CAAwBrL,QAAA1H,EAAA,IACxBA,EAAA/J,OAAA,GAEAkgB,IAAAD,GACAlW,EAAAoM,GAAApM,GACGmW,IAAAF,KACHjW,EAAAmM,GAAAnM,IAGA,kBAAAF,IAEAO,EAAAxO,EAAAE,QAAAF,EAAAE,OAAAsO,IAAAhG,EAAAa,gBAAA4E,GAGA2B,EAFApH,EAAAU,cAAA+E,GAEA,IAAAD,GACAxF,EAAAc,qBAAA2E,GAAAC,EAAAC,OACArM,SAAA9B,GAEKkO,KAAAwW,MAAA3iB,EAAAqK,EAAAyI,GAAA7U,EAAAW,SAAA,aAAAsN,IAOL,IAAAD,GACAC,EAAAC,EAAAC,OACArM,SAAA9B,GAPAgjB,GAAA5W,EAAA8B,EAAAlO,EAAAmO,EAAAF,IAYA2B,EAAAoT,GAAA/U,EAAAC,EAAAlO,EAAAmO,GAEA,OAAA7K,MAAAC,QAAAqM,GACAA,EACG7N,EAAA6N,IACH7N,EAAAyM,IAAoBmW,GAAA/U,EAAApB,GACpBzM,EAAAmM,IAAsB0W,GAAA1W,GACtB0B,GAEAJ,KAIA,SAAAmV,GAAA/U,EAAApB,EAAAqW,GAOA,GANAjV,EAAApB,KACA,kBAAAoB,EAAA3B,MAEAO,OAAA1M,EACA+iB,GAAA,GAEA9iB,EAAA6N,EAAAzB,UACA,QAAAhK,EAAA,EAAAgC,EAAAyJ,EAAAzB,SAAA/J,OAA8CD,EAAAgC,EAAOhC,IAAA,CACrD,IAAAmL,EAAAM,EAAAzB,SAAAhK,GACApC,EAAAuN,EAAArB,OACArM,EAAA0N,EAAAd,KAAAxM,EAAA6iB,IAAA,QAAAvV,EAAArB,MACA0W,GAAArV,EAAAd,EAAAqW,IASA,SAAAD,GAAA1W,GACA9L,EAAA8L,EAAA4W,QACAxM,GAAApK,EAAA4W,OAEA1iB,EAAA8L,EAAA6W,QACAzM,GAAApK,EAAA6W,OAMA,SAAAC,GAAAhS,GACAA,EAAAiS,OAAA,KACAjS,EAAAwL,aAAA,KACA,IAAA5e,EAAAoT,EAAArS,SACAukB,EAAAlS,EAAA9S,OAAAN,EAAAgkB,aACArC,EAAA2D,KAAAllB,QACAgT,EAAAkK,OAAA5B,GAAA1b,EAAAulB,gBAAA5D,GACAvO,EAAAiK,aAAAxb,EAKAuR,EAAAmO,GAAA,SAAAjb,EAAAiB,EAAA3B,EAAAnE,GAAiC,OAAA+f,GAAApO,EAAA9M,EAAAiB,EAAA3B,EAAAnE,GAAA,IAGjC2R,EAAAmK,eAAA,SAAAjX,EAAAiB,EAAA3B,EAAAnE,GAA6C,OAAA+f,GAAApO,EAAA9M,EAAAiB,EAAA3B,EAAAnE,GAAA,IAI7C,IAAA+jB,EAAAF,KAAAhX,KAWAyD,GAAAqB,EAAA,SAAAoS,KAAAnL,OAAAxY,EAAA,SACAkQ,GAAAqB,EAAA,aAAApT,EAAAylB,kBAAA5jB,EAAA,SAIA,IAkQA+L,GAlQA8X,GAAA,KAEA,SAAAC,GAAAC,GAEAhG,GAAAgG,EAAAjjB,WAEAijB,EAAAjjB,UAAAkjB,UAAA,SAAAxgB,GACA,OAAAiT,GAAAjT,EAAAhF,OAGAulB,EAAAjjB,UAAAmjB,QAAA,WACA,IAiBA9V,EAjBAoD,EAAA/S,KACA0lB,EAAA3S,EAAArS,SACAvB,EAAAumB,EAAAvmB,OACAwkB,EAAA+B,EAAA/B,aAEAA,IACA5Q,EAAAiK,aAAAtB,GACAiI,EAAA1V,KAAAgT,YACAlO,EAAAkK,OACAlK,EAAAiK,eAMAjK,EAAA9S,OAAA0jB,EAGA,IAIA0B,GAAAtS,EACApD,EAAAxQ,EAAAkB,KAAA0S,EAAA0L,aAAA1L,EAAAmK,gBACK,MAAAvV,IACLsO,GAAAtO,GAAAoL,EAAA,UAYApD,EAAAoD,EAAAiS,OAEK,QACLK,GAAA,KAmBA,OAhBAhiB,MAAAC,QAAAqM,IAAA,IAAAA,EAAAxL,SACAwL,IAAA,IAGAA,aAAA5B,KAQA4B,EAAAJ,MAGAI,EAAAxP,OAAAwjB,EACAhU,GAMA,SAAAgW,GAAAC,EAAAC,GAOA,OALAD,EAAAE,YACAzZ,IAAA,WAAAuZ,EAAAtZ,OAAAyZ,gBAEAH,IAAAhQ,SAEAzT,EAAAyjB,GACAC,EAAAjf,OAAAgf,GACAA,EAGA,SAAAzC,GACA6C,EACA/X,EACAlO,EACAmO,EACAF,GAEA,IAAAwB,EAAAD,KAGA,OAFAC,EAAAlB,aAAA0X,EACAxW,EAAAN,UAAA,CAAoBjB,OAAAlO,UAAAmO,WAAAF,OACpBwB,EAGA,SAAA0T,GACA8C,EACAhD,GAEA,GAAAjhB,EAAAikB,EAAAlP,QAAAhV,EAAAkkB,EAAAC,WACA,OAAAD,EAAAC,UAGA,GAAAnkB,EAAAkkB,EAAAE,UACA,OAAAF,EAAAE,SAGA,IAAAC,EAAAd,GAMA,GALAc,GAAArkB,EAAAkkB,EAAAI,UAAA,IAAAJ,EAAAI,OAAA1hB,QAAAyhB,IAEAH,EAAAI,OAAAhZ,KAAA+Y,GAGApkB,EAAAikB,EAAAK,UAAAvkB,EAAAkkB,EAAAM,aACA,OAAAN,EAAAM,YAGA,GAAAH,IAAArkB,EAAAkkB,EAAAI,QAAA,CACA,IAAAA,EAAAJ,EAAAI,OAAA,CAAAD,GACAI,GAAA,EACAC,EAAA,KACAC,EAAA,KAEK,EAAAC,IAAA,4BAA2C,OAAApiB,EAAA8hB,EAAAD,KAEhD,IAAAQ,EAAA,SAAAC,GACA,QAAA1iB,EAAA,EAAAgC,EAAAkgB,EAAAjiB,OAAwCD,EAAAgC,EAAOhC,IAC/CkiB,EAAAliB,GAAA2iB,eAGAD,IACAR,EAAAjiB,OAAA,EACA,OAAAqiB,IACAM,aAAAN,GACAA,EAAA,MAEA,OAAAC,IACAK,aAAAL,GACAA,EAAA,QAKAlP,EAAArP,EAAA,SAAAlB,GAEAgf,EAAAE,SAAAP,GAAA3e,EAAAgc,GAGAuD,EAGAH,EAAAjiB,OAAA,EAFAwiB,GAAA,KAMAI,EAAA7e,EAAA,SAAA8e,GAKAllB,EAAAkkB,EAAAC,aACAD,EAAAlP,OAAA,EACA6P,GAAA,MAIA3f,EAAAgf,EAAAzO,EAAAwP,GA+CA,OA7CA5kB,EAAA6E,KACA9D,EAAA8D,GAEArF,EAAAqkB,EAAAE,WACAlf,EAAA7D,KAAAoU,EAAAwP,GAEO7jB,EAAA8D,EAAAigB,aACPjgB,EAAAigB,UAAA9jB,KAAAoU,EAAAwP,GAEAjlB,EAAAkF,EAAA8P,SACAkP,EAAAC,UAAAN,GAAA3e,EAAA8P,MAAAkM,IAGAlhB,EAAAkF,EAAAqf,WACAL,EAAAM,YAAAX,GAAA3e,EAAAqf,QAAArD,GACA,IAAAhc,EAAAkgB,MACAlB,EAAAK,SAAA,EAEAG,EAAAhP,WAAA,WACAgP,EAAA,KACA7kB,EAAAqkB,EAAAE,WAAAvkB,EAAAqkB,EAAAlP,SACAkP,EAAAK,SAAA,EACAM,GAAA,KAEa3f,EAAAkgB,OAAA,MAIbplB,EAAAkF,EAAAmgB,WACAV,EAAAjP,WAAA,WACAiP,EAAA,KACA9kB,EAAAqkB,EAAAE,WACAa,EAGA,OAGW/f,EAAAmgB,YAKXZ,GAAA,EAEAP,EAAAK,QACAL,EAAAM,YACAN,EAAAE,UAMA,SAAA/W,GAAAK,GACA,OAAAA,EAAAT,WAAAS,EAAAlB,aAKA,SAAA8Y,GAAAlZ,GACA,GAAA7K,MAAAC,QAAA4K,GACA,QAAAhK,EAAA,EAAmBA,EAAAgK,EAAA/J,OAAqBD,IAAA,CACxC,IAAAqB,EAAA2I,EAAAhK,GACA,GAAApC,EAAAyD,KAAAzD,EAAAyD,EAAA8I,mBAAAc,GAAA5J,IACA,OAAAA,GAUA,SAAA8hB,GAAAtU,GACAA,EAAAuU,QAAA7lB,OAAAsC,OAAA,MACAgP,EAAAwU,eAAA,EAEA,IAAAxG,EAAAhO,EAAArS,SAAA0kB,iBACArE,GACAyG,GAAAzU,EAAAgO,GAMA,SAAAxgB,GAAAiZ,EAAAxU,GACAuI,GAAAmZ,IAAAlN,EAAAxU,GAGA,SAAAyiB,GAAAjO,EAAAxU,GACAuI,GAAAma,KAAAlO,EAAAxU,GAGA,SAAAsU,GAAAE,EAAAxU,GACA,IAAA2iB,EAAApa,GACA,gBAAAqa,IACA,IAAA5gB,EAAAhC,EAAAoB,MAAA,KAAAD,WACA,OAAAa,GACA2gB,EAAAD,KAAAlO,EAAAoO,IAKA,SAAAJ,GACAzU,EACAgO,EACA8G,GAEAta,GAAAwF,EACAmG,GAAA6H,EAAA8G,GAAA,GAA+CtnB,GAAAknB,GAAAnO,GAAAvG,GAC/CxF,QAAA1L,EAGA,SAAAimB,GAAAvC,GACA,IAAAwC,EAAA,SACAxC,EAAAjjB,UAAAokB,IAAA,SAAAlN,EAAAxU,GACA,IAAA+N,EAAA/S,KACA,GAAAqD,MAAAC,QAAAkW,GACA,QAAAtV,EAAA,EAAAgC,EAAAsT,EAAArV,OAAuCD,EAAAgC,EAAOhC,IAC9C6O,EAAA2T,IAAAlN,EAAAtV,GAAAc,QAGA+N,EAAAuU,QAAA9N,KAAAzG,EAAAuU,QAAA9N,GAAA,KAAApM,KAAApI,GAGA+iB,EAAA1d,KAAAmP,KACAzG,EAAAwU,eAAA,GAGA,OAAAxU,GAGAwS,EAAAjjB,UAAA0lB,MAAA,SAAAxO,EAAAxU,GACA,IAAA+N,EAAA/S,KACA,SAAAmZ,IACApG,EAAA2U,KAAAlO,EAAAL,GACAnU,EAAAoB,MAAA2M,EAAA5M,WAIA,OAFAgT,EAAAnU,KACA+N,EAAA2T,IAAAlN,EAAAL,GACApG,GAGAwS,EAAAjjB,UAAAolB,KAAA,SAAAlO,EAAAxU,GACA,IAAA+N,EAAA/S,KAEA,IAAAmG,UAAAhC,OAEA,OADA4O,EAAAuU,QAAA7lB,OAAAsC,OAAA,MACAgP,EAGA,GAAA1P,MAAAC,QAAAkW,GAAA,CACA,QAAAyO,EAAA,EAAA/hB,EAAAsT,EAAArV,OAAyC8jB,EAAA/hB,EAAS+hB,IAClDlV,EAAA2U,KAAAlO,EAAAyO,GAAAjjB,GAEA,OAAA+N,EAGA,IASAmF,EATAgQ,EAAAnV,EAAAuU,QAAA9N,GACA,IAAA0O,EACA,OAAAnV,EAEA,IAAA/N,EAEA,OADA+N,EAAAuU,QAAA9N,GAAA,KACAzG,EAIA,IAAA7O,EAAAgkB,EAAA/jB,OACA,MAAAD,IAEA,GADAgU,EAAAgQ,EAAAhkB,GACAgU,IAAAlT,GAAAkT,EAAAlT,OAAA,CACAkjB,EAAAvjB,OAAAT,EAAA,GACA,MAGA,OAAA6O,GAGAwS,EAAAjjB,UAAA6lB,MAAA,SAAA3O,GACA,IAAAzG,EAAA/S,KAaAkoB,EAAAnV,EAAAuU,QAAA9N,GACA,GAAA0O,EAAA,CACAA,IAAA/jB,OAAA,EAAAsC,EAAAyhB,KAGA,IAFA,IAAA/X,EAAA1J,EAAAN,UAAA,GACAgQ,EAAA,sBAAAqD,EAAA,IACAtV,EAAA,EAAAgC,EAAAgiB,EAAA/jB,OAAqCD,EAAAgC,EAAOhC,IAC5CuS,GAAAyR,EAAAhkB,GAAA6O,EAAA5C,EAAA4C,EAAAoD,GAGA,OAAApD,GAMA,IAAAmP,GAAA,KAGA,SAAAkG,GAAArV,GACA,IAAAsV,EAAAnG,GAEA,OADAA,GAAAnP,EACA,WACAmP,GAAAmG,GAIA,SAAAC,GAAAvV,GACA,IAAApT,EAAAoT,EAAArS,SAGAP,EAAAR,EAAAQ,OACA,GAAAA,IAAAR,EAAA6jB,SAAA,CACA,MAAArjB,EAAAO,SAAA8iB,UAAArjB,EAAAkW,QACAlW,IAAAkW,QAEAlW,EAAAooB,UAAAnb,KAAA2F,GAGAA,EAAAsD,QAAAlW,EACA4S,EAAAtS,MAAAN,IAAAM,MAAAsS,EAEAA,EAAAwV,UAAA,GACAxV,EAAAyV,MAAA,GAEAzV,EAAA0V,SAAA,KACA1V,EAAA2V,UAAA,KACA3V,EAAA4V,iBAAA,EACA5V,EAAAwP,YAAA,EACAxP,EAAA8O,cAAA,EACA9O,EAAA6V,mBAAA,EAGA,SAAAC,GAAAtD,GACAA,EAAAjjB,UAAAwmB,QAAA,SAAAnZ,EAAAiS,GACA,IAAA7O,EAAA/S,KACA+oB,EAAAhW,EAAAiW,IACAC,EAAAlW,EAAAiS,OACAkE,EAAAd,GAAArV,GACAA,EAAAiS,OAAArV,EAQAoD,EAAAiW,IALAC,EAKAlW,EAAAoW,UAAAF,EAAAtZ,GAHAoD,EAAAoW,UAAApW,EAAAiW,IAAArZ,EAAAiS,GAAA,GAKAsH,IAEAH,IACAA,EAAAK,QAAA,MAEArW,EAAAiW,MACAjW,EAAAiW,IAAAI,QAAArW,GAGAA,EAAA9S,QAAA8S,EAAAsD,SAAAtD,EAAA9S,SAAA8S,EAAAsD,QAAA2O,SACAjS,EAAAsD,QAAA2S,IAAAjW,EAAAiW,MAMAzD,EAAAjjB,UAAAukB,aAAA,WACA,IAAA9T,EAAA/S,KACA+S,EAAA0V,UACA1V,EAAA0V,SAAA/a,UAIA6X,EAAAjjB,UAAAugB,SAAA,WACA,IAAA9P,EAAA/S,KACA,IAAA+S,EAAA6V,kBAAA,CAGApG,GAAAzP,EAAA,iBACAA,EAAA6V,mBAAA,EAEA,IAAAzoB,EAAA4S,EAAAsD,SACAlW,KAAAyoB,mBAAA7V,EAAArS,SAAA8iB,UACAlf,EAAAnE,EAAAooB,UAAAxV,GAGAA,EAAA0V,UACA1V,EAAA0V,SAAAY,WAEA,IAAAnlB,EAAA6O,EAAAuW,UAAAnlB,OACA,MAAAD,IACA6O,EAAAuW,UAAAplB,GAAAmlB,WAIAtW,EAAAwW,MAAA/Y,QACAuC,EAAAwW,MAAA/Y,OAAAQ,UAGA+B,EAAA8O,cAAA,EAEA9O,EAAAoW,UAAApW,EAAAiS,OAAA,MAEAxC,GAAAzP,EAAA,aAEAA,EAAA2U,OAEA3U,EAAAiW,MACAjW,EAAAiW,IAAAI,QAAA,MAGArW,EAAA9S,SACA8S,EAAA9S,OAAAE,OAAA,QAKA,SAAAqpB,GACAzW,EACA0W,EACA7H,GAyBA,IAAA8H,EA2CA,OAlEA3W,EAAAiW,IAAAS,EACA1W,EAAArS,SAAAvB,SACA4T,EAAArS,SAAAvB,OAAAoQ,IAmBAiT,GAAAzP,EAAA,eAsBA2W,EAAA,WACA3W,EAAA+V,QAAA/V,EAAA0S,UAAA7D,IAOA,IAAA+H,GAAA5W,EAAA2W,EAAAziB,EAAA,CACA2iB,OAAA,WACA7W,EAAAwP,aAAAxP,EAAA8O,cACAW,GAAAzP,EAAA,mBAGG,GACH6O,GAAA,EAIA,MAAA7O,EAAA9S,SACA8S,EAAAwP,YAAA,EACAC,GAAAzP,EAAA,YAEAA,EAGA,SAAAsP,GACAtP,EACAoC,EACA4L,EACAkE,EACA4E,GAYA,IAAAC,EAAA7E,EAAAhX,KAAAgT,YACA8I,EAAAhX,EAAAiK,aACAgN,KACAF,MAAA/N,SACAgO,IAAAvoB,IAAAuoB,EAAAhO,SACA+N,GAAA/W,EAAAiK,aAAAhB,OAAA8N,EAAA9N,MAMAiO,KACAJ,GACA9W,EAAArS,SAAAwkB,iBACA8E,GAkBA,GAfAjX,EAAArS,SAAAijB,aAAAsB,EACAlS,EAAA9S,OAAAglB,EAEAlS,EAAAiS,SACAjS,EAAAiS,OAAA7kB,OAAA8kB,GAEAlS,EAAArS,SAAAwkB,gBAAA2E,EAKA9W,EAAAmX,OAAAjF,EAAAhX,KAAA+L,OAAAxY,EACAuR,EAAAoX,WAAApJ,GAAAvf,EAGA2T,GAAApC,EAAArS,SAAA8S,MAAA,CACA1C,IAAA,GAGA,IAFA,IAAA0C,EAAAT,EAAA8C,OACAuU,EAAArX,EAAArS,SAAA2pB,WAAA,GACAnmB,EAAA,EAAmBA,EAAAkmB,EAAAjmB,OAAqBD,IAAA,CACxC,IAAAY,EAAAslB,EAAAlmB,GACAgR,EAAAnC,EAAArS,SAAA8S,MACAA,EAAA1O,GAAAmQ,GAAAnQ,EAAAoQ,EAAAC,EAAApC,GAEAjC,IAAA,GAEAiC,EAAArS,SAAAyU,YAIA4L,KAAAvf,EACA,IAAAqmB,EAAA9U,EAAArS,SAAA0kB,iBACArS,EAAArS,SAAA0kB,iBAAArE,EACAyG,GAAAzU,EAAAgO,EAAA8G,GAGAoC,IACAlX,EAAAkK,OAAA5B,GAAAwO,EAAA5E,EAAAllB,SACAgT,EAAA8T,gBAQA,SAAAyD,GAAAvX,GACA,MAAAA,QAAAsD,SACA,GAAAtD,EAAA2V,UAAuB,SAEvB,SAGA,SAAAhG,GAAA3P,EAAAwX,GACA,GAAAA,GAEA,GADAxX,EAAA4V,iBAAA,EACA2B,GAAAvX,GACA,YAEG,GAAAA,EAAA4V,gBACH,OAEA,GAAA5V,EAAA2V,WAAA,OAAA3V,EAAA2V,UAAA,CACA3V,EAAA2V,WAAA,EACA,QAAAxkB,EAAA,EAAmBA,EAAA6O,EAAAwV,UAAApkB,OAAyBD,IAC5Cwe,GAAA3P,EAAAwV,UAAArkB,IAEAse,GAAAzP,EAAA,cAIA,SAAA6P,GAAA7P,EAAAwX,GACA,KAAAA,IACAxX,EAAA4V,iBAAA,GACA2B,GAAAvX,OAIAA,EAAA2V,UAAA,CACA3V,EAAA2V,WAAA,EACA,QAAAxkB,EAAA,EAAmBA,EAAA6O,EAAAwV,UAAApkB,OAAyBD,IAC5C0e,GAAA7P,EAAAwV,UAAArkB,IAEAse,GAAAzP,EAAA,gBAIA,SAAAyP,GAAAzP,EAAArT,GAEAkO,KACA,IAAA4c,EAAAzX,EAAArS,SAAAhB,GACAyW,EAAAzW,EAAA,QACA,GAAA8qB,EACA,QAAAtmB,EAAA,EAAAumB,EAAAD,EAAArmB,OAAwCD,EAAAumB,EAAOvmB,IAC/CuS,GAAA+T,EAAAtmB,GAAA6O,EAAA,KAAAA,EAAAoD,GAGApD,EAAAwU,eACAxU,EAAAoV,MAAA,QAAAzoB,GAEAmO,KAKA,IAEA6c,GAAA,GACAC,GAAA,GACAhe,GAAA,GAEAie,IAAA,EACAC,IAAA,EACApmB,GAAA,EAKA,SAAAqmB,KACArmB,GAAAimB,GAAAvmB,OAAAwmB,GAAAxmB,OAAA,EACAwI,GAAA,GAIAie,GAAAC,IAAA,EAQA,IAAAE,GAAA,EAGAC,GAAApjB,KAAAqjB,IAQA,GAAAxgB,IAAAS,GAAA,CACA,IAAAtC,GAAA8B,OAAA9B,YAEAA,IACA,oBAAAA,GAAAqiB,KACAD,KAAAlT,SAAAoT,YAAA,SAAAC,YAMAH,GAAA,WAA0B,OAAApiB,GAAAqiB,QAO1B,SAAAG,KAGA,IAAAC,EAAAre,EAcA,IAhBA+d,GAAAC,KACAH,IAAA,EAWAH,GAAAY,KAAA,SAAArlB,EAAAiB,GAA8B,OAAAjB,EAAA+G,GAAA9F,EAAA8F,KAI9BvI,GAAA,EAAiBA,GAAAimB,GAAAvmB,OAAsBM,KACvC4mB,EAAAX,GAAAjmB,IACA4mB,EAAAzB,QACAyB,EAAAzB,SAEA5c,EAAAqe,EAAAre,GACAL,GAAAK,GAAA,KACAqe,EAAAE,MAmBA,IAAAC,EAAAb,GAAAhlB,QACA8lB,EAAAf,GAAA/kB,QAEAmlB,KAGAY,GAAAF,GACAG,GAAAF,GAIA9iB,IAAAJ,EAAAI,UACAA,GAAAijB,KAAA,SAIA,SAAAD,GAAAjB,GACA,IAAAxmB,EAAAwmB,EAAAvmB,OACA,MAAAD,IAAA,CACA,IAAAmnB,EAAAX,EAAAxmB,GACA6O,EAAAsY,EAAAtY,GACAA,EAAA0V,WAAA4C,GAAAtY,EAAAwP,aAAAxP,EAAA8O,cACAW,GAAAzP,EAAA,YASA,SAAA0P,GAAA1P,GAGAA,EAAA2V,WAAA,EACAiC,GAAAvd,KAAA2F,GAGA,SAAA2Y,GAAAhB,GACA,QAAAxmB,EAAA,EAAiBA,EAAAwmB,EAAAvmB,OAAkBD,IACnCwmB,EAAAxmB,GAAAwkB,WAAA,EACAhG,GAAAgI,EAAAxmB,IAAA,GASA,SAAA2nB,GAAAR,GACA,IAAAre,EAAAqe,EAAAre,GACA,SAAAL,GAAAK,GAAA,CAEA,GADAL,GAAAK,IAAA,EACA6d,GAEK,CAGL,IAAA3mB,EAAAwmB,GAAAvmB,OAAA,EACA,MAAAD,EAAAO,IAAAimB,GAAAxmB,GAAA8I,GAAAqe,EAAAre,GACA9I,IAEAwmB,GAAA/lB,OAAAT,EAAA,IAAAmnB,QARAX,GAAAtd,KAAAie,GAWAT,KACAA,IAAA,EAMA3S,GAAAmT,MASA,IAAAU,GAAA,EAOAnC,GAAA,SACA5W,EACAgZ,EACA7T,EACAvY,EACAqsB,GAEAhsB,KAAA+S,KACAiZ,IACAjZ,EAAA0V,SAAAzoB,MAEA+S,EAAAuW,UAAAlc,KAAApN,MAEAL,GACAK,KAAAisB,OAAAtsB,EAAAssB,KACAjsB,KAAAksB,OAAAvsB,EAAAusB,KACAlsB,KAAAmsB,OAAAxsB,EAAAwsB,KACAnsB,KAAAumB,OAAA5mB,EAAA4mB,KACAvmB,KAAA4pB,OAAAjqB,EAAAiqB,QAEA5pB,KAAAisB,KAAAjsB,KAAAksB,KAAAlsB,KAAAmsB,KAAAnsB,KAAAumB,MAAA,EAEAvmB,KAAAkY,KACAlY,KAAAgN,KAAA8e,GACA9rB,KAAAosB,QAAA,EACApsB,KAAAqsB,MAAArsB,KAAAmsB,KACAnsB,KAAAssB,KAAA,GACAtsB,KAAAusB,QAAA,GACAvsB,KAAAwsB,OAAA,IAAApgB,GACApM,KAAAysB,UAAA,IAAArgB,GACApM,KAAA0sB,WAEA,GAEA,oBAAAX,EACA/rB,KAAA+R,OAAAga,GAEA/rB,KAAA+R,OAAA5H,EAAA4hB,GACA/rB,KAAA+R,SACA/R,KAAA+R,OAAA9K,IASAjH,KAAAkC,MAAAlC,KAAAmsB,UACAtqB,EACA7B,KAAA4L,OAMA+d,GAAArnB,UAAAsJ,IAAA,WAEA,IAAA1J,EADA0L,GAAA5N,MAEA,IAAA+S,EAAA/S,KAAA+S,GACA,IACA7Q,EAAAlC,KAAA+R,OAAA1R,KAAA0S,KACG,MAAApL,IACH,IAAA3H,KAAAksB,KAGA,MAAAvkB,GAFAsO,GAAAtO,GAAAoL,EAAA,uBAAA/S,KAAA,gBAIG,QAGHA,KAAAisB,MACA5T,GAAAnW,GAEA2L,KACA7N,KAAA2sB,cAEA,OAAAzqB,GAMAynB,GAAArnB,UAAAkL,OAAA,SAAAkD,GACA,IAAA1D,EAAA0D,EAAA1D,GACAhN,KAAAysB,UAAA9f,IAAAK,KACAhN,KAAAysB,UAAAlsB,IAAAyM,GACAhN,KAAAusB,QAAAnf,KAAAsD,GACA1Q,KAAAwsB,OAAA7f,IAAAK,IACA0D,EAAAxD,OAAAlN,QAQA2pB,GAAArnB,UAAAqqB,YAAA,WACA,IAAAzoB,EAAAlE,KAAAssB,KAAAnoB,OACA,MAAAD,IAAA,CACA,IAAAwM,EAAA1Q,KAAAssB,KAAApoB,GACAlE,KAAAysB,UAAA9f,IAAA+D,EAAA1D,KACA0D,EAAArD,UAAArN,MAGA,IAAA4sB,EAAA5sB,KAAAwsB,OACAxsB,KAAAwsB,OAAAxsB,KAAAysB,UACAzsB,KAAAysB,UAAAG,EACA5sB,KAAAysB,UAAA7f,QACAggB,EAAA5sB,KAAAssB,KACAtsB,KAAAssB,KAAAtsB,KAAAusB,QACAvsB,KAAAusB,QAAAK,EACA5sB,KAAAusB,QAAApoB,OAAA,GAOAwlB,GAAArnB,UAAAoL,OAAA,WAEA1N,KAAAmsB,KACAnsB,KAAAqsB,OAAA,EACGrsB,KAAAumB,KACHvmB,KAAAurB,MAEAM,GAAA7rB,OAQA2pB,GAAArnB,UAAAipB,IAAA,WACA,GAAAvrB,KAAAosB,OAAA,CACA,IAAAlqB,EAAAlC,KAAA4L,MACA,GACA1J,IAAAlC,KAAAkC,OAIAC,EAAAD,IACAlC,KAAAisB,KACA,CAEA,IAAAY,EAAA7sB,KAAAkC,MAEA,GADAlC,KAAAkC,QACAlC,KAAAksB,KACA,IACAlsB,KAAAkY,GAAA7X,KAAAL,KAAA+S,GAAA7Q,EAAA2qB,GACS,MAAAllB,IACTsO,GAAAtO,GAAA3H,KAAA+S,GAAA,yBAAA/S,KAAA,qBAGAA,KAAAkY,GAAA7X,KAAAL,KAAA+S,GAAA7Q,EAAA2qB,MAUAlD,GAAArnB,UAAAwqB,SAAA,WACA9sB,KAAAkC,MAAAlC,KAAA4L,MACA5L,KAAAqsB,OAAA,GAMA1C,GAAArnB,UAAAgL,OAAA,WACA,IAAApJ,EAAAlE,KAAAssB,KAAAnoB,OACA,MAAAD,IACAlE,KAAAssB,KAAApoB,GAAAoJ,UAOAqc,GAAArnB,UAAA+mB,SAAA,WACA,GAAArpB,KAAAosB,OAAA,CAIApsB,KAAA+S,GAAA6V,mBACAtkB,EAAAtE,KAAA+S,GAAAuW,UAAAtpB,MAEA,IAAAkE,EAAAlE,KAAAssB,KAAAnoB,OACA,MAAAD,IACAlE,KAAAssB,KAAApoB,GAAAmJ,UAAArN,MAEAA,KAAAosB,QAAA,IAMA,IAAAW,GAAA,CACAljB,YAAA,EACAG,cAAA,EACA4B,IAAA3E,EACAyF,IAAAzF,GAGA,SAAAqV,GAAA/O,EAAAyf,EAAAloB,GACAioB,GAAAnhB,IAAA,WACA,OAAA5L,KAAAgtB,GAAAloB,IAEAioB,GAAArgB,IAAA,SAAA/J,GACA3C,KAAAgtB,GAAAloB,GAAAnC,GAEAlB,OAAAqI,eAAAyD,EAAAzI,EAAAioB,IAGA,SAAAE,GAAAla,GACAA,EAAAuW,UAAA,GACA,IAAA3d,EAAAoH,EAAArS,SACAiL,EAAA6H,OAAmB0Z,GAAAna,EAAApH,EAAA6H,OACnB7H,EAAA8H,SAAqB0Z,GAAApa,EAAApH,EAAA8H,SACrB9H,EAAAsC,KACAmf,GAAAra,GAEAzB,GAAAyB,EAAAwW,MAAA,IAAyB,GAEzB5d,EAAAgI,UAAsB0Z,GAAAta,EAAApH,EAAAgI,UACtBhI,EAAAF,OAAAE,EAAAF,QAAAD,IACA8hB,GAAAva,EAAApH,EAAAF,OAIA,SAAAyhB,GAAAna,EAAAwa,GACA,IAAApY,EAAApC,EAAArS,SAAAyU,WAAA,GACA3B,EAAAT,EAAA8C,OAAA,GAGA9N,EAAAgL,EAAArS,SAAA2pB,UAAA,GACAmD,GAAAza,EAAAsD,QAEAmX,GACA1c,IAAA,GAEA,IAAAkN,EAAA,SAAAlZ,GACAiD,EAAAqF,KAAAtI,GACA,IAAA5C,EAAA+S,GAAAnQ,EAAAyoB,EAAApY,EAAApC,GAuBArB,GAAA8B,EAAA1O,EAAA5C,GAKA4C,KAAAiO,GACAuJ,GAAAvJ,EAAA,SAAAjO,IAIA,QAAAA,KAAAyoB,EAAAvP,EAAAlZ,GACAgM,IAAA,GAGA,SAAAsc,GAAAra,GACA,IAAA9E,EAAA8E,EAAArS,SAAAuN,KACAA,EAAA8E,EAAAwW,MAAA,oBAAAtb,EACAwf,GAAAxf,EAAA8E,GACA9E,GAAA,GACAzL,EAAAyL,KACAA,EAAA,IAQA,IAAAlG,EAAAtG,OAAAsG,KAAAkG,GACAuF,EAAAT,EAAArS,SAAA8S,MAEAtP,GADA6O,EAAArS,SAAA+S,QACA1L,EAAA5D,QACA,MAAAD,IAAA,CACA,IAAAY,EAAAiD,EAAA7D,GACQ,EAQRsP,GAAA3O,EAAA2O,EAAA1O,IAMK4E,EAAA5E,IACLwX,GAAAvJ,EAAA,QAAAjO,GAIAwM,GAAArD,GAAA,GAGA,SAAAwf,GAAAxf,EAAA8E,GAEAnF,KACA,IACA,OAAAK,EAAA5N,KAAA0S,KACG,MAAApL,IAEH,OADAsO,GAAAtO,GAAAoL,EAAA,UACA,GACG,QACHlF,MAIA,IAAA6f,GAAA,CAA8BvB,MAAA,GAE9B,SAAAkB,GAAAta,EAAAY,GAEA,IAAAga,EAAA5a,EAAA6a,kBAAAnsB,OAAAsC,OAAA,MAEA8pB,EAAA/hB,KAEA,QAAAhH,KAAA6O,EAAA,CACA,IAAAma,EAAAna,EAAA7O,GACAiN,EAAA,oBAAA+b,MAAAliB,IACQ,EAORiiB,IAEAF,EAAA7oB,GAAA,IAAA6kB,GACA5W,EACAhB,GAAA9K,EACAA,EACAymB,KAOA5oB,KAAAiO,GACAgb,GAAAhb,EAAAjO,EAAAgpB,IAWA,SAAAC,GACAxgB,EACAzI,EACAgpB,GAEA,IAAAE,GAAAliB,KACA,oBAAAgiB,GACAf,GAAAnhB,IAAAoiB,EACAC,GAAAnpB,GACAopB,GAAAJ,GACAf,GAAArgB,IAAAzF,IAEA8lB,GAAAnhB,IAAAkiB,EAAAliB,IACAoiB,IAAA,IAAAF,EAAA7oB,MACAgpB,GAAAnpB,GACAopB,GAAAJ,EAAAliB,KACA3E,EACA8lB,GAAArgB,IAAAohB,EAAAphB,KAAAzF,GAWAxF,OAAAqI,eAAAyD,EAAAzI,EAAAioB,IAGA,SAAAkB,GAAAnpB,GACA,kBACA,IAAAumB,EAAArrB,KAAA4tB,mBAAA5tB,KAAA4tB,kBAAA9oB,GACA,GAAAumB,EAOA,OANAA,EAAAgB,OACAhB,EAAAyB,WAEA/f,GAAAQ,QACA8d,EAAA/d,SAEA+d,EAAAnpB,OAKA,SAAAgsB,GAAAlpB,GACA,kBACA,OAAAA,EAAA3E,KAAAL,YAIA,SAAAmtB,GAAApa,EAAAU,GACAV,EAAArS,SAAA8S,MACA,QAAA1O,KAAA2O,EAsBAV,EAAAjO,GAAA,oBAAA2O,EAAA3O,GAAAmC,EAAAV,EAAAkN,EAAA3O,GAAAiO,GAIA,SAAAua,GAAAva,EAAAtH,GACA,QAAA3G,KAAA2G,EAAA,CACA,IAAAiL,EAAAjL,EAAA3G,GACA,GAAAzB,MAAAC,QAAAoT,GACA,QAAAxS,EAAA,EAAqBA,EAAAwS,EAAAvS,OAAoBD,IACzCiqB,GAAApb,EAAAjO,EAAA4R,EAAAxS,SAGAiqB,GAAApb,EAAAjO,EAAA4R,IAKA,SAAAyX,GACApb,EACAgZ,EACArV,EACA/W,GASA,OAPA6C,EAAAkU,KACA/W,EAAA+W,EACAA,aAEA,kBAAAA,IACAA,EAAA3D,EAAA2D,IAEA3D,EAAAqb,OAAArC,EAAArV,EAAA/W,GAGA,SAAA0uB,GAAA9I,GAIA,IAAA+I,EAAA,CACA1iB,IAAA,WAA6B,OAAA5L,KAAAupB,QAC7BgF,EAAA,CACA3iB,IAAA,WAA8B,OAAA5L,KAAA6V,SAa9BpU,OAAAqI,eAAAyb,EAAAjjB,UAAA,QAAAgsB,GACA7sB,OAAAqI,eAAAyb,EAAAjjB,UAAA,SAAAisB,GAEAhJ,EAAAjjB,UAAAksB,KAAA9hB,GACA6Y,EAAAjjB,UAAAmsB,QAAApc,GAEAkT,EAAAjjB,UAAA8rB,OAAA,SACArC,EACA7T,EACAvY,GAEA,IAAAoT,EAAA/S,KACA,GAAAwC,EAAA0V,GACA,OAAAiW,GAAApb,EAAAgZ,EAAA7T,EAAAvY,GAEAA,KAAA,GACAA,EAAAusB,MAAA,EACA,IAAAb,EAAA,IAAA1B,GAAA5W,EAAAgZ,EAAA7T,EAAAvY,GACA,GAAAA,EAAA+uB,UACA,IACAxW,EAAA7X,KAAA0S,EAAAsY,EAAAnpB,OACO,MAAA4U,GACPb,GAAAa,EAAA/D,EAAA,mCAAAsY,EAAA,gBAGA,kBACAA,EAAAhC,aAOA,IAAAsF,GAAA,EAEA,SAAAC,GAAArJ,GACAA,EAAAjjB,UAAAusB,MAAA,SAAAlvB,GACA,IAAAoT,EAAA/S,KAEA+S,EAAA+b,KAAAH,KAWA5b,EAAAtB,QAAA,EAEA9R,KAAA+jB,aAIAqL,GAAAhc,EAAApT,GAEAoT,EAAArS,SAAA4T,GACA8O,GAAArQ,EAAAic,aACArvB,GAAA,GACAoT,GAOAA,EAAA0L,aAAA1L,EAGAA,EAAAkc,MAAAlc,EACAuV,GAAAvV,GACAsU,GAAAtU,GACAgS,GAAAhS,GACAyP,GAAAzP,EAAA,gBACAiI,GAAAjI,GACAka,GAAAla,GACA+H,GAAA/H,GACAyP,GAAAzP,EAAA,WASAA,EAAArS,SAAA+oB,IACA1W,EAAAoP,OAAApP,EAAArS,SAAA+oB,KAKA,SAAAsF,GAAAhc,EAAApT,GACA,IAAAgM,EAAAoH,EAAArS,SAAAe,OAAAsC,OAAAgP,EAAAic,YAAArvB,SAEAslB,EAAAtlB,EAAAgkB,aACAhY,EAAAxL,OAAAR,EAAAQ,OACAwL,EAAAgY,aAAAsB,EAEA,IAAAiK,EAAAjK,EAAA5W,iBACA1C,EAAAwJ,UAAA+Z,EAAA/Z,UACAxJ,EAAAyZ,iBAAA8J,EAAAnO,UACApV,EAAAuZ,gBAAAgK,EAAAhhB,SACAvC,EAAAwjB,cAAAD,EAAAlhB,IAEArO,EAAAR,SACAwM,EAAAxM,OAAAQ,EAAAR,OACAwM,EAAAvM,gBAAAO,EAAAP,iBAIA,SAAAgkB,GAAAjX,GACA,IAAAxM,EAAAwM,EAAAxM,QACA,GAAAwM,EAAAijB,MAAA,CACA,IAAAC,EAAAjM,GAAAjX,EAAAijB,OACAE,EAAAnjB,EAAAkjB,aACA,GAAAA,IAAAC,EAAA,CAGAnjB,EAAAkjB,eAEA,IAAAE,EAAAC,GAAArjB,GAEAojB,GACA3oB,EAAAuF,EAAAsjB,cAAAF,GAEA5vB,EAAAwM,EAAAxM,QAAA2U,GAAA+a,EAAAljB,EAAAsjB,eACA9vB,EAAAoU,OACApU,EAAA+vB,WAAA/vB,EAAAoU,MAAA5H,IAIA,OAAAxM,EAGA,SAAA6vB,GAAArjB,GACA,IAAAwjB,EACAC,EAAAzjB,EAAAxM,QACAkwB,EAAA1jB,EAAA2jB,cACA,QAAAhrB,KAAA8qB,EACAA,EAAA9qB,KAAA+qB,EAAA/qB,KACA6qB,IAAsBA,EAAA,IACtBA,EAAA7qB,GAAA8qB,EAAA9qB,IAGA,OAAA6qB,EAGA,SAAApK,GAAA5lB,GAMAK,KAAA6uB,MAAAlvB,GAWA,SAAAowB,GAAAxK,GACAA,EAAAyK,IAAA,SAAAC,GACA,IAAAC,EAAAlwB,KAAAmwB,oBAAAnwB,KAAAmwB,kBAAA,IACA,GAAAD,EAAAxrB,QAAAurB,IAAA,EACA,OAAAjwB,KAIA,IAAAmQ,EAAA1J,EAAAN,UAAA,GAQA,OAPAgK,EAAAigB,QAAApwB,MACA,oBAAAiwB,EAAAI,QACAJ,EAAAI,QAAAjqB,MAAA6pB,EAAA9f,GACK,oBAAA8f,GACLA,EAAA7pB,MAAA,KAAA+J,GAEA+f,EAAA9iB,KAAA6iB,GACAjwB,MAMA,SAAAswB,GAAA/K,GACAA,EAAAgL,MAAA,SAAAA,GAEA,OADAvwB,KAAAL,QAAA2U,GAAAtU,KAAAL,QAAA4wB,GACAvwB,MAMA,SAAAwwB,GAAAjL,GAMAA,EAAAtC,IAAA,EACA,IAAAA,EAAA,EAKAsC,EAAA3e,OAAA,SAAA6oB,GACAA,KAAA,GACA,IAAAgB,EAAAzwB,KACA0wB,EAAAD,EAAAxN,IACA0N,EAAAlB,EAAAmB,QAAAnB,EAAAmB,MAAA,IACA,GAAAD,EAAAD,GACA,OAAAC,EAAAD,GAGA,IAAA3c,EAAA0b,EAAA1b,MAAA0c,EAAA9wB,QAAAoU,KAKA,IAAA8c,EAAA,SAAAlxB,GACAK,KAAA6uB,MAAAlvB,IA6CA,OA3CAkxB,EAAAvuB,UAAAb,OAAAsC,OAAA0sB,EAAAnuB,WACAuuB,EAAAvuB,UAAA0sB,YAAA6B,EACAA,EAAA5N,QACA4N,EAAAlxB,QAAA2U,GACAmc,EAAA9wB,QACA8vB,GAEAoB,EAAA,SAAAJ,EAKAI,EAAAlxB,QAAA6T,OACAsd,GAAAD,GAEAA,EAAAlxB,QAAAgU,UACAod,GAAAF,GAIAA,EAAAjqB,OAAA6pB,EAAA7pB,OACAiqB,EAAAN,MAAAE,EAAAF,MACAM,EAAAb,IAAAS,EAAAT,IAIA3nB,EAAA2H,QAAA,SAAAsD,GACAud,EAAAvd,GAAAmd,EAAAnd,KAGAS,IACA8c,EAAAlxB,QAAA+vB,WAAA3b,GAAA8c,GAMAA,EAAAxB,aAAAoB,EAAA9wB,QACAkxB,EAAApB,gBACAoB,EAAAf,cAAAlpB,EAAA,GAAiCiqB,EAAAlxB,SAGjCgxB,EAAAD,GAAAG,EACAA,GAIA,SAAAC,GAAAE,GACA,IAAAxd,EAAAwd,EAAArxB,QAAA6T,MACA,QAAA1O,KAAA0O,EACA8I,GAAA0U,EAAA1uB,UAAA,SAAAwC,GAIA,SAAAisB,GAAAC,GACA,IAAArd,EAAAqd,EAAArxB,QAAAgU,SACA,QAAA7O,KAAA6O,EACAoa,GAAAiD,EAAA1uB,UAAAwC,EAAA6O,EAAA7O,IAMA,SAAAmsB,GAAA1L,GAIAld,EAAA2H,QAAA,SAAAsD,GACAiS,EAAAjS,GAAA,SACAtG,EACAkkB,GAEA,OAAAA,GAOA,cAAA5d,GAAA9Q,EAAA0uB,KACAA,EAAAnd,KAAAmd,EAAAnd,MAAA/G,EACAkkB,EAAAlxB,KAAAL,QAAA4U,MAAA3N,OAAAsqB,IAEA,cAAA5d,GAAA,oBAAA4d,IACAA,EAAA,CAAwB3qB,KAAA2qB,EAAAxjB,OAAAwjB,IAExBlxB,KAAAL,QAAA2T,EAAA,KAAAtG,GAAAkkB,EACAA,GAdAlxB,KAAAL,QAAA2T,EAAA,KAAAtG,MAwBA,SAAAmkB,GAAAxlB,GACA,OAAAA,MAAAQ,KAAAxM,QAAAoU,MAAApI,EAAAqC,KAGA,SAAAojB,GAAAC,EAAAtd,GACA,OAAA1Q,MAAAC,QAAA+tB,GACAA,EAAA3sB,QAAAqP,IAAA,EACG,kBAAAsd,EACHA,EAAAptB,MAAA,KAAAS,QAAAqP,IAAA,IACGtR,EAAA4uB,IACHA,EAAAhnB,KAAA0J,GAMA,SAAAud,GAAAC,EAAAC,GACA,IAAAvsB,EAAAssB,EAAAtsB,MACA8C,EAAAwpB,EAAAxpB,KACAid,EAAAuM,EAAAvM,OACA,QAAAlgB,KAAAG,EAAA,CACA,IAAAwsB,EAAAxsB,EAAAH,GACA,GAAA2sB,EAAA,CACA,IAAA1d,EAAAod,GAAAM,EAAApjB,kBACA0F,IAAAyd,EAAAzd,IACA2d,GAAAzsB,EAAAH,EAAAiD,EAAAid,KAMA,SAAA0M,GACAzsB,EACAH,EACAiD,EACA4pB,GAEA,IAAAC,EAAA3sB,EAAAH,IACA8sB,GAAAD,GAAAC,EAAA5jB,MAAA2jB,EAAA3jB,KACA4jB,EAAAjjB,kBAAAkU,WAEA5d,EAAAH,GAAA,KACAR,EAAAyD,EAAAjD,GA/MA8pB,GAAArJ,IACA8I,GAAA9I,IACAuC,GAAAvC,IACAsD,GAAAtD,IACAD,GAAAC,IA8MA,IAAAsM,GAAA,CAAA/uB,OAAAoH,OAAA7G,OAEAyuB,GAAA,CACA/d,KAAA,aACAyP,UAAA,EAEAhQ,MAAA,CACAue,QAAAF,GACAG,QAAAH,GACAzf,IAAA,CAAAtP,OAAAmvB,SAGAC,QAAA,WACAlyB,KAAAiF,MAAAxD,OAAAsC,OAAA,MACA/D,KAAA+H,KAAA,IAGAoqB,UAAA,WACA,QAAArtB,KAAA9E,KAAAiF,MACAysB,GAAA1xB,KAAAiF,MAAAH,EAAA9E,KAAA+H,OAIAqqB,QAAA,WACA,IAAAzR,EAAA3gB,KAEAA,KAAAouB,OAAA,mBAAAzrB,GACA2uB,GAAA3Q,EAAA,SAAA5M,GAA0C,OAAAqd,GAAAzuB,EAAAoR,OAE1C/T,KAAAouB,OAAA,mBAAAzrB,GACA2uB,GAAA3Q,EAAA,SAAA5M,GAA0C,OAAAqd,GAAAzuB,EAAAoR,QAI1C5U,OAAA,WACA,IAAAoc,EAAAvb,KAAAid,OAAArH,QACAjG,EAAAyX,GAAA7L,GACAlN,EAAAsB,KAAAtB,iBACA,GAAAA,EAAA,CAEA,IAAA0F,EAAAod,GAAA9iB,GACAqX,EAAA1lB,KACA+xB,EAAArM,EAAAqM,QACAC,EAAAtM,EAAAsM,QACA,GAEAD,KAAAhe,IAAAqd,GAAAW,EAAAhe,KAEAie,GAAAje,GAAAqd,GAAAY,EAAAje,GAEA,OAAApE,EAGA,IAAA0iB,EAAAryB,KACAiF,EAAAotB,EAAAptB,MACA8C,EAAAsqB,EAAAtqB,KACAjD,EAAA,MAAA6K,EAAA7K,IAGAuJ,EAAAlC,KAAA8W,KAAA5U,EAAAL,IAAA,KAAAK,EAAA,QACAsB,EAAA7K,IACAG,EAAAH,IACA6K,EAAAhB,kBAAA1J,EAAAH,GAAA6J,kBAEArK,EAAAyD,EAAAjD,GACAiD,EAAAqF,KAAAtI,KAEAG,EAAAH,GAAA6K,EACA5H,EAAAqF,KAAAtI,GAEA9E,KAAAoS,KAAArK,EAAA5D,OAAAmuB,SAAAtyB,KAAAoS,MACAsf,GAAAzsB,EAAA8C,EAAA,GAAAA,EAAA/H,KAAAglB,SAIArV,EAAA1B,KAAA6T,WAAA,EAEA,OAAAnS,GAAA4L,KAAA,KAIAgX,GAAA,CACAT,cAKA,SAAAU,GAAAjN,GAEA,IAAAkN,EAAA,CACA7mB,IAAA,WAA+B,OAAArD,IAQ/B9G,OAAAqI,eAAAyb,EAAA,SAAAkN,GAKAlN,EAAAmN,KAAA,CACA7lB,QACAjG,SACA0N,gBACAqe,eAAAjhB,IAGA6T,EAAA7Y,OACA6Y,EAAAqN,OAAAvgB,GACAkT,EAAAtN,YAGAsN,EAAAsN,WAAA,SAAAzwB,GAEA,OADAkP,GAAAlP,GACAA,GAGAmjB,EAAA5lB,QAAA8B,OAAAsC,OAAA,MACAsE,EAAA2H,QAAA,SAAAsD,GACAiS,EAAA5lB,QAAA2T,EAAA,KAAA7R,OAAAsC,OAAA,QAKAwhB,EAAA5lB,QAAA4U,MAAAgR,EAEA3e,EAAA2e,EAAA5lB,QAAA+vB,WAAA6C,IAEAxC,GAAAxK,GACA+K,GAAA/K,GACAiL,GAAAjL,GACA0L,GAAA1L,GAGAiN,GAAAjN,IAEA9jB,OAAAqI,eAAAyb,GAAAjjB,UAAA,aACAsJ,IAAAE,KAGArK,OAAAqI,eAAAyb,GAAAjjB,UAAA,eACAsJ,IAAA,WAEA,OAAA5L,KAAAC,QAAAD,KAAAC,OAAAC,cAKAuB,OAAAqI,eAAAyb,GAAA,2BACArjB,MAAAue,KAGA8E,GAAAuN,QAAA,SAMA,IAAA5pB,GAAAvF,EAAA,eAGAovB,GAAApvB,EAAA,yCACA2F,GAAA,SAAA0E,EAAAsF,EAAA0f,GACA,MACA,UAAAA,GAAAD,GAAA/kB,IAAA,WAAAsF,GACA,aAAA0f,GAAA,WAAAhlB,GACA,YAAAglB,GAAA,UAAAhlB,GACA,UAAAglB,GAAA,UAAAhlB,GAIAilB,GAAAtvB,EAAA,wCAEAuvB,GAAAvvB,EAAA,sCAEAwvB,GAAA,SAAAruB,EAAA5C,GACA,OAAAkxB,GAAAlxB,IAAA,UAAAA,EACA,QAEA,oBAAA4C,GAAAouB,GAAAhxB,GACAA,EACA,QAGAmxB,GAAA1vB,EACA,wYAQA2vB,GAAA,+BAEAC,GAAA,SAAAxf,GACA,YAAAA,EAAArO,OAAA,cAAAqO,EAAApO,MAAA,MAGA6tB,GAAA,SAAAzf,GACA,OAAAwf,GAAAxf,KAAApO,MAAA,EAAAoO,EAAA5P,QAAA,IAGAivB,GAAA,SAAAzwB,GACA,aAAAA,IAAA,IAAAA,GAKA,SAAA8wB,GAAA9jB,GACA,IAAA1B,EAAA0B,EAAA1B,KACAylB,EAAA/jB,EACAgkB,EAAAhkB,EACA,MAAA7N,EAAA6xB,EAAAhlB,mBACAglB,IAAAhlB,kBAAAqW,OACA2O,KAAA1lB,OACAA,EAAA2lB,GAAAD,EAAA1lB,SAGA,MAAAnM,EAAA4xB,IAAAvzB,QACAuzB,KAAAzlB,OACAA,EAAA2lB,GAAA3lB,EAAAylB,EAAAzlB,OAGA,OAAA4lB,GAAA5lB,EAAA6lB,YAAA7lB,EAAA6W,OAGA,SAAA8O,GAAAvkB,EAAAlP,GACA,OACA2zB,YAAA7yB,GAAAoO,EAAAykB,YAAA3zB,EAAA2zB,aACAhP,MAAAhjB,EAAAuN,EAAAyV,OACA,CAAAzV,EAAAyV,MAAA3kB,EAAA2kB,OACA3kB,EAAA2kB,OAIA,SAAA+O,GACAC,EACAC,GAEA,OAAAjyB,EAAAgyB,IAAAhyB,EAAAiyB,GACA9yB,GAAA6yB,EAAAE,GAAAD,IAGA,GAGA,SAAA9yB,GAAAgF,EAAAiB,GACA,OAAAjB,EAAAiB,EAAAjB,EAAA,IAAAiB,EAAAjB,EAAAiB,GAAA,GAGA,SAAA8sB,GAAA9xB,GACA,OAAAmB,MAAAC,QAAApB,GACA+xB,GAAA/xB,GAEAC,EAAAD,GACAgyB,GAAAhyB,GAEA,kBAAAA,EACAA,EAGA,GAGA,SAAA+xB,GAAA/xB,GAGA,IAFA,IACAiyB,EADAntB,EAAA,GAEA9C,EAAA,EAAAgC,EAAAhE,EAAAiC,OAAmCD,EAAAgC,EAAOhC,IAC1CpC,EAAAqyB,EAAAH,GAAA9xB,EAAAgC,MAAA,KAAAiwB,IACAntB,IAAgBA,GAAA,KAChBA,GAAAmtB,GAGA,OAAAntB,EAGA,SAAAktB,GAAAhyB,GACA,IAAA8E,EAAA,GACA,QAAAlC,KAAA5C,EACAA,EAAA4C,KACAkC,IAAgBA,GAAA,KAChBA,GAAAlC,GAGA,OAAAkC,EAKA,IAAAotB,GAAA,CACAC,IAAA,6BACAC,KAAA,sCAGAC,GAAA5wB,EACA,snBAeA6wB,GAAA7wB,EACA,kNAGA,GAGAsF,GAAA,SAAA+E,GACA,OAAAumB,GAAAvmB,IAAAwmB,GAAAxmB,IAGA,SAAA5E,GAAA4E,GACA,OAAAwmB,GAAAxmB,GACA,MAIA,SAAAA,EACA,YADA,EAKA,IAAAymB,GAAAhzB,OAAAsC,OAAA,MACA,SAAAoF,GAAA6E,GAEA,IAAAvD,EACA,SAEA,GAAAxB,GAAA+E,GACA,SAIA,GAFAA,IAAA5J,cAEA,MAAAqwB,GAAAzmB,GACA,OAAAymB,GAAAzmB,GAEA,IAAAyb,EAAA3R,SAAAqJ,cAAAnT,GACA,OAAAA,EAAAtJ,QAAA,QAEA+vB,GAAAzmB,GACAyb,EAAAuF,cAAAtkB,OAAAgqB,oBACAjL,EAAAuF,cAAAtkB,OAAAiqB,YAGAF,GAAAzmB,GAAA,qBAAA3D,KAAAof,EAAAlnB,YAIA,IAAAqyB,GAAAjxB,EAAA,6CAOA,SAAAkxB,GAAApL,GACA,qBAAAA,EAAA,CACA,IAAAqL,EAAAhd,SAAAid,cAAAtL,GACA,OAAAqL,GAIAhd,SAAAqJ,cAAA,OAIA,OAAAsI,EAMA,SAAAuL,GAAAC,EAAAtlB,GACA,IAAAvB,EAAA0J,SAAAqJ,cAAA8T,GACA,iBAAAA,EACA7mB,GAGAuB,EAAA1B,MAAA0B,EAAA1B,KAAA+L,YAAAnY,IAAA8N,EAAA1B,KAAA+L,MAAAkb,UACA9mB,EAAA+mB,aAAA,uBAEA/mB,GAGA,SAAAgnB,GAAAC,EAAAJ,GACA,OAAAnd,SAAAsd,gBAAAhB,GAAAiB,GAAAJ,GAGA,SAAAld,GAAA5J,GACA,OAAA2J,SAAAC,eAAA5J,GAGA,SAAAmnB,GAAAnnB,GACA,OAAA2J,SAAAwd,cAAAnnB,GAGA,SAAAonB,GAAA7B,EAAA8B,EAAAC,GACA/B,EAAA6B,aAAAC,EAAAC,GAGA,SAAAC,GAAAlmB,EAAAH,GACAG,EAAAkmB,YAAArmB,GAGA,SAAAsmB,GAAAnmB,EAAAH,GACAG,EAAAmmB,YAAAtmB,GAGA,SAAAqkB,GAAAlkB,GACA,OAAAA,EAAAkkB,WAGA,SAAAkC,GAAApmB,GACA,OAAAA,EAAAomB,YAGA,SAAAX,GAAAzlB,GACA,OAAAA,EAAAylB,QAGA,SAAAY,GAAArmB,EAAArB,GACAqB,EAAAsmB,YAAA3nB,EAGA,SAAA4nB,GAAAvmB,EAAAjQ,GACAiQ,EAAA2lB,aAAA51B,EAAA,IAGA,IAAAy2B,GAAAv0B,OAAAC,OAAA,CACAyf,cAAA6T,GACAI,mBACArd,kBACAud,iBACAC,gBACAG,eACAC,eACAjC,cACAkC,eACAX,WACAY,kBACAE,mBAKArQ,GAAA,CACA3hB,OAAA,SAAAuB,EAAAqK,GACAsmB,GAAAtmB,IAEAjC,OAAA,SAAA0U,EAAAzS,GACAyS,EAAAnU,KAAAyX,MAAA/V,EAAA1B,KAAAyX,MACAuQ,GAAA7T,GAAA,GACA6T,GAAAtmB,KAGAgT,QAAA,SAAAhT,GACAsmB,GAAAtmB,GAAA,KAIA,SAAAsmB,GAAAtmB,EAAAumB,GACA,IAAApxB,EAAA6K,EAAA1B,KAAAyX,IACA,GAAA5jB,EAAAgD,GAAA,CAEA,IAAAiO,EAAApD,EAAA5P,QACA2lB,EAAA/V,EAAAhB,mBAAAgB,EAAAvB,IACA+nB,EAAApjB,EAAAyV,MACA0N,EACA7yB,MAAAC,QAAA6yB,EAAArxB,IACAR,EAAA6xB,EAAArxB,GAAA4gB,GACKyQ,EAAArxB,KAAA4gB,IACLyQ,EAAArxB,QAAAjD,GAGA8N,EAAA1B,KAAAmoB,SACA/yB,MAAAC,QAAA6yB,EAAArxB,IAEOqxB,EAAArxB,GAAAJ,QAAAghB,GAAA,GAEPyQ,EAAArxB,GAAAsI,KAAAsY,GAHAyQ,EAAArxB,GAAA,CAAA4gB,GAMAyQ,EAAArxB,GAAA4gB,GAiBA,IAAA2Q,GAAA,IAAAtoB,GAAA,MAAgC,IAEhCqF,GAAA,kDAEA,SAAAkjB,GAAArwB,EAAAiB,GACA,OACAjB,EAAAnB,MAAAoC,EAAApC,MAEAmB,EAAA+H,MAAA9G,EAAA8G,KACA/H,EAAA8I,YAAA7H,EAAA6H,WACAjN,EAAAmE,EAAAgI,QAAAnM,EAAAoF,EAAA+G,OACAsoB,GAAAtwB,EAAAiB,IAEAnF,EAAAkE,EAAAkJ,qBACAlJ,EAAAqI,eAAApH,EAAAoH,cACA3M,EAAAuF,EAAAoH,aAAAwI,QAMA,SAAAyf,GAAAtwB,EAAAiB,GACA,aAAAjB,EAAA+H,IAA0B,SAC1B,IAAA9J,EACAsyB,EAAA10B,EAAAoC,EAAA+B,EAAAgI,OAAAnM,EAAAoC,IAAA8V,QAAA9V,EAAAoP,KACAmjB,EAAA30B,EAAAoC,EAAAgD,EAAA+G,OAAAnM,EAAAoC,IAAA8V,QAAA9V,EAAAoP,KACA,OAAAkjB,IAAAC,GAAA7B,GAAA4B,IAAA5B,GAAA6B,GAGA,SAAAC,GAAAxoB,EAAAyoB,EAAAC,GACA,IAAA1yB,EAAAY,EACAhB,EAAA,GACA,IAAAI,EAAAyyB,EAAoBzyB,GAAA0yB,IAAa1yB,EACjCY,EAAAoJ,EAAAhK,GAAAY,IACAhD,EAAAgD,KAAqBhB,EAAAgB,GAAAZ,GAErB,OAAAJ,EAGA,SAAA+yB,GAAAC,GACA,IAAA5yB,EAAAumB,EACAvC,EAAA,GAEA6O,EAAAD,EAAAC,QACAf,EAAAc,EAAAd,QAEA,IAAA9xB,EAAA,EAAaA,EAAAkP,GAAAjP,SAAkBD,EAE/B,IADAgkB,EAAA9U,GAAAlP,IAAA,GACAumB,EAAA,EAAeA,EAAAsM,EAAA5yB,SAAoBsmB,EACnC3oB,EAAAi1B,EAAAtM,GAAArX,GAAAlP,MACAgkB,EAAA9U,GAAAlP,IAAAkJ,KAAA2pB,EAAAtM,GAAArX,GAAAlP,KAKA,SAAA8yB,EAAA5oB,GACA,WAAAL,GAAAioB,EAAAf,QAAA7mB,GAAAhK,cAAA,GAA2D,QAAAvC,EAAAuM,GAG3D,SAAA6oB,EAAAC,EAAAnW,GACA,SAAA1H,IACA,MAAAA,EAAA0H,WACAoW,EAAAD,GAIA,OADA7d,EAAA0H,YACA1H,EAGA,SAAA8d,EAAA1N,GACA,IAAAtpB,EAAA61B,EAAAtC,WAAAjK,GAEA3nB,EAAA3B,IACA61B,EAAAN,YAAAv1B,EAAAspB,GAsBA,SAAA2N,EACAznB,EACA0nB,EACAC,EACAC,EACAC,EACAC,EACAhzB,GAYA,GAVA3C,EAAA6N,EAAAvB,MAAAtM,EAAA21B,KAMA9nB,EAAA8nB,EAAAhzB,GAAAiL,GAAAC,IAGAA,EAAAb,cAAA0oB,GACAzU,EAAApT,EAAA0nB,EAAAC,EAAAC,GAAA,CAIA,IAAAtpB,EAAA0B,EAAA1B,KACAC,EAAAyB,EAAAzB,SACAF,EAAA2B,EAAA3B,IACAlM,EAAAkM,IAeA2B,EAAAvB,IAAAuB,EAAApB,GACAynB,EAAAZ,gBAAAzlB,EAAApB,GAAAP,GACAgoB,EAAA7U,cAAAnT,EAAA2B,GACA+nB,EAAA/nB,GAIAgoB,EAAAhoB,EAAAzB,EAAAmpB,GACAv1B,EAAAmM,IACA2pB,EAAAjoB,EAAA0nB,GAEA/U,EAAAgV,EAAA3nB,EAAAvB,IAAAmpB,IAMKx1B,EAAA4N,EAAAZ,YACLY,EAAAvB,IAAA4nB,EAAAV,cAAA3lB,EAAAxB,MACAmU,EAAAgV,EAAA3nB,EAAAvB,IAAAmpB,KAEA5nB,EAAAvB,IAAA4nB,EAAAje,eAAApI,EAAAxB,MACAmU,EAAAgV,EAAA3nB,EAAAvB,IAAAmpB,KAIA,SAAAxU,EAAApT,EAAA0nB,EAAAC,EAAAC,GACA,IAAArzB,EAAAyL,EAAA1B,KACA,GAAAnM,EAAAoC,GAAA,CACA,IAAA2zB,EAAA/1B,EAAA6N,EAAAhB,oBAAAzK,EAAA4d,UAQA,GAPAhgB,EAAAoC,IAAAxE,OAAAoC,EAAAoC,IAAAyd,OACAzd,EAAAyL,GAAA,GAMA7N,EAAA6N,EAAAhB,mBAMA,OALAmpB,EAAAnoB,EAAA0nB,GACA/U,EAAAgV,EAAA3nB,EAAAvB,IAAAmpB,GACAx1B,EAAA81B,IACAE,EAAApoB,EAAA0nB,EAAAC,EAAAC,IAEA,GAKA,SAAAO,EAAAnoB,EAAA0nB,GACAv1B,EAAA6N,EAAA1B,KAAA+pB,iBACAX,EAAAjqB,KAAAhH,MAAAixB,EAAA1nB,EAAA1B,KAAA+pB,eACAroB,EAAA1B,KAAA+pB,cAAA,MAEAroB,EAAAvB,IAAAuB,EAAAhB,kBAAAqa,IACAiP,EAAAtoB,IACAioB,EAAAjoB,EAAA0nB,GACAK,EAAA/nB,KAIAsmB,GAAAtmB,GAEA0nB,EAAAjqB,KAAAuC,IAIA,SAAAooB,EAAApoB,EAAA0nB,EAAAC,EAAAC,GACA,IAAArzB,EAKAg0B,EAAAvoB,EACA,MAAAuoB,EAAAvpB,kBAEA,GADAupB,IAAAvpB,kBAAAqW,OACAljB,EAAAoC,EAAAg0B,EAAAjqB,OAAAnM,EAAAoC,IAAAi0B,YAAA,CACA,IAAAj0B,EAAA,EAAmBA,EAAAgkB,EAAAkQ,SAAAj0B,SAAyBD,EAC5CgkB,EAAAkQ,SAAAl0B,GAAAmyB,GAAA6B,GAEAb,EAAAjqB,KAAA8qB,GACA,MAKA5V,EAAAgV,EAAA3nB,EAAAvB,IAAAmpB,GAGA,SAAAjV,EAAAniB,EAAAiO,EAAAiqB,GACAv2B,EAAA3B,KACA2B,EAAAu2B,GACArC,EAAAtC,WAAA2E,KAAAl4B,GACA61B,EAAAT,aAAAp1B,EAAAiO,EAAAiqB,GAGArC,EAAAL,YAAAx1B,EAAAiO,IAKA,SAAAupB,EAAAhoB,EAAAzB,EAAAmpB,GACA,GAAAh0B,MAAAC,QAAA4K,GAAA,CACU,EAGV,QAAAhK,EAAA,EAAqBA,EAAAgK,EAAA/J,SAAqBD,EAC1CkzB,EAAAlpB,EAAAhK,GAAAmzB,EAAA1nB,EAAAvB,IAAA,QAAAF,EAAAhK,QAEKjC,EAAA0N,EAAAxB,OACL6nB,EAAAL,YAAAhmB,EAAAvB,IAAA4nB,EAAAje,eAAAjV,OAAA6M,EAAAxB,QAIA,SAAA8pB,EAAAtoB,GACA,MAAAA,EAAAhB,kBACAgB,IAAAhB,kBAAAqW,OAEA,OAAAljB,EAAA6N,EAAA3B,KAGA,SAAA4pB,EAAAjoB,EAAA0nB,GACA,QAAApP,EAAA,EAAqBA,EAAAC,EAAAnkB,OAAAI,SAAyB8jB,EAC9CC,EAAAnkB,OAAAkkB,GAAAoO,GAAA1mB,GAEAzL,EAAAyL,EAAA1B,KAAAvO,KACAoC,EAAAoC,KACApC,EAAAoC,EAAAH,SAA4BG,EAAAH,OAAAsyB,GAAA1mB,GAC5B7N,EAAAoC,EAAAoe,SAA4B+U,EAAAjqB,KAAAuC,IAO5B,SAAA+nB,EAAA/nB,GACA,IAAAzL,EACA,GAAApC,EAAAoC,EAAAyL,EAAAjB,WACAsnB,EAAAD,cAAApmB,EAAAvB,IAAAlK,OACK,CACL,IAAAo0B,EAAA3oB,EACA,MAAA2oB,EACAx2B,EAAAoC,EAAAo0B,EAAAv4B,UAAA+B,EAAAoC,IAAAxD,SAAAZ,WACAk2B,EAAAD,cAAApmB,EAAAvB,IAAAlK,GAEAo0B,IAAAn4B,OAIA2B,EAAAoC,EAAAge,KACAhe,IAAAyL,EAAA5P,SACAmE,IAAAyL,EAAAnB,WACA1M,EAAAoC,IAAAxD,SAAAZ,WAEAk2B,EAAAD,cAAApmB,EAAAvB,IAAAlK,GAIA,SAAAq0B,EAAAjB,EAAAC,EAAA/V,EAAAgX,EAAA5B,EAAAS,GACA,KAAUmB,GAAA5B,IAAoB4B,EAC9BpB,EAAA5V,EAAAgX,GAAAnB,EAAAC,EAAAC,GAAA,EAAA/V,EAAAgX,GAIA,SAAAC,EAAA9oB,GACA,IAAAzL,EAAAumB,EACAxc,EAAA0B,EAAA1B,KACA,GAAAnM,EAAAmM,GAEA,IADAnM,EAAAoC,EAAA+J,EAAAvO,OAAAoC,EAAAoC,IAAAye,UAAyDze,EAAAyL,GACzDzL,EAAA,EAAiBA,EAAAgkB,EAAAvF,QAAAxe,SAAwBD,EAAOgkB,EAAAvF,QAAAze,GAAAyL,GAEhD,GAAA7N,EAAAoC,EAAAyL,EAAAzB,UACA,IAAAuc,EAAA,EAAiBA,EAAA9a,EAAAzB,SAAA/J,SAA2BsmB,EAC5CgO,EAAA9oB,EAAAzB,SAAAuc,IAKA,SAAAiO,EAAApB,EAAA9V,EAAAgX,EAAA5B,GACA,KAAU4B,GAAA5B,IAAoB4B,EAAA,CAC9B,IAAAG,EAAAnX,EAAAgX,GACA12B,EAAA62B,KACA72B,EAAA62B,EAAA3qB,MACA4qB,EAAAD,GACAF,EAAAE,IAEAxB,EAAAwB,EAAAvqB,OAMA,SAAAwqB,EAAAjpB,EAAAkpB,GACA,GAAA/2B,EAAA+2B,IAAA/2B,EAAA6N,EAAA1B,MAAA,CACA,IAAA/J,EACA6c,EAAAmH,EAAA5jB,OAAAH,OAAA,EAaA,IAZArC,EAAA+2B,GAGAA,EAAA9X,aAGA8X,EAAA5B,EAAAtnB,EAAAvB,IAAA2S,GAGAjf,EAAAoC,EAAAyL,EAAAhB,oBAAA7M,EAAAoC,IAAA8gB,SAAAljB,EAAAoC,EAAA+J,OACA2qB,EAAA10B,EAAA20B,GAEA30B,EAAA,EAAiBA,EAAAgkB,EAAA5jB,OAAAH,SAAuBD,EACxCgkB,EAAA5jB,OAAAJ,GAAAyL,EAAAkpB,GAEA/2B,EAAAoC,EAAAyL,EAAA1B,KAAAvO,OAAAoC,EAAAoC,IAAAI,QACAJ,EAAAyL,EAAAkpB,GAEAA,SAGA1B,EAAAxnB,EAAAvB,KAIA,SAAA0qB,EAAAxB,EAAAyB,EAAAC,EAAA3B,EAAA4B,GACA,IAQAC,EAAAC,EAAAC,EAAA7B,EARA8B,EAAA,EACAC,EAAA,EACAC,EAAAR,EAAA50B,OAAA,EACAq1B,EAAAT,EAAA,GACAU,EAAAV,EAAAQ,GACAG,EAAAV,EAAA70B,OAAA,EACAw1B,EAAAX,EAAA,GACAY,EAAAZ,EAAAU,GAMAG,GAAAZ,EAMA,MAAAI,GAAAE,GAAAD,GAAAI,EACA/3B,EAAA63B,GACAA,EAAAT,IAAAM,GACO13B,EAAA83B,GACPA,EAAAV,IAAAQ,GACOjD,GAAAkD,EAAAG,IACPG,EAAAN,EAAAG,EAAAtC,EAAA2B,EAAAM,GACAE,EAAAT,IAAAM,GACAM,EAAAX,IAAAM,IACOhD,GAAAmD,EAAAG,IACPE,EAAAL,EAAAG,EAAAvC,EAAA2B,EAAAU,GACAD,EAAAV,IAAAQ,GACAK,EAAAZ,IAAAU,IACOpD,GAAAkD,EAAAI,IACPE,EAAAN,EAAAI,EAAAvC,EAAA2B,EAAAU,GACAG,GAAA7D,EAAAT,aAAA+B,EAAAkC,EAAAprB,IAAA4nB,EAAAJ,YAAA6D,EAAArrB,MACAorB,EAAAT,IAAAM,GACAO,EAAAZ,IAAAU,IACOpD,GAAAmD,EAAAE,IACPG,EAAAL,EAAAE,EAAAtC,EAAA2B,EAAAM,GACAO,GAAA7D,EAAAT,aAAA+B,EAAAmC,EAAArrB,IAAAorB,EAAAprB,KACAqrB,EAAAV,IAAAQ,GACAI,EAAAX,IAAAM,KAEA33B,EAAAu3B,KAAmCA,EAAAxC,GAAAqC,EAAAM,EAAAE,IACnCJ,EAAAr3B,EAAA63B,EAAA70B,KACAo0B,EAAAS,EAAA70B,KACAi1B,EAAAJ,EAAAZ,EAAAM,EAAAE,GACA53B,EAAAw3B,GACA/B,EAAAuC,EAAAtC,EAAAC,EAAAkC,EAAAprB,KAAA,EAAA4qB,EAAAM,IAEAF,EAAAL,EAAAI,GACA7C,GAAA8C,EAAAO,IACAG,EAAAV,EAAAO,EAAAtC,EAAA2B,EAAAM,GACAP,EAAAI,QAAAt3B,EACAg4B,GAAA7D,EAAAT,aAAA+B,EAAA8B,EAAAhrB,IAAAorB,EAAAprB,MAGAgpB,EAAAuC,EAAAtC,EAAAC,EAAAkC,EAAAprB,KAAA,EAAA4qB,EAAAM,IAGAK,EAAAX,IAAAM,IAGAD,EAAAE,GACAhC,EAAA51B,EAAAq3B,EAAAU,EAAA,SAAAV,EAAAU,EAAA,GAAAtrB,IACAmqB,EAAAjB,EAAAC,EAAAyB,EAAAM,EAAAI,EAAArC,IACKiC,EAAAI,GACLhB,EAAApB,EAAAyB,EAAAM,EAAAE,GAsBA,SAAAQ,EAAAvqB,EAAAupB,EAAAryB,EAAAszB,GACA,QAAA91B,EAAAwC,EAAuBxC,EAAA81B,EAAS91B,IAAA,CAChC,IAAAqB,EAAAwzB,EAAA70B,GACA,GAAApC,EAAAyD,IAAA+wB,GAAA9mB,EAAAjK,GAA2C,OAAArB,GAI3C,SAAA41B,EACA1X,EACAzS,EACA0nB,EACAI,EACAhzB,EACAw0B,GAEA,GAAA7W,IAAAzS,EAAA,CAIA7N,EAAA6N,EAAAvB,MAAAtM,EAAA21B,KAEA9nB,EAAA8nB,EAAAhzB,GAAAiL,GAAAC,IAGA,IAAAvB,EAAAuB,EAAAvB,IAAAgU,EAAAhU,IAEA,GAAArM,EAAAqgB,EAAAjT,oBACArN,EAAA6N,EAAArB,aAAA4X,UACA+T,EAAA7X,EAAAhU,IAAAuB,EAAA0nB,GAEA1nB,EAAAR,oBAAA,OASA,GAAApN,EAAA4N,EAAAd,WACA9M,EAAAqgB,EAAAvT,WACAc,EAAA7K,MAAAsd,EAAAtd,MACA/C,EAAA4N,EAAAX,WAAAjN,EAAA4N,EAAAV,SAEAU,EAAAhB,kBAAAyT,EAAAzT,sBALA,CASA,IAAAzK,EACA+J,EAAA0B,EAAA1B,KACAnM,EAAAmM,IAAAnM,EAAAoC,EAAA+J,EAAAvO,OAAAoC,EAAAoC,IAAA8d,WACA9d,EAAAke,EAAAzS,GAGA,IAAAopB,EAAA3W,EAAAlU,SACAyqB,EAAAhpB,EAAAzB,SACA,GAAApM,EAAAmM,IAAAgqB,EAAAtoB,GAAA,CACA,IAAAzL,EAAA,EAAiBA,EAAAgkB,EAAAxa,OAAAvJ,SAAuBD,EAAOgkB,EAAAxa,OAAAxJ,GAAAke,EAAAzS,GAC/C7N,EAAAoC,EAAA+J,EAAAvO,OAAAoC,EAAAoC,IAAAwJ,SAAwDxJ,EAAAke,EAAAzS,GAExDhO,EAAAgO,EAAAxB,MACArM,EAAAi3B,IAAAj3B,EAAA62B,GACAI,IAAAJ,GAA2BG,EAAA1qB,EAAA2qB,EAAAJ,EAAAtB,EAAA4B,GACpBn3B,EAAA62B,IAIP72B,EAAAsgB,EAAAjU,OAAmC6nB,EAAAH,eAAAznB,EAAA,IACnCmqB,EAAAnqB,EAAA,KAAAuqB,EAAA,EAAAA,EAAAx0B,OAAA,EAAAkzB,IACOv1B,EAAAi3B,GACPL,EAAAtqB,EAAA2qB,EAAA,EAAAA,EAAA50B,OAAA,GACOrC,EAAAsgB,EAAAjU,OACP6nB,EAAAH,eAAAznB,EAAA,IAEKgU,EAAAjU,OAAAwB,EAAAxB,MACL6nB,EAAAH,eAAAznB,EAAAuB,EAAAxB,MAEArM,EAAAmM,IACAnM,EAAAoC,EAAA+J,EAAAvO,OAAAoC,EAAAoC,IAAAg2B,YAA2Dh2B,EAAAke,EAAAzS,KAI3D,SAAAwqB,EAAAxqB,EAAA+a,EAAA0P,GAGA,GAAAr4B,EAAAq4B,IAAAt4B,EAAA6N,EAAAxP,QACAwP,EAAAxP,OAAA8N,KAAA+pB,cAAAtN,OAEA,QAAAxmB,EAAA,EAAqBA,EAAAwmB,EAAAvmB,SAAkBD,EACvCwmB,EAAAxmB,GAAA+J,KAAAvO,KAAA4iB,OAAAoI,EAAAxmB,IAKA,IAKAm2B,EAAA12B,EAAA,2CAGA,SAAAs2B,EAAA7rB,EAAAuB,EAAA0nB,EAAAiD,GACA,IAAAp2B,EACA8J,EAAA2B,EAAA3B,IACAC,EAAA0B,EAAA1B,KACAC,EAAAyB,EAAAzB,SAIA,GAHAosB,KAAArsB,KAAAwW,IACA9U,EAAAvB,MAEArM,EAAA4N,EAAAZ,YAAAjN,EAAA6N,EAAArB,cAEA,OADAqB,EAAAR,oBAAA,GACA,EAQA,GAAArN,EAAAmM,KACAnM,EAAAoC,EAAA+J,EAAAvO,OAAAoC,EAAAoC,IAAAyd,OAAsDzd,EAAAyL,GAAA,GACtD7N,EAAAoC,EAAAyL,EAAAhB,oBAGA,OADAmpB,EAAAnoB,EAAA0nB,IACA,EAGA,GAAAv1B,EAAAkM,GAAA,CACA,GAAAlM,EAAAoM,GAEA,GAAAE,EAAAmsB,gBAIA,GAAAz4B,EAAAoC,EAAA+J,IAAAnM,EAAAoC,IAAA+Z,WAAAnc,EAAAoC,IAAAs2B,YACA,GAAAt2B,IAAAkK,EAAAosB,UAWA,aAEW,CAIX,IAFA,IAAAC,GAAA,EACA9G,EAAAvlB,EAAAssB,WACAzS,EAAA,EAA6BA,EAAA/Z,EAAA/J,OAAuB8jB,IAAA,CACpD,IAAA0L,IAAAsG,EAAAtG,EAAAzlB,EAAA+Z,GAAAoP,EAAAiD,GAAA,CACAG,GAAA,EACA,MAEA9G,IAAAiC,YAIA,IAAA6E,GAAA9G,EAUA,cAxCAgE,EAAAhoB,EAAAzB,EAAAmpB,GA6CA,GAAAv1B,EAAAmM,GAAA,CACA,IAAA0sB,GAAA,EACA,QAAA71B,KAAAmJ,EACA,IAAAosB,EAAAv1B,GAAA,CACA61B,GAAA,EACA/C,EAAAjoB,EAAA0nB,GACA,OAGAsD,GAAA1sB,EAAA,UAEAoK,GAAApK,EAAA,gBAGKG,EAAAH,OAAA0B,EAAAxB,OACLC,EAAAH,KAAA0B,EAAAxB,MAEA,SAcA,gBAAAiU,EAAAzS,EAAAiS,EAAAqX,GACA,IAAAt3B,EAAAgO,GAAA,CAKA,IAAAirB,GAAA,EACAvD,EAAA,GAEA,GAAA11B,EAAAygB,GAEAwY,GAAA,EACAxD,EAAAznB,EAAA0nB,OACK,CACL,IAAAwD,EAAA/4B,EAAAsgB,EAAA0Y,UACA,IAAAD,GAAAvE,GAAAlU,EAAAzS,GAEAmqB,EAAA1X,EAAAzS,EAAA0nB,EAAA,UAAA4B,OACO,CACP,GAAA4B,EAAA,CAQA,GAJA,IAAAzY,EAAA0Y,UAAA1Y,EAAA2Y,aAAA3yB,KACAga,EAAA4Y,gBAAA5yB,GACAwZ,GAAA,GAEA7f,EAAA6f,IACAqY,EAAA7X,EAAAzS,EAAA0nB,GAEA,OADA8C,EAAAxqB,EAAA0nB,GAAA,GACAjV,EAaAA,EAAA4U,EAAA5U,GAIA,IAAA6Y,EAAA7Y,EAAAhU,IACAkpB,EAAAtB,EAAAtC,WAAAuH,GAcA,GAXA7D,EACAznB,EACA0nB,EAIA4D,EAAAC,SAAA,KAAA5D,EACAtB,EAAAJ,YAAAqF,IAIAn5B,EAAA6N,EAAAxP,QAAA,CACA,IAAAm4B,EAAA3oB,EAAAxP,OACAg7B,EAAAlD,EAAAtoB,GACA,MAAA2oB,EAAA,CACA,QAAAp0B,EAAA,EAA2BA,EAAAgkB,EAAAvF,QAAAxe,SAAwBD,EACnDgkB,EAAAvF,QAAAze,GAAAo0B,GAGA,GADAA,EAAAlqB,IAAAuB,EAAAvB,IACA+sB,EAAA,CACA,QAAAlT,EAAA,EAA+BA,EAAAC,EAAAnkB,OAAAI,SAAyB8jB,EACxDC,EAAAnkB,OAAAkkB,GAAAoO,GAAAiC,GAKA,IAAAhW,EAAAgW,EAAArqB,KAAAvO,KAAA4iB,OACA,GAAAA,EAAAxI,OAEA,QAAAshB,EAAA,EAAiCA,EAAA9Y,EAAAvJ,IAAA5U,OAAyBi3B,IAC1D9Y,EAAAvJ,IAAAqiB,UAIAnF,GAAAqC,GAEAA,IAAAn4B,QAKA2B,EAAAw1B,GACAoB,EAAApB,EAAA,CAAAlV,GAAA,KACStgB,EAAAsgB,EAAApU,MACTyqB,EAAArW,IAMA,OADA+X,EAAAxqB,EAAA0nB,EAAAuD,GACAjrB,EAAAvB,IAnGAtM,EAAAsgB,IAA4BqW,EAAArW,IAyG5B,IAAAhO,GAAA,CACArQ,OAAAs3B,GACA3tB,OAAA2tB,GACA1Y,QAAA,SAAAhT,GACA0rB,GAAA1rB,EAAA0mB,MAIA,SAAAgF,GAAAjZ,EAAAzS,IACAyS,EAAAnU,KAAAmG,YAAAzE,EAAA1B,KAAAmG,aACA0U,GAAA1G,EAAAzS,GAIA,SAAAmZ,GAAA1G,EAAAzS,GACA,IAQA7K,EAAAw2B,EAAAC,EARAC,EAAApZ,IAAAiU,GACAoF,EAAA9rB,IAAA0mB,GACAqF,EAAAC,GAAAvZ,EAAAnU,KAAAmG,WAAAgO,EAAAriB,SACA67B,EAAAD,GAAAhsB,EAAA1B,KAAAmG,WAAAzE,EAAA5P,SAEA87B,EAAA,GACAC,EAAA,GAGA,IAAAh3B,KAAA82B,EACAN,EAAAI,EAAA52B,GACAy2B,EAAAK,EAAA92B,GACAw2B,GAQAC,EAAA1O,SAAAyO,EAAAp5B,MACAq5B,EAAAQ,OAAAT,EAAAU,IACAC,GAAAV,EAAA,SAAA5rB,EAAAyS,GACAmZ,EAAA3xB,KAAA2xB,EAAA3xB,IAAAsyB,kBACAJ,EAAA1uB,KAAAmuB,KAVAU,GAAAV,EAAA,OAAA5rB,EAAAyS,GACAmZ,EAAA3xB,KAAA2xB,EAAA3xB,IAAAyG,UACAwrB,EAAAzuB,KAAAmuB,IAaA,GAAAM,EAAA13B,OAAA,CACA,IAAAg4B,EAAA,WACA,QAAAj4B,EAAA,EAAqBA,EAAA23B,EAAA13B,OAA2BD,IAChD+3B,GAAAJ,EAAA33B,GAAA,WAAAyL,EAAAyS,IAGAoZ,EACA9hB,GAAA/J,EAAA,SAAAwsB,GAEAA,IAYA,GARAL,EAAA33B,QACAuV,GAAA/J,EAAA,uBACA,QAAAzL,EAAA,EAAqBA,EAAA43B,EAAA33B,OAA8BD,IACnD+3B,GAAAH,EAAA53B,GAAA,mBAAAyL,EAAAyS,MAKAoZ,EACA,IAAA12B,KAAA42B,EACAE,EAAA92B,IAEAm3B,GAAAP,EAAA52B,GAAA,SAAAsd,IAAAqZ,GAMA,IAAAW,GAAA36B,OAAAsC,OAAA,MAEA,SAAA43B,GACAxnB,EACApB,GAEA,IAKA7O,EAAAq3B,EALAv0B,EAAAvF,OAAAsC,OAAA,MACA,IAAAoQ,EAEA,OAAAnN,EAGA,IAAA9C,EAAA,EAAaA,EAAAiQ,EAAAhQ,OAAiBD,IAC9Bq3B,EAAApnB,EAAAjQ,GACAq3B,EAAAc,YAEAd,EAAAc,UAAAD,IAEAp1B,EAAAs1B,GAAAf,MACAA,EAAA3xB,IAAAgL,GAAA7B,EAAArS,SAAA,aAAA66B,EAAAxnB,MAAA,GAGA,OAAA/M,EAGA,SAAAs1B,GAAAf,GACA,OAAAA,EAAAgB,SAAAhB,EAAA,SAAA95B,OAAAsG,KAAAwzB,EAAAc,WAAA,IAA4EG,KAAA,KAG5E,SAAAP,GAAAV,EAAA77B,EAAAiQ,EAAAyS,EAAAqZ,GACA,IAAAz2B,EAAAu2B,EAAA3xB,KAAA2xB,EAAA3xB,IAAAlK,GACA,GAAAsF,EACA,IACAA,EAAA2K,EAAAvB,IAAAmtB,EAAA5rB,EAAAyS,EAAAqZ,GACK,MAAA9zB,IACLsO,GAAAtO,GAAAgI,EAAA5P,QAAA,aAAAw7B,EAAA,SAAA77B,EAAA,UAKA,IAAA+8B,GAAA,CACA/W,GACAtR,IAKA,SAAAsoB,GAAAta,EAAAzS,GACA,IAAAhE,EAAAgE,EAAAtB,iBACA,KAAAvM,EAAA6J,KAAA,IAAAA,EAAAQ,KAAAxM,QAAAg9B,iBAGAh7B,EAAAygB,EAAAnU,KAAA+L,SAAArY,EAAAgO,EAAA1B,KAAA+L,QAAA,CAGA,IAAAlV,EAAAsR,EAAAmD,EACAnL,EAAAuB,EAAAvB,IACAwuB,EAAAxa,EAAAnU,KAAA+L,OAAA,GACAA,EAAArK,EAAA1B,KAAA+L,OAAA,GAMA,IAAAlV,KAJAhD,EAAAkY,EAAAxJ,UACAwJ,EAAArK,EAAA1B,KAAA+L,MAAApT,EAAA,GAAwCoT,IAGxCA,EACA5D,EAAA4D,EAAAlV,GACAyU,EAAAqjB,EAAA93B,GACAyU,IAAAnD,GACAymB,GAAAzuB,EAAAtJ,EAAAsR,GASA,IAAAtR,KAHAoG,IAAAE,KAAA4O,EAAA9X,QAAA06B,EAAA16B,OACA26B,GAAAzuB,EAAA,QAAA4L,EAAA9X,OAEA06B,EACAj7B,EAAAqY,EAAAlV,MACAyuB,GAAAzuB,GACAsJ,EAAA0uB,kBAAAxJ,GAAAE,GAAA1uB,IACOmuB,GAAAnuB,IACPsJ,EAAA4sB,gBAAAl2B,KAMA,SAAA+3B,GAAApT,EAAA3kB,EAAA5C,GACAunB,EAAAwL,QAAAvwB,QAAA,QACAq4B,GAAAtT,EAAA3kB,EAAA5C,GACGmxB,GAAAvuB,GAGHsuB,GAAAlxB,GACAunB,EAAAuR,gBAAAl2B,IAIA5C,EAAA,oBAAA4C,GAAA,UAAA2kB,EAAAwL,QACA,OACAnwB,EACA2kB,EAAA0L,aAAArwB,EAAA5C,IAEG+wB,GAAAnuB,GACH2kB,EAAA0L,aAAArwB,EAAAquB,GAAAruB,EAAA5C,IACGqxB,GAAAzuB,GACHsuB,GAAAlxB,GACAunB,EAAAqT,kBAAAxJ,GAAAE,GAAA1uB,IAEA2kB,EAAAuT,eAAA1J,GAAAxuB,EAAA5C,GAGA66B,GAAAtT,EAAA3kB,EAAA5C,GAIA,SAAA66B,GAAAtT,EAAA3kB,EAAA5C,GACA,GAAAkxB,GAAAlxB,GACAunB,EAAAuR,gBAAAl2B,OACG,CAKH,GACAoG,KAAAC,IACA,aAAAse,EAAAwL,SACA,gBAAAnwB,GAAA,KAAA5C,IAAAunB,EAAAwT,OACA,CACA,IAAAC,EAAA,SAAAv1B,GACAA,EAAAw1B,2BACA1T,EAAA2T,oBAAA,QAAAF,IAEAzT,EAAA5d,iBAAA,QAAAqxB,GAEAzT,EAAAwT,QAAA,EAEAxT,EAAA0L,aAAArwB,EAAA5C,IAIA,IAAA8X,GAAA,CACAjW,OAAA24B,GACAhvB,OAAAgvB,IAKA,SAAAW,GAAAjb,EAAAzS,GACA,IAAA8Z,EAAA9Z,EAAAvB,IACAH,EAAA0B,EAAA1B,KACAqvB,EAAAlb,EAAAnU,KACA,KACAtM,EAAAsM,EAAA6lB,cACAnyB,EAAAsM,EAAA6W,SACAnjB,EAAA27B,IACA37B,EAAA27B,EAAAxJ,cACAnyB,EAAA27B,EAAAxY,SALA,CAYA,IAAAyY,EAAA9J,GAAA9jB,GAGA6tB,EAAA/T,EAAAgU,mBACA37B,EAAA07B,KACAD,EAAAt8B,GAAAs8B,EAAAvJ,GAAAwJ,KAIAD,IAAA9T,EAAAiU,aACAjU,EAAA0L,aAAA,QAAAoI,GACA9T,EAAAiU,WAAAH,IAIA,IAyCAI,GAzCAC,GAAA,CACA75B,OAAAs5B,GACA3vB,OAAA2vB,IAaAQ,GAAA,MACAC,GAAA,MAQA,SAAAC,GAAA5kB,GAEA,GAAArX,EAAAqX,EAAA0kB,KAAA,CAEA,IAAArkB,EAAAtO,GAAA,iBACAiO,EAAAK,GAAA,GAAAvY,OAAAkY,EAAA0kB,IAAA1kB,EAAAK,IAAA,WACAL,EAAA0kB,IAKA/7B,EAAAqX,EAAA2kB,OACA3kB,EAAA6kB,OAAA,GAAA/8B,OAAAkY,EAAA2kB,IAAA3kB,EAAA6kB,QAAA,WACA7kB,EAAA2kB,KAMA,SAAAG,GAAAzkB,EAAA9C,EAAAH,GACA,IAAAoR,EAAAgW,GACA,gBAAA/V,IACA,IAAA5gB,EAAA0P,EAAAtQ,MAAA,KAAAD,WACA,OAAAa,GACAk3B,GAAA1kB,EAAAoO,EAAArR,EAAAoR,IAQA,IAAAwW,GAAAnnB,MAAA1L,IAAA2mB,OAAA3mB,GAAA,SAEA,SAAA8yB,GACArqB,EACA2C,EACAH,EACAqC,GAQA,GAAAulB,GAAA,CACA,IAAAE,EAAAtT,GACA7a,EAAAwG,EACAA,EAAAxG,EAAAouB,SAAA,SAAA32B,GACA,GAIAA,EAAA4F,SAAA5F,EAAA42B,eAEA52B,EAAAwjB,WAAAkT,GAIA12B,EAAAwjB,WAAA,GAIAxjB,EAAA4F,OAAAixB,gBAAA1mB,SAEA,OAAA5H,EAAA9J,MAAApG,KAAAmG,YAIAw3B,GAAA9xB,iBACAkI,EACA2C,EACAhL,GACA,CAAS6K,UAAAqC,WACTrC,GAIA,SAAA2nB,GACAnqB,EACA2C,EACAH,EACAoR,IAEAA,GAAAgW,IAAAP,oBACArpB,EACA2C,EAAA4nB,UAAA5nB,EACAH,GAIA,SAAAkoB,GAAArc,EAAAzS,GACA,IAAAhO,EAAAygB,EAAAnU,KAAAkL,MAAAxX,EAAAgO,EAAA1B,KAAAkL,IAAA,CAGA,IAAAA,EAAAxJ,EAAA1B,KAAAkL,IAAA,GACAC,EAAAgJ,EAAAnU,KAAAkL,IAAA,GACAwkB,GAAAhuB,EAAAvB,IACA2vB,GAAA5kB,GACAD,GAAAC,EAAAC,EAAAglB,GAAAF,GAAAD,GAAAtuB,EAAA5P,SACA49B,QAAA97B,GAGA,IAOA68B,GAPAC,GAAA,CACA56B,OAAA06B,GACA/wB,OAAA+wB,IAOA,SAAAG,GAAAxc,EAAAzS,GACA,IAAAhO,EAAAygB,EAAAnU,KAAAgQ,YAAAtc,EAAAgO,EAAA1B,KAAAgQ,UAAA,CAGA,IAAAnZ,EAAAsR,EACAhI,EAAAuB,EAAAvB,IACAywB,EAAAzc,EAAAnU,KAAAgQ,UAAA,GACAzK,EAAA7D,EAAA1B,KAAAgQ,UAAA,GAMA,IAAAnZ,KAJAhD,EAAA0R,EAAAhD,UACAgD,EAAA7D,EAAA1B,KAAAgQ,SAAArX,EAAA,GAA2C4M,IAG3CqrB,EACA/5B,KAAA0O,IACApF,EAAAtJ,GAAA,IAIA,IAAAA,KAAA0O,EAAA,CAKA,GAJA4C,EAAA5C,EAAA1O,GAIA,gBAAAA,GAAA,cAAAA,EAAA,CAEA,GADA6K,EAAAzB,WAA2ByB,EAAAzB,SAAA/J,OAAA,GAC3BiS,IAAAyoB,EAAA/5B,GAAkC,SAGlC,IAAAsJ,EAAA0wB,WAAA36B,QACAiK,EAAAsnB,YAAAtnB,EAAA0wB,WAAA,IAIA,aAAAh6B,GAAA,aAAAsJ,EAAA6mB,QAAA,CAGA7mB,EAAA2wB,OAAA3oB,EAEA,IAAA4oB,EAAAr9B,EAAAyU,GAAA,GAAAtT,OAAAsT,GACA6oB,GAAA7wB,EAAA4wB,KACA5wB,EAAAlM,MAAA88B,QAEK,iBAAAl6B,GAAA0vB,GAAApmB,EAAA6mB,UAAAtzB,EAAAyM,EAAAosB,WAAA,CAELkE,OAAA5mB,SAAAqJ,cAAA,OACAud,GAAAlE,UAAA,QAAApkB,EAAA,SACA,IAAAie,EAAAqK,GAAAhE,WACA,MAAAtsB,EAAAssB,WACAtsB,EAAAsnB,YAAAtnB,EAAAssB,YAEA,MAAArG,EAAAqG,WACAtsB,EAAAunB,YAAAtB,EAAAqG,iBAEK,GAKLtkB,IAAAyoB,EAAA/5B,GAIA,IACAsJ,EAAAtJ,GAAAsR,EACO,MAAAzO,QAQP,SAAAs3B,GAAA7wB,EAAA8wB,GACA,OAAA9wB,EAAA+wB,YACA,WAAA/wB,EAAA6mB,SACAmK,GAAAhxB,EAAA8wB,IACAG,GAAAjxB,EAAA8wB,IAIA,SAAAE,GAAAhxB,EAAA8wB,GAGA,IAAAI,GAAA,EAGA,IAAOA,EAAAxnB,SAAAynB,gBAAAnxB,EAA+C,MAAAzG,KACtD,OAAA23B,GAAAlxB,EAAAlM,QAAAg9B,EAGA,SAAAG,GAAAjxB,EAAA+D,GACA,IAAAjQ,EAAAkM,EAAAlM,MACAm6B,EAAAjuB,EAAAoxB,YACA,GAAA19B,EAAAu6B,GAAA,CACA,GAAAA,EAAAoD,OACA,OAAAh8B,EAAAvB,KAAAuB,EAAA0O,GAEA,GAAAkqB,EAAAqD,KACA,OAAAx9B,EAAAw9B,SAAAvtB,EAAAutB,OAGA,OAAAx9B,IAAAiQ,EAGA,IAAA8L,GAAA,CACAla,OAAA66B,GACAlxB,OAAAkxB,IAKAe,GAAA56B,EAAA,SAAA66B,GACA,IAAA54B,EAAA,GACA64B,EAAA,gBACAC,EAAA,QAOA,OANAF,EAAA37B,MAAA47B,GAAA7vB,QAAA,SAAAxL,GACA,GAAAA,EAAA,CACA,IAAAooB,EAAApoB,EAAAP,MAAA67B,GACAlT,EAAAzoB,OAAA,IAAA6C,EAAA4lB,EAAA,GAAA8S,QAAA9S,EAAA,GAAA8S,WAGA14B,IAIA,SAAA+4B,GAAA9xB,GACA,IAAA4W,EAAAmb,GAAA/xB,EAAA4W,OAGA,OAAA5W,EAAAgyB,YACAr5B,EAAAqH,EAAAgyB,YAAApb,GACAA,EAIA,SAAAmb,GAAAE,GACA,OAAA78B,MAAAC,QAAA48B,GACAn5B,EAAAm5B,GAEA,kBAAAA,EACAP,GAAAO,GAEAA,EAOA,SAAAC,GAAAxwB,EAAAywB,GACA,IACAC,EADAr5B,EAAA,GAGA,GAAAo5B,EAAA,CACA,IAAAzM,EAAAhkB,EACA,MAAAgkB,EAAAhlB,kBACAglB,IAAAhlB,kBAAAqW,OAEA2O,KAAA1lB,OACAoyB,EAAAN,GAAApM,EAAA1lB,QAEArH,EAAAI,EAAAq5B,IAKAA,EAAAN,GAAApwB,EAAA1B,QACArH,EAAAI,EAAAq5B,GAGA,IAAA3M,EAAA/jB,EACA,MAAA+jB,IAAAvzB,OACAuzB,EAAAzlB,OAAAoyB,EAAAN,GAAArM,EAAAzlB,QACArH,EAAAI,EAAAq5B,GAGA,OAAAr5B,EAKA,IAyBAs5B,GAzBAC,GAAA,MACAC,GAAA,iBACAC,GAAA,SAAAhX,EAAA1V,EAAApR,GAEA,GAAA49B,GAAAl2B,KAAA0J,GACA0V,EAAA5E,MAAA6b,YAAA3sB,EAAApR,QACG,GAAA69B,GAAAn2B,KAAA1H,GACH8mB,EAAA5E,MAAA6b,YAAA76B,EAAAkO,GAAApR,EAAA0C,QAAAm7B,GAAA,qBACG,CACH,IAAAG,EAAAC,GAAA7sB,GACA,GAAA1Q,MAAAC,QAAAX,GAIA,QAAAuB,EAAA,EAAAkM,EAAAzN,EAAAwB,OAAuCD,EAAAkM,EAASlM,IAChDulB,EAAA5E,MAAA8b,GAAAh+B,EAAAuB,QAGAulB,EAAA5E,MAAA8b,GAAAh+B,IAKAk+B,GAAA,sBAGAD,GAAA77B,EAAA,SAAAqQ,GAGA,GAFAkrB,OAAAxoB,SAAAqJ,cAAA,OAAA0D,MACAzP,EAAAhQ,EAAAgQ,GACA,WAAAA,QAAAkrB,GACA,OAAAlrB,EAGA,IADA,IAAA0rB,EAAA1rB,EAAA1P,OAAA,GAAAF,cAAA4P,EAAAzP,MAAA,GACAzB,EAAA,EAAiBA,EAAA28B,GAAA18B,OAAwBD,IAAA,CACzC,IAAA6P,EAAA8sB,GAAA38B,GAAA48B,EACA,GAAA/sB,KAAAusB,GACA,OAAAvsB,KAKA,SAAAgtB,GAAA3e,EAAAzS,GACA,IAAA1B,EAAA0B,EAAA1B,KACAqvB,EAAAlb,EAAAnU,KAEA,KAAAtM,EAAAsM,EAAAgyB,cAAAt+B,EAAAsM,EAAA4W,QACAljB,EAAA27B,EAAA2C,cAAAt+B,EAAA27B,EAAAzY,QADA,CAMA,IAAAzO,EAAArC,EACA0V,EAAA9Z,EAAAvB,IACA4yB,EAAA1D,EAAA2C,YACAgB,EAAA3D,EAAA4D,iBAAA5D,EAAAzY,OAAA,GAGAsc,EAAAH,GAAAC,EAEApc,EAAAmb,GAAArwB,EAAA1B,KAAA4W,QAAA,GAKAlV,EAAA1B,KAAAizB,gBAAAp/B,EAAA+iB,EAAArU,QACA5J,EAAA,GAAeie,GACfA,EAEA,IAAAuc,EAAAjB,GAAAxwB,GAAA,GAEA,IAAAoE,KAAAotB,EACAx/B,EAAAy/B,EAAArtB,KACA0sB,GAAAhX,EAAA1V,EAAA,IAGA,IAAAA,KAAAqtB,EACAhrB,EAAAgrB,EAAArtB,GACAqC,IAAA+qB,EAAAptB,IAEA0sB,GAAAhX,EAAA1V,EAAA,MAAAqC,EAAA,GAAAA,IAKA,IAAAyO,GAAA,CACA9gB,OAAAg9B,GACArzB,OAAAqzB,IAKAM,GAAA,MAMA,SAAAC,GAAA7X,EAAA8T,GAEA,GAAAA,QAAAmC,QAKA,GAAAjW,EAAA8X,UACAhE,EAAA74B,QAAA,QACA64B,EAAAt5B,MAAAo9B,IAAArxB,QAAA,SAAAzK,GAAoD,OAAAkkB,EAAA8X,UAAAhhC,IAAAgF,KAEpDkkB,EAAA8X,UAAAhhC,IAAAg9B,OAEG,CACH,IAAAnnB,EAAA,KAAAqT,EAAA+X,aAAA,kBACAprB,EAAA1R,QAAA,IAAA64B,EAAA,QACA9T,EAAA0L,aAAA,SAAA/e,EAAAmnB,GAAAmC,SASA,SAAA+B,GAAAhY,EAAA8T,GAEA,GAAAA,QAAAmC,QAKA,GAAAjW,EAAA8X,UACAhE,EAAA74B,QAAA,QACA64B,EAAAt5B,MAAAo9B,IAAArxB,QAAA,SAAAzK,GAAoD,OAAAkkB,EAAA8X,UAAAj9B,OAAAiB,KAEpDkkB,EAAA8X,UAAAj9B,OAAAi5B,GAEA9T,EAAA8X,UAAAp9B,QACAslB,EAAAuR,gBAAA,aAEG,CACH,IAAA5kB,EAAA,KAAAqT,EAAA+X,aAAA,kBACAE,EAAA,IAAAnE,EAAA,IACA,MAAAnnB,EAAA1R,QAAAg9B,IAAA,EACAtrB,IAAA/Q,QAAAq8B,EAAA,KAEAtrB,IAAAspB,OACAtpB,EACAqT,EAAA0L,aAAA,QAAA/e,GAEAqT,EAAAuR,gBAAA,UAOA,SAAA2G,GAAAttB,GACA,GAAAA,EAAA,CAIA,qBAAAA,EAAA,CACA,IAAArN,EAAA,GAKA,OAJA,IAAAqN,EAAAutB,KACAh7B,EAAAI,EAAA66B,GAAAxtB,EAAAN,MAAA,MAEAnN,EAAAI,EAAAqN,GACArN,EACG,wBAAAqN,EACHwtB,GAAAxtB,QADG,GAKH,IAAAwtB,GAAA98B,EAAA,SAAAgP,GACA,OACA+tB,WAAA/tB,EAAA,SACAguB,aAAAhuB,EAAA,YACAiuB,iBAAAjuB,EAAA,gBACAkuB,WAAAluB,EAAA,SACAmuB,aAAAnuB,EAAA,YACAouB,iBAAApuB,EAAA,mBAIAquB,GAAA33B,IAAAU,GACAk3B,GAAA,aACAC,GAAA,YAGAC,GAAA,aACAC,GAAA,gBACAC,GAAA,YACAC,GAAA,eACAN,UAEAvgC,IAAA6I,OAAAi4B,sBACA9gC,IAAA6I,OAAAk4B,wBAEAL,GAAA,mBACAC,GAAA,4BAEA3gC,IAAA6I,OAAAm4B,qBACAhhC,IAAA6I,OAAAo4B,uBAEAL,GAAA,kBACAC,GAAA,uBAKA,IAAAK,GAAAt4B,EACAC,OAAAs4B,sBACAt4B,OAAAs4B,sBAAAz8B,KAAAmE,QACA8M,WACA,SAAAxS,GAA8C,OAAAA,KAE9C,SAAAi+B,GAAAj+B,GACA+9B,GAAA,WACAA,GAAA/9B,KAIA,SAAAk+B,GAAAzZ,EAAA8T,GACA,IAAA4F,EAAA1Z,EAAAgU,qBAAAhU,EAAAgU,mBAAA,IACA0F,EAAAz+B,QAAA64B,GAAA,IACA4F,EAAA/1B,KAAAmwB,GACA+D,GAAA7X,EAAA8T,IAIA,SAAA6F,GAAA3Z,EAAA8T,GACA9T,EAAAgU,oBACAn5B,EAAAmlB,EAAAgU,mBAAAF,GAEAkE,GAAAhY,EAAA8T,GAGA,SAAA8F,GACA5Z,EACA6Z,EACAprB,GAEA,IAAAwN,EAAA6d,GAAA9Z,EAAA6Z,GACAhwB,EAAAoS,EAAApS,KACA6T,EAAAzB,EAAAyB,QACAqc,EAAA9d,EAAA8d,UACA,IAAAlwB,EAAc,OAAA4E,IACd,IAAAsB,EAAAlG,IAAA+uB,GAAAG,GAAAE,GACAe,EAAA,EACAzJ,EAAA,WACAvQ,EAAA2T,oBAAA5jB,EAAAkqB,GACAxrB,KAEAwrB,EAAA,SAAA/7B,GACAA,EAAA4F,SAAAkc,KACAga,GAAAD,GACAxJ,KAIAxiB,WAAA,WACAisB,EAAAD,GACAxJ,KAEG7S,EAAA,GACHsC,EAAA5d,iBAAA2N,EAAAkqB,GAGA,IAAAC,GAAA,yBAEA,SAAAJ,GAAA9Z,EAAA6Z,GACA,IASAhwB,EATAswB,EAAAl5B,OAAAm5B,iBAAApa,GAEAqa,GAAAF,EAAArB,GAAA,cAAAt+B,MAAA,MACA8/B,GAAAH,EAAArB,GAAA,iBAAAt+B,MAAA,MACA+/B,EAAAC,GAAAH,EAAAC,GACAG,GAAAN,EAAAnB,GAAA,cAAAx+B,MAAA,MACAkgC,GAAAP,EAAAnB,GAAA,iBAAAx+B,MAAA,MACAmgC,EAAAH,GAAAC,EAAAC,GAGAhd,EAAA,EACAqc,EAAA,EAEAF,IAAAjB,GACA2B,EAAA,IACA1wB,EAAA+uB,GACAlb,EAAA6c,EACAR,EAAAO,EAAA5/B,QAEGm/B,IAAAhB,GACH8B,EAAA,IACA9wB,EAAAgvB,GACAnb,EAAAid,EACAZ,EAAAW,EAAAhgC,SAGAgjB,EAAApkB,KAAAqP,IAAA4xB,EAAAI,GACA9wB,EAAA6T,EAAA,EACA6c,EAAAI,EACA/B,GACAC,GACA,KACAkB,EAAAlwB,EACAA,IAAA+uB,GACA0B,EAAA5/B,OACAggC,EAAAhgC,OACA,GAEA,IAAAkgC,EACA/wB,IAAA+uB,IACAsB,GAAAt5B,KAAAu5B,EAAArB,GAAA,aACA,OACAjvB,OACA6T,UACAqc,YACAa,gBAIA,SAAAJ,GAAAK,EAAAC,GAEA,MAAAD,EAAAngC,OAAAogC,EAAApgC,OACAmgC,IAAArjC,OAAAqjC,GAGA,OAAAvhC,KAAAqP,IAAAhM,MAAA,KAAAm+B,EAAAzgC,IAAA,SAAA1C,EAAA8C,GACA,OAAAsgC,GAAApjC,GAAAojC,GAAAF,EAAApgC,OAQA,SAAAsgC,GAAAC,GACA,WAAAxS,OAAAwS,EAAA9+B,MAAA,MAAAN,QAAA,UAKA,SAAAq/B,GAAA/0B,EAAAg1B,GACA,IAAAlb,EAAA9Z,EAAAvB,IAGAtM,EAAA2nB,EAAAyR,YACAzR,EAAAyR,SAAA0J,WAAA,EACAnb,EAAAyR,YAGA,IAAAjtB,EAAA0zB,GAAAhyB,EAAA1B,KAAAkqB,YACA,IAAAx2B,EAAAsM,KAKAnM,EAAA2nB,EAAAob,WAAA,IAAApb,EAAAqR,SAAA,CAIA,IAAA8G,EAAA3zB,EAAA2zB,IACAtuB,EAAArF,EAAAqF,KACAwuB,EAAA7zB,EAAA6zB,WACAC,EAAA9zB,EAAA8zB,aACAC,EAAA/zB,EAAA+zB,iBACA8C,EAAA72B,EAAA62B,YACAC,EAAA92B,EAAA82B,cACAC,EAAA/2B,EAAA+2B,kBACAC,EAAAh3B,EAAAg3B,YACAP,EAAAz2B,EAAAy2B,MACAQ,EAAAj3B,EAAAi3B,WACAC,EAAAl3B,EAAAk3B,eACAC,EAAAn3B,EAAAm3B,aACAC,EAAAp3B,EAAAo3B,OACAC,EAAAr3B,EAAAq3B,YACAC,EAAAt3B,EAAAs3B,gBACAC,EAAAv3B,EAAAu3B,SAMAzlC,EAAAmiB,GACAujB,EAAAvjB,GAAAjiB,OACA,MAAAwlC,KAAAtlC,OACAJ,EAAA0lC,EAAA1lC,QACA0lC,IAAAtlC,OAGA,IAAAulC,GAAA3lC,EAAAwiB,aAAA5S,EAAAb,aAEA,IAAA42B,GAAAL,GAAA,KAAAA,EAAA,CAIA,IAAAM,EAAAD,GAAAZ,EACAA,EACAhD,EACA8D,EAAAF,GAAAV,EACAA,EACAhD,EACA6D,EAAAH,GAAAX,EACAA,EACAhD,EAEA+D,EAAAJ,GACAN,GACAH,EACAc,EAAAL,GACA,oBAAAL,IACAX,EACAsB,EAAAN,GACAJ,GACAJ,EACAe,EAAAP,GACAH,GACAJ,EAEAe,EAAAziC,EACAtB,EAAAqjC,GACAA,EAAAd,MACAc,GAGM,EAIN,IAAAW,GAAA,IAAAvE,IAAAz2B,GACAi7B,EAAAC,GAAAN,GAEA7tB,EAAAuR,EAAAob,SAAA38B,EAAA,WACAi+B,IACA/C,GAAA3Z,EAAAoc,GACAzC,GAAA3Z,EAAAmc,IAEA1tB,EAAA0sB,WACAuB,GACA/C,GAAA3Z,EAAAkc,GAEAM,KAAAxc,IAEAuc,KAAAvc,GAEAA,EAAAob,SAAA,OAGAl1B,EAAA1B,KAAAq4B,MAEA5sB,GAAA/J,EAAA,oBACA,IAAAxP,EAAAspB,EAAAiK,WACA6S,EAAApmC,KAAAqmC,UAAArmC,EAAAqmC,SAAA72B,EAAA7K,KACAyhC,GACAA,EAAAv4B,MAAA2B,EAAA3B,KACAu4B,EAAAn4B,IAAA8sB,UAEAqL,EAAAn4B,IAAA8sB,WAEA6K,KAAAtc,EAAAvR,KAKA4tB,KAAArc,GACA0c,IACAjD,GAAAzZ,EAAAkc,GACAzC,GAAAzZ,EAAAmc,GACA3C,GAAA,WACAG,GAAA3Z,EAAAkc,GACAztB,EAAA0sB,YACA1B,GAAAzZ,EAAAoc,GACAO,IACAK,GAAAP,GACA1uB,WAAAU,EAAAguB,GAEA7C,GAAA5Z,EAAAnW,EAAA4E,QAOAvI,EAAA1B,KAAAq4B,OACA3B,OACAoB,KAAAtc,EAAAvR,IAGAiuB,GAAAC,GACAluB,MAIA,SAAAwuB,GAAA/2B,EAAAkpB,GACA,IAAApP,EAAA9Z,EAAAvB,IAGAtM,EAAA2nB,EAAAob,YACApb,EAAAob,SAAAD,WAAA,EACAnb,EAAAob,YAGA,IAAA52B,EAAA0zB,GAAAhyB,EAAA1B,KAAAkqB,YACA,GAAAx2B,EAAAsM,IAAA,IAAAwb,EAAAqR,SACA,OAAAjC,IAIA,IAAA/2B,EAAA2nB,EAAAyR,UAAA,CAIA,IAAA0G,EAAA3zB,EAAA2zB,IACAtuB,EAAArF,EAAAqF,KACA2uB,EAAAh0B,EAAAg0B,WACAC,EAAAj0B,EAAAi0B,aACAC,EAAAl0B,EAAAk0B,iBACAwE,EAAA14B,EAAA04B,YACAD,EAAAz4B,EAAAy4B,MACAE,EAAA34B,EAAA24B,WACAC,EAAA54B,EAAA44B,eACAC,EAAA74B,EAAA64B,WACAtB,EAAAv3B,EAAAu3B,SAEAW,GAAA,IAAAvE,IAAAz2B,GACAi7B,EAAAC,GAAAK,GAEAK,EAAAtjC,EACAtB,EAAAqjC,GACAA,EAAAkB,MACAlB,GAGM,EAIN,IAAAttB,EAAAuR,EAAAyR,SAAAhzB,EAAA,WACAuhB,EAAAiK,YAAAjK,EAAAiK,WAAA8S,WACA/c,EAAAiK,WAAA8S,SAAA72B,EAAA7K,KAAA,MAEAqhC,IACA/C,GAAA3Z,EAAAyY,GACAkB,GAAA3Z,EAAA0Y,IAEAjqB,EAAA0sB,WACAuB,GACA/C,GAAA3Z,EAAAwY,GAEA4E,KAAApd,KAEAoP,IACA+N,KAAAnd,IAEAA,EAAAyR,SAAA,OAGA4L,EACAA,EAAAE,GAEAA,IAGA,SAAAA,IAEA9uB,EAAA0sB,aAIAj1B,EAAA1B,KAAAq4B,MAAA7c,EAAAiK,cACAjK,EAAAiK,WAAA8S,WAAA/c,EAAAiK,WAAA8S,SAAA,KAA6D72B,EAAA,KAAAA,GAE7Dg3B,KAAAld,GACA0c,IACAjD,GAAAzZ,EAAAwY,GACAiB,GAAAzZ,EAAA0Y,GACAc,GAAA,WACAG,GAAA3Z,EAAAwY,GACA/pB,EAAA0sB,YACA1B,GAAAzZ,EAAAyY,GACAkE,IACAK,GAAAM,GACAvvB,WAAAU,EAAA6uB,GAEA1D,GAAA5Z,EAAAnW,EAAA4E,QAMAwuB,KAAAjd,EAAAvR,GACAiuB,GAAAC,GACAluB,MAsBA,SAAAuuB,GAAA9jC,GACA,wBAAAA,IAAAe,MAAAf,GASA,SAAA0jC,GAAArhC,GACA,GAAArD,EAAAqD,GACA,SAEA,IAAAiiC,EAAAjiC,EAAA+T,IACA,OAAAjX,EAAAmlC,GAEAZ,GACAhjC,MAAAC,QAAA2jC,GACAA,EAAA,GACAA,IAGAjiC,EAAAqB,SAAArB,EAAAb,QAAA,EAIA,SAAA+iC,GAAA5hC,EAAAqK,IACA,IAAAA,EAAA1B,KAAAq4B,MACA5B,GAAA/0B,GAIA,IAAAwoB,GAAA1tB,EAAA,CACA1G,OAAAmjC,GACA9O,SAAA8O,GACA5iC,OAAA,SAAAqL,EAAAkpB,IAEA,IAAAlpB,EAAA1B,KAAAq4B,KACAI,GAAA/2B,EAAAkpB,GAEAA,MAGC,GAEDsO,GAAA,CACAntB,GACA4jB,GACAe,GACA1gB,GACA4G,GACAsT,IAOApB,GAAAoQ,GAAAlmC,OAAAw7B,IAEA2K,GAAAvQ,GAAA,CAAiCb,WAAAe,aAQjC5rB,IAEA2M,SAAAjM,iBAAA,6BACA,IAAA4d,EAAA3R,SAAAynB,cACA9V,KAAA4d,QACAC,GAAA7d,EAAA,WAKA,IAAA8d,GAAA,CACAl3B,SAAA,SAAAoZ,EAAA+d,EAAA73B,EAAAyS,GACA,WAAAzS,EAAA3B,KAEAoU,EAAAhU,MAAAgU,EAAAhU,IAAAq5B,UACA/tB,GAAA/J,EAAA,uBACA43B,GAAArL,iBAAAzS,EAAA+d,EAAA73B,KAGA+3B,GAAAje,EAAA+d,EAAA73B,EAAA5P,SAEA0pB,EAAAge,UAAA,GAAA3jC,IAAAzD,KAAAopB,EAAA9pB,QAAAgoC,MACK,aAAAh4B,EAAA3B,KAAA4mB,GAAAnL,EAAAnW,SACLmW,EAAA+V,YAAAgI,EAAAnL,UACAmL,EAAAnL,UAAAlQ,OACA1C,EAAA5d,iBAAA,mBAAA+7B,IACAne,EAAA5d,iBAAA,iBAAAg8B,IAKApe,EAAA5d,iBAAA,SAAAg8B,IAEA18B,KACAse,EAAA4d,QAAA,MAMAnL,iBAAA,SAAAzS,EAAA+d,EAAA73B,GACA,cAAAA,EAAA3B,IAAA,CACA05B,GAAAje,EAAA+d,EAAA73B,EAAA5P,SAKA,IAAA+nC,EAAAre,EAAAge,UACAM,EAAAte,EAAAge,UAAA,GAAA3jC,IAAAzD,KAAAopB,EAAA9pB,QAAAgoC,IACA,GAAAI,EAAAC,KAAA,SAAAC,EAAA/jC,GAA2C,OAAAmD,EAAA4gC,EAAAH,EAAA5jC,MAAyC,CAGpF,IAAAgkC,EAAAze,EAAAyL,SACAsS,EAAAtlC,MAAA8lC,KAAA,SAAApmC,GAA6C,OAAAumC,GAAAvmC,EAAAmmC,KAC7CP,EAAAtlC,QAAAslC,EAAA3a,UAAAsb,GAAAX,EAAAtlC,MAAA6lC,GACAG,GACAZ,GAAA7d,EAAA,cAOA,SAAAie,GAAAje,EAAA+d,EAAAz0B,GACAq1B,GAAA3e,EAAA+d,EAAAz0B,IAEA7H,IAAAE,KACAoM,WAAA,WACA4wB,GAAA3e,EAAA+d,EAAAz0B,IACK,GAIL,SAAAq1B,GAAA3e,EAAA+d,EAAAz0B,GACA,IAAA7Q,EAAAslC,EAAAtlC,MACAmmC,EAAA5e,EAAAyL,SACA,IAAAmT,GAAAhlC,MAAAC,QAAApB,GAAA,CASA,IADA,IAAA4yB,EAAAwT,EACApkC,EAAA,EAAAgC,EAAAujB,EAAA9pB,QAAAwE,OAAwCD,EAAAgC,EAAOhC,IAE/C,GADAokC,EAAA7e,EAAA9pB,QAAAuE,GACAmkC,EACAvT,EAAA7sB,EAAA/F,EAAAylC,GAAAW,KAAA,EACAA,EAAAxT,eACAwT,EAAAxT,iBAGA,GAAAztB,EAAAsgC,GAAAW,GAAApmC,GAIA,YAHAunB,EAAA8e,gBAAArkC,IACAulB,EAAA8e,cAAArkC,IAMAmkC,IACA5e,EAAA8e,eAAA,IAIA,SAAAJ,GAAAjmC,EAAAvC,GACA,OAAAA,EAAA+H,MAAA,SAAAugC,GAAqC,OAAA5gC,EAAA4gC,EAAA/lC,KAGrC,SAAAylC,GAAAW,GACA,iBAAAA,EACAA,EAAAvJ,OACAuJ,EAAApmC,MAGA,SAAA0lC,GAAAjgC,GACAA,EAAA4F,OAAA4xB,WAAA,EAGA,SAAA0I,GAAAlgC,GAEAA,EAAA4F,OAAA4xB,YACAx3B,EAAA4F,OAAA4xB,WAAA,EACAmI,GAAA3/B,EAAA4F,OAAA,UAGA,SAAA+5B,GAAA7d,EAAAnW,GACA,IAAA3L,EAAAmQ,SAAAoT,YAAA,cACAvjB,EAAA6gC,UAAAl1B,GAAA,MACAmW,EAAAgf,cAAA9gC,GAMA,SAAA+gC,GAAA/4B,GACA,OAAAA,EAAAhB,mBAAAgB,EAAA1B,MAAA0B,EAAA1B,KAAAkqB,WAEAxoB,EADA+4B,GAAA/4B,EAAAhB,kBAAAqW,QAIA,IAAAshB,GAAA,CACA//B,KAAA,SAAAkjB,EAAA/D,EAAA/V,GACA,IAAAzN,EAAAwjB,EAAAxjB,MAEAyN,EAAA+4B,GAAA/4B,GACA,IAAAg5B,EAAAh5B,EAAA1B,MAAA0B,EAAA1B,KAAAkqB,WACAyQ,EAAAnf,EAAAof,mBACA,SAAApf,EAAA5E,MAAAikB,QAAA,GAAArf,EAAA5E,MAAAikB,QACA5mC,GAAAymC,GACAh5B,EAAA1B,KAAAq4B,MAAA,EACA5B,GAAA/0B,EAAA,WACA8Z,EAAA5E,MAAAikB,QAAAF,KAGAnf,EAAA5E,MAAAikB,QAAA5mC,EAAA0mC,EAAA,QAIAl7B,OAAA,SAAA+b,EAAA/D,EAAA/V,GACA,IAAAzN,EAAAwjB,EAAAxjB,MACA2qB,EAAAnH,EAAAmH,SAGA,IAAA3qB,KAAA2qB,EAAA,CACAld,EAAA+4B,GAAA/4B,GACA,IAAAg5B,EAAAh5B,EAAA1B,MAAA0B,EAAA1B,KAAAkqB,WACAwQ,GACAh5B,EAAA1B,KAAAq4B,MAAA,EACApkC,EACAwiC,GAAA/0B,EAAA,WACA8Z,EAAA5E,MAAAikB,QAAArf,EAAAof,qBAGAnC,GAAA/2B,EAAA,WACA8Z,EAAA5E,MAAAikB,QAAA,UAIArf,EAAA5E,MAAAikB,QAAA5mC,EAAAunB,EAAAof,mBAAA,SAIAE,OAAA,SACAtf,EACA+d,EACA73B,EACAyS,EACAqZ,GAEAA,IACAhS,EAAA5E,MAAAikB,QAAArf,EAAAof,sBAKAG,GAAA,CACA3lB,MAAAkkB,GACAjB,SAKA2C,GAAA,CACAl1B,KAAAjR,OACAuiC,OAAA7vB,QACAosB,IAAApsB,QACA0zB,KAAApmC,OACAwQ,KAAAxQ,OACAg/B,WAAAh/B,OACAm/B,WAAAn/B,OACAi/B,aAAAj/B,OACAo/B,aAAAp/B,OACAk/B,iBAAAl/B,OACAq/B,iBAAAr/B,OACAgiC,YAAAhiC,OACAkiC,kBAAAliC,OACAiiC,cAAAjiC,OACA0iC,SAAA,CAAAvT,OAAAnvB,OAAArB,SAKA,SAAA0nC,GAAAx5B,GACA,IAAAy5B,EAAAz5B,KAAAtB,iBACA,OAAA+6B,KAAAj9B,KAAAxM,QAAA6jB,SACA2lB,GAAA/hB,GAAAgiB,EAAAl7B,WAEAyB,EAIA,SAAA05B,GAAAzjB,GACA,IAAA3X,EAAA,GACAtO,EAAAimB,EAAAllB,SAEA,QAAAoE,KAAAnF,EAAAwV,UACAlH,EAAAnJ,GAAA8gB,EAAA9gB,GAIA,IAAAic,EAAAphB,EAAAylB,iBACA,QAAA7R,KAAAwN,EACA9S,EAAA7I,EAAAmO,IAAAwN,EAAAxN,GAEA,OAAAtF,EAGA,SAAAq7B,GAAAxoC,EAAAyoC,GACA,oBAAAl/B,KAAAk/B,EAAAv7B,KACA,OAAAlN,EAAA,cACA0S,MAAA+1B,EAAAl7B,iBAAA8G,YAKA,SAAAq0B,GAAA75B,GACA,MAAAA,IAAAxP,OACA,GAAAwP,EAAA1B,KAAAkqB,WACA,SAKA,SAAAsR,GAAAp6B,EAAAq6B,GACA,OAAAA,EAAA5kC,MAAAuK,EAAAvK,KAAA4kC,EAAA17B,MAAAqB,EAAArB,IAGA,IAAA27B,GAAA,SAAApkC,GAAkC,OAAAA,EAAAyI,KAAAmB,GAAA5J,IAElCqkC,GAAA,SAAAxoC,GAAqC,eAAAA,EAAA2S,MAErC81B,GAAA,CACA91B,KAAA,aACAP,MAAAy1B,GACAzlB,UAAA,EAEArkB,OAAA,SAAA2B,GACA,IAAA6f,EAAA3gB,KAEAkO,EAAAlO,KAAAid,OAAArH,QACA,GAAA1H,IAKAA,IAAAsjB,OAAAmY,IAEAz7B,EAAA/J,QAAA,CAKQ,EAQR,IAAA+kC,EAAAlpC,KAAAkpC,KAGQ,EASR,IAAAK,EAAAr7B,EAAA,GAIA,GAAAs7B,GAAAxpC,KAAAC,QACA,OAAAspC,EAKA,IAAAl6B,EAAA85B,GAAAI,GAEA,IAAAl6B,EACA,OAAAk6B,EAGA,GAAAvpC,KAAA8pC,SACA,OAAAR,GAAAxoC,EAAAyoC,GAMA,IAAAv8B,EAAA,gBAAAhN,KAAA,SACAqP,EAAAvK,IAAA,MAAAuK,EAAAvK,IACAuK,EAAAN,UACA/B,EAAA,UACAA,EAAAqC,EAAArB,IACA/L,EAAAoN,EAAAvK,KACA,IAAAhC,OAAAuM,EAAAvK,KAAAJ,QAAAsI,GAAAqC,EAAAvK,IAAAkI,EAAAqC,EAAAvK,IACAuK,EAAAvK,IAEA,IAAAmJ,GAAAoB,EAAApB,OAAAoB,EAAApB,KAAA,KAA8CkqB,WAAAkR,GAAArpC,MAC9C+pC,EAAA/pC,KAAAglB,OACA0kB,EAAAP,GAAAY,GAQA,GAJA16B,EAAApB,KAAAmG,YAAA/E,EAAApB,KAAAmG,WAAA4zB,KAAA4B,MACAv6B,EAAApB,KAAAq4B,MAAA,GAIAoD,GACAA,EAAAz7B,OACAw7B,GAAAp6B,EAAAq6B,KACAv6B,GAAAu6B,MAEAA,EAAA/6B,oBAAA+6B,EAAA/6B,kBAAAqW,OAAAjW,WACA,CAGA,IAAAuuB,EAAAoM,EAAAz7B,KAAAkqB,WAAAvxB,EAAA,GAAwDqH,GAExD,cAAAi7B,EAOA,OALAlpC,KAAA8pC,UAAA,EACApwB,GAAA4jB,EAAA,wBACA3c,EAAAmpB,UAAA,EACAnpB,EAAAkG,iBAEAyiB,GAAAxoC,EAAAyoC,GACO,cAAAL,EAAA,CACP,GAAA/5B,GAAAE,GACA,OAAA06B,EAEA,IAAAC,EACAhD,EAAA,WAAwCgD,KACxCtwB,GAAAzL,EAAA,aAAA+4B,GACAttB,GAAAzL,EAAA,iBAAA+4B,GACAttB,GAAA4jB,EAAA,sBAAAoJ,GAAgEsD,EAAAtD,KAIhE,OAAA6C,KAMA/1B,GAAA5M,EAAA,CACAoH,IAAAlL,OACAmnC,UAAAnnC,QACCmmC,WAEDz1B,GAAA01B,KAEA,IAAAgB,GAAA,CACA12B,SAEA22B,YAAA,WACA,IAAAxpB,EAAA3gB,KAEA0N,EAAA1N,KAAA8oB,QACA9oB,KAAA8oB,QAAA,SAAAnZ,EAAAiS,GACA,IAAAsH,EAAAd,GAAAzH,GAEAA,EAAAwI,UACAxI,EAAAqE,OACArE,EAAAypB,MACA,GACA,GAEAzpB,EAAAqE,OAAArE,EAAAypB,KACAlhB,IACAxb,EAAArN,KAAAsgB,EAAAhR,EAAAiS,KAIAziB,OAAA,SAAA2B,GAQA,IAPA,IAAAkN,EAAAhO,KAAAgO,KAAAhO,KAAAC,OAAAgO,KAAAD,KAAA,OACAlK,EAAArC,OAAAsC,OAAA,MACAsmC,EAAArqC,KAAAqqC,aAAArqC,KAAAkO,SACAo8B,EAAAtqC,KAAAid,OAAArH,SAAA,GACA1H,EAAAlO,KAAAkO,SAAA,GACAq8B,EAAAlB,GAAArpC,MAEAkE,EAAA,EAAmBA,EAAAomC,EAAAnmC,OAAwBD,IAAA,CAC3C,IAAAqB,EAAA+kC,EAAApmC,GACA,GAAAqB,EAAAyI,IACA,SAAAzI,EAAAT,KAAA,IAAAhC,OAAAyC,EAAAT,KAAAJ,QAAA,WACAwJ,EAAAd,KAAA7H,GACAzB,EAAAyB,EAAAT,KAAAS,GACWA,EAAA0I,OAAA1I,EAAA0I,KAAA,KAAuBkqB,WAAAoS,QASlC,GAAAF,EAAA,CAGA,IAFA,IAAAD,EAAA,GACAI,EAAA,GACAviB,EAAA,EAAuBA,EAAAoiB,EAAAlmC,OAA2B8jB,IAAA,CAClD,IAAAwiB,EAAAJ,EAAApiB,GACAwiB,EAAAx8B,KAAAkqB,WAAAoS,EACAE,EAAAx8B,KAAAy8B,IAAAD,EAAAr8B,IAAAu8B,wBACA7mC,EAAA2mC,EAAA3lC,KACAslC,EAAAh9B,KAAAq9B,GAEAD,EAAAp9B,KAAAq9B,GAGAzqC,KAAAoqC,KAAAtpC,EAAAkN,EAAA,KAAAo8B,GACApqC,KAAAwqC,UAGA,OAAA1pC,EAAAkN,EAAA,KAAAE,IAGA08B,QAAA,WACA,IAAA18B,EAAAlO,KAAAqqC,aACAJ,EAAAjqC,KAAAiqC,YAAAjqC,KAAA+T,MAAA,aACA7F,EAAA/J,QAAAnE,KAAA6qC,QAAA38B,EAAA,GAAAE,IAAA67B,KAMA/7B,EAAA8B,QAAA86B,IACA58B,EAAA8B,QAAA+6B,IACA78B,EAAA8B,QAAAg7B,IAKAhrC,KAAAirC,QAAAnzB,SAAAozB,KAAAC,aAEAj9B,EAAA8B,QAAA,SAAAzK,GACA,GAAAA,EAAA0I,KAAAm9B,MAAA,CACA,IAAA3hB,EAAAlkB,EAAA6I,IACAq2B,EAAAhb,EAAA5E,MACAqe,GAAAzZ,EAAAwgB,GACAxF,EAAA4G,UAAA5G,EAAA6G,gBAAA7G,EAAA8G,mBAAA,GACA9hB,EAAA5d,iBAAA22B,GAAA/Y,EAAA+hB,QAAA,SAAAtzB,EAAAvQ,GACAA,KAAA4F,SAAAkc,GAGA9hB,IAAA,aAAA0C,KAAA1C,EAAA8jC,gBACAhiB,EAAA2T,oBAAAoF,GAAAtqB,GACAuR,EAAA+hB,QAAA,KACApI,GAAA3Z,EAAAwgB,WAOAx2B,QAAA,CACAo3B,QAAA,SAAAphB,EAAAwgB,GAEA,IAAA7H,GACA,SAGA,GAAApiC,KAAA0rC,SACA,OAAA1rC,KAAA0rC,SAOA,IAAAjqB,EAAAgI,EAAAkiB,YACAliB,EAAAgU,oBACAhU,EAAAgU,mBAAAztB,QAAA,SAAAutB,GAAsDkE,GAAAhgB,EAAA8b,KAEtD+D,GAAA7f,EAAAwoB,GACAxoB,EAAAoD,MAAAikB,QAAA,OACA9oC,KAAAgpB,IAAA2M,YAAAlU,GACA,IAAAtL,EAAAotB,GAAA9hB,GAEA,OADAzhB,KAAAgpB,IAAA0M,YAAAjU,GACAzhB,KAAA0rC,SAAAv1B,EAAAkuB,gBAKA,SAAAyG,GAAAvlC,GAEAA,EAAA6I,IAAAo9B,SACAjmC,EAAA6I,IAAAo9B,UAGAjmC,EAAA6I,IAAAy2B,UACAt/B,EAAA6I,IAAAy2B,WAIA,SAAAkG,GAAAxlC,GACAA,EAAA0I,KAAA29B,OAAArmC,EAAA6I,IAAAu8B,wBAGA,SAAAK,GAAAzlC,GACA,IAAAsmC,EAAAtmC,EAAA0I,KAAAy8B,IACAkB,EAAArmC,EAAA0I,KAAA29B,OACAE,EAAAD,EAAAE,KAAAH,EAAAG,KACAC,EAAAH,EAAAI,IAAAL,EAAAK,IACA,GAAAH,GAAAE,EAAA,CACAzmC,EAAA0I,KAAAm9B,OAAA,EACA,IAAA3G,EAAAl/B,EAAA6I,IAAAyW,MACA4f,EAAA4G,UAAA5G,EAAA6G,gBAAA,aAAAQ,EAAA,MAAAE,EAAA,MACAvH,EAAA8G,mBAAA,MAIA,IAAAW,GAAA,CACArC,cACAK,oBAMA3kB,GAAAhd,OAAAe,eACAic,GAAAhd,OAAAU,iBACAsc,GAAAhd,OAAAW,kBACAqc,GAAAhd,OAAAa,mBACAmc,GAAAhd,OAAAY,oBAGAvC,EAAA2e,GAAA5lB,QAAAyU,WAAA40B,IACApiC,EAAA2e,GAAA5lB,QAAA+vB,WAAAwc,IAGA3mB,GAAAjjB,UAAA6mB,UAAA1e,EAAA28B,GAAAngC,EAGAse,GAAAjjB,UAAA6f,OAAA,SACAsH,EACA7H,GAGA,OADA6H,KAAAhf,EAAAoqB,GAAApL,QAAA5nB,EACA2nB,GAAAxpB,KAAAypB,EAAA7H,IAKAnX,GACA+M,WAAA,WACAjP,EAAAI,UACAA,IACAA,GAAAijB,KAAA,OAAArG,KAsBG,GAKYlkB,EAAA,wDC5vQf,IAAA8qC,EAGAA,EAAA,WACA,OAAAnsC,KADA,GAIA,IAEAmsC,KAAA,IAAA3lC,SAAA,iBACC,MAAAmB,GAED,kBAAA+C,SAAAyhC,EAAAzhC,QAOA0hC,EAAAlrC,QAAAirC,yBCnBA,SAAAE,EAAArmB,GAEAomB,EAAAlrC,QAAA8kB,EAA2B7kB,EAAQ,UAFnC,CASC,qBAAAmrC,WAAA,SAAAC,GACD,gBAAAxV,GAEA,IAAAyV,EAAA,GAGA,SAAArrC,EAAAsrC,GAGA,GAAAD,EAAAC,GACA,OAAAD,EAAAC,GAAAvrC,QAGA,IAAAkrC,EAAAI,EAAAC,GAAA,CACAvoC,EAAAuoC,EACAvmC,GAAA,EACAhF,QAAA,IAUA,OANA61B,EAAA0V,GAAApsC,KAAA+rC,EAAAlrC,QAAAkrC,IAAAlrC,QAAAC,GAGAirC,EAAAlmC,GAAA,EAGAkmC,EAAAlrC,QA0DA,OArDAC,EAAAurC,EAAA3V,EAGA51B,EAAAoE,EAAAinC,EAGArrC,EAAAC,EAAA,SAAAF,EAAA6S,EAAAhC,GACA5Q,EAAA8mC,EAAA/mC,EAAA6S,IACAtS,OAAAqI,eAAA5I,EAAA6S,EAAA,CAAkDlK,YAAA,EAAA+B,IAAAmG,KAKlD5Q,EAAAG,EAAA,SAAAJ,GACA,qBAAAoL,eAAAyZ,aACAtkB,OAAAqI,eAAA5I,EAAAoL,OAAAyZ,YAAA,CAAgE7jB,MAAA,WAEhET,OAAAqI,eAAA5I,EAAA,cAAyDgB,OAAA,KAQzDf,EAAAwrC,EAAA,SAAAzqC,EAAAgnC,GAEA,GADA,EAAAA,IAAAhnC,EAAAf,EAAAe,IACA,EAAAgnC,EAAA,OAAAhnC,EACA,KAAAgnC,GAAA,kBAAAhnC,QAAA4jB,WAAA,OAAA5jB,EACA,IAAAqM,EAAA9M,OAAAsC,OAAA,MAGA,GAFA5C,EAAAG,EAAAiN,GACA9M,OAAAqI,eAAAyE,EAAA,WAAiD1E,YAAA,EAAA3H,UACjD,EAAAgnC,GAAA,iBAAAhnC,EAAA,QAAA4C,KAAA5C,EAAAf,EAAAC,EAAAmN,EAAAzJ,EAAA,SAAAA,GAAwH,OAAA5C,EAAA4C,IAAqByB,KAAA,KAAAzB,IAC7I,OAAAyJ,GAIApN,EAAAyB,EAAA,SAAAwpC,GACA,IAAAr6B,EAAAq6B,KAAAtmB,WACA,WAAmC,OAAAsmB,EAAA,YACnC,WAAyC,OAAAA,GAEzC,OADAjrC,EAAAC,EAAA2Q,EAAA,IAAAA,GACAA,GAIA5Q,EAAA8mC,EAAA,SAAA2E,EAAA/6B,GAA8D,OAAApQ,OAAAa,UAAAsC,eAAAvE,KAAAusC,EAAA/6B,IAG9D1Q,EAAAmW,EAAA,GAIAnW,IAAAsjC,EAAA,QAnFA,CAsFA,CAEAoI,OACA,SAAAT,EAAAlrC,EAAAC,GAGA,IAAA2rC,EAAA3rC,EAAA,QACAirC,EAAAlrC,QAAA,SAAA8D,EAAA+nC,EAAA5oC,GAEA,GADA2oC,EAAA9nC,QACAnD,IAAAkrC,EAAA,OAAA/nC,EACA,OAAAb,GACA,uBAAA8B,GACA,OAAAjB,EAAA3E,KAAA0sC,EAAA9mC,IAEA,uBAAAA,EAAAiB,GACA,OAAAlC,EAAA3E,KAAA0sC,EAAA9mC,EAAAiB,IAEA,uBAAAjB,EAAAiB,EAAA3B,GACA,OAAAP,EAAA3E,KAAA0sC,EAAA9mC,EAAAiB,EAAA3B,IAGA,kBACA,OAAAP,EAAAoB,MAAA2mC,EAAA5mC,cAOA6mC,OACA,SAAAZ,EAAAlrC,GAEA,IAAA0D,EAAA,GAAuBA,eACvBwnC,EAAAlrC,QAAA,SAAA+rC,EAAAnoC,GACA,OAAAF,EAAAvE,KAAA4sC,EAAAnoC,KAMAooC,OACA,SAAAd,EAAAlrC,EAAAC,GAGA,IAAAgsC,EAAAhsC,EAAA,QACA2rC,EAAA3rC,EAAA,QACAisC,EAAAjsC,EAAA,OAAAA,CAAA,WACAirC,EAAAlrC,QAAA,SAAAmsC,EAAAC,GACA,IACAC,EADAC,EAAAL,EAAAE,GAAAre,YAEA,YAAAntB,IAAA2rC,QAAA3rC,IAAA0rC,EAAAJ,EAAAK,GAAAJ,IAAAE,EAAAR,EAAAS,KAMAE,OACA,SAAArB,EAAAlrC,EAAAC,GAIA,IAAAgB,EAAAhB,EAAA,QACAgsC,EAAAhsC,EAAA,QACAusC,EAAA,SAAAL,EAAAM,GAEA,GADAR,EAAAE,IACAlrC,EAAAwrC,IAAA,OAAAA,EAAA,MAAAC,UAAAD,EAAA,8BAEAvB,EAAAlrC,QAAA,CACAwL,IAAAjL,OAAAosC,iBAAA,gBACA,SAAAxjC,EAAAyjC,EAAAphC,GACA,IACAA,EAAAvL,EAAA,OAAAA,CAAAqF,SAAAnG,KAAAc,EAAA,QAAA4sC,EAAAtsC,OAAAa,UAAA,aAAAoK,IAAA,GACAA,EAAArC,EAAA,IACAyjC,IAAAzjC,aAAAhH,OACO,MAAAsE,GAAYmmC,GAAA,EACnB,gBAAAT,EAAAM,GAIA,OAHAD,EAAAL,EAAAM,GACAG,EAAAT,EAAAh8B,UAAAs8B,EACAjhC,EAAA2gC,EAAAM,GACAN,GAVA,CAYK,IAAG,QAAAxrC,GACR6rC,UAMAM,OACA,SAAA5B,EAAAlrC,GAEAkrC,EAAAlrC,QAAA,IAKA+sC,OACA,SAAA7B,EAAAlrC,EAAAC,GAEA,aAGA,IAAA4F,EAAA5F,EAAA,QACA+sC,EAAA/sC,EAAA,QACAgtC,EAAAhtC,EAAA,QACAirC,EAAAlrC,QAAA,SAAAgB,GACA,IAAAmrC,EAAAtmC,EAAA/G,MACAmE,EAAAgqC,EAAAd,EAAAlpC,QACAiqC,EAAAjoC,UAAAhC,OACAM,EAAAypC,EAAAE,EAAA,EAAAjoC,UAAA,QAAAtE,EAAAsC,GACA61B,EAAAoU,EAAA,EAAAjoC,UAAA,QAAAtE,EACAwsC,OAAAxsC,IAAAm4B,EAAA71B,EAAA+pC,EAAAlU,EAAA71B,GACA,MAAAkqC,EAAA5pC,EAAA4oC,EAAA5oC,KAAAvC,EACA,OAAAmrC,IAMAiB,OACA,SAAAlC,EAAAlrC,EAAAC,GAEA,IAAAotC,EAAAptC,EAAA,QACAqtC,EAAArtC,EAAA,OAAAA,CAAA,YACAstC,EAAAttC,EAAA,QACAirC,EAAAlrC,QAAAC,EAAA,QAAAutC,kBAAA,SAAAzB,GACA,QAAAprC,GAAAorC,EAAA,OAAAA,EAAAuB,IACAvB,EAAA,eACAwB,EAAAF,EAAAtB,MAMA0B,OACA,SAAAvC,EAAAlrC,EAAAC,GAEA,IAAA2W,EAAA3W,EAAA,QAAA2W,SACAs0B,EAAAlrC,QAAA4W,KAAA82B,iBAKAC,OACA,SAAAzC,EAAAlrC,EAAAC,GASA,IAAA4E,EAAA5E,EAAA,QACA2tC,EAAA3tC,EAAA,QACA4F,EAAA5F,EAAA,QACAgtC,EAAAhtC,EAAA,QACA4tC,EAAA5tC,EAAA,QACAirC,EAAAlrC,QAAA,SAAA8tC,EAAAC,GACA,IAAAC,EAAA,GAAAF,EACAG,EAAA,GAAAH,EACAI,EAAA,GAAAJ,EACAK,EAAA,GAAAL,EACAM,EAAA,GAAAN,EACAO,EAAA,GAAAP,GAAAM,EACAvrC,EAAAkrC,GAAAF,EACA,gBAAAS,EAAAC,EAAA1C,GAQA,IAPA,IAMApqC,EAAAqE,EANAqmC,EAAAtmC,EAAAyoC,GACAlD,EAAAwC,EAAAzB,GACAU,EAAAhoC,EAAA0pC,EAAA1C,EAAA,GACA5oC,EAAAgqC,EAAA7B,EAAAnoC,QACAM,EAAA,EACA6L,EAAA4+B,EAAAnrC,EAAAyrC,EAAArrC,GAAAgrC,EAAAprC,EAAAyrC,EAAA,QAAA3tC,EAEUsC,EAAAM,EAAeA,IAAA,IAAA8qC,GAAA9qC,KAAA6nC,KACzB3pC,EAAA2pC,EAAA7nC,GACAuC,EAAA+mC,EAAAprC,EAAA8B,EAAA4oC,GACA2B,GACA,GAAAE,EAAA5+B,EAAA7L,GAAAuC,OACA,GAAAA,EAAA,OAAAgoC,GACA,gBACA,cAAArsC,EACA,cAAA8B,EACA,OAAA6L,EAAAlD,KAAAzK,QACS,GAAA0sC,EAAA,SAGT,OAAAC,GAAA,EAAAF,GAAAC,IAAA/+B,KAOAo/B,KACA,SAAAtD,EAAAlrC,GAGA,IAAAK,EAAA6qC,EAAAlrC,QAAA,oBAAAwJ,eAAA3H,WACA2H,OAAA,oBAAA4hC,WAAAvpC,WAAAupC,KAEA9lC,SAAA,cAAAA,GACA,iBAAAmpC,UAAApuC,IAKAquC,OACA,SAAAxD,EAAAlrC,EAAAC,GAGA,IAAA2tC,EAAA3tC,EAAA,QACA0uC,EAAA1uC,EAAA,QACAirC,EAAAlrC,QAAA,SAAA+rC,GACA,OAAA6B,EAAAe,EAAA5C,MAMA6C,KACA,SAAA1D,EAAAlrC,EAAAC,GAEA,aAEA,IAAAI,EAAAJ,EAAA,QACA4uC,EAAA5uC,EAAA,QACA6uC,EAAA7uC,EAAA,QACA8uC,EAAA9uC,EAAA,QACA+uC,EAAA/uC,EAAA,QACAgvC,EAAAhvC,EAAA,QACAivC,EAAAjvC,EAAA,QACAkvC,EAAAlvC,EAAA,QACAmvC,EAAAnvC,EAAA,QACAgtC,EAAAhtC,EAAA,QACAovC,EAAApvC,EAAA,QACAqvC,EAAArvC,EAAA,QAAA4sC,EACA0C,EAAAtvC,EAAA,QAAA4sC,EACA2C,EAAAvvC,EAAA,QACAwvC,EAAAxvC,EAAA,QACAyvC,EAAA,cACAC,EAAA,WACAC,EAAA,YACAC,EAAA,gBACAC,EAAA,eACAC,EAAA1vC,EAAAqvC,GACAM,EAAA3vC,EAAAsvC,GACA9tC,EAAAxB,EAAAwB,KACAouC,EAAA5vC,EAAA4vC,WAEAC,EAAA7vC,EAAA6vC,SACAC,EAAAJ,EACAK,EAAAvuC,EAAAuuC,IACAC,EAAAxuC,EAAAwuC,IACAvuC,EAAAD,EAAAC,MACAwuC,EAAAzuC,EAAAyuC,IACAC,EAAA1uC,EAAA0uC,IACAC,EAAA,SACAC,EAAA,aACAC,EAAA,aACAC,EAAA9B,EAAA,KAAA2B,EACAI,EAAA/B,EAAA,KAAA4B,EACAI,EAAAhC,EAAA,KAAA6B,EAGA,SAAAI,EAAA9vC,EAAA+vC,EAAAC,GACA,IAOAvqC,EAAA+kC,EAAAnnC,EAPA4sC,EAAA,IAAA9uC,MAAA6uC,GACAE,EAAA,EAAAF,EAAAD,EAAA,EACAI,GAAA,GAAAD,GAAA,EACAE,EAAAD,GAAA,EACAE,EAAA,KAAAN,EAAAV,EAAA,OAAAA,EAAA,SACArtC,EAAA,EACAugC,EAAAviC,EAAA,OAAAA,GAAA,EAAAA,EAAA,MAkCA,IAhCAA,EAAAovC,EAAApvC,GAEAA,UAAAkvC,GAEA1E,EAAAxqC,KAAA,IACAyF,EAAA0qC,IAEA1qC,EAAA3E,EAAAwuC,EAAAtvC,GAAAuvC,GACAvvC,GAAAqD,EAAAgsC,EAAA,GAAA5pC,IAAA,IACAA,IACApC,GAAA,GAGArD,GADAyF,EAAA2qC,GAAA,EACAC,EAAAhtC,EAEAgtC,EAAAhB,EAAA,IAAAe,GAEApwC,EAAAqD,GAAA,IACAoC,IACApC,GAAA,GAEAoC,EAAA2qC,GAAAD,GACA3F,EAAA,EACA/kC,EAAA0qC,GACK1qC,EAAA2qC,GAAA,GACL5F,GAAAxqC,EAAAqD,EAAA,GAAAgsC,EAAA,EAAAU,GACAtqC,GAAA2qC,IAEA5F,EAAAxqC,EAAAqvC,EAAA,EAAAe,EAAA,GAAAf,EAAA,EAAAU,GACAtqC,EAAA,IAGQsqC,GAAA,EAAWE,EAAAjuC,KAAA,IAAAwoC,KAAA,IAAAuF,GAAA,GAGnB,IAFAtqC,KAAAsqC,EAAAvF,EACA0F,GAAAH,EACQG,EAAA,EAAUD,EAAAjuC,KAAA,IAAAyD,KAAA,IAAAyqC,GAAA,GAElB,OADAD,IAAAjuC,IAAA,IAAAugC,EACA0N,EAEA,SAAAK,EAAAL,EAAAF,EAAAC,GACA,IAOAxF,EAPA0F,EAAA,EAAAF,EAAAD,EAAA,EACAI,GAAA,GAAAD,GAAA,EACAE,EAAAD,GAAA,EACAI,EAAAL,EAAA,EACAluC,EAAAguC,EAAA,EACAzN,EAAA0N,EAAAjuC,KACAyD,EAAA,IAAA88B,EAGA,IADAA,IAAA,EACQgO,EAAA,EAAW9qC,EAAA,IAAAA,EAAAwqC,EAAAjuC,OAAAuuC,GAAA,GAInB,IAHA/F,EAAA/kC,GAAA,IAAA8qC,GAAA,EACA9qC,KAAA8qC,EACAA,GAAAR,EACQQ,EAAA,EAAW/F,EAAA,IAAAA,EAAAyF,EAAAjuC,OAAAuuC,GAAA,GACnB,OAAA9qC,EACAA,EAAA,EAAA2qC,MACG,IAAA3qC,IAAA0qC,EACH,OAAA3F,EAAAgG,IAAAjO,GAAA2M,IAEA1E,GAAA6E,EAAA,EAAAU,GACAtqC,GAAA2qC,EACG,OAAA7N,GAAA,KAAAiI,EAAA6E,EAAA,EAAA5pC,EAAAsqC,GAGH,SAAAU,EAAAC,GACA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,MAAAA,EAAA,GAEA,SAAAC,EAAA5F,GACA,WAAAA,GAEA,SAAA6F,EAAA7F,GACA,WAAAA,KAAA,OAEA,SAAA8F,EAAA9F,GACA,WAAAA,KAAA,MAAAA,GAAA,OAAAA,GAAA,QAEA,SAAA+F,EAAA/F,GACA,OAAA+E,EAAA/E,EAAA,MAEA,SAAAgG,EAAAhG,GACA,OAAA+E,EAAA/E,EAAA,MAGA,SAAAiG,EAAA1F,EAAA1oC,EAAAquC,GACA1C,EAAAjD,EAAAsD,GAAAhsC,EAAA,CAAyB8G,IAAA,WAAmB,OAAA5L,KAAAmzC,MAG5C,SAAAvnC,EAAAwnC,EAAAR,EAAAnuC,EAAA4uC,GACA,IAAAC,GAAA7uC,EACA8uC,EAAAhD,EAAA+C,GACA,GAAAC,EAAAX,EAAAQ,EAAAtB,GAAA,MAAAX,EAAAH,GACA,IAAAwC,EAAAJ,EAAAvB,GAAA3xB,GACAxZ,EAAA6sC,EAAAH,EAAArB,GACA0B,EAAAD,EAAA7tC,MAAAe,IAAAksC,GACA,OAAAS,EAAAI,IAAAC,UAEA,SAAAhnC,EAAA0mC,EAAAR,EAAAnuC,EAAAkvC,EAAAzxC,EAAAmxC,GACA,IAAAC,GAAA7uC,EACA8uC,EAAAhD,EAAA+C,GACA,GAAAC,EAAAX,EAAAQ,EAAAtB,GAAA,MAAAX,EAAAH,GAIA,IAHA,IAAAwC,EAAAJ,EAAAvB,GAAA3xB,GACAxZ,EAAA6sC,EAAAH,EAAArB,GACA0B,EAAAE,GAAAzxC,GACAgC,EAAA,EAAiBA,EAAA0uC,EAAW1uC,IAAAsvC,EAAA9sC,EAAAxC,GAAAuvC,EAAAJ,EAAAnvC,EAAA0uC,EAAA1uC,EAAA,GAG5B,GAAA+rC,EAAA2D,IAgFC,CACD,IAAAxD,EAAA,WACAa,EAAA,OACGb,EAAA,WACH,IAAAa,GAAA,MACGb,EAAA,WAIH,OAHA,IAAAa,EACA,IAAAA,EAAA,KACA,IAAAA,EAAAyB,KACAzB,EAAAl9B,MAAA68B,IACG,CACHK,EAAA,SAAA9sC,GAEA,OADAksC,EAAArwC,KAAAixC,GACA,IAAAI,EAAAd,EAAApsC,KAGA,IADA,IACAW,EADA+uC,EAAA5C,EAAAH,GAAAO,EAAAP,GACA/oC,EAAAyoC,EAAAa,GAAA5mB,GAAA,EAAiD1iB,EAAA5D,OAAAsmB,KACjD3lB,EAAAiD,EAAA0iB,SAAAwmB,GAAAf,EAAAe,EAAAnsC,EAAAusC,EAAAvsC,IAEAkrC,IAAA6D,EAAA7kB,YAAAiiB,GAGA,IAAAmC,GAAA,IAAAlC,EAAA,IAAAD,EAAA,IACA6C,GAAA5C,EAAAJ,GAAAiD,QACAX,GAAAW,QAAA,cACAX,GAAAW,QAAA,eACAX,GAAAY,QAAA,IAAAZ,GAAAY,QAAA,IAAA7D,EAAAe,EAAAJ,GAAA,CACAiD,QAAA,SAAAE,EAAA/xC,GACA4xC,GAAAzzC,KAAAL,KAAAi0C,EAAA/xC,GAAA,SAEAgyC,SAAA,SAAAD,EAAA/xC,GACA4xC,GAAAzzC,KAAAL,KAAAi0C,EAAA/xC,GAAA,WAEG,QAhHH+uC,EAAA,SAAA9sC,GACAksC,EAAArwC,KAAAixC,EAAAL,GACA,IAAAuD,EAAA5D,EAAApsC,GACAnE,KAAAkgB,GAAAwwB,EAAArwC,KAAA,IAAAgD,MAAA8wC,GAAA,GACAn0C,KAAA8xC,GAAAqC,GAGAjD,EAAA,SAAAiB,EAAA8B,EAAAE,GACA9D,EAAArwC,KAAAkxC,EAAAL,GACAR,EAAA8B,EAAAlB,EAAAJ,GACA,IAAAuD,EAAAjC,EAAAL,GACAuC,EAAA/D,EAAA2D,GACA,GAAAI,EAAA,GAAAA,EAAAD,EAAA,MAAAjD,EAAA,iBAEA,GADAgD,OAAAtyC,IAAAsyC,EAAAC,EAAAC,EAAAlG,EAAAgG,GACAE,EAAAF,EAAAC,EAAA,MAAAjD,EAAAJ,GACA/wC,KAAA6xC,GAAAM,EACAnyC,KAAA+xC,GAAAsC,EACAr0C,KAAA8xC,GAAAqC,GAGApE,IACAmD,EAAAjC,EAAAU,EAAA,MACAuB,EAAAhC,EAAAQ,EAAA,MACAwB,EAAAhC,EAAAS,EAAA,MACAuB,EAAAhC,EAAAU,EAAA,OAGAzB,EAAAe,EAAAJ,GAAA,CACAkD,QAAA,SAAAC,GACA,OAAAroC,EAAA5L,KAAA,EAAAi0C,GAAA,YAEAK,SAAA,SAAAL,GACA,OAAAroC,EAAA5L,KAAA,EAAAi0C,GAAA,IAEAM,SAAA,SAAAN,GACA,IAAArB,EAAAhnC,EAAA5L,KAAA,EAAAi0C,EAAA9tC,UAAA,IACA,OAAAysC,EAAA,MAAAA,EAAA,aAEA4B,UAAA,SAAAP,GACA,IAAArB,EAAAhnC,EAAA5L,KAAA,EAAAi0C,EAAA9tC,UAAA,IACA,OAAAysC,EAAA,MAAAA,EAAA,IAEA6B,SAAA,SAAAR,GACA,OAAAtB,EAAA/mC,EAAA5L,KAAA,EAAAi0C,EAAA9tC,UAAA,MAEAuuC,UAAA,SAAAT,GACA,OAAAtB,EAAA/mC,EAAA5L,KAAA,EAAAi0C,EAAA9tC,UAAA,UAEAwuC,WAAA,SAAAV,GACA,OAAAzB,EAAA5mC,EAAA5L,KAAA,EAAAi0C,EAAA9tC,UAAA,WAEAyuC,WAAA,SAAAX,GACA,OAAAzB,EAAA5mC,EAAA5L,KAAA,EAAAi0C,EAAA9tC,UAAA,WAEA4tC,QAAA,SAAAE,EAAA/xC,GACAwK,EAAA1M,KAAA,EAAAi0C,EAAApB,EAAA3wC,IAEAgyC,SAAA,SAAAD,EAAA/xC,GACAwK,EAAA1M,KAAA,EAAAi0C,EAAApB,EAAA3wC,IAEA2yC,SAAA,SAAAZ,EAAA/xC,GACAwK,EAAA1M,KAAA,EAAAi0C,EAAAnB,EAAA5wC,EAAAiE,UAAA,KAEA2uC,UAAA,SAAAb,EAAA/xC,GACAwK,EAAA1M,KAAA,EAAAi0C,EAAAnB,EAAA5wC,EAAAiE,UAAA,KAEA4uC,SAAA,SAAAd,EAAA/xC,GACAwK,EAAA1M,KAAA,EAAAi0C,EAAAlB,EAAA7wC,EAAAiE,UAAA,KAEA6uC,UAAA,SAAAf,EAAA/xC,GACAwK,EAAA1M,KAAA,EAAAi0C,EAAAlB,EAAA7wC,EAAAiE,UAAA,KAEA8uC,WAAA,SAAAhB,EAAA/xC,GACAwK,EAAA1M,KAAA,EAAAi0C,EAAAhB,EAAA/wC,EAAAiE,UAAA,KAEA+uC,WAAA,SAAAjB,EAAA/xC,GACAwK,EAAA1M,KAAA,EAAAi0C,EAAAjB,EAAA9wC,EAAAiE,UAAA,OAsCAwqC,EAAAM,EAAAL,GACAD,EAAAO,EAAAL,GACAX,EAAAgB,EAAAJ,GAAAb,EAAAkF,MAAA,GACAj0C,EAAA0vC,GAAAK,EACA/vC,EAAA2vC,GAAAK,GAKAkE,OACA,SAAAhJ,EAAAlrC,EAAAC,GAEA,IAAAgB,EAAAhB,EAAA,QACA0sC,EAAA1sC,EAAA,QAAAuL,IACA0/B,EAAAlrC,QAAA,SAAA6rC,EAAAx/B,EAAAigC,GACA,IACA6H,EADA9H,EAAAhgC,EAAAyhB,YAIG,OAFHue,IAAAC,GAAA,mBAAAD,IAAA8H,EAAA9H,EAAAjrC,aAAAkrC,EAAAlrC,WAAAH,EAAAkzC,IAAAxH,GACAA,EAAAd,EAAAsI,GACGtI,IAMHuI,KACA,SAAAlJ,EAAAlrC,EAAAC,GAGA,IAAAwL,EAAAxL,EAAA,QACA4F,EAAA5F,EAAA,QACAo0C,EAAAp0C,EAAA,OAAAA,CAAA,YACAq0C,EAAA/zC,OAAAa,UAEA8pC,EAAAlrC,QAAAO,OAAAg0C,gBAAA,SAAApI,GAEA,OADAA,EAAAtmC,EAAAsmC,GACA1gC,EAAA0gC,EAAAkI,GAAAlI,EAAAkI,GACA,mBAAAlI,EAAAre,aAAAqe,eAAAre,YACAqe,EAAAre,YAAA1sB,UACG+qC,aAAA5rC,OAAA+zC,EAAA,OAMHE,KACA,SAAAtJ,EAAAlrC,EAAAC,GAGA,IAAAw0C,EAAAx0C,EAAA,QACAy0C,EAAAz0C,EAAA,OAAAA,CAAA,eAEA00C,EAA+C,aAA/CF,EAAA,WAA2B,OAAAxvC,UAA3B,IAGA2vC,EAAA,SAAA7I,EAAAnoC,GACA,IACA,OAAAmoC,EAAAnoC,GACG,MAAA6C,MAGHykC,EAAAlrC,QAAA,SAAA+rC,GACA,IAAAI,EAAA0I,EAAAC,EACA,YAAAn0C,IAAAorC,EAAA,mBAAAA,EAAA,OAEA,iBAAA8I,EAAAD,EAAAzI,EAAA5rC,OAAAwrC,GAAA2I,IAAAG,EAEAF,EAAAF,EAAAtI,GAEA,WAAA2I,EAAAL,EAAAtI,KAAA,mBAAAA,EAAA4I,OAAA,YAAAD,IAMAE,KACA,SAAA9J,EAAAlrC,EAAAC,GAGA,IAAAgB,EAAAhB,EAAA,QAGAirC,EAAAlrC,QAAA,SAAA+rC,EAAAM,GACA,IAAAprC,EAAA8qC,GAAA,OAAAA,EACA,IAAAjoC,EAAArC,EACA,GAAA4qC,GAAA,mBAAAvoC,EAAAioC,EAAA1qC,YAAAJ,EAAAQ,EAAAqC,EAAA3E,KAAA4sC,IAAA,OAAAtqC,EACA,sBAAAqC,EAAAioC,EAAAkJ,WAAAh0C,EAAAQ,EAAAqC,EAAA3E,KAAA4sC,IAAA,OAAAtqC,EACA,IAAA4qC,GAAA,mBAAAvoC,EAAAioC,EAAA1qC,YAAAJ,EAAAQ,EAAAqC,EAAA3E,KAAA4sC,IAAA,OAAAtqC,EACA,MAAAirC,UAAA,6CAMAwI,OACA,SAAAhK,EAAAlrC,EAAAC,GAEA,IAAAk1C,EAAAl1C,EAAA,QACA0uC,EAAA1uC,EAAA,QACAivC,EAAAjvC,EAAA,QACAm1C,EAAAn1C,EAAA,QACAo1C,EAAA,IAAAD,EAAA,IACAE,EAAA,KACAC,EAAAvsC,OAAA,IAAAqsC,IAAA,KACAG,EAAAxsC,OAAAqsC,IAAA,MAEAI,EAAA,SAAAC,EAAAC,EAAAC,GACA,IAAAC,EAAA,GACAC,EAAA5G,EAAA,WACA,QAAAkG,EAAAM,MAAAJ,EAAAI,MAAAJ,IAEAxxC,EAAA+xC,EAAAH,GAAAI,EAAAH,EAAAnX,GAAA4W,EAAAM,GACAE,IAAAC,EAAAD,GAAA9xC,GACAqxC,IAAAhB,EAAAgB,EAAAY,EAAAD,EAAA,SAAAD,IAMArX,EAAAiX,EAAAjX,KAAA,SAAAwX,EAAAlI,GAIA,OAHAkI,EAAAp0C,OAAA+sC,EAAAqH,IACA,EAAAlI,IAAAkI,IAAA7xC,QAAAoxC,EAAA,KACA,EAAAzH,IAAAkI,IAAA7xC,QAAAqxC,EAAA,KACAQ,GAGA9K,EAAAlrC,QAAAy1C,GAKAQ,OACA,SAAA/K,EAAAlrC,EAAAC,GAEAA,EAAA,OAAAA,CAAA,qBAAAwgB,GACA,gBAAA1T,EAAAgmC,EAAA9vC,GACA,OAAAwd,EAAA3hB,KAAAiO,EAAAgmC,EAAA9vC,OAOAizC,OACA,SAAAhL,EAAAlrC,EAAAC,GAEAirC,EAAAlrC,SAAAC,EAAA,UAAAA,EAAA,OAAAA,CAAA,WACA,OAA0G,GAA1GM,OAAAqI,eAAA3I,EAAA,OAAAA,CAAA,YAAyEyK,IAAA,WAAmB,YAAc3F,KAM1GoxC,KACA,SAAAjL,EAAAlrC,EAAAC,GAGA,IAAAm2C,EAAAn2C,EAAA,QAEAirC,EAAAlrC,QAAA,SAAAgP,EAAA/L,GACA,WAAAmzC,EAAApnC,GAAA,CAAA/L,KAMAozC,OACA,SAAAnL,EAAAlrC,EAAAC,GAEA,IAAAqtC,EAAArtC,EAAA,OAAAA,CAAA,YACAq2C,GAAA,EAEA,IACA,IAAAC,EAAA,IAAAjJ,KACAiJ,EAAA,qBAAiCD,GAAA,GAEjCn0C,MAAAoP,KAAAglC,EAAA,WAAiC,UAChC,MAAA9vC,IAEDykC,EAAAlrC,QAAA,SAAA21C,EAAAa,GACA,IAAAA,IAAAF,EAAA,SACA,IAAAG,GAAA,EACA,IACA,IAAApzC,EAAA,IACAqzC,EAAArzC,EAAAiqC,KACAoJ,EAAAn7B,KAAA,WAA6B,OAASC,KAAAi7B,GAAA,IACtCpzC,EAAAiqC,GAAA,WAAiC,OAAAoJ,GACjCf,EAAAtyC,GACG,MAAAoD,IACH,OAAAgwC,IAMAE,OACA,SAAAzL,EAAAlrC,EAAAC,GAEA,IAAAmvC,EAAAnvC,EAAA,QACAiR,EAAArP,KAAAqP,IACA0lC,EAAA/0C,KAAA+0C,IACA1L,EAAAlrC,QAAA,SAAAuD,EAAAN,GAEA,OADAM,EAAA6rC,EAAA7rC,GACAA,EAAA,EAAA2N,EAAA3N,EAAAN,EAAA,GAAA2zC,EAAArzC,EAAAN,KAMA4zC,OACA,SAAA3L,EAAAlrC,EAAAC,GAGA,IAAA62C,EAAA72C,EAAA,OAAAA,CAAA,eACA82C,EAAA50C,MAAAf,eACAT,GAAAo2C,EAAAD,IAAA72C,EAAA,OAAAA,CAAA82C,EAAAD,EAAA,IACA5L,EAAAlrC,QAAA,SAAA4D,GACAmzC,EAAAD,GAAAlzC,IAAA,IAMAozC,KACA,SAAA9L,EAAAlrC,EAAAC,GAGA,IAAAw0C,EAAAx0C,EAAA,QAEAirC,EAAAlrC,QAAAO,OAAA,KAAA02C,qBAAA,GAAA12C,OAAA,SAAAwrC,GACA,gBAAA0I,EAAA1I,KAAAhpC,MAAA,IAAAxC,OAAAwrC,KAMAmL,OACA,SAAAhM,EAAAlrC,GAEAkrC,EAAAlrC,QAAA,SAAA+rC,GACA,sBAAAA,EAAA,MAAAW,UAAAX,EAAA,uBACA,OAAAA,IAMAoL,KACA,SAAAjM,EAAAlrC,EAAAC,GAEA,IAAAyI,EAAAzI,EAAA,QAAA4sC,EACAphC,EAAAxL,EAAA,QACAy0C,EAAAz0C,EAAA,OAAAA,CAAA,eAEAirC,EAAAlrC,QAAA,SAAA+rC,EAAAj/B,EAAAsqC,GACArL,IAAAtgC,EAAAsgC,EAAAqL,EAAArL,IAAA3qC,UAAAszC,IAAAhsC,EAAAqjC,EAAA2I,EAAA,CAAoE5rC,cAAA,EAAA9H,MAAA8L,MAMpEuqC,KACA,SAAAnM,EAAAlrC,EAAAC,GAEA,aAEA,IAAA4C,EAAA5C,EAAA,QACAq3C,EAAAr3C,EAAA,QACAwvC,EAAAxvC,EAAA,QACAs3C,EAAA,GAGAt3C,EAAA,OAAAA,CAAAs3C,EAAAt3C,EAAA,OAAAA,CAAA,uBAAqG,OAAAnB,OAErGosC,EAAAlrC,QAAA,SAAAw3C,EAAAC,EAAAl8B,GACAi8B,EAAAp2C,UAAAyB,EAAA00C,EAAA,CAAqDh8B,KAAA+7B,EAAA,EAAA/7B,KACrDk0B,EAAA+H,EAAAC,EAAA,eAMAC,KACA,SAAAxM,EAAAlrC,EAAAC,GAEA,IAAAsvC,EAAAtvC,EAAA,QAAA4sC,EACA8K,EAAAryC,SAAAlE,UACAw2C,EAAA,wBACAH,EAAA,OAGAA,KAAAE,GAAA13C,EAAA,SAAAsvC,EAAAoI,EAAAF,EAAA,CACA3uC,cAAA,EACA4B,IAAA,WACA,IACA,UAAA5L,MAAAuL,MAAAutC,GAAA,GACK,MAAAnxC,GACL,cAQAoxC,OACA,SAAA3M,EAAAlrC,EAAAC,GAEA,IAAAsvC,EAAAtvC,EAAA,QACA63C,EAAA73C,EAAA,QACAirC,EAAAlrC,QAAAC,EAAA,iBAAAyrC,EAAA9nC,EAAA5C,GACA,OAAAuuC,EAAA1C,EAAAnB,EAAA9nC,EAAAk0C,EAAA,EAAA92C,KACC,SAAA0qC,EAAA9nC,EAAA5C,GAED,OADA0qC,EAAA9nC,GAAA5C,EACA0qC,IAMAqM,KACA,SAAA7M,EAAAlrC,EAAAC,GAEA,aAEA,IAAA6uC,EAAA7uC,EAAA,QACAk1C,EAAAl1C,EAAA,QACA+3C,EAAA/3C,EAAA,QACA+uC,EAAA/uC,EAAA,QACAstC,EAAAttC,EAAA,QACAg4C,EAAAh4C,EAAA,QACAwvC,EAAAxvC,EAAA,QACAs0C,EAAAt0C,EAAA,QACAqtC,EAAArtC,EAAA,OAAAA,CAAA,YACAi4C,IAAA,GAAArxC,MAAA,WAAAA,QACAsxC,EAAA,aACAC,EAAA,OACAC,EAAA,SAEAC,EAAA,WAA8B,OAAAx5C,MAE9BosC,EAAAlrC,QAAA,SAAAu4C,EAAAd,EAAAD,EAAAj8B,EAAAi9B,EAAAC,EAAAC,GACAT,EAAAT,EAAAC,EAAAl8B,GACA,IAeAhJ,EAAA3O,EAAA2zC,EAfAoB,EAAA,SAAAC,GACA,IAAAV,GAAAU,KAAAnM,EAAA,OAAAA,EAAAmM,GACA,OAAAA,GACA,KAAAR,EAAA,kBAAyC,WAAAZ,EAAA14C,KAAA85C,IACzC,KAAAP,EAAA,kBAA6C,WAAAb,EAAA14C,KAAA85C,IACxC,kBAA4B,WAAApB,EAAA14C,KAAA85C,KAEjClE,EAAA+C,EAAA,YACAoB,EAAAL,GAAAH,EACAS,GAAA,EACArM,EAAA8L,EAAAn3C,UACA23C,EAAAtM,EAAAa,IAAAb,EAAA0L,IAAAK,GAAA/L,EAAA+L,GACAQ,EAAAD,GAAAJ,EAAAH,GACAS,EAAAT,EAAAK,EAAAF,EAAA,WAAAK,OAAAr4C,EACAu4C,EAAA,SAAAzB,GAAAhL,EAAA0M,SAAAJ,EAwBA,GArBAG,IACA3B,EAAAhD,EAAA2E,EAAA/5C,KAAA,IAAAo5C,IACAhB,IAAAh3C,OAAAa,WAAAm2C,EAAAh8B,OAEAk0B,EAAA8H,EAAA7C,GAAA,GAEA5F,GAAA,mBAAAyI,EAAAjK,IAAA0B,EAAAuI,EAAAjK,EAAAgL,KAIAO,GAAAE,KAAAlmC,OAAAwlC,IACAS,GAAA,EACAE,EAAA,WAAkC,OAAAD,EAAA55C,KAAAL,QAGlCgwC,IAAA4J,IAAAR,IAAAY,GAAArM,EAAAa,IACA0B,EAAAvC,EAAAa,EAAA0L,GAGAzL,EAAAkK,GAAAuB,EACAzL,EAAAmH,GAAA4D,EACAE,EAMA,GALAjmC,EAAA,CACA2L,OAAA26B,EAAAG,EAAAL,EAAAN,GACAxxC,KAAA4xC,EAAAO,EAAAL,EAAAP,GACAe,QAAAF,GAEAP,EAAA,IAAA90C,KAAA2O,EACA3O,KAAA6oC,GAAAuL,EAAAvL,EAAA7oC,EAAA2O,EAAA3O,SACKuxC,IAAAhB,EAAAgB,EAAAY,GAAAmC,GAAAY,GAAArB,EAAAllC,GAEL,OAAAA,IAMA6mC,OACA,SAAAlO,EAAAlrC,EAAAC,GAEA,aAGA,IAAA4F,EAAA5F,EAAA,QACA+sC,EAAA/sC,EAAA,QACAgtC,EAAAhtC,EAAA,QAEAirC,EAAAlrC,QAAA,GAAAq5C,YAAA,SAAAhtC,EAAA7G,GACA,IAAA2mC,EAAAtmC,EAAA/G,MACAoQ,EAAA+9B,EAAAd,EAAAlpC,QACA0C,EAAAqnC,EAAA3gC,EAAA6C,GACAqC,EAAAy7B,EAAAxnC,EAAA0J,GACA4pB,EAAA7zB,UAAAhC,OAAA,EAAAgC,UAAA,QAAAtE,EACA24C,EAAAz3C,KAAA+0C,UAAAj2C,IAAAm4B,EAAA5pB,EAAA89B,EAAAlU,EAAA5pB,IAAAqC,EAAArC,EAAAvJ,GACA4zC,EAAA,EACAhoC,EAAA5L,KAAA4L,EAAA+nC,IACAC,GAAA,EACAhoC,GAAA+nC,EAAA,EACA3zC,GAAA2zC,EAAA,GAEA,MAAAA,KAAA,EACA/nC,KAAA46B,IAAAxmC,GAAAwmC,EAAA56B,UACA46B,EAAAxmC,GACAA,GAAA4zC,EACAhoC,GAAAgoC,EACG,OAAApN,IAMHqN,OACA,SAAAtO,EAAAlrC,GAEAkrC,EAAAlrC,QAAA,SAAAy5C,EAAAz4C,GACA,OACA2H,aAAA,EAAA8wC,GACA3wC,eAAA,EAAA2wC,GACA5wC,WAAA,EAAA4wC,GACAz4C,WAOA04C,OACA,SAAAxO,EAAAlrC,GAEAkrC,EAAAlrC,QAAA,SAAA+rC,GACA,wBAAAA,EAAA,OAAAA,EAAA,oBAAAA,IAMA4N,OACA,SAAAzO,EAAAlrC,EAAAC,GAEA,IAAAqyC,EAAAryC,EAAA,OAAAA,CAAA,OACA2L,EAAA3L,EAAA,QACAmL,EAAAnL,EAAA,QAAAmL,OACAwuC,EAAA,mBAAAxuC,EAEAyuC,EAAA3O,EAAAlrC,QAAA,SAAA6S,GACA,OAAAy/B,EAAAz/B,KAAAy/B,EAAAz/B,GACA+mC,GAAAxuC,EAAAyH,KAAA+mC,EAAAxuC,EAAAQ,GAAA,UAAAiH,KAGAgnC,EAAAvH,SAKAwH,OACA,SAAA5O,EAAAlrC,GAEAkrC,EAAAlrC,QAAAqrC,GAIA0O,KACA,SAAA7O,EAAAlrC,EAAAC,GAGA,IAAAmvC,EAAAnvC,EAAA,QACAgtC,EAAAhtC,EAAA,QACAirC,EAAAlrC,QAAA,SAAA+rC,GACA,QAAAprC,IAAAorC,EAAA,SACA,IAAAxN,EAAA6Q,EAAArD,GACA9oC,EAAAgqC,EAAA1O,GACA,GAAAA,IAAAt7B,EAAA,MAAAgtC,WAAA,iBACA,OAAAhtC,IAMA+2C,KACA,SAAA9O,EAAAlrC,EAAAC,GAEA,aAEA,GAAAA,EAAA,SACA,IAAA6uC,EAAA7uC,EAAA,QACAI,EAAAJ,EAAA,QACAivC,EAAAjvC,EAAA,QACAk1C,EAAAl1C,EAAA,QACA8uC,EAAA9uC,EAAA,QACAg6C,EAAAh6C,EAAA,QACA4E,EAAA5E,EAAA,QACAkvC,EAAAlvC,EAAA,QACAi6C,EAAAj6C,EAAA,QACA+uC,EAAA/uC,EAAA,QACAgvC,EAAAhvC,EAAA,QACAmvC,EAAAnvC,EAAA,QACAgtC,EAAAhtC,EAAA,QACAovC,EAAApvC,EAAA,QACA+sC,EAAA/sC,EAAA,QACAk6C,EAAAl6C,EAAA,QACAwL,EAAAxL,EAAA,QACAotC,EAAAptC,EAAA,QACAgB,EAAAhB,EAAA,QACA4F,EAAA5F,EAAA,QACAm6C,EAAAn6C,EAAA,QACA4C,EAAA5C,EAAA,QACAs0C,EAAAt0C,EAAA,QACAqvC,EAAArvC,EAAA,QAAA4sC,EACAwN,EAAAp6C,EAAA,QACA2L,EAAA3L,EAAA,QACAq6C,EAAAr6C,EAAA,QACAs6C,EAAAt6C,EAAA,QACAu6C,EAAAv6C,EAAA,QACAm2C,EAAAn2C,EAAA,QACAw6C,EAAAx6C,EAAA,QACAstC,EAAAttC,EAAA,QACAy6C,EAAAz6C,EAAA,QACA06C,EAAA16C,EAAA,QACAuvC,EAAAvvC,EAAA,QACA26C,EAAA36C,EAAA,QACA46C,EAAA56C,EAAA,QACA66C,EAAA76C,EAAA,QACAsvC,EAAAsL,EAAAhO,EACAkO,EAAAD,EAAAjO,EACAoD,EAAA5vC,EAAA4vC,WACAvD,EAAArsC,EAAAqsC,UACAsO,EAAA36C,EAAA26C,WACAtL,EAAA,cACAuL,EAAA,SAAAvL,EACAwL,EAAA,oBACAtL,EAAA,YACAmH,EAAA50C,MAAAytC,GACAG,EAAAkK,EAAAkB,YACAnL,EAAAiK,EAAAmB,SACAC,EAAAd,EAAA,GACAe,GAAAf,EAAA,GACAgB,GAAAhB,EAAA,GACAiB,GAAAjB,EAAA,GACAkB,GAAAlB,EAAA,GACAmB,GAAAnB,EAAA,GACAoB,GAAAnB,GAAA,GACAoB,GAAApB,GAAA,GACAqB,GAAApB,EAAAv8B,OACAzO,GAAAgrC,EAAA5zC,KACAi1C,GAAArB,EAAAtB,QACA4C,GAAAhF,EAAAiF,YACAC,GAAAlF,EAAAmF,OACAC,GAAApF,EAAAqF,YACAC,GAAAtF,EAAAzb,KACAghB,GAAAvF,EAAA3sB,KACAmyB,GAAAxF,EAAAtyC,MACA+3C,GAAAzF,EAAA11C,SACAo7C,GAAA1F,EAAA2F,eACApP,GAAAgN,EAAA,YACA5F,GAAA4F,EAAA,eACAqC,GAAA/wC,EAAA,qBACAgxC,GAAAhxC,EAAA,mBACAixC,GAAA9N,EAAA+N,OACAC,GAAAhO,EAAAiO,MACA/I,GAAAlF,EAAAkF,KACApE,GAAA,gBAEAoN,GAAA1C,EAAA,WAAApO,EAAAlpC,GACA,OAAAi6C,GAAA9G,EAAAjK,IAAAyQ,KAAA35C,KAGAk6C,GAAAjO,EAAA,WAEA,eAAA8L,EAAA,IAAAoC,YAAA,KAAAnM,QAAA,KAGAoM,KAAArC,OAAApL,GAAApkC,KAAA0jC,EAAA,WACA,IAAA8L,EAAA,GAAAxvC,IAAA,MAGA8xC,GAAA,SAAAvR,EAAAwR,GACA,IAAApK,EAAA/D,EAAArD,GACA,GAAAoH,EAAA,GAAAA,EAAAoK,EAAA,MAAAtN,EAAA,iBACA,OAAAkD,GAGAqK,GAAA,SAAAzR,GACA,GAAA9qC,EAAA8qC,IAAAgR,MAAAhR,EAAA,OAAAA,EACA,MAAAW,EAAAX,EAAA,2BAGAmR,GAAA,SAAA5Q,EAAArpC,GACA,KAAAhC,EAAAqrC,IAAAqQ,MAAArQ,GACA,MAAAI,EAAA,wCACK,WAAAJ,EAAArpC,IAGLw6C,GAAA,SAAAtR,EAAArpC,GACA,OAAA46C,GAAAtH,EAAAjK,IAAAyQ,KAAA95C,IAGA46C,GAAA,SAAApR,EAAAxpC,GACA,IAAAS,EAAA,EACAN,EAAAH,EAAAG,OACAmM,EAAA8tC,GAAA5Q,EAAArpC,GACA,MAAAA,EAAAM,EAAA6L,EAAA7L,GAAAT,EAAAS,KACA,OAAA6L,GAGA4iC,GAAA,SAAAjG,EAAAnoC,EAAAquC,GACA1C,EAAAxD,EAAAnoC,EAAA,CAAiB8G,IAAA,WAAmB,OAAA5L,KAAAugB,GAAA4yB,OAGpC0L,GAAA,SAAA1jC,GACA,IAKAjX,EAAAC,EAAAib,EAAA9O,EAAAwuC,EAAAtiC,EALA6wB,EAAAtmC,EAAAoU,GACAizB,EAAAjoC,UAAAhC,OACA46C,EAAA3Q,EAAA,EAAAjoC,UAAA,QAAAtE,EACAm9C,OAAAn9C,IAAAk9C,EACAE,EAAA1D,EAAAlO,GAEA,QAAAxrC,GAAAo9C,IAAA3D,EAAA2D,GAAA,CACA,IAAAziC,EAAAyiC,EAAA5+C,KAAAgtC,GAAAjuB,EAAA,GAAAlb,EAAA,IAAyD46C,EAAAtiC,EAAAC,QAAAC,KAAgCxY,IACzFkb,EAAAhS,KAAA0xC,EAAA58C,OACOmrC,EAAAjuB,EAGP,IADA4/B,GAAA5Q,EAAA,IAAA2Q,EAAAh5C,EAAAg5C,EAAA54C,UAAA,OACAjC,EAAA,EAAAC,EAAAgqC,EAAAd,EAAAlpC,QAAAmM,EAAA8tC,GAAAp+C,KAAAmE,GAA6EA,EAAAD,EAAYA,IACzFoM,EAAApM,GAAA86C,EAAAD,EAAA1R,EAAAnpC,MAAAmpC,EAAAnpC,GAEA,OAAAoM,GAGA4uC,GAAA,WACA,IAAAz6C,EAAA,EACAN,EAAAgC,UAAAhC,OACAmM,EAAA8tC,GAAAp+C,KAAAmE,GACA,MAAAA,EAAAM,EAAA6L,EAAA7L,GAAA0B,UAAA1B,KACA,OAAA6L,GAIA6uC,KAAAjD,GAAA9L,EAAA,WAAyDuN,GAAAt9C,KAAA,IAAA67C,EAAA,MAEzDkD,GAAA,WACA,OAAAzB,GAAAv3C,MAAA+4C,GAAA1B,GAAAp9C,KAAAq+C,GAAA1+C,OAAA0+C,GAAA1+C,MAAAmG,YAGAwnC,GAAA,CACA4M,WAAA,SAAAhtC,EAAA7G,GACA,OAAAo1C,EAAAz7C,KAAAq+C,GAAA1+C,MAAAuN,EAAA7G,EAAAP,UAAAhC,OAAA,EAAAgC,UAAA,QAAAtE,IAEA6F,MAAA,SAAA+nC,GACA,OAAAiN,GAAAgC,GAAA1+C,MAAAyvC,EAAAtpC,UAAAhC,OAAA,EAAAgC,UAAA,QAAAtE,IAEAw9C,KAAA,SAAAn9C,GACA,OAAAwuC,EAAAtqC,MAAAs4C,GAAA1+C,MAAAmG,YAEAqrB,OAAA,SAAAie,GACA,OAAAkP,GAAA3+C,KAAAw8C,GAAAkC,GAAA1+C,MAAAyvC,EACAtpC,UAAAhC,OAAA,EAAAgC,UAAA,QAAAtE,KAEAy9C,KAAA,SAAAC,GACA,OAAA5C,GAAA+B,GAAA1+C,MAAAu/C,EAAAp5C,UAAAhC,OAAA,EAAAgC,UAAA,QAAAtE,IAEA29C,UAAA,SAAAD,GACA,OAAA3C,GAAA8B,GAAA1+C,MAAAu/C,EAAAp5C,UAAAhC,OAAA,EAAAgC,UAAA,QAAAtE,IAEAmO,QAAA,SAAAy/B,GACA8M,EAAAmC,GAAA1+C,MAAAyvC,EAAAtpC,UAAAhC,OAAA,EAAAgC,UAAA,QAAAtE,IAEA6C,QAAA,SAAA+6C,GACA,OAAA3C,GAAA4B,GAAA1+C,MAAAy/C,EAAAt5C,UAAAhC,OAAA,EAAAgC,UAAA,QAAAtE,IAEA69C,SAAA,SAAAD,GACA,OAAA5C,GAAA6B,GAAA1+C,MAAAy/C,EAAAt5C,UAAAhC,OAAA,EAAAgC,UAAA,QAAAtE,IAEA26B,KAAA,SAAAmjB,GACA,OAAApC,GAAAn3C,MAAAs4C,GAAA1+C,MAAAmG,YAEA+2C,YAAA,SAAAuC,GACA,OAAAxC,GAAA72C,MAAAs4C,GAAA1+C,MAAAmG,YAEArC,IAAA,SAAAi7C,GACA,OAAAZ,GAAAO,GAAA1+C,MAAA++C,EAAA54C,UAAAhC,OAAA,EAAAgC,UAAA,QAAAtE,IAEAu7C,OAAA,SAAA3N,GACA,OAAA0N,GAAA/2C,MAAAs4C,GAAA1+C,MAAAmG,YAEAm3C,YAAA,SAAA7N,GACA,OAAA4N,GAAAj3C,MAAAs4C,GAAA1+C,MAAAmG,YAEAutC,QAAA,WACA,IAIAxxC,EAJA6qC,EAAA/sC,KACAmE,EAAAu6C,GAAA3R,GAAA5oC,OACAy7C,EAAA78C,KAAAC,MAAAmB,EAAA,GACAM,EAAA,EAEA,MAAAA,EAAAm7C,EACA19C,EAAA6qC,EAAAtoC,GACAsoC,EAAAtoC,KAAAsoC,IAAA5oC,GACA4oC,EAAA5oC,GAAAjC,EACO,OAAA6qC,GAEP/E,KAAA,SAAAyH,GACA,OAAAgN,GAAAiC,GAAA1+C,MAAAyvC,EAAAtpC,UAAAhC,OAAA,EAAAgC,UAAA,QAAAtE,IAEAypB,KAAA,SAAAu0B,GACA,OAAArC,GAAAn9C,KAAAq+C,GAAA1+C,MAAA6/C,IAEAC,SAAA,SAAAC,EAAA/lB,GACA,IAAAqT,EAAAqR,GAAA1+C,MACAmE,EAAAkpC,EAAAlpC,OACA67C,EAAA9R,EAAA6R,EAAA57C,GACA,WAAAmzC,EAAAjK,IAAAyQ,KAAA,CACAzQ,EAAA8E,OACA9E,EAAA4G,WAAA+L,EAAA3S,EAAA+O,kBACAjO,QAAAtsC,IAAAm4B,EAAA71B,EAAA+pC,EAAAlU,EAAA71B,IAAA67C,MAKAC,GAAA,SAAAv5C,EAAAszB,GACA,OAAA2kB,GAAA3+C,KAAAy9C,GAAAp9C,KAAAq+C,GAAA1+C,MAAA0G,EAAAszB,KAGAxL,GAAA,SAAA0xB,GACAxB,GAAA1+C,MACA,IAAAq0C,EAAAmK,GAAAr4C,UAAA,MACAhC,EAAAnE,KAAAmE,OACAiN,EAAArK,EAAAm5C,GACA9vC,EAAA+9B,EAAA/8B,EAAAjN,QACAM,EAAA,EACA,GAAA2L,EAAAikC,EAAAlwC,EAAA,MAAAgtC,EAAAJ,IACA,MAAAtsC,EAAA2L,EAAApQ,KAAAq0C,EAAA5vC,GAAA2M,EAAA3M,MAGA07C,GAAA,CACA9F,QAAA,WACA,OAAA2C,GAAA38C,KAAAq+C,GAAA1+C,QAEA+H,KAAA,WACA,OAAA4I,GAAAtQ,KAAAq+C,GAAA1+C,QAEAof,OAAA,WACA,OAAA29B,GAAA18C,KAAAq+C,GAAA1+C,SAIAogD,GAAA,SAAA7yC,EAAAzI,GACA,OAAA3C,EAAAoL,IACAA,EAAA0wC,KACA,iBAAAn5C,GACAA,KAAAyI,GACAzK,QAAAgC,IAAAhC,OAAAgC,IAEAu7C,GAAA,SAAA9yC,EAAAzI,GACA,OAAAs7C,GAAA7yC,EAAAzI,EAAAu2C,EAAAv2C,GAAA,IACAs2C,EAAA,EAAA7tC,EAAAzI,IACAm3C,EAAA1uC,EAAAzI,IAEAw7C,GAAA,SAAA/yC,EAAAzI,EAAAy7C,GACA,QAAAH,GAAA7yC,EAAAzI,EAAAu2C,EAAAv2C,GAAA,KACA3C,EAAAo+C,IACA5zC,EAAA4zC,EAAA,WACA5zC,EAAA4zC,EAAA,QACA5zC,EAAA4zC,EAAA,QAEAA,EAAAv2C,cACA2C,EAAA4zC,EAAA,cAAAA,EAAAx2C,UACA4C,EAAA4zC,EAAA,gBAAAA,EAAA12C,WAIK4mC,EAAAljC,EAAAzI,EAAAy7C,IAFLhzC,EAAAzI,GAAAy7C,EAAAr+C,MACAqL,IAIAwwC,KACA/B,EAAAjO,EAAAsS,GACAtE,EAAAhO,EAAAuS,IAGAjK,IAAA9I,EAAA8I,EAAAY,GAAA8G,GAAA,UACAjsC,yBAAAuuC,GACAv2C,eAAAw2C,KAGAlQ,EAAA,WAAyBsN,GAAAr9C,KAAA,QACzBq9C,GAAAC,GAAA,WACA,OAAAJ,GAAAl9C,KAAAL,QAIA,IAAAwgD,GAAArQ,EAAA,GAA4CxC,IAC5CwC,EAAAqQ,GAAAL,IACAjQ,EAAAsQ,GAAAhS,GAAA2R,GAAA/gC,QACA+wB,EAAAqQ,GAAA,CACA76C,MAAAs6C,GACAvzC,IAAA8hB,GACAQ,YAAA,aACAzsB,SAAAm7C,GACAE,eAAAwB,KAEAlM,GAAAsN,GAAA,cACAtN,GAAAsN,GAAA,kBACAtN,GAAAsN,GAAA,kBACAtN,GAAAsN,GAAA,cACA/P,EAAA+P,GAAA5K,GAAA,CACAhqC,IAAA,WAAsB,OAAA5L,KAAAi+C,OAItB7R,EAAAlrC,QAAA,SAAA01C,EAAA6H,EAAAgC,EAAAC,GACAA,MACA,IAAA/H,EAAA/B,GAAA8J,EAAA,sBACAC,EAAA,MAAA/J,EACAgK,EAAA,MAAAhK,EACAiK,EAAAt/C,EAAAo3C,GACAc,EAAAoH,GAAA,GACAC,EAAAD,GAAApL,EAAAoL,GACAjH,GAAAiH,IAAA5Q,EAAA2D,IACAvG,EAAA,GACA0T,EAAAF,KAAA/P,GACA/+B,EAAA,SAAAg7B,EAAAtoC,GACA,IAAAwJ,EAAA8+B,EAAAxsB,GACA,OAAAtS,EAAArM,EAAA++C,GAAAl8C,EAAAg6C,EAAAxwC,EAAAg6B,EAAAoW,KAEArsC,EAAA,SAAA+6B,EAAAtoC,EAAAvC,GACA,IAAA+L,EAAA8+B,EAAAxsB,GACAmgC,IAAAx+C,KAAAa,KAAAi+C,MAAA9+C,IAAA,IAAAA,EAAA,YAAAA,GACA+L,EAAArM,EAAAg/C,GAAAn8C,EAAAg6C,EAAAxwC,EAAAg6B,EAAA/lC,EAAAm8C,KAEA4C,EAAA,SAAAlU,EAAAtoC,GACAgsC,EAAA1D,EAAAtoC,EAAA,CACAmH,IAAA,WACA,OAAAmG,EAAA/R,KAAAyE,IAEAiI,IAAA,SAAAxK,GACA,OAAA8P,EAAAhS,KAAAyE,EAAAvC,IAEA2H,YAAA,KAGA+vC,GACAiH,EAAAJ,EAAA,SAAA1T,EAAA9+B,EAAAizC,EAAAC,GACA9Q,EAAAtD,EAAA8T,EAAAlI,EAAA,MACA,IAEAxG,EAAAgC,EAAAhwC,EAAAy5B,EAFAn5B,EAAA,EACA4vC,EAAA,EAEA,GAAAlyC,EAAA8L,GAIS,MAAAA,aAAAgjC,IAAArT,EAAA2Q,EAAAtgC,KAAA2iC,GAAAhT,GAAAue,GAaA,OAAA8B,MAAAhwC,EACT2wC,GAAAiC,EAAA5yC,GAEA4wC,GAAAx+C,KAAAwgD,EAAA5yC,GAfAkkC,EAAAlkC,EACAomC,EAAAmK,GAAA0C,EAAAzC,GACA,IAAA2C,EAAAnzC,EAAAkmC,WACA,QAAAtyC,IAAAs/C,EAAA,CACA,GAAAC,EAAA3C,EAAA,MAAAtN,EAAAJ,IAEA,GADAoD,EAAAiN,EAAA/M,EACAF,EAAA,QAAAhD,EAAAJ,SAGA,GADAoD,EAAAhG,EAAAgT,GAAA1C,EACAtK,EAAAE,EAAA+M,EAAA,MAAAjQ,EAAAJ,IAEA5sC,EAAAgwC,EAAAsK,OAfAt6C,EAAAosC,EAAAtiC,GACAkmC,EAAAhwC,EAAAs6C,EACAtM,EAAA,IAAAlB,EAAAkD,GAmBAjE,EAAAnD,EAAA,MACA7lC,EAAAirC,EACAlK,EAAAoM,EACAnuC,EAAAiuC,EACAxsC,EAAAxD,EACAvC,EAAA,IAAAsvC,EAAAiB,KAEA,MAAA1tC,EAAAN,EAAA88C,EAAAlU,EAAAtoC,OAEAs8C,EAAAF,EAAA/P,GAAA/sC,EAAAy8C,IACAtQ,EAAA6Q,EAAA,cAAAF,IACKzQ,EAAA,WACLyQ,EAAA,MACKzQ,EAAA,WACL,IAAAyQ,GAAA,MACKjF,EAAA,SAAAhE,GACL,IAAAiJ,EACA,IAAAA,EAAA,MACA,IAAAA,EAAA,KACA,IAAAA,EAAAjJ,KACK,KACLiJ,EAAAJ,EAAA,SAAA1T,EAAA9+B,EAAAizC,EAAAC,GAEA,IAAAvjB,EAGA,OAJAyS,EAAAtD,EAAA8T,EAAAlI,GAIAx2C,EAAA8L,GACAA,aAAAgjC,IAAArT,EAAA2Q,EAAAtgC,KAAA2iC,GAAAhT,GAAAue,OACAt6C,IAAAs/C,EACA,IAAA1H,EAAAxrC,EAAAuwC,GAAA0C,EAAAzC,GAAA0C,QACAt/C,IAAAq/C,EACA,IAAAzH,EAAAxrC,EAAAuwC,GAAA0C,EAAAzC,IACA,IAAAhF,EAAAxrC,GAEAgwC,MAAAhwC,EAAA2wC,GAAAiC,EAAA5yC,GACA4wC,GAAAx+C,KAAAwgD,EAAA5yC,GATA,IAAAwrC,EAAAlJ,EAAAtiC,MAWAsuC,EAAAuE,IAAAt6C,SAAAlE,UAAAkuC,EAAAiJ,GAAAx4C,OAAAuvC,EAAAsQ,IAAAtQ,EAAAiJ,GAAA,SAAA30C,GACAA,KAAA+7C,GAAA3Q,EAAA2Q,EAAA/7C,EAAA20C,EAAA30C,MAEA+7C,EAAA/P,GAAAiQ,EACA/Q,IAAA+Q,EAAA/xB,YAAA6xB,IAEA,IAAAQ,EAAAN,EAAAvS,IACA8S,IAAAD,IACA,UAAAA,EAAAttC,WAAAlS,GAAAw/C,EAAAttC,MACAwtC,EAAApB,GAAA/gC,OACA8wB,EAAA2Q,EAAAhD,IAAA,GACA3N,EAAA6Q,EAAA9C,GAAAtF,GACAzI,EAAA6Q,EAAA5L,IAAA,GACAjF,EAAA6Q,EAAAjD,GAAA+C,IAEAH,EAAA,IAAAG,EAAA,GAAAjL,KAAA+C,EAAA/C,MAAAmL,IACAtQ,EAAAsQ,EAAAnL,GAAA,CACAhqC,IAAA,WAA0B,OAAA+sC,KAI1BtL,EAAAsL,GAAAkI,EAEAxK,IAAAmL,EAAAnL,EAAAoL,EAAApL,EAAAY,GAAA4J,GAAApH,GAAApM,GAEAgJ,IAAA9I,EAAAoL,EAAA,CACAyD,kBAAAqC,IAGApI,IAAA9I,EAAA8I,EAAAY,EAAA7G,EAAA,WAAuDqJ,EAAAiI,GAAArhD,KAAAwgD,EAAA,KAA+BlI,EAAA,CACtFlmC,KAAAosC,GACA6C,GAAAxC,KAGA9C,KAAA2E,GAAA7Q,EAAA6Q,EAAA3E,EAAAqC,GAEApI,IAAAhB,EAAAsD,EAAAhL,IAEAkO,EAAAlD,GAEAtC,IAAAhB,EAAAgB,EAAAY,EAAAsH,GAAA5F,EAAA,CAAuDjsC,IAAA8hB,KAEvD6nB,IAAAhB,EAAAgB,EAAAY,GAAAqK,EAAA3I,EAAAwH,IAEAnQ,GAAA+Q,EAAAx+C,UAAAm7C,KAAAqD,EAAAx+C,SAAAm7C,IAEArH,IAAAhB,EAAAgB,EAAAY,EAAA7G,EAAA,WACA,IAAAyQ,EAAA,GAAAl7C,UACKgzC,EAAA,CAAUhzC,MAAAs6C,KAEf5J,IAAAhB,EAAAgB,EAAAY,GAAA7G,EAAA,WACA,YAAAwN,kBAAA,IAAAiD,EAAA,OAAAjD,qBACKxN,EAAA,WACL2Q,EAAAnD,eAAAv9C,KAAA,UACKs4C,EAAA,CAAWiF,eAAAwB,KAEhB3Q,EAAAkK,GAAA2I,EAAAD,EAAAE,EACAvR,GAAAsR,GAAApR,EAAA6Q,EAAAvS,GAAA+S,SAECnV,EAAAlrC,QAAA,cAKDygD,OACA,SAAAvV,EAAAlrC,GAEA,IAAAqB,EAAA,GAAiBA,SAEjB6pC,EAAAlrC,QAAA,SAAA+rC,GACA,OAAA1qC,EAAAlC,KAAA4sC,GAAAtnC,MAAA,QAMAi8C,OACA,SAAAxV,EAAAlrC,EAAAC,GAEA,IASA0gD,EATAtgD,EAAAJ,EAAA,QACA+uC,EAAA/uC,EAAA,QACA2L,EAAA3L,EAAA,QACA+8C,EAAApxC,EAAA,eACAqoC,EAAAroC,EAAA,QACA8mC,KAAAryC,EAAA86C,cAAA96C,EAAA+6C,UACA0B,EAAApK,EACA1vC,EAAA,EACAgC,EAAA,EAGA47C,EAAA,iHAEA79C,MAAA,KAEA,MAAAC,EAAAgC,GACA27C,EAAAtgD,EAAAugD,EAAA59C,QACAgsC,EAAA2R,EAAAv/C,UAAA47C,GAAA,GACAhO,EAAA2R,EAAAv/C,UAAA6yC,GAAA,IACG6I,GAAA,EAGH5R,EAAAlrC,QAAA,CACA0yC,MACAoK,SACAE,QACA/I,SAMA4M,OACA,SAAA3V,EAAAlrC,GAEA,IAAA8L,EAAA,EACAg1C,EAAAj/C,KAAAk/C,SACA7V,EAAAlrC,QAAA,SAAA4D,GACA,gBAAA7D,YAAAY,IAAAiD,EAAA,GAAAA,EAAA,QAAAkI,EAAAg1C,GAAAz/C,SAAA,OAMA2/C,OACA,SAAA9V,EAAAlrC,EAAAC,GAIA,IAAAghD,EAAAhhD,EAAA,QACAgtC,EAAAhtC,EAAA,QACA+sC,EAAA/sC,EAAA,QACAirC,EAAAlrC,QAAA,SAAAkhD,GACA,gBAAA5S,EAAA/lB,EAAA44B,GACA,IAGAngD,EAHAmrC,EAAA8U,EAAA3S,GACArrC,EAAAgqC,EAAAd,EAAAlpC,QACAM,EAAAypC,EAAAmU,EAAAl+C,GAIA,GAAAi+C,GAAA34B,MAAA,MAAAtlB,EAAAM,EAGA,GAFAvC,EAAAmrC,EAAA5oC,KAEAvC,KAAA,cAEK,KAAYiC,EAAAM,EAAeA,IAAA,IAAA29C,GAAA39C,KAAA4oC,IAChCA,EAAA5oC,KAAAglB,EAAA,OAAA24B,GAAA39C,GAAA,EACK,OAAA29C,IAAA,KAOLE,KACA,SAAAlW,EAAAlrC,EAAAC,GAEA,IAAAgB,EAAAhB,EAAA,QACAirC,EAAAlrC,QAAA,SAAA+rC,GACA,IAAA9qC,EAAA8qC,GAAA,MAAAW,UAAAX,EAAA,sBACA,OAAAA,IAMAsV,KACA,SAAAnW,EAAAlrC,GAEA,IAAAshD,EAAApW,EAAAlrC,QAAA,CAA6B4xB,QAAA,SAC7B,iBAAA2vB,UAAAD,IAKAE,KACA,SAAAtW,EAAAlrC,EAAAC,GAGA,IAAAgsC,EAAAhsC,EAAA,QACAwhD,EAAAxhD,EAAA,QACAyhD,EAAAzhD,EAAA,QACAo0C,EAAAp0C,EAAA,OAAAA,CAAA,YACA0hD,EAAA,aACA/R,EAAA,YAGAgS,EAAA,WAEA,IAIAC,EAJAC,EAAA7hD,EAAA,OAAAA,CAAA,UACA+C,EAAA0+C,EAAAz+C,OACA8+C,EAAA,IACAC,EAAA,IAEAF,EAAAn+B,MAAAikB,QAAA,OACA3nC,EAAA,QAAAw0B,YAAAqtB,GACAA,EAAA5xC,IAAA,cAGA2xC,EAAAC,EAAAG,cAAArrC,SACAirC,EAAAK,OACAL,EAAAM,MAAAJ,EAAA,SAAAC,EAAA,oBAAAD,EAAA,UAAAC,GACAH,EAAAO,QACAR,EAAAC,EAAA9L,EACA,MAAA/yC,WAAA4+C,EAAAhS,GAAA8R,EAAA1+C,IACA,OAAA4+C,KAGA1W,EAAAlrC,QAAAO,OAAAsC,QAAA,SAAAspC,EAAAkW,GACA,IAAAjzC,EAQA,OAPA,OAAA+8B,GACAwV,EAAA/R,GAAA3D,EAAAE,GACA/8B,EAAA,IAAAuyC,EACAA,EAAA/R,GAAA,KAEAxgC,EAAAilC,GAAAlI,GACG/8B,EAAAwyC,SACHjhD,IAAA0hD,EAAAjzC,EAAAqyC,EAAAryC,EAAAizC,KAMAC,KACA,SAAApX,EAAAlrC,EAAAC,GAGA,IAAAsiD,EAAAtiD,EAAA,QACAuiD,EAAAviD,EAAA,QAAAF,OAAA,sBAEAC,EAAA6sC,EAAAtsC,OAAAmP,qBAAA,SAAAy8B,GACA,OAAAoW,EAAApW,EAAAqW,KAMAC,KACA,SAAAvX,EAAAlrC,EAAAC,GAEA,IAAAyiD,EAAAziD,EAAA,QACA63C,EAAA73C,EAAA,QACAghD,EAAAhhD,EAAA,QACAk6C,EAAAl6C,EAAA,QACAwL,EAAAxL,EAAA,QACA0iD,EAAA1iD,EAAA,QACA86C,EAAAx6C,OAAAqQ,yBAEA5Q,EAAA6sC,EAAA5sC,EAAA,QAAA86C,EAAA,SAAA5O,EAAAgI,GAGA,GAFAhI,EAAA8U,EAAA9U,GACAgI,EAAAgG,EAAAhG,GAAA,GACAwO,EAAA,IACA,OAAA5H,EAAA5O,EAAAgI,GACG,MAAA1tC,IACH,GAAAgF,EAAA0gC,EAAAgI,GAAA,OAAA2D,GAAA4K,EAAA7V,EAAA1tC,KAAAgtC,EAAAgI,GAAAhI,EAAAgI,MAMAyO,KACA,SAAA1X,EAAAlrC,EAAAC,GAEA,IAAAqhD,EAAArhD,EAAA,QACAI,EAAAJ,EAAA,QACA4iD,EAAA,qBACAvQ,EAAAjyC,EAAAwiD,KAAAxiD,EAAAwiD,GAAA,KAEA3X,EAAAlrC,QAAA,SAAA4D,EAAA5C,GACA,OAAAsxC,EAAA1uC,KAAA0uC,EAAA1uC,QAAAjD,IAAAK,IAAA,MACC,eAAAkL,KAAA,CACD0lB,QAAA0vB,EAAA1vB,QACAoW,KAAA/nC,EAAA,wBACA6iD,UAAA,0CAMAC,KACA,SAAA7X,EAAAlrC,EAAAC,GAGA,IAAAmvC,EAAAnvC,EAAA,QACA22C,EAAA/0C,KAAA+0C,IACA1L,EAAAlrC,QAAA,SAAA+rC,GACA,OAAAA,EAAA,EAAA6K,EAAAxH,EAAArD,GAAA,sBAMAiX,KACA,SAAA9X,EAAAlrC,EAAAC,GAEA,IAAAI,EAAAJ,EAAA,QACAqhD,EAAArhD,EAAA,QACA+uC,EAAA/uC,EAAA,QACA+3C,EAAA/3C,EAAA,QACA4E,EAAA5E,EAAA,QACA2vC,EAAA,YAEAuF,EAAA,SAAA/iC,EAAAS,EAAAoH,GACA,IAQArW,EAAAq/C,EAAAC,EAAArN,EARAsN,EAAA/wC,EAAA+iC,EAAAY,EACAqN,EAAAhxC,EAAA+iC,EAAAmL,EACA+C,EAAAjxC,EAAA+iC,EAAA9I,EACAiX,EAAAlxC,EAAA+iC,EAAAhB,EACAoP,EAAAnxC,EAAA+iC,EAAAL,EACAzoC,EAAA+2C,EAAA/iD,EAAAgjD,EAAAhjD,EAAAwS,KAAAxS,EAAAwS,GAAA,KAAkFxS,EAAAwS,IAAA,IAAuB+8B,GACzG5vC,EAAAojD,EAAA9B,IAAAzuC,KAAAyuC,EAAAzuC,GAAA,IACA2wC,EAAAxjD,EAAA4vC,KAAA5vC,EAAA4vC,GAAA,IAGA,IAAAhsC,KADAw/C,IAAAnpC,EAAApH,GACAoH,EAEAgpC,GAAAE,GAAA92C,QAAA1L,IAAA0L,EAAAzI,GAEAs/C,GAAAD,EAAA52C,EAAA4N,GAAArW,GAEAiyC,EAAA0N,GAAAN,EAAAp+C,EAAAq+C,EAAA7iD,GAAAijD,GAAA,mBAAAJ,EAAAr+C,EAAAS,SAAAnG,KAAA+jD,KAEA72C,GAAA2rC,EAAA3rC,EAAAzI,EAAAs/C,EAAA9wC,EAAA+iC,EAAAsO,GAEAzjD,EAAA4D,IAAAs/C,GAAAlU,EAAAhvC,EAAA4D,EAAAiyC,GACAyN,GAAAE,EAAA5/C,IAAAs/C,IAAAM,EAAA5/C,GAAAs/C,IAGA7iD,EAAAihD,OAEAnM,EAAAY,EAAA,EACAZ,EAAAmL,EAAA,EACAnL,EAAA9I,EAAA,EACA8I,EAAAhB,EAAA,EACAgB,EAAAL,EAAA,GACAK,EAAAoL,EAAA,GACApL,EAAAsO,EAAA,GACAtO,EAAAuO,EAAA,IACAxY,EAAAlrC,QAAAm1C,GAKAwO,KACA,SAAAzY,EAAAlrC,GAGAkrC,EAAAlrC,QAAA,gGAEA+C,MAAA,MAKA6gD,KACA,SAAA1Y,EAAAlrC,EAAAC,GAGA,IAAAw0C,EAAAx0C,EAAA,QACAirC,EAAAlrC,QAAAmC,MAAAC,SAAA,SAAA04B,GACA,eAAA2Z,EAAA3Z,KAMA+oB,KACA,SAAA3Y,EAAAlrC,GAEAkrC,EAAAlrC,QAAA,SAAA21C,GACA,IACA,QAAAA,IACG,MAAAlvC,GACH,YAOAq9C,KACA,SAAA5Y,EAAAlrC,EAAAC,GAEA,IAAAsvC,EAAAtvC,EAAA,QACAgsC,EAAAhsC,EAAA,QACA8jD,EAAA9jD,EAAA,QAEAirC,EAAAlrC,QAAAC,EAAA,QAAAM,OAAA6N,iBAAA,SAAA+9B,EAAAkW,GACApW,EAAAE,GACA,IAGAgI,EAHAttC,EAAAk9C,EAAA1B,GACAp/C,EAAA4D,EAAA5D,OACAD,EAAA,EAEA,MAAAC,EAAAD,EAAAusC,EAAA1C,EAAAV,EAAAgI,EAAAttC,EAAA7D,KAAAq/C,EAAAlO,IACA,OAAAhI,IAMA6X,KACA,SAAA9Y,EAAAlrC,GAGA,IAAAikD,EAAApiD,KAAAoiD,KACAniD,EAAAD,KAAAC,MACAopC,EAAAlrC,QAAA,SAAA+rC,GACA,OAAAvpC,MAAAupC,MAAA,GAAAA,EAAA,EAAAjqC,EAAAmiD,GAAAlY,KAMAmY,KACA,SAAAhZ,EAAA/qC,EAAAF,GAEA,aAWA,IAAAkkD,GAVAlkD,EAAAG,EAAAD,GAKA,qBAAAqJ,UAEAvJ,EAAA,SAIAkkD,EAAA36C,OAAAoN,SAAAwtC,iBAAAD,IAAAj0C,IAAA7F,MAAA,+BACApK,EAAAmW,EAAA+tC,EAAA,KAQAlkD,EAAA,QAGAA,EAAA,QANA,IASAokD,EAAApkD,EAAA,QACAqkD,EAAArkD,EAAAyB,EAAA2iD,GAwGA,SAAAE,UAnGA5jD,IAAAowB,OAAAyzB,UAEAzzB,OAAAyzB,QAAA3iD,KAAAwuC,IAAA,aAIA1vC,IAAAowB,OAAA0zB,YAKA1zB,OAAA0zB,UAAA,SAAAzjD,GAEA,wBAAAA,GAAAe,SAAAf,IAAAa,KAAAC,MAAAd,cAQAL,IAAAkB,KAAA6iD,OAIA7iD,KAAA6iD,KAAA,SAAAC,GAEA,OAAAA,EAAA,KAAAA,EAAA,KAAAA,IAMA,SAAAr/C,SAAAlE,aAAA,GAKAb,OAAAqI,eAAAtD,SAAAlE,UAAA,QAEAsJ,IAAA,WAEA,OAAA5L,KAAAuC,WAAAgJ,MAAA,wCAQA1J,IAAAJ,OAAAqkD,QAKA,WAEArkD,OAAAqkD,OAAA,SAAAv4C,GAEA,QAAA1L,IAAA0L,GAAA,OAAAA,EAEA,UAAAqgC,UAAA,8CAMA,IAFA,IAAAmY,EAAAtkD,OAAA8L,GAEA9I,EAAA,EAAuBA,EAAA0B,UAAAhC,OAA0BM,IAAA,CAEjD,IAAA0W,EAAAhV,UAAA1B,GAEA,QAAA5C,IAAAsZ,GAAA,OAAAA,EAEA,QAAA6qC,KAAA7qC,EAEA1Z,OAAAa,UAAAsC,eAAAvE,KAAA8a,EAAA6qC,KAEAD,EAAAC,GAAA7qC,EAAA6qC,IAUA,OAAAD,GAhCA,GA8CAtkD,OAAAqkD,OAAAL,EAAAnjD,UAAA,CAEAuJ,iBAAA,SAAAyH,EAAA2yC,QAEApkD,IAAA7B,KAAAkmD,aAAAlmD,KAAAkmD,WAAA,IAEA,IAAAnlC,EAAA/gB,KAAAkmD,gBAEArkD,IAAAkf,EAAAzN,KAEAyN,EAAAzN,GAAA,KAIA,IAAAyN,EAAAzN,GAAA5O,QAAAuhD,IAEAllC,EAAAzN,GAAAlG,KAAA64C,IAMAE,iBAAA,SAAA7yC,EAAA2yC,GAEA,QAAApkD,IAAA7B,KAAAkmD,WAAA,SAEA,IAAAnlC,EAAA/gB,KAAAkmD,WAEA,YAAArkD,IAAAkf,EAAAzN,KAAA,IAAAyN,EAAAzN,GAAA5O,QAAAuhD,IAIA7oB,oBAAA,SAAA9pB,EAAA2yC,GAEA,QAAApkD,IAAA7B,KAAAkmD,WAAA,CAEA,IAAAnlC,EAAA/gB,KAAAkmD,WACAE,EAAArlC,EAAAzN,GAEA,QAAAzR,IAAAukD,EAAA,CAEA,IAAA3hD,EAAA2hD,EAAA1hD,QAAAuhD,IAEA,IAAAxhD,GAEA2hD,EAAAzhD,OAAAF,EAAA,MAQAgkC,cAAA,SAAAjvB,GAEA,QAAA3X,IAAA7B,KAAAkmD,WAAA,CAEA,IAAAnlC,EAAA/gB,KAAAkmD,WACAE,EAAArlC,EAAAvH,EAAAlG,MAEA,QAAAzR,IAAAukD,EAAA,CAEA5sC,EAAAjM,OAAAvN,KAIA,IAFA,IAAAqmD,EAAAD,EAAAzgD,MAAA,GAEAzB,EAAA,EAAAgC,EAAAmgD,EAAAliD,OAAqCD,EAAAgC,EAAOhC,IAE5CmiD,EAAAniD,GAAA7D,KAAAL,KAAAwZ,QAUA,IAy9EA8sC,EAz9EAC,EAAA,MACAC,EAAA,CAAaC,KAAA,EAAAC,OAAA,EAAAC,MAAA,GACbC,EAAA,EACAC,EAAA,EACAC,EAAA,EAKAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EAEAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,IACAC,EAAA,IACAC,EAAA,IACAC,EAAA,IACAC,EAAA,IACAC,EAAA,IACAC,EAAA,IACAC,EAAA,IACAC,EAAA,IACAC,EAAA,IACAC,EAAA,IACAC,EAAA,IACAC,EAAA,IACAC,EAAA,IACAC,EAAA,IACAC,EAAA,IACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EAEAC,GAAA,IACAC,GAAA,IACAC,GAAA,IACAC,GAAA,IACAC,GAAA,IACAC,GAAA,IACAC,GAAA,IACAC,GAAA,IACAC,GAAA,IACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KAEAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,MACAC,GAAA,MACAC,GAAA,MACAC,GAAA,MACAC,GAAA,MACAC,GAAA,MACAC,GAAA,MACAC,GAAA,MACAC,GAAA,MACAC,GAAA,MACAC,GAAA,MACAC,GAAA,MACAC,GAAA,MACAC,GAAA,MACAC,GAAA,MACAC,GAAA,MACAC,GAAA,MACAC,GAAA,MACAC,GAAA,MACAC,GAAA,MACAC,GAAA,MACAC,GAAA,MACAC,GAAA,MACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GA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","file":"js/chunk-vendors.8589ba4b.js","sourcesContent":["/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nexport default function normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n","/*!\n * Vue.js v2.6.10\n * (c) 2014-2019 Evan You\n * Released under the MIT License.\n */\n/*  */\n\nvar emptyObject = Object.freeze({});\n\n// These helpers produce better VM code in JS engines due to their\n// explicitness and function inlining.\nfunction isUndef (v) {\n  return v === undefined || v === null\n}\n\nfunction isDef (v) {\n  return v !== undefined && v !== null\n}\n\nfunction isTrue (v) {\n  return v === true\n}\n\nfunction isFalse (v) {\n  return v === false\n}\n\n/**\n * Check if value is primitive.\n */\nfunction isPrimitive (value) {\n  return (\n    typeof value === 'string' ||\n    typeof value === 'number' ||\n    // $flow-disable-line\n    typeof value === 'symbol' ||\n    typeof value === 'boolean'\n  )\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n */\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\n/**\n * Get the raw type string of a value, e.g., [object Object].\n */\nvar _toString = Object.prototype.toString;\n\nfunction toRawType (value) {\n  return _toString.call(value).slice(8, -1)\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n */\nfunction isPlainObject (obj) {\n  return _toString.call(obj) === '[object Object]'\n}\n\nfunction isRegExp (v) {\n  return _toString.call(v) === '[object RegExp]'\n}\n\n/**\n * Check if val is a valid array index.\n */\nfunction isValidArrayIndex (val) {\n  var n = parseFloat(String(val));\n  return n >= 0 && Math.floor(n) === n && isFinite(val)\n}\n\nfunction isPromise (val) {\n  return (\n    isDef(val) &&\n    typeof val.then === 'function' &&\n    typeof val.catch === 'function'\n  )\n}\n\n/**\n * Convert a value to a string that is actually rendered.\n */\nfunction toString (val) {\n  return val == null\n    ? ''\n    : Array.isArray(val) || (isPlainObject(val) && val.toString === _toString)\n      ? JSON.stringify(val, null, 2)\n      : String(val)\n}\n\n/**\n * Convert an input value to a number for persistence.\n * If the conversion fails, return original string.\n */\nfunction toNumber (val) {\n  var n = parseFloat(val);\n  return isNaN(n) ? val : n\n}\n\n/**\n * Make a map and return a function for checking if a key\n * is in that map.\n */\nfunction makeMap (\n  str,\n  expectsLowerCase\n) {\n  var map = Object.create(null);\n  var list = str.split(',');\n  for (var i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectsLowerCase\n    ? function (val) { return map[val.toLowerCase()]; }\n    : function (val) { return map[val]; }\n}\n\n/**\n * Check if a tag is a built-in tag.\n */\nvar isBuiltInTag = makeMap('slot,component', true);\n\n/**\n * Check if an attribute is a reserved attribute.\n */\nvar isReservedAttribute = makeMap('key,ref,slot,slot-scope,is');\n\n/**\n * Remove an item from an array.\n */\nfunction remove (arr, item) {\n  if (arr.length) {\n    var index = arr.indexOf(item);\n    if (index > -1) {\n      return arr.splice(index, 1)\n    }\n  }\n}\n\n/**\n * Check whether an object has the property.\n */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwn (obj, key) {\n  return hasOwnProperty.call(obj, key)\n}\n\n/**\n * Create a cached version of a pure function.\n */\nfunction cached (fn) {\n  var cache = Object.create(null);\n  return (function cachedFn (str) {\n    var hit = cache[str];\n    return hit || (cache[str] = fn(str))\n  })\n}\n\n/**\n * Camelize a hyphen-delimited string.\n */\nvar camelizeRE = /-(\\w)/g;\nvar camelize = cached(function (str) {\n  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })\n});\n\n/**\n * Capitalize a string.\n */\nvar capitalize = cached(function (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n});\n\n/**\n * Hyphenate a camelCase string.\n */\nvar hyphenateRE = /\\B([A-Z])/g;\nvar hyphenate = cached(function (str) {\n  return str.replace(hyphenateRE, '-$1').toLowerCase()\n});\n\n/**\n * Simple bind polyfill for environments that do not support it,\n * e.g., PhantomJS 1.x. Technically, we don't need this anymore\n * since native bind is now performant enough in most browsers.\n * But removing it would mean breaking code that was able to run in\n * PhantomJS 1.x, so this must be kept for backward compatibility.\n */\n\n/* istanbul ignore next */\nfunction polyfillBind (fn, ctx) {\n  function boundFn (a) {\n    var l = arguments.length;\n    return l\n      ? l > 1\n        ? fn.apply(ctx, arguments)\n        : fn.call(ctx, a)\n      : fn.call(ctx)\n  }\n\n  boundFn._length = fn.length;\n  return boundFn\n}\n\nfunction nativeBind (fn, ctx) {\n  return fn.bind(ctx)\n}\n\nvar bind = Function.prototype.bind\n  ? nativeBind\n  : polyfillBind;\n\n/**\n * Convert an Array-like object to a real Array.\n */\nfunction toArray (list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret\n}\n\n/**\n * Mix properties into target object.\n */\nfunction extend (to, _from) {\n  for (var key in _from) {\n    to[key] = _from[key];\n  }\n  return to\n}\n\n/**\n * Merge an Array of Objects into a single Object.\n */\nfunction toObject (arr) {\n  var res = {};\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i]) {\n      extend(res, arr[i]);\n    }\n  }\n  return res\n}\n\n/* eslint-disable no-unused-vars */\n\n/**\n * Perform no operation.\n * Stubbing args to make Flow happy without leaving useless transpiled code\n * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/).\n */\nfunction noop (a, b, c) {}\n\n/**\n * Always return false.\n */\nvar no = function (a, b, c) { return false; };\n\n/* eslint-enable no-unused-vars */\n\n/**\n * Return the same value.\n */\nvar identity = function (_) { return _; };\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n */\nfunction looseEqual (a, b) {\n  if (a === b) { return true }\n  var isObjectA = isObject(a);\n  var isObjectB = isObject(b);\n  if (isObjectA && isObjectB) {\n    try {\n      var isArrayA = Array.isArray(a);\n      var isArrayB = Array.isArray(b);\n      if (isArrayA && isArrayB) {\n        return a.length === b.length && a.every(function (e, i) {\n          return looseEqual(e, b[i])\n        })\n      } else if (a instanceof Date && b instanceof Date) {\n        return a.getTime() === b.getTime()\n      } else if (!isArrayA && !isArrayB) {\n        var keysA = Object.keys(a);\n        var keysB = Object.keys(b);\n        return keysA.length === keysB.length && keysA.every(function (key) {\n          return looseEqual(a[key], b[key])\n        })\n      } else {\n        /* istanbul ignore next */\n        return false\n      }\n    } catch (e) {\n      /* istanbul ignore next */\n      return false\n    }\n  } else if (!isObjectA && !isObjectB) {\n    return String(a) === String(b)\n  } else {\n    return false\n  }\n}\n\n/**\n * Return the first index at which a loosely equal value can be\n * found in the array (if value is a plain object, the array must\n * contain an object of the same shape), or -1 if it is not present.\n */\nfunction looseIndexOf (arr, val) {\n  for (var i = 0; i < arr.length; i++) {\n    if (looseEqual(arr[i], val)) { return i }\n  }\n  return -1\n}\n\n/**\n * Ensure a function is called only once.\n */\nfunction once (fn) {\n  var called = false;\n  return function () {\n    if (!called) {\n      called = true;\n      fn.apply(this, arguments);\n    }\n  }\n}\n\nvar SSR_ATTR = 'data-server-rendered';\n\nvar ASSET_TYPES = [\n  'component',\n  'directive',\n  'filter'\n];\n\nvar LIFECYCLE_HOOKS = [\n  'beforeCreate',\n  'created',\n  'beforeMount',\n  'mounted',\n  'beforeUpdate',\n  'updated',\n  'beforeDestroy',\n  'destroyed',\n  'activated',\n  'deactivated',\n  'errorCaptured',\n  'serverPrefetch'\n];\n\n/*  */\n\n\n\nvar config = ({\n  /**\n   * Option merge strategies (used in core/util/options)\n   */\n  // $flow-disable-line\n  optionMergeStrategies: Object.create(null),\n\n  /**\n   * Whether to suppress warnings.\n   */\n  silent: false,\n\n  /**\n   * Show production mode tip message on boot?\n   */\n  productionTip: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to enable devtools\n   */\n  devtools: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to record perf\n   */\n  performance: false,\n\n  /**\n   * Error handler for watcher errors\n   */\n  errorHandler: null,\n\n  /**\n   * Warn handler for watcher warns\n   */\n  warnHandler: null,\n\n  /**\n   * Ignore certain custom elements\n   */\n  ignoredElements: [],\n\n  /**\n   * Custom user key aliases for v-on\n   */\n  // $flow-disable-line\n  keyCodes: Object.create(null),\n\n  /**\n   * Check if a tag is reserved so that it cannot be registered as a\n   * component. This is platform-dependent and may be overwritten.\n   */\n  isReservedTag: no,\n\n  /**\n   * Check if an attribute is reserved so that it cannot be used as a component\n   * prop. This is platform-dependent and may be overwritten.\n   */\n  isReservedAttr: no,\n\n  /**\n   * Check if a tag is an unknown element.\n   * Platform-dependent.\n   */\n  isUnknownElement: no,\n\n  /**\n   * Get the namespace of an element\n   */\n  getTagNamespace: noop,\n\n  /**\n   * Parse the real tag name for the specific platform.\n   */\n  parsePlatformTagName: identity,\n\n  /**\n   * Check if an attribute must be bound using property, e.g. value\n   * Platform-dependent.\n   */\n  mustUseProp: no,\n\n  /**\n   * Perform updates asynchronously. Intended to be used by Vue Test Utils\n   * This will significantly reduce performance if set to false.\n   */\n  async: true,\n\n  /**\n   * Exposed for legacy reasons\n   */\n  _lifecycleHooks: LIFECYCLE_HOOKS\n});\n\n/*  */\n\n/**\n * unicode letters used for parsing html tags, component names and property paths.\n * using https://www.w3.org/TR/html53/semantics-scripting.html#potentialcustomelementname\n * skipping \\u10000-\\uEFFFF due to it freezing up PhantomJS\n */\nvar unicodeRegExp = /a-zA-Z\\u00B7\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u203F-\\u2040\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD/;\n\n/**\n * Check if a string starts with $ or _\n */\nfunction isReserved (str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F\n}\n\n/**\n * Define a property.\n */\nfunction def (obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Parse simple path.\n */\nvar bailRE = new RegExp((\"[^\" + (unicodeRegExp.source) + \".$_\\\\d]\"));\nfunction parsePath (path) {\n  if (bailRE.test(path)) {\n    return\n  }\n  var segments = path.split('.');\n  return function (obj) {\n    for (var i = 0; i < segments.length; i++) {\n      if (!obj) { return }\n      obj = obj[segments[i]];\n    }\n    return obj\n  }\n}\n\n/*  */\n\n// can we use __proto__?\nvar hasProto = '__proto__' in {};\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined';\nvar inWeex = typeof WXEnvironment !== 'undefined' && !!WXEnvironment.platform;\nvar weexPlatform = inWeex && WXEnvironment.platform.toLowerCase();\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && /msie|trident/.test(UA);\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isEdge = UA && UA.indexOf('edge/') > 0;\nvar isAndroid = (UA && UA.indexOf('android') > 0) || (weexPlatform === 'android');\nvar isIOS = (UA && /iphone|ipad|ipod|ios/.test(UA)) || (weexPlatform === 'ios');\nvar isChrome = UA && /chrome\\/\\d+/.test(UA) && !isEdge;\nvar isPhantomJS = UA && /phantomjs/.test(UA);\nvar isFF = UA && UA.match(/firefox\\/(\\d+)/);\n\n// Firefox has a \"watch\" function on Object.prototype...\nvar nativeWatch = ({}).watch;\n\nvar supportsPassive = false;\nif (inBrowser) {\n  try {\n    var opts = {};\n    Object.defineProperty(opts, 'passive', ({\n      get: function get () {\n        /* istanbul ignore next */\n        supportsPassive = true;\n      }\n    })); // https://github.com/facebook/flow/issues/285\n    window.addEventListener('test-passive', null, opts);\n  } catch (e) {}\n}\n\n// this needs to be lazy-evaled because vue may be required before\n// vue-server-renderer can set VUE_ENV\nvar _isServer;\nvar isServerRendering = function () {\n  if (_isServer === undefined) {\n    /* istanbul ignore if */\n    if (!inBrowser && !inWeex && typeof global !== 'undefined') {\n      // detect presence of vue-server-renderer and avoid\n      // Webpack shimming the process\n      _isServer = global['process'] && global['process'].env.VUE_ENV === 'server';\n    } else {\n      _isServer = false;\n    }\n  }\n  return _isServer\n};\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n/* istanbul ignore next */\nfunction isNative (Ctor) {\n  return typeof Ctor === 'function' && /native code/.test(Ctor.toString())\n}\n\nvar hasSymbol =\n  typeof Symbol !== 'undefined' && isNative(Symbol) &&\n  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);\n\nvar _Set;\n/* istanbul ignore if */ // $flow-disable-line\nif (typeof Set !== 'undefined' && isNative(Set)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = /*@__PURE__*/(function () {\n    function Set () {\n      this.set = Object.create(null);\n    }\n    Set.prototype.has = function has (key) {\n      return this.set[key] === true\n    };\n    Set.prototype.add = function add (key) {\n      this.set[key] = true;\n    };\n    Set.prototype.clear = function clear () {\n      this.set = Object.create(null);\n    };\n\n    return Set;\n  }());\n}\n\n/*  */\n\nvar warn = noop;\nvar tip = noop;\nvar generateComponentTrace = (noop); // work around flow check\nvar formatComponentName = (noop);\n\nif (process.env.NODE_ENV !== 'production') {\n  var hasConsole = typeof console !== 'undefined';\n  var classifyRE = /(?:^|[-_])(\\w)/g;\n  var classify = function (str) { return str\n    .replace(classifyRE, function (c) { return c.toUpperCase(); })\n    .replace(/[-_]/g, ''); };\n\n  warn = function (msg, vm) {\n    var trace = vm ? generateComponentTrace(vm) : '';\n\n    if (config.warnHandler) {\n      config.warnHandler.call(null, msg, vm, trace);\n    } else if (hasConsole && (!config.silent)) {\n      console.error((\"[Vue warn]: \" + msg + trace));\n    }\n  };\n\n  tip = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.warn(\"[Vue tip]: \" + msg + (\n        vm ? generateComponentTrace(vm) : ''\n      ));\n    }\n  };\n\n  formatComponentName = function (vm, includeFile) {\n    if (vm.$root === vm) {\n      return '<Root>'\n    }\n    var options = typeof vm === 'function' && vm.cid != null\n      ? vm.options\n      : vm._isVue\n        ? vm.$options || vm.constructor.options\n        : vm;\n    var name = options.name || options._componentTag;\n    var file = options.__file;\n    if (!name && file) {\n      var match = file.match(/([^/\\\\]+)\\.vue$/);\n      name = match && match[1];\n    }\n\n    return (\n      (name ? (\"<\" + (classify(name)) + \">\") : \"<Anonymous>\") +\n      (file && includeFile !== false ? (\" at \" + file) : '')\n    )\n  };\n\n  var repeat = function (str, n) {\n    var res = '';\n    while (n) {\n      if (n % 2 === 1) { res += str; }\n      if (n > 1) { str += str; }\n      n >>= 1;\n    }\n    return res\n  };\n\n  generateComponentTrace = function (vm) {\n    if (vm._isVue && vm.$parent) {\n      var tree = [];\n      var currentRecursiveSequence = 0;\n      while (vm) {\n        if (tree.length > 0) {\n          var last = tree[tree.length - 1];\n          if (last.constructor === vm.constructor) {\n            currentRecursiveSequence++;\n            vm = vm.$parent;\n            continue\n          } else if (currentRecursiveSequence > 0) {\n            tree[tree.length - 1] = [last, currentRecursiveSequence];\n            currentRecursiveSequence = 0;\n          }\n        }\n        tree.push(vm);\n        vm = vm.$parent;\n      }\n      return '\\n\\nfound in\\n\\n' + tree\n        .map(function (vm, i) { return (\"\" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)\n            ? ((formatComponentName(vm[0])) + \"... (\" + (vm[1]) + \" recursive calls)\")\n            : formatComponentName(vm))); })\n        .join('\\n')\n    } else {\n      return (\"\\n\\n(found in \" + (formatComponentName(vm)) + \")\")\n    }\n  };\n}\n\n/*  */\n\nvar uid = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n */\nvar Dep = function Dep () {\n  this.id = uid++;\n  this.subs = [];\n};\n\nDep.prototype.addSub = function addSub (sub) {\n  this.subs.push(sub);\n};\n\nDep.prototype.removeSub = function removeSub (sub) {\n  remove(this.subs, sub);\n};\n\nDep.prototype.depend = function depend () {\n  if (Dep.target) {\n    Dep.target.addDep(this);\n  }\n};\n\nDep.prototype.notify = function notify () {\n  // stabilize the subscriber list first\n  var subs = this.subs.slice();\n  if (process.env.NODE_ENV !== 'production' && !config.async) {\n    // subs aren't sorted in scheduler if not running async\n    // we need to sort them now to make sure they fire in correct\n    // order\n    subs.sort(function (a, b) { return a.id - b.id; });\n  }\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\n// The current target watcher being evaluated.\n// This is globally unique because only one watcher\n// can be evaluated at a time.\nDep.target = null;\nvar targetStack = [];\n\nfunction pushTarget (target) {\n  targetStack.push(target);\n  Dep.target = target;\n}\n\nfunction popTarget () {\n  targetStack.pop();\n  Dep.target = targetStack[targetStack.length - 1];\n}\n\n/*  */\n\nvar VNode = function VNode (\n  tag,\n  data,\n  children,\n  text,\n  elm,\n  context,\n  componentOptions,\n  asyncFactory\n) {\n  this.tag = tag;\n  this.data = data;\n  this.children = children;\n  this.text = text;\n  this.elm = elm;\n  this.ns = undefined;\n  this.context = context;\n  this.fnContext = undefined;\n  this.fnOptions = undefined;\n  this.fnScopeId = undefined;\n  this.key = data && data.key;\n  this.componentOptions = componentOptions;\n  this.componentInstance = undefined;\n  this.parent = undefined;\n  this.raw = false;\n  this.isStatic = false;\n  this.isRootInsert = true;\n  this.isComment = false;\n  this.isCloned = false;\n  this.isOnce = false;\n  this.asyncFactory = asyncFactory;\n  this.asyncMeta = undefined;\n  this.isAsyncPlaceholder = false;\n};\n\nvar prototypeAccessors = { child: { configurable: true } };\n\n// DEPRECATED: alias for componentInstance for backwards compat.\n/* istanbul ignore next */\nprototypeAccessors.child.get = function () {\n  return this.componentInstance\n};\n\nObject.defineProperties( VNode.prototype, prototypeAccessors );\n\nvar createEmptyVNode = function (text) {\n  if ( text === void 0 ) text = '';\n\n  var node = new VNode();\n  node.text = text;\n  node.isComment = true;\n  return node\n};\n\nfunction createTextVNode (val) {\n  return new VNode(undefined, undefined, undefined, String(val))\n}\n\n// optimized shallow clone\n// used for static nodes and slot nodes because they may be reused across\n// multiple renders, cloning them avoids errors when DOM manipulations rely\n// on their elm reference.\nfunction cloneVNode (vnode) {\n  var cloned = new VNode(\n    vnode.tag,\n    vnode.data,\n    // #7975\n    // clone children array to avoid mutating original in case of cloning\n    // a child.\n    vnode.children && vnode.children.slice(),\n    vnode.text,\n    vnode.elm,\n    vnode.context,\n    vnode.componentOptions,\n    vnode.asyncFactory\n  );\n  cloned.ns = vnode.ns;\n  cloned.isStatic = vnode.isStatic;\n  cloned.key = vnode.key;\n  cloned.isComment = vnode.isComment;\n  cloned.fnContext = vnode.fnContext;\n  cloned.fnOptions = vnode.fnOptions;\n  cloned.fnScopeId = vnode.fnScopeId;\n  cloned.asyncMeta = vnode.asyncMeta;\n  cloned.isCloned = true;\n  return cloned\n}\n\n/*\n * not type checking this file because flow doesn't play well with\n * dynamically accessing methods on Array prototype\n */\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto);\n\nvar methodsToPatch = [\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'splice',\n  'sort',\n  'reverse'\n];\n\n/**\n * Intercept mutating methods and emit events\n */\nmethodsToPatch.forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n      case 'unshift':\n        inserted = args;\n        break\n      case 'splice':\n        inserted = args.slice(2);\n        break\n    }\n    if (inserted) { ob.observeArray(inserted); }\n    // notify change\n    ob.dep.notify();\n    return result\n  });\n});\n\n/*  */\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * In some cases we may want to disable observation inside a component's\n * update computation.\n */\nvar shouldObserve = true;\n\nfunction toggleObserving (value) {\n  shouldObserve = value;\n}\n\n/**\n * Observer class that is attached to each observed\n * object. Once attached, the observer converts the target\n * object's property keys into getter/setters that\n * collect dependencies and dispatch updates.\n */\nvar Observer = function Observer (value) {\n  this.value = value;\n  this.dep = new Dep();\n  this.vmCount = 0;\n  def(value, '__ob__', this);\n  if (Array.isArray(value)) {\n    if (hasProto) {\n      protoAugment(value, arrayMethods);\n    } else {\n      copyAugment(value, arrayMethods, arrayKeys);\n    }\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n};\n\n/**\n * Walk through all properties and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n */\nObserver.prototype.walk = function walk (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0; i < keys.length; i++) {\n    defineReactive$$1(obj, keys[i]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n */\nObserver.prototype.observeArray = function observeArray (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n// helpers\n\n/**\n * Augment a target Object or Array by intercepting\n * the prototype chain using __proto__\n */\nfunction protoAugment (target, src) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment a target Object or Array by defining\n * hidden properties.\n */\n/* istanbul ignore next */\nfunction copyAugment (target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n */\nfunction observe (value, asRootData) {\n  if (!isObject(value) || value instanceof VNode) {\n    return\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (\n    shouldObserve &&\n    !isServerRendering() &&\n    (Array.isArray(value) || isPlainObject(value)) &&\n    Object.isExtensible(value) &&\n    !value._isVue\n  ) {\n    ob = new Observer(value);\n  }\n  if (asRootData && ob) {\n    ob.vmCount++;\n  }\n  return ob\n}\n\n/**\n * Define a reactive property on an Object.\n */\nfunction defineReactive$$1 (\n  obj,\n  key,\n  val,\n  customSetter,\n  shallow\n) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n  if ((!getter || setter) && arguments.length === 2) {\n    val = obj[key];\n  }\n\n  var childOb = !shallow && observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter () {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n          if (Array.isArray(value)) {\n            dependArray(value);\n          }\n        }\n      }\n      return value\n    },\n    set: function reactiveSetter (newVal) {\n      var value = getter ? getter.call(obj) : val;\n      /* eslint-disable no-self-compare */\n      if (newVal === value || (newVal !== newVal && value !== value)) {\n        return\n      }\n      /* eslint-enable no-self-compare */\n      if (process.env.NODE_ENV !== 'production' && customSetter) {\n        customSetter();\n      }\n      // #7981: for accessor properties without setter\n      if (getter && !setter) { return }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = !shallow && observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n/**\n * Set a property on an object. Adds the new property and\n * triggers change notification if the property doesn't\n * already exist.\n */\nfunction set (target, key, val) {\n  if (process.env.NODE_ENV !== 'production' &&\n    (isUndef(target) || isPrimitive(target))\n  ) {\n    warn((\"Cannot set reactive property on undefined, null, or primitive value: \" + ((target))));\n  }\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.length = Math.max(target.length, key);\n    target.splice(key, 1, val);\n    return val\n  }\n  if (key in target && !(key in Object.prototype)) {\n    target[key] = val;\n    return val\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid adding reactive properties to a Vue instance or its root $data ' +\n      'at runtime - declare it upfront in the data option.'\n    );\n    return val\n  }\n  if (!ob) {\n    target[key] = val;\n    return val\n  }\n  defineReactive$$1(ob.value, key, val);\n  ob.dep.notify();\n  return val\n}\n\n/**\n * Delete a property and trigger change if necessary.\n */\nfunction del (target, key) {\n  if (process.env.NODE_ENV !== 'production' &&\n    (isUndef(target) || isPrimitive(target))\n  ) {\n    warn((\"Cannot delete reactive property on undefined, null, or primitive value: \" + ((target))));\n  }\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.splice(key, 1);\n    return\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid deleting properties on a Vue instance or its root $data ' +\n      '- just set it to null.'\n    );\n    return\n  }\n  if (!hasOwn(target, key)) {\n    return\n  }\n  delete target[key];\n  if (!ob) {\n    return\n  }\n  ob.dep.notify();\n}\n\n/**\n * Collect dependencies on array elements when the array is touched, since\n * we cannot intercept array element access like property getters.\n */\nfunction dependArray (value) {\n  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {\n    e = value[i];\n    e && e.__ob__ && e.__ob__.dep.depend();\n    if (Array.isArray(e)) {\n      dependArray(e);\n    }\n  }\n}\n\n/*  */\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n */\nvar strats = config.optionMergeStrategies;\n\n/**\n * Options with restrictions\n */\nif (process.env.NODE_ENV !== 'production') {\n  strats.el = strats.propsData = function (parent, child, vm, key) {\n    if (!vm) {\n      warn(\n        \"option \\\"\" + key + \"\\\" can only be used during instance \" +\n        'creation with the `new` keyword.'\n      );\n    }\n    return defaultStrat(parent, child)\n  };\n}\n\n/**\n * Helper that recursively merges two data objects together.\n */\nfunction mergeData (to, from) {\n  if (!from) { return to }\n  var key, toVal, fromVal;\n\n  var keys = hasSymbol\n    ? Reflect.ownKeys(from)\n    : Object.keys(from);\n\n  for (var i = 0; i < keys.length; i++) {\n    key = keys[i];\n    // in case the object is already observed...\n    if (key === '__ob__') { continue }\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (\n      toVal !== fromVal &&\n      isPlainObject(toVal) &&\n      isPlainObject(fromVal)\n    ) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to\n}\n\n/**\n * Data\n */\nfunction mergeDataOrFn (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal\n    }\n    if (!parentVal) {\n      return childVal\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn () {\n      return mergeData(\n        typeof childVal === 'function' ? childVal.call(this, this) : childVal,\n        typeof parentVal === 'function' ? parentVal.call(this, this) : parentVal\n      )\n    }\n  } else {\n    return function mergedInstanceDataFn () {\n      // instance merge\n      var instanceData = typeof childVal === 'function'\n        ? childVal.call(vm, vm)\n        : childVal;\n      var defaultData = typeof parentVal === 'function'\n        ? parentVal.call(vm, vm)\n        : parentVal;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData)\n      } else {\n        return defaultData\n      }\n    }\n  }\n}\n\nstrats.data = function (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    if (childVal && typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn(\n        'The \"data\" option should be a function ' +\n        'that returns a per-instance value in component ' +\n        'definitions.',\n        vm\n      );\n\n      return parentVal\n    }\n    return mergeDataOrFn(parentVal, childVal)\n  }\n\n  return mergeDataOrFn(parentVal, childVal, vm)\n};\n\n/**\n * Hooks and props are merged as arrays.\n */\nfunction mergeHook (\n  parentVal,\n  childVal\n) {\n  var res = childVal\n    ? parentVal\n      ? parentVal.concat(childVal)\n      : Array.isArray(childVal)\n        ? childVal\n        : [childVal]\n    : parentVal;\n  return res\n    ? dedupeHooks(res)\n    : res\n}\n\nfunction dedupeHooks (hooks) {\n  var res = [];\n  for (var i = 0; i < hooks.length; i++) {\n    if (res.indexOf(hooks[i]) === -1) {\n      res.push(hooks[i]);\n    }\n  }\n  return res\n}\n\nLIFECYCLE_HOOKS.forEach(function (hook) {\n  strats[hook] = mergeHook;\n});\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\nfunction mergeAssets (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  var res = Object.create(parentVal || null);\n  if (childVal) {\n    process.env.NODE_ENV !== 'production' && assertObjectType(key, childVal, vm);\n    return extend(res, childVal)\n  } else {\n    return res\n  }\n}\n\nASSET_TYPES.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Watchers.\n *\n * Watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\nstrats.watch = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  // work around Firefox's Object.prototype.watch...\n  if (parentVal === nativeWatch) { parentVal = undefined; }\n  if (childVal === nativeWatch) { childVal = undefined; }\n  /* istanbul ignore if */\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (process.env.NODE_ENV !== 'production') {\n    assertObjectType(key, childVal, vm);\n  }\n  if (!parentVal) { return childVal }\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key$1 in childVal) {\n    var parent = ret[key$1];\n    var child = childVal[key$1];\n    if (parent && !Array.isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key$1] = parent\n      ? parent.concat(child)\n      : Array.isArray(child) ? child : [child];\n  }\n  return ret\n};\n\n/**\n * Other object hashes.\n */\nstrats.props =\nstrats.methods =\nstrats.inject =\nstrats.computed = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  if (childVal && process.env.NODE_ENV !== 'production') {\n    assertObjectType(key, childVal, vm);\n  }\n  if (!parentVal) { return childVal }\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  if (childVal) { extend(ret, childVal); }\n  return ret\n};\nstrats.provide = mergeDataOrFn;\n\n/**\n * Default strategy.\n */\nvar defaultStrat = function (parentVal, childVal) {\n  return childVal === undefined\n    ? parentVal\n    : childVal\n};\n\n/**\n * Validate component names\n */\nfunction checkComponents (options) {\n  for (var key in options.components) {\n    validateComponentName(key);\n  }\n}\n\nfunction validateComponentName (name) {\n  if (!new RegExp((\"^[a-zA-Z][\\\\-\\\\.0-9_\" + (unicodeRegExp.source) + \"]*$\")).test(name)) {\n    warn(\n      'Invalid component name: \"' + name + '\". Component names ' +\n      'should conform to valid custom element name in html5 specification.'\n    );\n  }\n  if (isBuiltInTag(name) || config.isReservedTag(name)) {\n    warn(\n      'Do not use built-in or reserved HTML elements as component ' +\n      'id: ' + name\n    );\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n */\nfunction normalizeProps (options, vm) {\n  var props = options.props;\n  if (!props) { return }\n  var res = {};\n  var i, val, name;\n  if (Array.isArray(props)) {\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        name = camelize(val);\n        res[name] = { type: null };\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('props must be strings when using array syntax.');\n      }\n    }\n  } else if (isPlainObject(props)) {\n    for (var key in props) {\n      val = props[key];\n      name = camelize(key);\n      res[name] = isPlainObject(val)\n        ? val\n        : { type: val };\n    }\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn(\n      \"Invalid value for option \\\"props\\\": expected an Array or an Object, \" +\n      \"but got \" + (toRawType(props)) + \".\",\n      vm\n    );\n  }\n  options.props = res;\n}\n\n/**\n * Normalize all injections into Object-based format\n */\nfunction normalizeInject (options, vm) {\n  var inject = options.inject;\n  if (!inject) { return }\n  var normalized = options.inject = {};\n  if (Array.isArray(inject)) {\n    for (var i = 0; i < inject.length; i++) {\n      normalized[inject[i]] = { from: inject[i] };\n    }\n  } else if (isPlainObject(inject)) {\n    for (var key in inject) {\n      var val = inject[key];\n      normalized[key] = isPlainObject(val)\n        ? extend({ from: key }, val)\n        : { from: val };\n    }\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn(\n      \"Invalid value for option \\\"inject\\\": expected an Array or an Object, \" +\n      \"but got \" + (toRawType(inject)) + \".\",\n      vm\n    );\n  }\n}\n\n/**\n * Normalize raw function directives into object format.\n */\nfunction normalizeDirectives (options) {\n  var dirs = options.directives;\n  if (dirs) {\n    for (var key in dirs) {\n      var def$$1 = dirs[key];\n      if (typeof def$$1 === 'function') {\n        dirs[key] = { bind: def$$1, update: def$$1 };\n      }\n    }\n  }\n}\n\nfunction assertObjectType (name, value, vm) {\n  if (!isPlainObject(value)) {\n    warn(\n      \"Invalid value for option \\\"\" + name + \"\\\": expected an Object, \" +\n      \"but got \" + (toRawType(value)) + \".\",\n      vm\n    );\n  }\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n */\nfunction mergeOptions (\n  parent,\n  child,\n  vm\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    checkComponents(child);\n  }\n\n  if (typeof child === 'function') {\n    child = child.options;\n  }\n\n  normalizeProps(child, vm);\n  normalizeInject(child, vm);\n  normalizeDirectives(child);\n\n  // Apply extends and mixins on the child options,\n  // but only if it is a raw options object that isn't\n  // the result of another mergeOptions call.\n  // Only merged options has the _base property.\n  if (!child._base) {\n    if (child.extends) {\n      parent = mergeOptions(parent, child.extends, vm);\n    }\n    if (child.mixins) {\n      for (var i = 0, l = child.mixins.length; i < l; i++) {\n        parent = mergeOptions(parent, child.mixins[i], vm);\n      }\n    }\n  }\n\n  var options = {};\n  var key;\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField (key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n */\nfunction resolveAsset (\n  options,\n  type,\n  id,\n  warnMissing\n) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return\n  }\n  var assets = options[type];\n  // check local registration variations first\n  if (hasOwn(assets, id)) { return assets[id] }\n  var camelizedId = camelize(id);\n  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }\n  var PascalCaseId = capitalize(camelizedId);\n  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }\n  // fallback to prototype chain\n  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];\n  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n    warn(\n      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,\n      options\n    );\n  }\n  return res\n}\n\n/*  */\n\n\n\nfunction validateProp (\n  key,\n  propOptions,\n  propsData,\n  vm\n) {\n  var prop = propOptions[key];\n  var absent = !hasOwn(propsData, key);\n  var value = propsData[key];\n  // boolean casting\n  var booleanIndex = getTypeIndex(Boolean, prop.type);\n  if (booleanIndex > -1) {\n    if (absent && !hasOwn(prop, 'default')) {\n      value = false;\n    } else if (value === '' || value === hyphenate(key)) {\n      // only cast empty string / same name to boolean if\n      // boolean has higher priority\n      var stringIndex = getTypeIndex(String, prop.type);\n      if (stringIndex < 0 || booleanIndex < stringIndex) {\n        value = true;\n      }\n    }\n  }\n  // check default value\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop, key);\n    // since the default value is a fresh copy,\n    // make sure to observe it.\n    var prevShouldObserve = shouldObserve;\n    toggleObserving(true);\n    observe(value);\n    toggleObserving(prevShouldObserve);\n  }\n  if (\n    process.env.NODE_ENV !== 'production' &&\n    // skip validation for weex recycle-list child component props\n    !(false)\n  ) {\n    assertProp(prop, key, value, vm, absent);\n  }\n  return value\n}\n\n/**\n * Get the default value of a prop.\n */\nfunction getPropDefaultValue (vm, prop, key) {\n  // no default, return undefined\n  if (!hasOwn(prop, 'default')) {\n    return undefined\n  }\n  var def = prop.default;\n  // warn against non-factory defaults for Object & Array\n  if (process.env.NODE_ENV !== 'production' && isObject(def)) {\n    warn(\n      'Invalid default value for prop \"' + key + '\": ' +\n      'Props with type Object/Array must use a factory function ' +\n      'to return the default value.',\n      vm\n    );\n  }\n  // the raw prop value was also undefined from previous render,\n  // return previous default value to avoid unnecessary watcher trigger\n  if (vm && vm.$options.propsData &&\n    vm.$options.propsData[key] === undefined &&\n    vm._props[key] !== undefined\n  ) {\n    return vm._props[key]\n  }\n  // call factory function for non-Function types\n  // a value is Function if its prototype is function even across different execution context\n  return typeof def === 'function' && getType(prop.type) !== 'Function'\n    ? def.call(vm)\n    : def\n}\n\n/**\n * Assert whether a prop is valid.\n */\nfunction assertProp (\n  prop,\n  name,\n  value,\n  vm,\n  absent\n) {\n  if (prop.required && absent) {\n    warn(\n      'Missing required prop: \"' + name + '\"',\n      vm\n    );\n    return\n  }\n  if (value == null && !prop.required) {\n    return\n  }\n  var type = prop.type;\n  var valid = !type || type === true;\n  var expectedTypes = [];\n  if (type) {\n    if (!Array.isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType || '');\n      valid = assertedType.valid;\n    }\n  }\n\n  if (!valid) {\n    warn(\n      getInvalidTypeMessage(name, value, expectedTypes),\n      vm\n    );\n    return\n  }\n  var validator = prop.validator;\n  if (validator) {\n    if (!validator(value)) {\n      warn(\n        'Invalid prop: custom validator check failed for prop \"' + name + '\".',\n        vm\n      );\n    }\n  }\n}\n\nvar simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;\n\nfunction assertType (value, type) {\n  var valid;\n  var expectedType = getType(type);\n  if (simpleCheckRE.test(expectedType)) {\n    var t = typeof value;\n    valid = t === expectedType.toLowerCase();\n    // for primitive wrapper objects\n    if (!valid && t === 'object') {\n      valid = value instanceof type;\n    }\n  } else if (expectedType === 'Object') {\n    valid = isPlainObject(value);\n  } else if (expectedType === 'Array') {\n    valid = Array.isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  }\n}\n\n/**\n * Use function string name to check built-in types,\n * because a simple equality check will fail when running\n * across different vms / iframes.\n */\nfunction getType (fn) {\n  var match = fn && fn.toString().match(/^\\s*function (\\w+)/);\n  return match ? match[1] : ''\n}\n\nfunction isSameType (a, b) {\n  return getType(a) === getType(b)\n}\n\nfunction getTypeIndex (type, expectedTypes) {\n  if (!Array.isArray(expectedTypes)) {\n    return isSameType(expectedTypes, type) ? 0 : -1\n  }\n  for (var i = 0, len = expectedTypes.length; i < len; i++) {\n    if (isSameType(expectedTypes[i], type)) {\n      return i\n    }\n  }\n  return -1\n}\n\nfunction getInvalidTypeMessage (name, value, expectedTypes) {\n  var message = \"Invalid prop: type check failed for prop \\\"\" + name + \"\\\".\" +\n    \" Expected \" + (expectedTypes.map(capitalize).join(', '));\n  var expectedType = expectedTypes[0];\n  var receivedType = toRawType(value);\n  var expectedValue = styleValue(value, expectedType);\n  var receivedValue = styleValue(value, receivedType);\n  // check if we need to specify expected value\n  if (expectedTypes.length === 1 &&\n      isExplicable(expectedType) &&\n      !isBoolean(expectedType, receivedType)) {\n    message += \" with value \" + expectedValue;\n  }\n  message += \", got \" + receivedType + \" \";\n  // check if we need to specify received value\n  if (isExplicable(receivedType)) {\n    message += \"with value \" + receivedValue + \".\";\n  }\n  return message\n}\n\nfunction styleValue (value, type) {\n  if (type === 'String') {\n    return (\"\\\"\" + value + \"\\\"\")\n  } else if (type === 'Number') {\n    return (\"\" + (Number(value)))\n  } else {\n    return (\"\" + value)\n  }\n}\n\nfunction isExplicable (value) {\n  var explicitTypes = ['string', 'number', 'boolean'];\n  return explicitTypes.some(function (elem) { return value.toLowerCase() === elem; })\n}\n\nfunction isBoolean () {\n  var args = [], len = arguments.length;\n  while ( len-- ) args[ len ] = arguments[ len ];\n\n  return args.some(function (elem) { return elem.toLowerCase() === 'boolean'; })\n}\n\n/*  */\n\nfunction handleError (err, vm, info) {\n  // Deactivate deps tracking while processing error handler to avoid possible infinite rendering.\n  // See: https://github.com/vuejs/vuex/issues/1505\n  pushTarget();\n  try {\n    if (vm) {\n      var cur = vm;\n      while ((cur = cur.$parent)) {\n        var hooks = cur.$options.errorCaptured;\n        if (hooks) {\n          for (var i = 0; i < hooks.length; i++) {\n            try {\n              var capture = hooks[i].call(cur, err, vm, info) === false;\n              if (capture) { return }\n            } catch (e) {\n              globalHandleError(e, cur, 'errorCaptured hook');\n            }\n          }\n        }\n      }\n    }\n    globalHandleError(err, vm, info);\n  } finally {\n    popTarget();\n  }\n}\n\nfunction invokeWithErrorHandling (\n  handler,\n  context,\n  args,\n  vm,\n  info\n) {\n  var res;\n  try {\n    res = args ? handler.apply(context, args) : handler.call(context);\n    if (res && !res._isVue && isPromise(res) && !res._handled) {\n      res.catch(function (e) { return handleError(e, vm, info + \" (Promise/async)\"); });\n      // issue #9511\n      // avoid catch triggering multiple times when nested calls\n      res._handled = true;\n    }\n  } catch (e) {\n    handleError(e, vm, info);\n  }\n  return res\n}\n\nfunction globalHandleError (err, vm, info) {\n  if (config.errorHandler) {\n    try {\n      return config.errorHandler.call(null, err, vm, info)\n    } catch (e) {\n      // if the user intentionally throws the original error in the handler,\n      // do not log it twice\n      if (e !== err) {\n        logError(e, null, 'config.errorHandler');\n      }\n    }\n  }\n  logError(err, vm, info);\n}\n\nfunction logError (err, vm, info) {\n  if (process.env.NODE_ENV !== 'production') {\n    warn((\"Error in \" + info + \": \\\"\" + (err.toString()) + \"\\\"\"), vm);\n  }\n  /* istanbul ignore else */\n  if ((inBrowser || inWeex) && typeof console !== 'undefined') {\n    console.error(err);\n  } else {\n    throw err\n  }\n}\n\n/*  */\n\nvar isUsingMicroTask = false;\n\nvar callbacks = [];\nvar pending = false;\n\nfunction flushCallbacks () {\n  pending = false;\n  var copies = callbacks.slice(0);\n  callbacks.length = 0;\n  for (var i = 0; i < copies.length; i++) {\n    copies[i]();\n  }\n}\n\n// Here we have async deferring wrappers using microtasks.\n// In 2.5 we used (macro) tasks (in combination with microtasks).\n// However, it has subtle problems when state is changed right before repaint\n// (e.g. #6813, out-in transitions).\n// Also, using (macro) tasks in event handler would cause some weird behaviors\n// that cannot be circumvented (e.g. #7109, #7153, #7546, #7834, #8109).\n// So we now use microtasks everywhere, again.\n// A major drawback of this tradeoff is that there are some scenarios\n// where microtasks have too high a priority and fire in between supposedly\n// sequential events (e.g. #4521, #6690, which have workarounds)\n// or even between bubbling of the same event (#6566).\nvar timerFunc;\n\n// The nextTick behavior leverages the microtask queue, which can be accessed\n// via either native Promise.then or MutationObserver.\n// MutationObserver has wider support, however it is seriously bugged in\n// UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It\n// completely stops working after triggering a few times... so, if native\n// Promise is available, we will use it:\n/* istanbul ignore next, $flow-disable-line */\nif (typeof Promise !== 'undefined' && isNative(Promise)) {\n  var p = Promise.resolve();\n  timerFunc = function () {\n    p.then(flushCallbacks);\n    // In problematic UIWebViews, Promise.then doesn't completely break, but\n    // it can get stuck in a weird state where callbacks are pushed into the\n    // microtask queue but the queue isn't being flushed, until the browser\n    // needs to do some other work, e.g. handle a timer. Therefore we can\n    // \"force\" the microtask queue to be flushed by adding an empty timer.\n    if (isIOS) { setTimeout(noop); }\n  };\n  isUsingMicroTask = true;\n} else if (!isIE && typeof MutationObserver !== 'undefined' && (\n  isNative(MutationObserver) ||\n  // PhantomJS and iOS 7.x\n  MutationObserver.toString() === '[object MutationObserverConstructor]'\n)) {\n  // Use MutationObserver where native Promise is not available,\n  // e.g. PhantomJS, iOS7, Android 4.4\n  // (#6466 MutationObserver is unreliable in IE11)\n  var counter = 1;\n  var observer = new MutationObserver(flushCallbacks);\n  var textNode = document.createTextNode(String(counter));\n  observer.observe(textNode, {\n    characterData: true\n  });\n  timerFunc = function () {\n    counter = (counter + 1) % 2;\n    textNode.data = String(counter);\n  };\n  isUsingMicroTask = true;\n} else if (typeof setImmediate !== 'undefined' && isNative(setImmediate)) {\n  // Fallback to setImmediate.\n  // Techinically it leverages the (macro) task queue,\n  // but it is still a better choice than setTimeout.\n  timerFunc = function () {\n    setImmediate(flushCallbacks);\n  };\n} else {\n  // Fallback to setTimeout.\n  timerFunc = function () {\n    setTimeout(flushCallbacks, 0);\n  };\n}\n\nfunction nextTick (cb, ctx) {\n  var _resolve;\n  callbacks.push(function () {\n    if (cb) {\n      try {\n        cb.call(ctx);\n      } catch (e) {\n        handleError(e, ctx, 'nextTick');\n      }\n    } else if (_resolve) {\n      _resolve(ctx);\n    }\n  });\n  if (!pending) {\n    pending = true;\n    timerFunc();\n  }\n  // $flow-disable-line\n  if (!cb && typeof Promise !== 'undefined') {\n    return new Promise(function (resolve) {\n      _resolve = resolve;\n    })\n  }\n}\n\n/*  */\n\n/* not type checking this file because flow doesn't play well with Proxy */\n\nvar initProxy;\n\nif (process.env.NODE_ENV !== 'production') {\n  var allowedGlobals = makeMap(\n    'Infinity,undefined,NaN,isFinite,isNaN,' +\n    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +\n    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +\n    'require' // for Webpack/Browserify\n  );\n\n  var warnNonPresent = function (target, key) {\n    warn(\n      \"Property or method \\\"\" + key + \"\\\" is not defined on the instance but \" +\n      'referenced during render. Make sure that this property is reactive, ' +\n      'either in the data option, or for class-based components, by ' +\n      'initializing the property. ' +\n      'See: https://vuejs.org/v2/guide/reactivity.html#Declaring-Reactive-Properties.',\n      target\n    );\n  };\n\n  var warnReservedPrefix = function (target, key) {\n    warn(\n      \"Property \\\"\" + key + \"\\\" must be accessed with \\\"$data.\" + key + \"\\\" because \" +\n      'properties starting with \"$\" or \"_\" are not proxied in the Vue instance to ' +\n      'prevent conflicts with Vue internals' +\n      'See: https://vuejs.org/v2/api/#data',\n      target\n    );\n  };\n\n  var hasProxy =\n    typeof Proxy !== 'undefined' && isNative(Proxy);\n\n  if (hasProxy) {\n    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta,exact');\n    config.keyCodes = new Proxy(config.keyCodes, {\n      set: function set (target, key, value) {\n        if (isBuiltInModifier(key)) {\n          warn((\"Avoid overwriting built-in modifier in config.keyCodes: .\" + key));\n          return false\n        } else {\n          target[key] = value;\n          return true\n        }\n      }\n    });\n  }\n\n  var hasHandler = {\n    has: function has (target, key) {\n      var has = key in target;\n      var isAllowed = allowedGlobals(key) ||\n        (typeof key === 'string' && key.charAt(0) === '_' && !(key in target.$data));\n      if (!has && !isAllowed) {\n        if (key in target.$data) { warnReservedPrefix(target, key); }\n        else { warnNonPresent(target, key); }\n      }\n      return has || !isAllowed\n    }\n  };\n\n  var getHandler = {\n    get: function get (target, key) {\n      if (typeof key === 'string' && !(key in target)) {\n        if (key in target.$data) { warnReservedPrefix(target, key); }\n        else { warnNonPresent(target, key); }\n      }\n      return target[key]\n    }\n  };\n\n  initProxy = function initProxy (vm) {\n    if (hasProxy) {\n      // determine which proxy handler to use\n      var options = vm.$options;\n      var handlers = options.render && options.render._withStripped\n        ? getHandler\n        : hasHandler;\n      vm._renderProxy = new Proxy(vm, handlers);\n    } else {\n      vm._renderProxy = vm;\n    }\n  };\n}\n\n/*  */\n\nvar seenObjects = new _Set();\n\n/**\n * Recursively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n */\nfunction traverse (val) {\n  _traverse(val, seenObjects);\n  seenObjects.clear();\n}\n\nfunction _traverse (val, seen) {\n  var i, keys;\n  var isA = Array.isArray(val);\n  if ((!isA && !isObject(val)) || Object.isFrozen(val) || val instanceof VNode) {\n    return\n  }\n  if (val.__ob__) {\n    var depId = val.__ob__.dep.id;\n    if (seen.has(depId)) {\n      return\n    }\n    seen.add(depId);\n  }\n  if (isA) {\n    i = val.length;\n    while (i--) { _traverse(val[i], seen); }\n  } else {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) { _traverse(val[keys[i]], seen); }\n  }\n}\n\nvar mark;\nvar measure;\n\nif (process.env.NODE_ENV !== 'production') {\n  var perf = inBrowser && window.performance;\n  /* istanbul ignore if */\n  if (\n    perf &&\n    perf.mark &&\n    perf.measure &&\n    perf.clearMarks &&\n    perf.clearMeasures\n  ) {\n    mark = function (tag) { return perf.mark(tag); };\n    measure = function (name, startTag, endTag) {\n      perf.measure(name, startTag, endTag);\n      perf.clearMarks(startTag);\n      perf.clearMarks(endTag);\n      // perf.clearMeasures(name)\n    };\n  }\n}\n\n/*  */\n\nvar normalizeEvent = cached(function (name) {\n  var passive = name.charAt(0) === '&';\n  name = passive ? name.slice(1) : name;\n  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first\n  name = once$$1 ? name.slice(1) : name;\n  var capture = name.charAt(0) === '!';\n  name = capture ? name.slice(1) : name;\n  return {\n    name: name,\n    once: once$$1,\n    capture: capture,\n    passive: passive\n  }\n});\n\nfunction createFnInvoker (fns, vm) {\n  function invoker () {\n    var arguments$1 = arguments;\n\n    var fns = invoker.fns;\n    if (Array.isArray(fns)) {\n      var cloned = fns.slice();\n      for (var i = 0; i < cloned.length; i++) {\n        invokeWithErrorHandling(cloned[i], null, arguments$1, vm, \"v-on handler\");\n      }\n    } else {\n      // return handler return value for single handlers\n      return invokeWithErrorHandling(fns, null, arguments, vm, \"v-on handler\")\n    }\n  }\n  invoker.fns = fns;\n  return invoker\n}\n\nfunction updateListeners (\n  on,\n  oldOn,\n  add,\n  remove$$1,\n  createOnceHandler,\n  vm\n) {\n  var name, def$$1, cur, old, event;\n  for (name in on) {\n    def$$1 = cur = on[name];\n    old = oldOn[name];\n    event = normalizeEvent(name);\n    if (isUndef(cur)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Invalid handler for event \\\"\" + (event.name) + \"\\\": got \" + String(cur),\n        vm\n      );\n    } else if (isUndef(old)) {\n      if (isUndef(cur.fns)) {\n        cur = on[name] = createFnInvoker(cur, vm);\n      }\n      if (isTrue(event.once)) {\n        cur = on[name] = createOnceHandler(event.name, cur, event.capture);\n      }\n      add(event.name, cur, event.capture, event.passive, event.params);\n    } else if (cur !== old) {\n      old.fns = cur;\n      on[name] = old;\n    }\n  }\n  for (name in oldOn) {\n    if (isUndef(on[name])) {\n      event = normalizeEvent(name);\n      remove$$1(event.name, oldOn[name], event.capture);\n    }\n  }\n}\n\n/*  */\n\nfunction mergeVNodeHook (def, hookKey, hook) {\n  if (def instanceof VNode) {\n    def = def.data.hook || (def.data.hook = {});\n  }\n  var invoker;\n  var oldHook = def[hookKey];\n\n  function wrappedHook () {\n    hook.apply(this, arguments);\n    // important: remove merged hook to ensure it's called only once\n    // and prevent memory leak\n    remove(invoker.fns, wrappedHook);\n  }\n\n  if (isUndef(oldHook)) {\n    // no existing hook\n    invoker = createFnInvoker([wrappedHook]);\n  } else {\n    /* istanbul ignore if */\n    if (isDef(oldHook.fns) && isTrue(oldHook.merged)) {\n      // already a merged invoker\n      invoker = oldHook;\n      invoker.fns.push(wrappedHook);\n    } else {\n      // existing plain hook\n      invoker = createFnInvoker([oldHook, wrappedHook]);\n    }\n  }\n\n  invoker.merged = true;\n  def[hookKey] = invoker;\n}\n\n/*  */\n\nfunction extractPropsFromVNodeData (\n  data,\n  Ctor,\n  tag\n) {\n  // we are only extracting raw values here.\n  // validation and default values are handled in the child\n  // component itself.\n  var propOptions = Ctor.options.props;\n  if (isUndef(propOptions)) {\n    return\n  }\n  var res = {};\n  var attrs = data.attrs;\n  var props = data.props;\n  if (isDef(attrs) || isDef(props)) {\n    for (var key in propOptions) {\n      var altKey = hyphenate(key);\n      if (process.env.NODE_ENV !== 'production') {\n        var keyInLowerCase = key.toLowerCase();\n        if (\n          key !== keyInLowerCase &&\n          attrs && hasOwn(attrs, keyInLowerCase)\n        ) {\n          tip(\n            \"Prop \\\"\" + keyInLowerCase + \"\\\" is passed to component \" +\n            (formatComponentName(tag || Ctor)) + \", but the declared prop name is\" +\n            \" \\\"\" + key + \"\\\". \" +\n            \"Note that HTML attributes are case-insensitive and camelCased \" +\n            \"props need to use their kebab-case equivalents when using in-DOM \" +\n            \"templates. You should probably use \\\"\" + altKey + \"\\\" instead of \\\"\" + key + \"\\\".\"\n          );\n        }\n      }\n      checkProp(res, props, key, altKey, true) ||\n      checkProp(res, attrs, key, altKey, false);\n    }\n  }\n  return res\n}\n\nfunction checkProp (\n  res,\n  hash,\n  key,\n  altKey,\n  preserve\n) {\n  if (isDef(hash)) {\n    if (hasOwn(hash, key)) {\n      res[key] = hash[key];\n      if (!preserve) {\n        delete hash[key];\n      }\n      return true\n    } else if (hasOwn(hash, altKey)) {\n      res[key] = hash[altKey];\n      if (!preserve) {\n        delete hash[altKey];\n      }\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\n// The template compiler attempts to minimize the need for normalization by\n// statically analyzing the template at compile time.\n//\n// For plain HTML markup, normalization can be completely skipped because the\n// generated render function is guaranteed to return Array<VNode>. There are\n// two cases where extra normalization is needed:\n\n// 1. When the children contains components - because a functional component\n// may return an Array instead of a single root. In this case, just a simple\n// normalization is needed - if any child is an Array, we flatten the whole\n// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep\n// because functional components already normalize their own children.\nfunction simpleNormalizeChildren (children) {\n  for (var i = 0; i < children.length; i++) {\n    if (Array.isArray(children[i])) {\n      return Array.prototype.concat.apply([], children)\n    }\n  }\n  return children\n}\n\n// 2. When the children contains constructs that always generated nested Arrays,\n// e.g. <template>, <slot>, v-for, or when the children is provided by user\n// with hand-written render functions / JSX. In such cases a full normalization\n// is needed to cater to all possible types of children values.\nfunction normalizeChildren (children) {\n  return isPrimitive(children)\n    ? [createTextVNode(children)]\n    : Array.isArray(children)\n      ? normalizeArrayChildren(children)\n      : undefined\n}\n\nfunction isTextNode (node) {\n  return isDef(node) && isDef(node.text) && isFalse(node.isComment)\n}\n\nfunction normalizeArrayChildren (children, nestedIndex) {\n  var res = [];\n  var i, c, lastIndex, last;\n  for (i = 0; i < children.length; i++) {\n    c = children[i];\n    if (isUndef(c) || typeof c === 'boolean') { continue }\n    lastIndex = res.length - 1;\n    last = res[lastIndex];\n    //  nested\n    if (Array.isArray(c)) {\n      if (c.length > 0) {\n        c = normalizeArrayChildren(c, ((nestedIndex || '') + \"_\" + i));\n        // merge adjacent text nodes\n        if (isTextNode(c[0]) && isTextNode(last)) {\n          res[lastIndex] = createTextVNode(last.text + (c[0]).text);\n          c.shift();\n        }\n        res.push.apply(res, c);\n      }\n    } else if (isPrimitive(c)) {\n      if (isTextNode(last)) {\n        // merge adjacent text nodes\n        // this is necessary for SSR hydration because text nodes are\n        // essentially merged when rendered to HTML strings\n        res[lastIndex] = createTextVNode(last.text + c);\n      } else if (c !== '') {\n        // convert primitive to vnode\n        res.push(createTextVNode(c));\n      }\n    } else {\n      if (isTextNode(c) && isTextNode(last)) {\n        // merge adjacent text nodes\n        res[lastIndex] = createTextVNode(last.text + c.text);\n      } else {\n        // default key for nested array children (likely generated by v-for)\n        if (isTrue(children._isVList) &&\n          isDef(c.tag) &&\n          isUndef(c.key) &&\n          isDef(nestedIndex)) {\n          c.key = \"__vlist\" + nestedIndex + \"_\" + i + \"__\";\n        }\n        res.push(c);\n      }\n    }\n  }\n  return res\n}\n\n/*  */\n\nfunction initProvide (vm) {\n  var provide = vm.$options.provide;\n  if (provide) {\n    vm._provided = typeof provide === 'function'\n      ? provide.call(vm)\n      : provide;\n  }\n}\n\nfunction initInjections (vm) {\n  var result = resolveInject(vm.$options.inject, vm);\n  if (result) {\n    toggleObserving(false);\n    Object.keys(result).forEach(function (key) {\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production') {\n        defineReactive$$1(vm, key, result[key], function () {\n          warn(\n            \"Avoid mutating an injected value directly since the changes will be \" +\n            \"overwritten whenever the provided component re-renders. \" +\n            \"injection being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        });\n      } else {\n        defineReactive$$1(vm, key, result[key]);\n      }\n    });\n    toggleObserving(true);\n  }\n}\n\nfunction resolveInject (inject, vm) {\n  if (inject) {\n    // inject is :any because flow is not smart enough to figure out cached\n    var result = Object.create(null);\n    var keys = hasSymbol\n      ? Reflect.ownKeys(inject)\n      : Object.keys(inject);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      // #6574 in case the inject object is observed...\n      if (key === '__ob__') { continue }\n      var provideKey = inject[key].from;\n      var source = vm;\n      while (source) {\n        if (source._provided && hasOwn(source._provided, provideKey)) {\n          result[key] = source._provided[provideKey];\n          break\n        }\n        source = source.$parent;\n      }\n      if (!source) {\n        if ('default' in inject[key]) {\n          var provideDefault = inject[key].default;\n          result[key] = typeof provideDefault === 'function'\n            ? provideDefault.call(vm)\n            : provideDefault;\n        } else if (process.env.NODE_ENV !== 'production') {\n          warn((\"Injection \\\"\" + key + \"\\\" not found\"), vm);\n        }\n      }\n    }\n    return result\n  }\n}\n\n/*  */\n\n\n\n/**\n * Runtime helper for resolving raw children VNodes into a slot object.\n */\nfunction resolveSlots (\n  children,\n  context\n) {\n  if (!children || !children.length) {\n    return {}\n  }\n  var slots = {};\n  for (var i = 0, l = children.length; i < l; i++) {\n    var child = children[i];\n    var data = child.data;\n    // remove slot attribute if the node is resolved as a Vue slot node\n    if (data && data.attrs && data.attrs.slot) {\n      delete data.attrs.slot;\n    }\n    // named slots should only be respected if the vnode was rendered in the\n    // same context.\n    if ((child.context === context || child.fnContext === context) &&\n      data && data.slot != null\n    ) {\n      var name = data.slot;\n      var slot = (slots[name] || (slots[name] = []));\n      if (child.tag === 'template') {\n        slot.push.apply(slot, child.children || []);\n      } else {\n        slot.push(child);\n      }\n    } else {\n      (slots.default || (slots.default = [])).push(child);\n    }\n  }\n  // ignore slots that contains only whitespace\n  for (var name$1 in slots) {\n    if (slots[name$1].every(isWhitespace)) {\n      delete slots[name$1];\n    }\n  }\n  return slots\n}\n\nfunction isWhitespace (node) {\n  return (node.isComment && !node.asyncFactory) || node.text === ' '\n}\n\n/*  */\n\nfunction normalizeScopedSlots (\n  slots,\n  normalSlots,\n  prevSlots\n) {\n  var res;\n  var hasNormalSlots = Object.keys(normalSlots).length > 0;\n  var isStable = slots ? !!slots.$stable : !hasNormalSlots;\n  var key = slots && slots.$key;\n  if (!slots) {\n    res = {};\n  } else if (slots._normalized) {\n    // fast path 1: child component re-render only, parent did not change\n    return slots._normalized\n  } else if (\n    isStable &&\n    prevSlots &&\n    prevSlots !== emptyObject &&\n    key === prevSlots.$key &&\n    !hasNormalSlots &&\n    !prevSlots.$hasNormal\n  ) {\n    // fast path 2: stable scoped slots w/ no normal slots to proxy,\n    // only need to normalize once\n    return prevSlots\n  } else {\n    res = {};\n    for (var key$1 in slots) {\n      if (slots[key$1] && key$1[0] !== '$') {\n        res[key$1] = normalizeScopedSlot(normalSlots, key$1, slots[key$1]);\n      }\n    }\n  }\n  // expose normal slots on scopedSlots\n  for (var key$2 in normalSlots) {\n    if (!(key$2 in res)) {\n      res[key$2] = proxyNormalSlot(normalSlots, key$2);\n    }\n  }\n  // avoriaz seems to mock a non-extensible $scopedSlots object\n  // and when that is passed down this would cause an error\n  if (slots && Object.isExtensible(slots)) {\n    (slots)._normalized = res;\n  }\n  def(res, '$stable', isStable);\n  def(res, '$key', key);\n  def(res, '$hasNormal', hasNormalSlots);\n  return res\n}\n\nfunction normalizeScopedSlot(normalSlots, key, fn) {\n  var normalized = function () {\n    var res = arguments.length ? fn.apply(null, arguments) : fn({});\n    res = res && typeof res === 'object' && !Array.isArray(res)\n      ? [res] // single vnode\n      : normalizeChildren(res);\n    return res && (\n      res.length === 0 ||\n      (res.length === 1 && res[0].isComment) // #9658\n    ) ? undefined\n      : res\n  };\n  // this is a slot using the new v-slot syntax without scope. although it is\n  // compiled as a scoped slot, render fn users would expect it to be present\n  // on this.$slots because the usage is semantically a normal slot.\n  if (fn.proxy) {\n    Object.defineProperty(normalSlots, key, {\n      get: normalized,\n      enumerable: true,\n      configurable: true\n    });\n  }\n  return normalized\n}\n\nfunction proxyNormalSlot(slots, key) {\n  return function () { return slots[key]; }\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering v-for lists.\n */\nfunction renderList (\n  val,\n  render\n) {\n  var ret, i, l, keys, key;\n  if (Array.isArray(val) || typeof val === 'string') {\n    ret = new Array(val.length);\n    for (i = 0, l = val.length; i < l; i++) {\n      ret[i] = render(val[i], i);\n    }\n  } else if (typeof val === 'number') {\n    ret = new Array(val);\n    for (i = 0; i < val; i++) {\n      ret[i] = render(i + 1, i);\n    }\n  } else if (isObject(val)) {\n    if (hasSymbol && val[Symbol.iterator]) {\n      ret = [];\n      var iterator = val[Symbol.iterator]();\n      var result = iterator.next();\n      while (!result.done) {\n        ret.push(render(result.value, ret.length));\n        result = iterator.next();\n      }\n    } else {\n      keys = Object.keys(val);\n      ret = new Array(keys.length);\n      for (i = 0, l = keys.length; i < l; i++) {\n        key = keys[i];\n        ret[i] = render(val[key], key, i);\n      }\n    }\n  }\n  if (!isDef(ret)) {\n    ret = [];\n  }\n  (ret)._isVList = true;\n  return ret\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering <slot>\n */\nfunction renderSlot (\n  name,\n  fallback,\n  props,\n  bindObject\n) {\n  var scopedSlotFn = this.$scopedSlots[name];\n  var nodes;\n  if (scopedSlotFn) { // scoped slot\n    props = props || {};\n    if (bindObject) {\n      if (process.env.NODE_ENV !== 'production' && !isObject(bindObject)) {\n        warn(\n          'slot v-bind without argument expects an Object',\n          this\n        );\n      }\n      props = extend(extend({}, bindObject), props);\n    }\n    nodes = scopedSlotFn(props) || fallback;\n  } else {\n    nodes = this.$slots[name] || fallback;\n  }\n\n  var target = props && props.slot;\n  if (target) {\n    return this.$createElement('template', { slot: target }, nodes)\n  } else {\n    return nodes\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving filters\n */\nfunction resolveFilter (id) {\n  return resolveAsset(this.$options, 'filters', id, true) || identity\n}\n\n/*  */\n\nfunction isKeyNotMatch (expect, actual) {\n  if (Array.isArray(expect)) {\n    return expect.indexOf(actual) === -1\n  } else {\n    return expect !== actual\n  }\n}\n\n/**\n * Runtime helper for checking keyCodes from config.\n * exposed as Vue.prototype._k\n * passing in eventKeyName as last argument separately for backwards compat\n */\nfunction checkKeyCodes (\n  eventKeyCode,\n  key,\n  builtInKeyCode,\n  eventKeyName,\n  builtInKeyName\n) {\n  var mappedKeyCode = config.keyCodes[key] || builtInKeyCode;\n  if (builtInKeyName && eventKeyName && !config.keyCodes[key]) {\n    return isKeyNotMatch(builtInKeyName, eventKeyName)\n  } else if (mappedKeyCode) {\n    return isKeyNotMatch(mappedKeyCode, eventKeyCode)\n  } else if (eventKeyName) {\n    return hyphenate(eventKeyName) !== key\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for merging v-bind=\"object\" into a VNode's data.\n */\nfunction bindObjectProps (\n  data,\n  tag,\n  value,\n  asProp,\n  isSync\n) {\n  if (value) {\n    if (!isObject(value)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'v-bind without argument expects an Object or Array value',\n        this\n      );\n    } else {\n      if (Array.isArray(value)) {\n        value = toObject(value);\n      }\n      var hash;\n      var loop = function ( key ) {\n        if (\n          key === 'class' ||\n          key === 'style' ||\n          isReservedAttribute(key)\n        ) {\n          hash = data;\n        } else {\n          var type = data.attrs && data.attrs.type;\n          hash = asProp || config.mustUseProp(tag, type, key)\n            ? data.domProps || (data.domProps = {})\n            : data.attrs || (data.attrs = {});\n        }\n        var camelizedKey = camelize(key);\n        var hyphenatedKey = hyphenate(key);\n        if (!(camelizedKey in hash) && !(hyphenatedKey in hash)) {\n          hash[key] = value[key];\n\n          if (isSync) {\n            var on = data.on || (data.on = {});\n            on[(\"update:\" + key)] = function ($event) {\n              value[key] = $event;\n            };\n          }\n        }\n      };\n\n      for (var key in value) loop( key );\n    }\n  }\n  return data\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering static trees.\n */\nfunction renderStatic (\n  index,\n  isInFor\n) {\n  var cached = this._staticTrees || (this._staticTrees = []);\n  var tree = cached[index];\n  // if has already-rendered static tree and not inside v-for,\n  // we can reuse the same tree.\n  if (tree && !isInFor) {\n    return tree\n  }\n  // otherwise, render a fresh tree.\n  tree = cached[index] = this.$options.staticRenderFns[index].call(\n    this._renderProxy,\n    null,\n    this // for render fns generated for functional component templates\n  );\n  markStatic(tree, (\"__static__\" + index), false);\n  return tree\n}\n\n/**\n * Runtime helper for v-once.\n * Effectively it means marking the node as static with a unique key.\n */\nfunction markOnce (\n  tree,\n  index,\n  key\n) {\n  markStatic(tree, (\"__once__\" + index + (key ? (\"_\" + key) : \"\")), true);\n  return tree\n}\n\nfunction markStatic (\n  tree,\n  key,\n  isOnce\n) {\n  if (Array.isArray(tree)) {\n    for (var i = 0; i < tree.length; i++) {\n      if (tree[i] && typeof tree[i] !== 'string') {\n        markStaticNode(tree[i], (key + \"_\" + i), isOnce);\n      }\n    }\n  } else {\n    markStaticNode(tree, key, isOnce);\n  }\n}\n\nfunction markStaticNode (node, key, isOnce) {\n  node.isStatic = true;\n  node.key = key;\n  node.isOnce = isOnce;\n}\n\n/*  */\n\nfunction bindObjectListeners (data, value) {\n  if (value) {\n    if (!isPlainObject(value)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'v-on without argument expects an Object value',\n        this\n      );\n    } else {\n      var on = data.on = data.on ? extend({}, data.on) : {};\n      for (var key in value) {\n        var existing = on[key];\n        var ours = value[key];\n        on[key] = existing ? [].concat(existing, ours) : ours;\n      }\n    }\n  }\n  return data\n}\n\n/*  */\n\nfunction resolveScopedSlots (\n  fns, // see flow/vnode\n  res,\n  // the following are added in 2.6\n  hasDynamicKeys,\n  contentHashKey\n) {\n  res = res || { $stable: !hasDynamicKeys };\n  for (var i = 0; i < fns.length; i++) {\n    var slot = fns[i];\n    if (Array.isArray(slot)) {\n      resolveScopedSlots(slot, res, hasDynamicKeys);\n    } else if (slot) {\n      // marker for reverse proxying v-slot without scope on this.$slots\n      if (slot.proxy) {\n        slot.fn.proxy = true;\n      }\n      res[slot.key] = slot.fn;\n    }\n  }\n  if (contentHashKey) {\n    (res).$key = contentHashKey;\n  }\n  return res\n}\n\n/*  */\n\nfunction bindDynamicKeys (baseObj, values) {\n  for (var i = 0; i < values.length; i += 2) {\n    var key = values[i];\n    if (typeof key === 'string' && key) {\n      baseObj[values[i]] = values[i + 1];\n    } else if (process.env.NODE_ENV !== 'production' && key !== '' && key !== null) {\n      // null is a speical value for explicitly removing a binding\n      warn(\n        (\"Invalid value for dynamic directive argument (expected string or null): \" + key),\n        this\n      );\n    }\n  }\n  return baseObj\n}\n\n// helper to dynamically append modifier runtime markers to event names.\n// ensure only append when value is already string, otherwise it will be cast\n// to string and cause the type check to miss.\nfunction prependModifier (value, symbol) {\n  return typeof value === 'string' ? symbol + value : value\n}\n\n/*  */\n\nfunction installRenderHelpers (target) {\n  target._o = markOnce;\n  target._n = toNumber;\n  target._s = toString;\n  target._l = renderList;\n  target._t = renderSlot;\n  target._q = looseEqual;\n  target._i = looseIndexOf;\n  target._m = renderStatic;\n  target._f = resolveFilter;\n  target._k = checkKeyCodes;\n  target._b = bindObjectProps;\n  target._v = createTextVNode;\n  target._e = createEmptyVNode;\n  target._u = resolveScopedSlots;\n  target._g = bindObjectListeners;\n  target._d = bindDynamicKeys;\n  target._p = prependModifier;\n}\n\n/*  */\n\nfunction FunctionalRenderContext (\n  data,\n  props,\n  children,\n  parent,\n  Ctor\n) {\n  var this$1 = this;\n\n  var options = Ctor.options;\n  // ensure the createElement function in functional components\n  // gets a unique context - this is necessary for correct named slot check\n  var contextVm;\n  if (hasOwn(parent, '_uid')) {\n    contextVm = Object.create(parent);\n    // $flow-disable-line\n    contextVm._original = parent;\n  } else {\n    // the context vm passed in is a functional context as well.\n    // in this case we want to make sure we are able to get a hold to the\n    // real context instance.\n    contextVm = parent;\n    // $flow-disable-line\n    parent = parent._original;\n  }\n  var isCompiled = isTrue(options._compiled);\n  var needNormalization = !isCompiled;\n\n  this.data = data;\n  this.props = props;\n  this.children = children;\n  this.parent = parent;\n  this.listeners = data.on || emptyObject;\n  this.injections = resolveInject(options.inject, parent);\n  this.slots = function () {\n    if (!this$1.$slots) {\n      normalizeScopedSlots(\n        data.scopedSlots,\n        this$1.$slots = resolveSlots(children, parent)\n      );\n    }\n    return this$1.$slots\n  };\n\n  Object.defineProperty(this, 'scopedSlots', ({\n    enumerable: true,\n    get: function get () {\n      return normalizeScopedSlots(data.scopedSlots, this.slots())\n    }\n  }));\n\n  // support for compiled functional template\n  if (isCompiled) {\n    // exposing $options for renderStatic()\n    this.$options = options;\n    // pre-resolve slots for renderSlot()\n    this.$slots = this.slots();\n    this.$scopedSlots = normalizeScopedSlots(data.scopedSlots, this.$slots);\n  }\n\n  if (options._scopeId) {\n    this._c = function (a, b, c, d) {\n      var vnode = createElement(contextVm, a, b, c, d, needNormalization);\n      if (vnode && !Array.isArray(vnode)) {\n        vnode.fnScopeId = options._scopeId;\n        vnode.fnContext = parent;\n      }\n      return vnode\n    };\n  } else {\n    this._c = function (a, b, c, d) { return createElement(contextVm, a, b, c, d, needNormalization); };\n  }\n}\n\ninstallRenderHelpers(FunctionalRenderContext.prototype);\n\nfunction createFunctionalComponent (\n  Ctor,\n  propsData,\n  data,\n  contextVm,\n  children\n) {\n  var options = Ctor.options;\n  var props = {};\n  var propOptions = options.props;\n  if (isDef(propOptions)) {\n    for (var key in propOptions) {\n      props[key] = validateProp(key, propOptions, propsData || emptyObject);\n    }\n  } else {\n    if (isDef(data.attrs)) { mergeProps(props, data.attrs); }\n    if (isDef(data.props)) { mergeProps(props, data.props); }\n  }\n\n  var renderContext = new FunctionalRenderContext(\n    data,\n    props,\n    children,\n    contextVm,\n    Ctor\n  );\n\n  var vnode = options.render.call(null, renderContext._c, renderContext);\n\n  if (vnode instanceof VNode) {\n    return cloneAndMarkFunctionalResult(vnode, data, renderContext.parent, options, renderContext)\n  } else if (Array.isArray(vnode)) {\n    var vnodes = normalizeChildren(vnode) || [];\n    var res = new Array(vnodes.length);\n    for (var i = 0; i < vnodes.length; i++) {\n      res[i] = cloneAndMarkFunctionalResult(vnodes[i], data, renderContext.parent, options, renderContext);\n    }\n    return res\n  }\n}\n\nfunction cloneAndMarkFunctionalResult (vnode, data, contextVm, options, renderContext) {\n  // #7817 clone node before setting fnContext, otherwise if the node is reused\n  // (e.g. it was from a cached normal slot) the fnContext causes named slots\n  // that should not be matched to match.\n  var clone = cloneVNode(vnode);\n  clone.fnContext = contextVm;\n  clone.fnOptions = options;\n  if (process.env.NODE_ENV !== 'production') {\n    (clone.devtoolsMeta = clone.devtoolsMeta || {}).renderContext = renderContext;\n  }\n  if (data.slot) {\n    (clone.data || (clone.data = {})).slot = data.slot;\n  }\n  return clone\n}\n\nfunction mergeProps (to, from) {\n  for (var key in from) {\n    to[camelize(key)] = from[key];\n  }\n}\n\n/*  */\n\n/*  */\n\n/*  */\n\n/*  */\n\n// inline hooks to be invoked on component VNodes during patch\nvar componentVNodeHooks = {\n  init: function init (vnode, hydrating) {\n    if (\n      vnode.componentInstance &&\n      !vnode.componentInstance._isDestroyed &&\n      vnode.data.keepAlive\n    ) {\n      // kept-alive components, treat as a patch\n      var mountedNode = vnode; // work around flow\n      componentVNodeHooks.prepatch(mountedNode, mountedNode);\n    } else {\n      var child = vnode.componentInstance = createComponentInstanceForVnode(\n        vnode,\n        activeInstance\n      );\n      child.$mount(hydrating ? vnode.elm : undefined, hydrating);\n    }\n  },\n\n  prepatch: function prepatch (oldVnode, vnode) {\n    var options = vnode.componentOptions;\n    var child = vnode.componentInstance = oldVnode.componentInstance;\n    updateChildComponent(\n      child,\n      options.propsData, // updated props\n      options.listeners, // updated listeners\n      vnode, // new parent vnode\n      options.children // new children\n    );\n  },\n\n  insert: function insert (vnode) {\n    var context = vnode.context;\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isMounted) {\n      componentInstance._isMounted = true;\n      callHook(componentInstance, 'mounted');\n    }\n    if (vnode.data.keepAlive) {\n      if (context._isMounted) {\n        // vue-router#1212\n        // During updates, a kept-alive component's child components may\n        // change, so directly walking the tree here may call activated hooks\n        // on incorrect children. Instead we push them into a queue which will\n        // be processed after the whole patch process ended.\n        queueActivatedComponent(componentInstance);\n      } else {\n        activateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  },\n\n  destroy: function destroy (vnode) {\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isDestroyed) {\n      if (!vnode.data.keepAlive) {\n        componentInstance.$destroy();\n      } else {\n        deactivateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  }\n};\n\nvar hooksToMerge = Object.keys(componentVNodeHooks);\n\nfunction createComponent (\n  Ctor,\n  data,\n  context,\n  children,\n  tag\n) {\n  if (isUndef(Ctor)) {\n    return\n  }\n\n  var baseCtor = context.$options._base;\n\n  // plain options object: turn it into a constructor\n  if (isObject(Ctor)) {\n    Ctor = baseCtor.extend(Ctor);\n  }\n\n  // if at this stage it's not a constructor or an async component factory,\n  // reject.\n  if (typeof Ctor !== 'function') {\n    if (process.env.NODE_ENV !== 'production') {\n      warn((\"Invalid Component definition: \" + (String(Ctor))), context);\n    }\n    return\n  }\n\n  // async component\n  var asyncFactory;\n  if (isUndef(Ctor.cid)) {\n    asyncFactory = Ctor;\n    Ctor = resolveAsyncComponent(asyncFactory, baseCtor);\n    if (Ctor === undefined) {\n      // return a placeholder node for async component, which is rendered\n      // as a comment node but preserves all the raw information for the node.\n      // the information will be used for async server-rendering and hydration.\n      return createAsyncPlaceholder(\n        asyncFactory,\n        data,\n        context,\n        children,\n        tag\n      )\n    }\n  }\n\n  data = data || {};\n\n  // resolve constructor options in case global mixins are applied after\n  // component constructor creation\n  resolveConstructorOptions(Ctor);\n\n  // transform component v-model data into props & events\n  if (isDef(data.model)) {\n    transformModel(Ctor.options, data);\n  }\n\n  // extract props\n  var propsData = extractPropsFromVNodeData(data, Ctor, tag);\n\n  // functional component\n  if (isTrue(Ctor.options.functional)) {\n    return createFunctionalComponent(Ctor, propsData, data, context, children)\n  }\n\n  // extract listeners, since these needs to be treated as\n  // child component listeners instead of DOM listeners\n  var listeners = data.on;\n  // replace with listeners with .native modifier\n  // so it gets processed during parent component patch.\n  data.on = data.nativeOn;\n\n  if (isTrue(Ctor.options.abstract)) {\n    // abstract components do not keep anything\n    // other than props & listeners & slot\n\n    // work around flow\n    var slot = data.slot;\n    data = {};\n    if (slot) {\n      data.slot = slot;\n    }\n  }\n\n  // install component management hooks onto the placeholder node\n  installComponentHooks(data);\n\n  // return a placeholder vnode\n  var name = Ctor.options.name || tag;\n  var vnode = new VNode(\n    (\"vue-component-\" + (Ctor.cid) + (name ? (\"-\" + name) : '')),\n    data, undefined, undefined, undefined, context,\n    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children },\n    asyncFactory\n  );\n\n  return vnode\n}\n\nfunction createComponentInstanceForVnode (\n  vnode, // we know it's MountedComponentVNode but flow doesn't\n  parent // activeInstance in lifecycle state\n) {\n  var options = {\n    _isComponent: true,\n    _parentVnode: vnode,\n    parent: parent\n  };\n  // check inline-template render functions\n  var inlineTemplate = vnode.data.inlineTemplate;\n  if (isDef(inlineTemplate)) {\n    options.render = inlineTemplate.render;\n    options.staticRenderFns = inlineTemplate.staticRenderFns;\n  }\n  return new vnode.componentOptions.Ctor(options)\n}\n\nfunction installComponentHooks (data) {\n  var hooks = data.hook || (data.hook = {});\n  for (var i = 0; i < hooksToMerge.length; i++) {\n    var key = hooksToMerge[i];\n    var existing = hooks[key];\n    var toMerge = componentVNodeHooks[key];\n    if (existing !== toMerge && !(existing && existing._merged)) {\n      hooks[key] = existing ? mergeHook$1(toMerge, existing) : toMerge;\n    }\n  }\n}\n\nfunction mergeHook$1 (f1, f2) {\n  var merged = function (a, b) {\n    // flow complains about extra args which is why we use any\n    f1(a, b);\n    f2(a, b);\n  };\n  merged._merged = true;\n  return merged\n}\n\n// transform component v-model info (value and callback) into\n// prop and event handler respectively.\nfunction transformModel (options, data) {\n  var prop = (options.model && options.model.prop) || 'value';\n  var event = (options.model && options.model.event) || 'input'\n  ;(data.attrs || (data.attrs = {}))[prop] = data.model.value;\n  var on = data.on || (data.on = {});\n  var existing = on[event];\n  var callback = data.model.callback;\n  if (isDef(existing)) {\n    if (\n      Array.isArray(existing)\n        ? existing.indexOf(callback) === -1\n        : existing !== callback\n    ) {\n      on[event] = [callback].concat(existing);\n    }\n  } else {\n    on[event] = callback;\n  }\n}\n\n/*  */\n\nvar SIMPLE_NORMALIZE = 1;\nvar ALWAYS_NORMALIZE = 2;\n\n// wrapper function for providing a more flexible interface\n// without getting yelled at by flow\nfunction createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType,\n  alwaysNormalize\n) {\n  if (Array.isArray(data) || isPrimitive(data)) {\n    normalizationType = children;\n    children = data;\n    data = undefined;\n  }\n  if (isTrue(alwaysNormalize)) {\n    normalizationType = ALWAYS_NORMALIZE;\n  }\n  return _createElement(context, tag, data, children, normalizationType)\n}\n\nfunction _createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType\n) {\n  if (isDef(data) && isDef((data).__ob__)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"Avoid using observed data object as vnode data: \" + (JSON.stringify(data)) + \"\\n\" +\n      'Always create fresh vnode data objects in each render!',\n      context\n    );\n    return createEmptyVNode()\n  }\n  // object syntax in v-bind\n  if (isDef(data) && isDef(data.is)) {\n    tag = data.is;\n  }\n  if (!tag) {\n    // in case of component :is set to falsy value\n    return createEmptyVNode()\n  }\n  // warn against non-primitive key\n  if (process.env.NODE_ENV !== 'production' &&\n    isDef(data) && isDef(data.key) && !isPrimitive(data.key)\n  ) {\n    {\n      warn(\n        'Avoid using non-primitive value as key, ' +\n        'use string/number value instead.',\n        context\n      );\n    }\n  }\n  // support single function children as default scoped slot\n  if (Array.isArray(children) &&\n    typeof children[0] === 'function'\n  ) {\n    data = data || {};\n    data.scopedSlots = { default: children[0] };\n    children.length = 0;\n  }\n  if (normalizationType === ALWAYS_NORMALIZE) {\n    children = normalizeChildren(children);\n  } else if (normalizationType === SIMPLE_NORMALIZE) {\n    children = simpleNormalizeChildren(children);\n  }\n  var vnode, ns;\n  if (typeof tag === 'string') {\n    var Ctor;\n    ns = (context.$vnode && context.$vnode.ns) || config.getTagNamespace(tag);\n    if (config.isReservedTag(tag)) {\n      // platform built-in elements\n      vnode = new VNode(\n        config.parsePlatformTagName(tag), data, children,\n        undefined, undefined, context\n      );\n    } else if ((!data || !data.pre) && isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {\n      // component\n      vnode = createComponent(Ctor, data, context, children, tag);\n    } else {\n      // unknown or unlisted namespaced elements\n      // check at runtime because it may get assigned a namespace when its\n      // parent normalizes children\n      vnode = new VNode(\n        tag, data, children,\n        undefined, undefined, context\n      );\n    }\n  } else {\n    // direct component options / constructor\n    vnode = createComponent(tag, data, context, children);\n  }\n  if (Array.isArray(vnode)) {\n    return vnode\n  } else if (isDef(vnode)) {\n    if (isDef(ns)) { applyNS(vnode, ns); }\n    if (isDef(data)) { registerDeepBindings(data); }\n    return vnode\n  } else {\n    return createEmptyVNode()\n  }\n}\n\nfunction applyNS (vnode, ns, force) {\n  vnode.ns = ns;\n  if (vnode.tag === 'foreignObject') {\n    // use default namespace inside foreignObject\n    ns = undefined;\n    force = true;\n  }\n  if (isDef(vnode.children)) {\n    for (var i = 0, l = vnode.children.length; i < l; i++) {\n      var child = vnode.children[i];\n      if (isDef(child.tag) && (\n        isUndef(child.ns) || (isTrue(force) && child.tag !== 'svg'))) {\n        applyNS(child, ns, force);\n      }\n    }\n  }\n}\n\n// ref #5318\n// necessary to ensure parent re-render when deep bindings like :style and\n// :class are used on slot nodes\nfunction registerDeepBindings (data) {\n  if (isObject(data.style)) {\n    traverse(data.style);\n  }\n  if (isObject(data.class)) {\n    traverse(data.class);\n  }\n}\n\n/*  */\n\nfunction initRender (vm) {\n  vm._vnode = null; // the root of the child tree\n  vm._staticTrees = null; // v-once cached trees\n  var options = vm.$options;\n  var parentVnode = vm.$vnode = options._parentVnode; // the placeholder node in parent tree\n  var renderContext = parentVnode && parentVnode.context;\n  vm.$slots = resolveSlots(options._renderChildren, renderContext);\n  vm.$scopedSlots = emptyObject;\n  // bind the createElement fn to this instance\n  // so that we get proper render context inside it.\n  // args order: tag, data, children, normalizationType, alwaysNormalize\n  // internal version is used by render functions compiled from templates\n  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };\n  // normalization is always applied for the public version, used in\n  // user-written render functions.\n  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };\n\n  // $attrs & $listeners are exposed for easier HOC creation.\n  // they need to be reactive so that HOCs using them are always updated\n  var parentData = parentVnode && parentVnode.data;\n\n  /* istanbul ignore else */\n  if (process.env.NODE_ENV !== 'production') {\n    defineReactive$$1(vm, '$attrs', parentData && parentData.attrs || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$attrs is readonly.\", vm);\n    }, true);\n    defineReactive$$1(vm, '$listeners', options._parentListeners || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$listeners is readonly.\", vm);\n    }, true);\n  } else {\n    defineReactive$$1(vm, '$attrs', parentData && parentData.attrs || emptyObject, null, true);\n    defineReactive$$1(vm, '$listeners', options._parentListeners || emptyObject, null, true);\n  }\n}\n\nvar currentRenderingInstance = null;\n\nfunction renderMixin (Vue) {\n  // install runtime convenience helpers\n  installRenderHelpers(Vue.prototype);\n\n  Vue.prototype.$nextTick = function (fn) {\n    return nextTick(fn, this)\n  };\n\n  Vue.prototype._render = function () {\n    var vm = this;\n    var ref = vm.$options;\n    var render = ref.render;\n    var _parentVnode = ref._parentVnode;\n\n    if (_parentVnode) {\n      vm.$scopedSlots = normalizeScopedSlots(\n        _parentVnode.data.scopedSlots,\n        vm.$slots,\n        vm.$scopedSlots\n      );\n    }\n\n    // set parent vnode. this allows render functions to have access\n    // to the data on the placeholder node.\n    vm.$vnode = _parentVnode;\n    // render self\n    var vnode;\n    try {\n      // There's no need to maintain a stack becaues all render fns are called\n      // separately from one another. Nested component's render fns are called\n      // when parent component is patched.\n      currentRenderingInstance = vm;\n      vnode = render.call(vm._renderProxy, vm.$createElement);\n    } catch (e) {\n      handleError(e, vm, \"render\");\n      // return error render result,\n      // or previous vnode to prevent render error causing blank component\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production' && vm.$options.renderError) {\n        try {\n          vnode = vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e);\n        } catch (e) {\n          handleError(e, vm, \"renderError\");\n          vnode = vm._vnode;\n        }\n      } else {\n        vnode = vm._vnode;\n      }\n    } finally {\n      currentRenderingInstance = null;\n    }\n    // if the returned array contains only a single node, allow it\n    if (Array.isArray(vnode) && vnode.length === 1) {\n      vnode = vnode[0];\n    }\n    // return empty vnode in case the render function errored out\n    if (!(vnode instanceof VNode)) {\n      if (process.env.NODE_ENV !== 'production' && Array.isArray(vnode)) {\n        warn(\n          'Multiple root nodes returned from render function. Render function ' +\n          'should return a single root node.',\n          vm\n        );\n      }\n      vnode = createEmptyVNode();\n    }\n    // set parent\n    vnode.parent = _parentVnode;\n    return vnode\n  };\n}\n\n/*  */\n\nfunction ensureCtor (comp, base) {\n  if (\n    comp.__esModule ||\n    (hasSymbol && comp[Symbol.toStringTag] === 'Module')\n  ) {\n    comp = comp.default;\n  }\n  return isObject(comp)\n    ? base.extend(comp)\n    : comp\n}\n\nfunction createAsyncPlaceholder (\n  factory,\n  data,\n  context,\n  children,\n  tag\n) {\n  var node = createEmptyVNode();\n  node.asyncFactory = factory;\n  node.asyncMeta = { data: data, context: context, children: children, tag: tag };\n  return node\n}\n\nfunction resolveAsyncComponent (\n  factory,\n  baseCtor\n) {\n  if (isTrue(factory.error) && isDef(factory.errorComp)) {\n    return factory.errorComp\n  }\n\n  if (isDef(factory.resolved)) {\n    return factory.resolved\n  }\n\n  var owner = currentRenderingInstance;\n  if (owner && isDef(factory.owners) && factory.owners.indexOf(owner) === -1) {\n    // already pending\n    factory.owners.push(owner);\n  }\n\n  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {\n    return factory.loadingComp\n  }\n\n  if (owner && !isDef(factory.owners)) {\n    var owners = factory.owners = [owner];\n    var sync = true;\n    var timerLoading = null;\n    var timerTimeout = null\n\n    ;(owner).$on('hook:destroyed', function () { return remove(owners, owner); });\n\n    var forceRender = function (renderCompleted) {\n      for (var i = 0, l = owners.length; i < l; i++) {\n        (owners[i]).$forceUpdate();\n      }\n\n      if (renderCompleted) {\n        owners.length = 0;\n        if (timerLoading !== null) {\n          clearTimeout(timerLoading);\n          timerLoading = null;\n        }\n        if (timerTimeout !== null) {\n          clearTimeout(timerTimeout);\n          timerTimeout = null;\n        }\n      }\n    };\n\n    var resolve = once(function (res) {\n      // cache resolved\n      factory.resolved = ensureCtor(res, baseCtor);\n      // invoke callbacks only if this is not a synchronous resolve\n      // (async resolves are shimmed as synchronous during SSR)\n      if (!sync) {\n        forceRender(true);\n      } else {\n        owners.length = 0;\n      }\n    });\n\n    var reject = once(function (reason) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed to resolve async component: \" + (String(factory)) +\n        (reason ? (\"\\nReason: \" + reason) : '')\n      );\n      if (isDef(factory.errorComp)) {\n        factory.error = true;\n        forceRender(true);\n      }\n    });\n\n    var res = factory(resolve, reject);\n\n    if (isObject(res)) {\n      if (isPromise(res)) {\n        // () => Promise\n        if (isUndef(factory.resolved)) {\n          res.then(resolve, reject);\n        }\n      } else if (isPromise(res.component)) {\n        res.component.then(resolve, reject);\n\n        if (isDef(res.error)) {\n          factory.errorComp = ensureCtor(res.error, baseCtor);\n        }\n\n        if (isDef(res.loading)) {\n          factory.loadingComp = ensureCtor(res.loading, baseCtor);\n          if (res.delay === 0) {\n            factory.loading = true;\n          } else {\n            timerLoading = setTimeout(function () {\n              timerLoading = null;\n              if (isUndef(factory.resolved) && isUndef(factory.error)) {\n                factory.loading = true;\n                forceRender(false);\n              }\n            }, res.delay || 200);\n          }\n        }\n\n        if (isDef(res.timeout)) {\n          timerTimeout = setTimeout(function () {\n            timerTimeout = null;\n            if (isUndef(factory.resolved)) {\n              reject(\n                process.env.NODE_ENV !== 'production'\n                  ? (\"timeout (\" + (res.timeout) + \"ms)\")\n                  : null\n              );\n            }\n          }, res.timeout);\n        }\n      }\n    }\n\n    sync = false;\n    // return in case resolved synchronously\n    return factory.loading\n      ? factory.loadingComp\n      : factory.resolved\n  }\n}\n\n/*  */\n\nfunction isAsyncPlaceholder (node) {\n  return node.isComment && node.asyncFactory\n}\n\n/*  */\n\nfunction getFirstComponentChild (children) {\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      var c = children[i];\n      if (isDef(c) && (isDef(c.componentOptions) || isAsyncPlaceholder(c))) {\n        return c\n      }\n    }\n  }\n}\n\n/*  */\n\n/*  */\n\nfunction initEvents (vm) {\n  vm._events = Object.create(null);\n  vm._hasHookEvent = false;\n  // init parent attached events\n  var listeners = vm.$options._parentListeners;\n  if (listeners) {\n    updateComponentListeners(vm, listeners);\n  }\n}\n\nvar target;\n\nfunction add (event, fn) {\n  target.$on(event, fn);\n}\n\nfunction remove$1 (event, fn) {\n  target.$off(event, fn);\n}\n\nfunction createOnceHandler (event, fn) {\n  var _target = target;\n  return function onceHandler () {\n    var res = fn.apply(null, arguments);\n    if (res !== null) {\n      _target.$off(event, onceHandler);\n    }\n  }\n}\n\nfunction updateComponentListeners (\n  vm,\n  listeners,\n  oldListeners\n) {\n  target = vm;\n  updateListeners(listeners, oldListeners || {}, add, remove$1, createOnceHandler, vm);\n  target = undefined;\n}\n\nfunction eventsMixin (Vue) {\n  var hookRE = /^hook:/;\n  Vue.prototype.$on = function (event, fn) {\n    var vm = this;\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        vm.$on(event[i], fn);\n      }\n    } else {\n      (vm._events[event] || (vm._events[event] = [])).push(fn);\n      // optimize hook:event cost by using a boolean flag marked at registration\n      // instead of a hash lookup\n      if (hookRE.test(event)) {\n        vm._hasHookEvent = true;\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$once = function (event, fn) {\n    var vm = this;\n    function on () {\n      vm.$off(event, on);\n      fn.apply(vm, arguments);\n    }\n    on.fn = fn;\n    vm.$on(event, on);\n    return vm\n  };\n\n  Vue.prototype.$off = function (event, fn) {\n    var vm = this;\n    // all\n    if (!arguments.length) {\n      vm._events = Object.create(null);\n      return vm\n    }\n    // array of events\n    if (Array.isArray(event)) {\n      for (var i$1 = 0, l = event.length; i$1 < l; i$1++) {\n        vm.$off(event[i$1], fn);\n      }\n      return vm\n    }\n    // specific event\n    var cbs = vm._events[event];\n    if (!cbs) {\n      return vm\n    }\n    if (!fn) {\n      vm._events[event] = null;\n      return vm\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        cbs.splice(i, 1);\n        break\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$emit = function (event) {\n    var vm = this;\n    if (process.env.NODE_ENV !== 'production') {\n      var lowerCaseEvent = event.toLowerCase();\n      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {\n        tip(\n          \"Event \\\"\" + lowerCaseEvent + \"\\\" is emitted in component \" +\n          (formatComponentName(vm)) + \" but the handler is registered for \\\"\" + event + \"\\\". \" +\n          \"Note that HTML attributes are case-insensitive and you cannot use \" +\n          \"v-on to listen to camelCase events when using in-DOM templates. \" +\n          \"You should probably use \\\"\" + (hyphenate(event)) + \"\\\" instead of \\\"\" + event + \"\\\".\"\n        );\n      }\n    }\n    var cbs = vm._events[event];\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      var args = toArray(arguments, 1);\n      var info = \"event handler for \\\"\" + event + \"\\\"\";\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        invokeWithErrorHandling(cbs[i], vm, args, vm, info);\n      }\n    }\n    return vm\n  };\n}\n\n/*  */\n\nvar activeInstance = null;\nvar isUpdatingChildComponent = false;\n\nfunction setActiveInstance(vm) {\n  var prevActiveInstance = activeInstance;\n  activeInstance = vm;\n  return function () {\n    activeInstance = prevActiveInstance;\n  }\n}\n\nfunction initLifecycle (vm) {\n  var options = vm.$options;\n\n  // locate first non-abstract parent\n  var parent = options.parent;\n  if (parent && !options.abstract) {\n    while (parent.$options.abstract && parent.$parent) {\n      parent = parent.$parent;\n    }\n    parent.$children.push(vm);\n  }\n\n  vm.$parent = parent;\n  vm.$root = parent ? parent.$root : vm;\n\n  vm.$children = [];\n  vm.$refs = {};\n\n  vm._watcher = null;\n  vm._inactive = null;\n  vm._directInactive = false;\n  vm._isMounted = false;\n  vm._isDestroyed = false;\n  vm._isBeingDestroyed = false;\n}\n\nfunction lifecycleMixin (Vue) {\n  Vue.prototype._update = function (vnode, hydrating) {\n    var vm = this;\n    var prevEl = vm.$el;\n    var prevVnode = vm._vnode;\n    var restoreActiveInstance = setActiveInstance(vm);\n    vm._vnode = vnode;\n    // Vue.prototype.__patch__ is injected in entry points\n    // based on the rendering backend used.\n    if (!prevVnode) {\n      // initial render\n      vm.$el = vm.__patch__(vm.$el, vnode, hydrating, false /* removeOnly */);\n    } else {\n      // updates\n      vm.$el = vm.__patch__(prevVnode, vnode);\n    }\n    restoreActiveInstance();\n    // update __vue__ reference\n    if (prevEl) {\n      prevEl.__vue__ = null;\n    }\n    if (vm.$el) {\n      vm.$el.__vue__ = vm;\n    }\n    // if parent is an HOC, update its $el as well\n    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {\n      vm.$parent.$el = vm.$el;\n    }\n    // updated hook is called by the scheduler to ensure that children are\n    // updated in a parent's updated hook.\n  };\n\n  Vue.prototype.$forceUpdate = function () {\n    var vm = this;\n    if (vm._watcher) {\n      vm._watcher.update();\n    }\n  };\n\n  Vue.prototype.$destroy = function () {\n    var vm = this;\n    if (vm._isBeingDestroyed) {\n      return\n    }\n    callHook(vm, 'beforeDestroy');\n    vm._isBeingDestroyed = true;\n    // remove self from parent\n    var parent = vm.$parent;\n    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {\n      remove(parent.$children, vm);\n    }\n    // teardown watchers\n    if (vm._watcher) {\n      vm._watcher.teardown();\n    }\n    var i = vm._watchers.length;\n    while (i--) {\n      vm._watchers[i].teardown();\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (vm._data.__ob__) {\n      vm._data.__ob__.vmCount--;\n    }\n    // call the last hook...\n    vm._isDestroyed = true;\n    // invoke destroy hooks on current rendered tree\n    vm.__patch__(vm._vnode, null);\n    // fire destroyed hook\n    callHook(vm, 'destroyed');\n    // turn off all instance listeners.\n    vm.$off();\n    // remove __vue__ reference\n    if (vm.$el) {\n      vm.$el.__vue__ = null;\n    }\n    // release circular reference (#6759)\n    if (vm.$vnode) {\n      vm.$vnode.parent = null;\n    }\n  };\n}\n\nfunction mountComponent (\n  vm,\n  el,\n  hydrating\n) {\n  vm.$el = el;\n  if (!vm.$options.render) {\n    vm.$options.render = createEmptyVNode;\n    if (process.env.NODE_ENV !== 'production') {\n      /* istanbul ignore if */\n      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||\n        vm.$options.el || el) {\n        warn(\n          'You are using the runtime-only build of Vue where the template ' +\n          'compiler is not available. Either pre-compile the templates into ' +\n          'render functions, or use the compiler-included build.',\n          vm\n        );\n      } else {\n        warn(\n          'Failed to mount component: template or render function not defined.',\n          vm\n        );\n      }\n    }\n  }\n  callHook(vm, 'beforeMount');\n\n  var updateComponent;\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n    updateComponent = function () {\n      var name = vm._name;\n      var id = vm._uid;\n      var startTag = \"vue-perf-start:\" + id;\n      var endTag = \"vue-perf-end:\" + id;\n\n      mark(startTag);\n      var vnode = vm._render();\n      mark(endTag);\n      measure((\"vue \" + name + \" render\"), startTag, endTag);\n\n      mark(startTag);\n      vm._update(vnode, hydrating);\n      mark(endTag);\n      measure((\"vue \" + name + \" patch\"), startTag, endTag);\n    };\n  } else {\n    updateComponent = function () {\n      vm._update(vm._render(), hydrating);\n    };\n  }\n\n  // we set this to vm._watcher inside the watcher's constructor\n  // since the watcher's initial patch may call $forceUpdate (e.g. inside child\n  // component's mounted hook), which relies on vm._watcher being already defined\n  new Watcher(vm, updateComponent, noop, {\n    before: function before () {\n      if (vm._isMounted && !vm._isDestroyed) {\n        callHook(vm, 'beforeUpdate');\n      }\n    }\n  }, true /* isRenderWatcher */);\n  hydrating = false;\n\n  // manually mounted instance, call mounted on self\n  // mounted is called for render-created child components in its inserted hook\n  if (vm.$vnode == null) {\n    vm._isMounted = true;\n    callHook(vm, 'mounted');\n  }\n  return vm\n}\n\nfunction updateChildComponent (\n  vm,\n  propsData,\n  listeners,\n  parentVnode,\n  renderChildren\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    isUpdatingChildComponent = true;\n  }\n\n  // determine whether component has slot children\n  // we need to do this before overwriting $options._renderChildren.\n\n  // check if there are dynamic scopedSlots (hand-written or compiled but with\n  // dynamic slot names). Static scoped slots compiled from template has the\n  // \"$stable\" marker.\n  var newScopedSlots = parentVnode.data.scopedSlots;\n  var oldScopedSlots = vm.$scopedSlots;\n  var hasDynamicScopedSlot = !!(\n    (newScopedSlots && !newScopedSlots.$stable) ||\n    (oldScopedSlots !== emptyObject && !oldScopedSlots.$stable) ||\n    (newScopedSlots && vm.$scopedSlots.$key !== newScopedSlots.$key)\n  );\n\n  // Any static slot children from the parent may have changed during parent's\n  // update. Dynamic scoped slots may also have changed. In such cases, a forced\n  // update is necessary to ensure correctness.\n  var needsForceUpdate = !!(\n    renderChildren ||               // has new static slots\n    vm.$options._renderChildren ||  // has old static slots\n    hasDynamicScopedSlot\n  );\n\n  vm.$options._parentVnode = parentVnode;\n  vm.$vnode = parentVnode; // update vm's placeholder node without re-render\n\n  if (vm._vnode) { // update child tree's parent\n    vm._vnode.parent = parentVnode;\n  }\n  vm.$options._renderChildren = renderChildren;\n\n  // update $attrs and $listeners hash\n  // these are also reactive so they may trigger child update if the child\n  // used them during render\n  vm.$attrs = parentVnode.data.attrs || emptyObject;\n  vm.$listeners = listeners || emptyObject;\n\n  // update props\n  if (propsData && vm.$options.props) {\n    toggleObserving(false);\n    var props = vm._props;\n    var propKeys = vm.$options._propKeys || [];\n    for (var i = 0; i < propKeys.length; i++) {\n      var key = propKeys[i];\n      var propOptions = vm.$options.props; // wtf flow?\n      props[key] = validateProp(key, propOptions, propsData, vm);\n    }\n    toggleObserving(true);\n    // keep a copy of raw propsData\n    vm.$options.propsData = propsData;\n  }\n\n  // update listeners\n  listeners = listeners || emptyObject;\n  var oldListeners = vm.$options._parentListeners;\n  vm.$options._parentListeners = listeners;\n  updateComponentListeners(vm, listeners, oldListeners);\n\n  // resolve slots + force update if has children\n  if (needsForceUpdate) {\n    vm.$slots = resolveSlots(renderChildren, parentVnode.context);\n    vm.$forceUpdate();\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    isUpdatingChildComponent = false;\n  }\n}\n\nfunction isInInactiveTree (vm) {\n  while (vm && (vm = vm.$parent)) {\n    if (vm._inactive) { return true }\n  }\n  return false\n}\n\nfunction activateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = false;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  } else if (vm._directInactive) {\n    return\n  }\n  if (vm._inactive || vm._inactive === null) {\n    vm._inactive = false;\n    for (var i = 0; i < vm.$children.length; i++) {\n      activateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'activated');\n  }\n}\n\nfunction deactivateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = true;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  }\n  if (!vm._inactive) {\n    vm._inactive = true;\n    for (var i = 0; i < vm.$children.length; i++) {\n      deactivateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'deactivated');\n  }\n}\n\nfunction callHook (vm, hook) {\n  // #7573 disable dep collection when invoking lifecycle hooks\n  pushTarget();\n  var handlers = vm.$options[hook];\n  var info = hook + \" hook\";\n  if (handlers) {\n    for (var i = 0, j = handlers.length; i < j; i++) {\n      invokeWithErrorHandling(handlers[i], vm, null, vm, info);\n    }\n  }\n  if (vm._hasHookEvent) {\n    vm.$emit('hook:' + hook);\n  }\n  popTarget();\n}\n\n/*  */\n\nvar MAX_UPDATE_COUNT = 100;\n\nvar queue = [];\nvar activatedChildren = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar flushing = false;\nvar index = 0;\n\n/**\n * Reset the scheduler's state.\n */\nfunction resetSchedulerState () {\n  index = queue.length = activatedChildren.length = 0;\n  has = {};\n  if (process.env.NODE_ENV !== 'production') {\n    circular = {};\n  }\n  waiting = flushing = false;\n}\n\n// Async edge case #6566 requires saving the timestamp when event listeners are\n// attached. However, calling performance.now() has a perf overhead especially\n// if the page has thousands of event listeners. Instead, we take a timestamp\n// every time the scheduler flushes and use that for all event listeners\n// attached during that flush.\nvar currentFlushTimestamp = 0;\n\n// Async edge case fix requires storing an event listener's attach timestamp.\nvar getNow = Date.now;\n\n// Determine what event timestamp the browser is using. Annoyingly, the\n// timestamp can either be hi-res (relative to page load) or low-res\n// (relative to UNIX epoch), so in order to compare time we have to use the\n// same timestamp type when saving the flush timestamp.\n// All IE versions use low-res event timestamps, and have problematic clock\n// implementations (#9632)\nif (inBrowser && !isIE) {\n  var performance = window.performance;\n  if (\n    performance &&\n    typeof performance.now === 'function' &&\n    getNow() > document.createEvent('Event').timeStamp\n  ) {\n    // if the event timestamp, although evaluated AFTER the Date.now(), is\n    // smaller than it, it means the event is using a hi-res timestamp,\n    // and we need to use the hi-res version for event listener timestamps as\n    // well.\n    getNow = function () { return performance.now(); };\n  }\n}\n\n/**\n * Flush both queues and run the watchers.\n */\nfunction flushSchedulerQueue () {\n  currentFlushTimestamp = getNow();\n  flushing = true;\n  var watcher, id;\n\n  // Sort queue before flush.\n  // This ensures that:\n  // 1. Components are updated from parent to child. (because parent is always\n  //    created before the child)\n  // 2. A component's user watchers are run before its render watcher (because\n  //    user watchers are created before the render watcher)\n  // 3. If a component is destroyed during a parent component's watcher run,\n  //    its watchers can be skipped.\n  queue.sort(function (a, b) { return a.id - b.id; });\n\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (index = 0; index < queue.length; index++) {\n    watcher = queue[index];\n    if (watcher.before) {\n      watcher.before();\n    }\n    id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > MAX_UPDATE_COUNT) {\n        warn(\n          'You may have an infinite update loop ' + (\n            watcher.user\n              ? (\"in watcher with expression \\\"\" + (watcher.expression) + \"\\\"\")\n              : \"in a component render function.\"\n          ),\n          watcher.vm\n        );\n        break\n      }\n    }\n  }\n\n  // keep copies of post queues before resetting state\n  var activatedQueue = activatedChildren.slice();\n  var updatedQueue = queue.slice();\n\n  resetSchedulerState();\n\n  // call component updated and activated hooks\n  callActivatedHooks(activatedQueue);\n  callUpdatedHooks(updatedQueue);\n\n  // devtool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n}\n\nfunction callUpdatedHooks (queue) {\n  var i = queue.length;\n  while (i--) {\n    var watcher = queue[i];\n    var vm = watcher.vm;\n    if (vm._watcher === watcher && vm._isMounted && !vm._isDestroyed) {\n      callHook(vm, 'updated');\n    }\n  }\n}\n\n/**\n * Queue a kept-alive component that was activated during patch.\n * The queue will be processed after the entire tree has been patched.\n */\nfunction queueActivatedComponent (vm) {\n  // setting _inactive to false here so that a render function can\n  // rely on checking whether it's in an inactive tree (e.g. router-view)\n  vm._inactive = false;\n  activatedChildren.push(vm);\n}\n\nfunction callActivatedHooks (queue) {\n  for (var i = 0; i < queue.length; i++) {\n    queue[i]._inactive = true;\n    activateChildComponent(queue[i], true /* true */);\n  }\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n */\nfunction queueWatcher (watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    has[id] = true;\n    if (!flushing) {\n      queue.push(watcher);\n    } else {\n      // if already flushing, splice the watcher based on its id\n      // if already past its id, it will be run next immediately.\n      var i = queue.length - 1;\n      while (i > index && queue[i].id > watcher.id) {\n        i--;\n      }\n      queue.splice(i + 1, 0, watcher);\n    }\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n\n      if (process.env.NODE_ENV !== 'production' && !config.async) {\n        flushSchedulerQueue();\n        return\n      }\n      nextTick(flushSchedulerQueue);\n    }\n  }\n}\n\n/*  */\n\n\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n */\nvar Watcher = function Watcher (\n  vm,\n  expOrFn,\n  cb,\n  options,\n  isRenderWatcher\n) {\n  this.vm = vm;\n  if (isRenderWatcher) {\n    vm._watcher = this;\n  }\n  vm._watchers.push(this);\n  // options\n  if (options) {\n    this.deep = !!options.deep;\n    this.user = !!options.user;\n    this.lazy = !!options.lazy;\n    this.sync = !!options.sync;\n    this.before = options.before;\n  } else {\n    this.deep = this.user = this.lazy = this.sync = false;\n  }\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.expression = process.env.NODE_ENV !== 'production'\n    ? expOrFn.toString()\n    : '';\n  // parse expression for getter\n  if (typeof expOrFn === 'function') {\n    this.getter = expOrFn;\n  } else {\n    this.getter = parsePath(expOrFn);\n    if (!this.getter) {\n      this.getter = noop;\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed watching path: \\\"\" + expOrFn + \"\\\" \" +\n        'Watcher only accepts simple dot-delimited paths. ' +\n        'For full control, use a function instead.',\n        vm\n      );\n    }\n  }\n  this.value = this.lazy\n    ? undefined\n    : this.get();\n};\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\nWatcher.prototype.get = function get () {\n  pushTarget(this);\n  var value;\n  var vm = this.vm;\n  try {\n    value = this.getter.call(vm, vm);\n  } catch (e) {\n    if (this.user) {\n      handleError(e, vm, (\"getter for watcher \\\"\" + (this.expression) + \"\\\"\"));\n    } else {\n      throw e\n    }\n  } finally {\n    // \"touch\" every property so they are all tracked as\n    // dependencies for deep watching\n    if (this.deep) {\n      traverse(value);\n    }\n    popTarget();\n    this.cleanupDeps();\n  }\n  return value\n};\n\n/**\n * Add a dependency to this directive.\n */\nWatcher.prototype.addDep = function addDep (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\nWatcher.prototype.cleanupDeps = function cleanupDeps () {\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this.deps[i];\n    if (!this.newDepIds.has(dep.id)) {\n      dep.removeSub(this);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n */\nWatcher.prototype.update = function update () {\n  /* istanbul ignore else */\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync) {\n    this.run();\n  } else {\n    queueWatcher(this);\n  }\n};\n\n/**\n * Scheduler job interface.\n * Will be called by the scheduler.\n */\nWatcher.prototype.run = function run () {\n  if (this.active) {\n    var value = this.get();\n    if (\n      value !== this.value ||\n      // Deep watchers and watchers on Object/Arrays should fire even\n      // when the value is the same, because the value may\n      // have mutated.\n      isObject(value) ||\n      this.deep\n    ) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      if (this.user) {\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          handleError(e, this.vm, (\"callback for watcher \\\"\" + (this.expression) + \"\\\"\"));\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\nWatcher.prototype.evaluate = function evaluate () {\n  this.value = this.get();\n  this.dirty = false;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\nWatcher.prototype.depend = function depend () {\n  var i = this.deps.length;\n  while (i--) {\n    this.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subscriber list.\n */\nWatcher.prototype.teardown = function teardown () {\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed.\n    if (!this.vm._isBeingDestroyed) {\n      remove(this.vm._watchers, this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this.deps[i].removeSub(this);\n    }\n    this.active = false;\n  }\n};\n\n/*  */\n\nvar sharedPropertyDefinition = {\n  enumerable: true,\n  configurable: true,\n  get: noop,\n  set: noop\n};\n\nfunction proxy (target, sourceKey, key) {\n  sharedPropertyDefinition.get = function proxyGetter () {\n    return this[sourceKey][key]\n  };\n  sharedPropertyDefinition.set = function proxySetter (val) {\n    this[sourceKey][key] = val;\n  };\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction initState (vm) {\n  vm._watchers = [];\n  var opts = vm.$options;\n  if (opts.props) { initProps(vm, opts.props); }\n  if (opts.methods) { initMethods(vm, opts.methods); }\n  if (opts.data) {\n    initData(vm);\n  } else {\n    observe(vm._data = {}, true /* asRootData */);\n  }\n  if (opts.computed) { initComputed(vm, opts.computed); }\n  if (opts.watch && opts.watch !== nativeWatch) {\n    initWatch(vm, opts.watch);\n  }\n}\n\nfunction initProps (vm, propsOptions) {\n  var propsData = vm.$options.propsData || {};\n  var props = vm._props = {};\n  // cache prop keys so that future props updates can iterate using Array\n  // instead of dynamic object key enumeration.\n  var keys = vm.$options._propKeys = [];\n  var isRoot = !vm.$parent;\n  // root instance props should be converted\n  if (!isRoot) {\n    toggleObserving(false);\n  }\n  var loop = function ( key ) {\n    keys.push(key);\n    var value = validateProp(key, propsOptions, propsData, vm);\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      var hyphenatedKey = hyphenate(key);\n      if (isReservedAttribute(hyphenatedKey) ||\n          config.isReservedAttr(hyphenatedKey)) {\n        warn(\n          (\"\\\"\" + hyphenatedKey + \"\\\" is a reserved attribute and cannot be used as component prop.\"),\n          vm\n        );\n      }\n      defineReactive$$1(props, key, value, function () {\n        if (!isRoot && !isUpdatingChildComponent) {\n          warn(\n            \"Avoid mutating a prop directly since the value will be \" +\n            \"overwritten whenever the parent component re-renders. \" +\n            \"Instead, use a data or computed property based on the prop's \" +\n            \"value. Prop being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        }\n      });\n    } else {\n      defineReactive$$1(props, key, value);\n    }\n    // static props are already proxied on the component's prototype\n    // during Vue.extend(). We only need to proxy props defined at\n    // instantiation here.\n    if (!(key in vm)) {\n      proxy(vm, \"_props\", key);\n    }\n  };\n\n  for (var key in propsOptions) loop( key );\n  toggleObserving(true);\n}\n\nfunction initData (vm) {\n  var data = vm.$options.data;\n  data = vm._data = typeof data === 'function'\n    ? getData(data, vm)\n    : data || {};\n  if (!isPlainObject(data)) {\n    data = {};\n    process.env.NODE_ENV !== 'production' && warn(\n      'data functions should return an object:\\n' +\n      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',\n      vm\n    );\n  }\n  // proxy data on instance\n  var keys = Object.keys(data);\n  var props = vm.$options.props;\n  var methods = vm.$options.methods;\n  var i = keys.length;\n  while (i--) {\n    var key = keys[i];\n    if (process.env.NODE_ENV !== 'production') {\n      if (methods && hasOwn(methods, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a data property.\"),\n          vm\n        );\n      }\n    }\n    if (props && hasOwn(props, key)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"The data property \\\"\" + key + \"\\\" is already declared as a prop. \" +\n        \"Use prop default value instead.\",\n        vm\n      );\n    } else if (!isReserved(key)) {\n      proxy(vm, \"_data\", key);\n    }\n  }\n  // observe data\n  observe(data, true /* asRootData */);\n}\n\nfunction getData (data, vm) {\n  // #7573 disable dep collection when invoking data getters\n  pushTarget();\n  try {\n    return data.call(vm, vm)\n  } catch (e) {\n    handleError(e, vm, \"data()\");\n    return {}\n  } finally {\n    popTarget();\n  }\n}\n\nvar computedWatcherOptions = { lazy: true };\n\nfunction initComputed (vm, computed) {\n  // $flow-disable-line\n  var watchers = vm._computedWatchers = Object.create(null);\n  // computed properties are just getters during SSR\n  var isSSR = isServerRendering();\n\n  for (var key in computed) {\n    var userDef = computed[key];\n    var getter = typeof userDef === 'function' ? userDef : userDef.get;\n    if (process.env.NODE_ENV !== 'production' && getter == null) {\n      warn(\n        (\"Getter is missing for computed property \\\"\" + key + \"\\\".\"),\n        vm\n      );\n    }\n\n    if (!isSSR) {\n      // create internal watcher for the computed property.\n      watchers[key] = new Watcher(\n        vm,\n        getter || noop,\n        noop,\n        computedWatcherOptions\n      );\n    }\n\n    // component-defined computed properties are already defined on the\n    // component prototype. We only need to define computed properties defined\n    // at instantiation here.\n    if (!(key in vm)) {\n      defineComputed(vm, key, userDef);\n    } else if (process.env.NODE_ENV !== 'production') {\n      if (key in vm.$data) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined in data.\"), vm);\n      } else if (vm.$options.props && key in vm.$options.props) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined as a prop.\"), vm);\n      }\n    }\n  }\n}\n\nfunction defineComputed (\n  target,\n  key,\n  userDef\n) {\n  var shouldCache = !isServerRendering();\n  if (typeof userDef === 'function') {\n    sharedPropertyDefinition.get = shouldCache\n      ? createComputedGetter(key)\n      : createGetterInvoker(userDef);\n    sharedPropertyDefinition.set = noop;\n  } else {\n    sharedPropertyDefinition.get = userDef.get\n      ? shouldCache && userDef.cache !== false\n        ? createComputedGetter(key)\n        : createGetterInvoker(userDef.get)\n      : noop;\n    sharedPropertyDefinition.set = userDef.set || noop;\n  }\n  if (process.env.NODE_ENV !== 'production' &&\n      sharedPropertyDefinition.set === noop) {\n    sharedPropertyDefinition.set = function () {\n      warn(\n        (\"Computed property \\\"\" + key + \"\\\" was assigned to but it has no setter.\"),\n        this\n      );\n    };\n  }\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction createComputedGetter (key) {\n  return function computedGetter () {\n    var watcher = this._computedWatchers && this._computedWatchers[key];\n    if (watcher) {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value\n    }\n  }\n}\n\nfunction createGetterInvoker(fn) {\n  return function computedGetter () {\n    return fn.call(this, this)\n  }\n}\n\nfunction initMethods (vm, methods) {\n  var props = vm.$options.props;\n  for (var key in methods) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof methods[key] !== 'function') {\n        warn(\n          \"Method \\\"\" + key + \"\\\" has type \\\"\" + (typeof methods[key]) + \"\\\" in the component definition. \" +\n          \"Did you reference the function correctly?\",\n          vm\n        );\n      }\n      if (props && hasOwn(props, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a prop.\"),\n          vm\n        );\n      }\n      if ((key in vm) && isReserved(key)) {\n        warn(\n          \"Method \\\"\" + key + \"\\\" conflicts with an existing Vue instance method. \" +\n          \"Avoid defining component methods that start with _ or $.\"\n        );\n      }\n    }\n    vm[key] = typeof methods[key] !== 'function' ? noop : bind(methods[key], vm);\n  }\n}\n\nfunction initWatch (vm, watch) {\n  for (var key in watch) {\n    var handler = watch[key];\n    if (Array.isArray(handler)) {\n      for (var i = 0; i < handler.length; i++) {\n        createWatcher(vm, key, handler[i]);\n      }\n    } else {\n      createWatcher(vm, key, handler);\n    }\n  }\n}\n\nfunction createWatcher (\n  vm,\n  expOrFn,\n  handler,\n  options\n) {\n  if (isPlainObject(handler)) {\n    options = handler;\n    handler = handler.handler;\n  }\n  if (typeof handler === 'string') {\n    handler = vm[handler];\n  }\n  return vm.$watch(expOrFn, handler, options)\n}\n\nfunction stateMixin (Vue) {\n  // flow somehow has problems with directly declared definition object\n  // when using Object.defineProperty, so we have to procedurally build up\n  // the object here.\n  var dataDef = {};\n  dataDef.get = function () { return this._data };\n  var propsDef = {};\n  propsDef.get = function () { return this._props };\n  if (process.env.NODE_ENV !== 'production') {\n    dataDef.set = function () {\n      warn(\n        'Avoid replacing instance root $data. ' +\n        'Use nested data properties instead.',\n        this\n      );\n    };\n    propsDef.set = function () {\n      warn(\"$props is readonly.\", this);\n    };\n  }\n  Object.defineProperty(Vue.prototype, '$data', dataDef);\n  Object.defineProperty(Vue.prototype, '$props', propsDef);\n\n  Vue.prototype.$set = set;\n  Vue.prototype.$delete = del;\n\n  Vue.prototype.$watch = function (\n    expOrFn,\n    cb,\n    options\n  ) {\n    var vm = this;\n    if (isPlainObject(cb)) {\n      return createWatcher(vm, expOrFn, cb, options)\n    }\n    options = options || {};\n    options.user = true;\n    var watcher = new Watcher(vm, expOrFn, cb, options);\n    if (options.immediate) {\n      try {\n        cb.call(vm, watcher.value);\n      } catch (error) {\n        handleError(error, vm, (\"callback for immediate watcher \\\"\" + (watcher.expression) + \"\\\"\"));\n      }\n    }\n    return function unwatchFn () {\n      watcher.teardown();\n    }\n  };\n}\n\n/*  */\n\nvar uid$3 = 0;\n\nfunction initMixin (Vue) {\n  Vue.prototype._init = function (options) {\n    var vm = this;\n    // a uid\n    vm._uid = uid$3++;\n\n    var startTag, endTag;\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n      startTag = \"vue-perf-start:\" + (vm._uid);\n      endTag = \"vue-perf-end:\" + (vm._uid);\n      mark(startTag);\n    }\n\n    // a flag to avoid this being observed\n    vm._isVue = true;\n    // merge options\n    if (options && options._isComponent) {\n      // optimize internal component instantiation\n      // since dynamic options merging is pretty slow, and none of the\n      // internal component options needs special treatment.\n      initInternalComponent(vm, options);\n    } else {\n      vm.$options = mergeOptions(\n        resolveConstructorOptions(vm.constructor),\n        options || {},\n        vm\n      );\n    }\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      initProxy(vm);\n    } else {\n      vm._renderProxy = vm;\n    }\n    // expose real self\n    vm._self = vm;\n    initLifecycle(vm);\n    initEvents(vm);\n    initRender(vm);\n    callHook(vm, 'beforeCreate');\n    initInjections(vm); // resolve injections before data/props\n    initState(vm);\n    initProvide(vm); // resolve provide after data/props\n    callHook(vm, 'created');\n\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n      vm._name = formatComponentName(vm, false);\n      mark(endTag);\n      measure((\"vue \" + (vm._name) + \" init\"), startTag, endTag);\n    }\n\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el);\n    }\n  };\n}\n\nfunction initInternalComponent (vm, options) {\n  var opts = vm.$options = Object.create(vm.constructor.options);\n  // doing this because it's faster than dynamic enumeration.\n  var parentVnode = options._parentVnode;\n  opts.parent = options.parent;\n  opts._parentVnode = parentVnode;\n\n  var vnodeComponentOptions = parentVnode.componentOptions;\n  opts.propsData = vnodeComponentOptions.propsData;\n  opts._parentListeners = vnodeComponentOptions.listeners;\n  opts._renderChildren = vnodeComponentOptions.children;\n  opts._componentTag = vnodeComponentOptions.tag;\n\n  if (options.render) {\n    opts.render = options.render;\n    opts.staticRenderFns = options.staticRenderFns;\n  }\n}\n\nfunction resolveConstructorOptions (Ctor) {\n  var options = Ctor.options;\n  if (Ctor.super) {\n    var superOptions = resolveConstructorOptions(Ctor.super);\n    var cachedSuperOptions = Ctor.superOptions;\n    if (superOptions !== cachedSuperOptions) {\n      // super option changed,\n      // need to resolve new options.\n      Ctor.superOptions = superOptions;\n      // check if there are any late-modified/attached options (#4976)\n      var modifiedOptions = resolveModifiedOptions(Ctor);\n      // update base extend options\n      if (modifiedOptions) {\n        extend(Ctor.extendOptions, modifiedOptions);\n      }\n      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);\n      if (options.name) {\n        options.components[options.name] = Ctor;\n      }\n    }\n  }\n  return options\n}\n\nfunction resolveModifiedOptions (Ctor) {\n  var modified;\n  var latest = Ctor.options;\n  var sealed = Ctor.sealedOptions;\n  for (var key in latest) {\n    if (latest[key] !== sealed[key]) {\n      if (!modified) { modified = {}; }\n      modified[key] = latest[key];\n    }\n  }\n  return modified\n}\n\nfunction Vue (options) {\n  if (process.env.NODE_ENV !== 'production' &&\n    !(this instanceof Vue)\n  ) {\n    warn('Vue is a constructor and should be called with the `new` keyword');\n  }\n  this._init(options);\n}\n\ninitMixin(Vue);\nstateMixin(Vue);\neventsMixin(Vue);\nlifecycleMixin(Vue);\nrenderMixin(Vue);\n\n/*  */\n\nfunction initUse (Vue) {\n  Vue.use = function (plugin) {\n    var installedPlugins = (this._installedPlugins || (this._installedPlugins = []));\n    if (installedPlugins.indexOf(plugin) > -1) {\n      return this\n    }\n\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else if (typeof plugin === 'function') {\n      plugin.apply(null, args);\n    }\n    installedPlugins.push(plugin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initMixin$1 (Vue) {\n  Vue.mixin = function (mixin) {\n    this.options = mergeOptions(this.options, mixin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initExtend (Vue) {\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   */\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var SuperId = Super.cid;\n    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});\n    if (cachedCtors[SuperId]) {\n      return cachedCtors[SuperId]\n    }\n\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production' && name) {\n      validateComponentName(name);\n    }\n\n    var Sub = function VueComponent (options) {\n      this._init(options);\n    };\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(\n      Super.options,\n      extendOptions\n    );\n    Sub['super'] = Super;\n\n    // For props and computed properties, we define the proxy getters on\n    // the Vue instances at extension time, on the extended prototype. This\n    // avoids Object.defineProperty calls for each instance created.\n    if (Sub.options.props) {\n      initProps$1(Sub);\n    }\n    if (Sub.options.computed) {\n      initComputed$1(Sub);\n    }\n\n    // allow further extension/mixin/plugin usage\n    Sub.extend = Super.extend;\n    Sub.mixin = Super.mixin;\n    Sub.use = Super.use;\n\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    ASSET_TYPES.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n\n    // keep a reference to the super options at extension time.\n    // later at instantiation we can check if Super's options have\n    // been updated.\n    Sub.superOptions = Super.options;\n    Sub.extendOptions = extendOptions;\n    Sub.sealedOptions = extend({}, Sub.options);\n\n    // cache constructor\n    cachedCtors[SuperId] = Sub;\n    return Sub\n  };\n}\n\nfunction initProps$1 (Comp) {\n  var props = Comp.options.props;\n  for (var key in props) {\n    proxy(Comp.prototype, \"_props\", key);\n  }\n}\n\nfunction initComputed$1 (Comp) {\n  var computed = Comp.options.computed;\n  for (var key in computed) {\n    defineComputed(Comp.prototype, key, computed[key]);\n  }\n}\n\n/*  */\n\nfunction initAssetRegisters (Vue) {\n  /**\n   * Create asset registration methods.\n   */\n  ASSET_TYPES.forEach(function (type) {\n    Vue[type] = function (\n      id,\n      definition\n    ) {\n      if (!definition) {\n        return this.options[type + 's'][id]\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production' && type === 'component') {\n          validateComponentName(id);\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = definition.name || id;\n          definition = this.options._base.extend(definition);\n        }\n        if (type === 'directive' && typeof definition === 'function') {\n          definition = { bind: definition, update: definition };\n        }\n        this.options[type + 's'][id] = definition;\n        return definition\n      }\n    };\n  });\n}\n\n/*  */\n\n\n\nfunction getComponentName (opts) {\n  return opts && (opts.Ctor.options.name || opts.tag)\n}\n\nfunction matches (pattern, name) {\n  if (Array.isArray(pattern)) {\n    return pattern.indexOf(name) > -1\n  } else if (typeof pattern === 'string') {\n    return pattern.split(',').indexOf(name) > -1\n  } else if (isRegExp(pattern)) {\n    return pattern.test(name)\n  }\n  /* istanbul ignore next */\n  return false\n}\n\nfunction pruneCache (keepAliveInstance, filter) {\n  var cache = keepAliveInstance.cache;\n  var keys = keepAliveInstance.keys;\n  var _vnode = keepAliveInstance._vnode;\n  for (var key in cache) {\n    var cachedNode = cache[key];\n    if (cachedNode) {\n      var name = getComponentName(cachedNode.componentOptions);\n      if (name && !filter(name)) {\n        pruneCacheEntry(cache, key, keys, _vnode);\n      }\n    }\n  }\n}\n\nfunction pruneCacheEntry (\n  cache,\n  key,\n  keys,\n  current\n) {\n  var cached$$1 = cache[key];\n  if (cached$$1 && (!current || cached$$1.tag !== current.tag)) {\n    cached$$1.componentInstance.$destroy();\n  }\n  cache[key] = null;\n  remove(keys, key);\n}\n\nvar patternTypes = [String, RegExp, Array];\n\nvar KeepAlive = {\n  name: 'keep-alive',\n  abstract: true,\n\n  props: {\n    include: patternTypes,\n    exclude: patternTypes,\n    max: [String, Number]\n  },\n\n  created: function created () {\n    this.cache = Object.create(null);\n    this.keys = [];\n  },\n\n  destroyed: function destroyed () {\n    for (var key in this.cache) {\n      pruneCacheEntry(this.cache, key, this.keys);\n    }\n  },\n\n  mounted: function mounted () {\n    var this$1 = this;\n\n    this.$watch('include', function (val) {\n      pruneCache(this$1, function (name) { return matches(val, name); });\n    });\n    this.$watch('exclude', function (val) {\n      pruneCache(this$1, function (name) { return !matches(val, name); });\n    });\n  },\n\n  render: function render () {\n    var slot = this.$slots.default;\n    var vnode = getFirstComponentChild(slot);\n    var componentOptions = vnode && vnode.componentOptions;\n    if (componentOptions) {\n      // check pattern\n      var name = getComponentName(componentOptions);\n      var ref = this;\n      var include = ref.include;\n      var exclude = ref.exclude;\n      if (\n        // not included\n        (include && (!name || !matches(include, name))) ||\n        // excluded\n        (exclude && name && matches(exclude, name))\n      ) {\n        return vnode\n      }\n\n      var ref$1 = this;\n      var cache = ref$1.cache;\n      var keys = ref$1.keys;\n      var key = vnode.key == null\n        // same constructor may get registered as different local components\n        // so cid alone is not enough (#3269)\n        ? componentOptions.Ctor.cid + (componentOptions.tag ? (\"::\" + (componentOptions.tag)) : '')\n        : vnode.key;\n      if (cache[key]) {\n        vnode.componentInstance = cache[key].componentInstance;\n        // make current key freshest\n        remove(keys, key);\n        keys.push(key);\n      } else {\n        cache[key] = vnode;\n        keys.push(key);\n        // prune oldest entry\n        if (this.max && keys.length > parseInt(this.max)) {\n          pruneCacheEntry(cache, keys[0], keys, this._vnode);\n        }\n      }\n\n      vnode.data.keepAlive = true;\n    }\n    return vnode || (slot && slot[0])\n  }\n};\n\nvar builtInComponents = {\n  KeepAlive: KeepAlive\n};\n\n/*  */\n\nfunction initGlobalAPI (Vue) {\n  // config\n  var configDef = {};\n  configDef.get = function () { return config; };\n  if (process.env.NODE_ENV !== 'production') {\n    configDef.set = function () {\n      warn(\n        'Do not replace the Vue.config object, set individual fields instead.'\n      );\n    };\n  }\n  Object.defineProperty(Vue, 'config', configDef);\n\n  // exposed util methods.\n  // NOTE: these are not considered part of the public API - avoid relying on\n  // them unless you are aware of the risk.\n  Vue.util = {\n    warn: warn,\n    extend: extend,\n    mergeOptions: mergeOptions,\n    defineReactive: defineReactive$$1\n  };\n\n  Vue.set = set;\n  Vue.delete = del;\n  Vue.nextTick = nextTick;\n\n  // 2.6 explicit observable API\n  Vue.observable = function (obj) {\n    observe(obj);\n    return obj\n  };\n\n  Vue.options = Object.create(null);\n  ASSET_TYPES.forEach(function (type) {\n    Vue.options[type + 's'] = Object.create(null);\n  });\n\n  // this is used to identify the \"base\" constructor to extend all plain-object\n  // components with in Weex's multi-instance scenarios.\n  Vue.options._base = Vue;\n\n  extend(Vue.options.components, builtInComponents);\n\n  initUse(Vue);\n  initMixin$1(Vue);\n  initExtend(Vue);\n  initAssetRegisters(Vue);\n}\n\ninitGlobalAPI(Vue);\n\nObject.defineProperty(Vue.prototype, '$isServer', {\n  get: isServerRendering\n});\n\nObject.defineProperty(Vue.prototype, '$ssrContext', {\n  get: function get () {\n    /* istanbul ignore next */\n    return this.$vnode && this.$vnode.ssrContext\n  }\n});\n\n// expose FunctionalRenderContext for ssr runtime helper installation\nObject.defineProperty(Vue, 'FunctionalRenderContext', {\n  value: FunctionalRenderContext\n});\n\nVue.version = '2.6.10';\n\n/*  */\n\n// these are reserved for web because they are directly compiled away\n// during template compilation\nvar isReservedAttr = makeMap('style,class');\n\n// attributes that should be using props for binding\nvar acceptValue = makeMap('input,textarea,option,select,progress');\nvar mustUseProp = function (tag, type, attr) {\n  return (\n    (attr === 'value' && acceptValue(tag)) && type !== 'button' ||\n    (attr === 'selected' && tag === 'option') ||\n    (attr === 'checked' && tag === 'input') ||\n    (attr === 'muted' && tag === 'video')\n  )\n};\n\nvar isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');\n\nvar isValidContentEditableValue = makeMap('events,caret,typing,plaintext-only');\n\nvar convertEnumeratedValue = function (key, value) {\n  return isFalsyAttrValue(value) || value === 'false'\n    ? 'false'\n    // allow arbitrary string value for contenteditable\n    : key === 'contenteditable' && isValidContentEditableValue(value)\n      ? value\n      : 'true'\n};\n\nvar isBooleanAttr = makeMap(\n  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +\n  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +\n  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +\n  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +\n  'required,reversed,scoped,seamless,selected,sortable,translate,' +\n  'truespeed,typemustmatch,visible'\n);\n\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\nvar isXlink = function (name) {\n  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'\n};\n\nvar getXlinkProp = function (name) {\n  return isXlink(name) ? name.slice(6, name.length) : ''\n};\n\nvar isFalsyAttrValue = function (val) {\n  return val == null || val === false\n};\n\n/*  */\n\nfunction genClassForVnode (vnode) {\n  var data = vnode.data;\n  var parentNode = vnode;\n  var childNode = vnode;\n  while (isDef(childNode.componentInstance)) {\n    childNode = childNode.componentInstance._vnode;\n    if (childNode && childNode.data) {\n      data = mergeClassData(childNode.data, data);\n    }\n  }\n  while (isDef(parentNode = parentNode.parent)) {\n    if (parentNode && parentNode.data) {\n      data = mergeClassData(data, parentNode.data);\n    }\n  }\n  return renderClass(data.staticClass, data.class)\n}\n\nfunction mergeClassData (child, parent) {\n  return {\n    staticClass: concat(child.staticClass, parent.staticClass),\n    class: isDef(child.class)\n      ? [child.class, parent.class]\n      : parent.class\n  }\n}\n\nfunction renderClass (\n  staticClass,\n  dynamicClass\n) {\n  if (isDef(staticClass) || isDef(dynamicClass)) {\n    return concat(staticClass, stringifyClass(dynamicClass))\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction concat (a, b) {\n  return a ? b ? (a + ' ' + b) : a : (b || '')\n}\n\nfunction stringifyClass (value) {\n  if (Array.isArray(value)) {\n    return stringifyArray(value)\n  }\n  if (isObject(value)) {\n    return stringifyObject(value)\n  }\n  if (typeof value === 'string') {\n    return value\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction stringifyArray (value) {\n  var res = '';\n  var stringified;\n  for (var i = 0, l = value.length; i < l; i++) {\n    if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {\n      if (res) { res += ' '; }\n      res += stringified;\n    }\n  }\n  return res\n}\n\nfunction stringifyObject (value) {\n  var res = '';\n  for (var key in value) {\n    if (value[key]) {\n      if (res) { res += ' '; }\n      res += key;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar namespaceMap = {\n  svg: 'http://www.w3.org/2000/svg',\n  math: 'http://www.w3.org/1998/Math/MathML'\n};\n\nvar isHTMLTag = makeMap(\n  'html,body,base,head,link,meta,style,title,' +\n  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +\n  'div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,' +\n  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +\n  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +\n  'embed,object,param,source,canvas,script,noscript,del,ins,' +\n  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +\n  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +\n  'output,progress,select,textarea,' +\n  'details,dialog,menu,menuitem,summary,' +\n  'content,element,shadow,template,blockquote,iframe,tfoot'\n);\n\n// this map is intentionally selective, only covering SVG elements that may\n// contain child elements.\nvar isSVG = makeMap(\n  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' +\n  'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +\n  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',\n  true\n);\n\nvar isReservedTag = function (tag) {\n  return isHTMLTag(tag) || isSVG(tag)\n};\n\nfunction getTagNamespace (tag) {\n  if (isSVG(tag)) {\n    return 'svg'\n  }\n  // basic support for MathML\n  // note it doesn't support other MathML elements being component roots\n  if (tag === 'math') {\n    return 'math'\n  }\n}\n\nvar unknownElementCache = Object.create(null);\nfunction isUnknownElement (tag) {\n  /* istanbul ignore if */\n  if (!inBrowser) {\n    return true\n  }\n  if (isReservedTag(tag)) {\n    return false\n  }\n  tag = tag.toLowerCase();\n  /* istanbul ignore if */\n  if (unknownElementCache[tag] != null) {\n    return unknownElementCache[tag]\n  }\n  var el = document.createElement(tag);\n  if (tag.indexOf('-') > -1) {\n    // http://stackoverflow.com/a/28210364/1070244\n    return (unknownElementCache[tag] = (\n      el.constructor === window.HTMLUnknownElement ||\n      el.constructor === window.HTMLElement\n    ))\n  } else {\n    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))\n  }\n}\n\nvar isTextInputType = makeMap('text,number,password,search,email,tel,url');\n\n/*  */\n\n/**\n * Query an element selector if it's not an element already.\n */\nfunction query (el) {\n  if (typeof el === 'string') {\n    var selected = document.querySelector(el);\n    if (!selected) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'Cannot find element: ' + el\n      );\n      return document.createElement('div')\n    }\n    return selected\n  } else {\n    return el\n  }\n}\n\n/*  */\n\nfunction createElement$1 (tagName, vnode) {\n  var elm = document.createElement(tagName);\n  if (tagName !== 'select') {\n    return elm\n  }\n  // false or null will remove the attribute but undefined will not\n  if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {\n    elm.setAttribute('multiple', 'multiple');\n  }\n  return elm\n}\n\nfunction createElementNS (namespace, tagName) {\n  return document.createElementNS(namespaceMap[namespace], tagName)\n}\n\nfunction createTextNode (text) {\n  return document.createTextNode(text)\n}\n\nfunction createComment (text) {\n  return document.createComment(text)\n}\n\nfunction insertBefore (parentNode, newNode, referenceNode) {\n  parentNode.insertBefore(newNode, referenceNode);\n}\n\nfunction removeChild (node, child) {\n  node.removeChild(child);\n}\n\nfunction appendChild (node, child) {\n  node.appendChild(child);\n}\n\nfunction parentNode (node) {\n  return node.parentNode\n}\n\nfunction nextSibling (node) {\n  return node.nextSibling\n}\n\nfunction tagName (node) {\n  return node.tagName\n}\n\nfunction setTextContent (node, text) {\n  node.textContent = text;\n}\n\nfunction setStyleScope (node, scopeId) {\n  node.setAttribute(scopeId, '');\n}\n\nvar nodeOps = /*#__PURE__*/Object.freeze({\n  createElement: createElement$1,\n  createElementNS: createElementNS,\n  createTextNode: createTextNode,\n  createComment: createComment,\n  insertBefore: insertBefore,\n  removeChild: removeChild,\n  appendChild: appendChild,\n  parentNode: parentNode,\n  nextSibling: nextSibling,\n  tagName: tagName,\n  setTextContent: setTextContent,\n  setStyleScope: setStyleScope\n});\n\n/*  */\n\nvar ref = {\n  create: function create (_, vnode) {\n    registerRef(vnode);\n  },\n  update: function update (oldVnode, vnode) {\n    if (oldVnode.data.ref !== vnode.data.ref) {\n      registerRef(oldVnode, true);\n      registerRef(vnode);\n    }\n  },\n  destroy: function destroy (vnode) {\n    registerRef(vnode, true);\n  }\n};\n\nfunction registerRef (vnode, isRemoval) {\n  var key = vnode.data.ref;\n  if (!isDef(key)) { return }\n\n  var vm = vnode.context;\n  var ref = vnode.componentInstance || vnode.elm;\n  var refs = vm.$refs;\n  if (isRemoval) {\n    if (Array.isArray(refs[key])) {\n      remove(refs[key], ref);\n    } else if (refs[key] === ref) {\n      refs[key] = undefined;\n    }\n  } else {\n    if (vnode.data.refInFor) {\n      if (!Array.isArray(refs[key])) {\n        refs[key] = [ref];\n      } else if (refs[key].indexOf(ref) < 0) {\n        // $flow-disable-line\n        refs[key].push(ref);\n      }\n    } else {\n      refs[key] = ref;\n    }\n  }\n}\n\n/**\n * Virtual DOM patching algorithm based on Snabbdom by\n * Simon Friis Vindum (@paldepind)\n * Licensed under the MIT License\n * https://github.com/paldepind/snabbdom/blob/master/LICENSE\n *\n * modified by Evan You (@yyx990803)\n *\n * Not type-checking this because this file is perf-critical and the cost\n * of making flow understand it is not worth it.\n */\n\nvar emptyNode = new VNode('', {}, []);\n\nvar hooks = ['create', 'activate', 'update', 'remove', 'destroy'];\n\nfunction sameVnode (a, b) {\n  return (\n    a.key === b.key && (\n      (\n        a.tag === b.tag &&\n        a.isComment === b.isComment &&\n        isDef(a.data) === isDef(b.data) &&\n        sameInputType(a, b)\n      ) || (\n        isTrue(a.isAsyncPlaceholder) &&\n        a.asyncFactory === b.asyncFactory &&\n        isUndef(b.asyncFactory.error)\n      )\n    )\n  )\n}\n\nfunction sameInputType (a, b) {\n  if (a.tag !== 'input') { return true }\n  var i;\n  var typeA = isDef(i = a.data) && isDef(i = i.attrs) && i.type;\n  var typeB = isDef(i = b.data) && isDef(i = i.attrs) && i.type;\n  return typeA === typeB || isTextInputType(typeA) && isTextInputType(typeB)\n}\n\nfunction createKeyToOldIdx (children, beginIdx, endIdx) {\n  var i, key;\n  var map = {};\n  for (i = beginIdx; i <= endIdx; ++i) {\n    key = children[i].key;\n    if (isDef(key)) { map[key] = i; }\n  }\n  return map\n}\n\nfunction createPatchFunction (backend) {\n  var i, j;\n  var cbs = {};\n\n  var modules = backend.modules;\n  var nodeOps = backend.nodeOps;\n\n  for (i = 0; i < hooks.length; ++i) {\n    cbs[hooks[i]] = [];\n    for (j = 0; j < modules.length; ++j) {\n      if (isDef(modules[j][hooks[i]])) {\n        cbs[hooks[i]].push(modules[j][hooks[i]]);\n      }\n    }\n  }\n\n  function emptyNodeAt (elm) {\n    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)\n  }\n\n  function createRmCb (childElm, listeners) {\n    function remove$$1 () {\n      if (--remove$$1.listeners === 0) {\n        removeNode(childElm);\n      }\n    }\n    remove$$1.listeners = listeners;\n    return remove$$1\n  }\n\n  function removeNode (el) {\n    var parent = nodeOps.parentNode(el);\n    // element may have already been removed due to v-html / v-text\n    if (isDef(parent)) {\n      nodeOps.removeChild(parent, el);\n    }\n  }\n\n  function isUnknownElement$$1 (vnode, inVPre) {\n    return (\n      !inVPre &&\n      !vnode.ns &&\n      !(\n        config.ignoredElements.length &&\n        config.ignoredElements.some(function (ignore) {\n          return isRegExp(ignore)\n            ? ignore.test(vnode.tag)\n            : ignore === vnode.tag\n        })\n      ) &&\n      config.isUnknownElement(vnode.tag)\n    )\n  }\n\n  var creatingElmInVPre = 0;\n\n  function createElm (\n    vnode,\n    insertedVnodeQueue,\n    parentElm,\n    refElm,\n    nested,\n    ownerArray,\n    index\n  ) {\n    if (isDef(vnode.elm) && isDef(ownerArray)) {\n      // This vnode was used in a previous render!\n      // now it's used as a new node, overwriting its elm would cause\n      // potential patch errors down the road when it's used as an insertion\n      // reference node. Instead, we clone the node on-demand before creating\n      // associated DOM element for it.\n      vnode = ownerArray[index] = cloneVNode(vnode);\n    }\n\n    vnode.isRootInsert = !nested; // for transition enter check\n    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {\n      return\n    }\n\n    var data = vnode.data;\n    var children = vnode.children;\n    var tag = vnode.tag;\n    if (isDef(tag)) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (data && data.pre) {\n          creatingElmInVPre++;\n        }\n        if (isUnknownElement$$1(vnode, creatingElmInVPre)) {\n          warn(\n            'Unknown custom element: <' + tag + '> - did you ' +\n            'register the component correctly? For recursive components, ' +\n            'make sure to provide the \"name\" option.',\n            vnode.context\n          );\n        }\n      }\n\n      vnode.elm = vnode.ns\n        ? nodeOps.createElementNS(vnode.ns, tag)\n        : nodeOps.createElement(tag, vnode);\n      setScope(vnode);\n\n      /* istanbul ignore if */\n      {\n        createChildren(vnode, children, insertedVnodeQueue);\n        if (isDef(data)) {\n          invokeCreateHooks(vnode, insertedVnodeQueue);\n        }\n        insert(parentElm, vnode.elm, refElm);\n      }\n\n      if (process.env.NODE_ENV !== 'production' && data && data.pre) {\n        creatingElmInVPre--;\n      }\n    } else if (isTrue(vnode.isComment)) {\n      vnode.elm = nodeOps.createComment(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    } else {\n      vnode.elm = nodeOps.createTextNode(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    }\n  }\n\n  function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i = vnode.data;\n    if (isDef(i)) {\n      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;\n      if (isDef(i = i.hook) && isDef(i = i.init)) {\n        i(vnode, false /* hydrating */);\n      }\n      // after calling the init hook, if the vnode is a child component\n      // it should've created a child instance and mounted it. the child\n      // component also has set the placeholder vnode's elm.\n      // in that case we can just return the element and be done.\n      if (isDef(vnode.componentInstance)) {\n        initComponent(vnode, insertedVnodeQueue);\n        insert(parentElm, vnode.elm, refElm);\n        if (isTrue(isReactivated)) {\n          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);\n        }\n        return true\n      }\n    }\n  }\n\n  function initComponent (vnode, insertedVnodeQueue) {\n    if (isDef(vnode.data.pendingInsert)) {\n      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);\n      vnode.data.pendingInsert = null;\n    }\n    vnode.elm = vnode.componentInstance.$el;\n    if (isPatchable(vnode)) {\n      invokeCreateHooks(vnode, insertedVnodeQueue);\n      setScope(vnode);\n    } else {\n      // empty component root.\n      // skip all element-related modules except for ref (#3455)\n      registerRef(vnode);\n      // make sure to invoke the insert hook\n      insertedVnodeQueue.push(vnode);\n    }\n  }\n\n  function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i;\n    // hack for #4339: a reactivated component with inner transition\n    // does not trigger because the inner node's created hooks are not called\n    // again. It's not ideal to involve module-specific logic in here but\n    // there doesn't seem to be a better way to do it.\n    var innerNode = vnode;\n    while (innerNode.componentInstance) {\n      innerNode = innerNode.componentInstance._vnode;\n      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {\n        for (i = 0; i < cbs.activate.length; ++i) {\n          cbs.activate[i](emptyNode, innerNode);\n        }\n        insertedVnodeQueue.push(innerNode);\n        break\n      }\n    }\n    // unlike a newly created component,\n    // a reactivated keep-alive component doesn't insert itself\n    insert(parentElm, vnode.elm, refElm);\n  }\n\n  function insert (parent, elm, ref$$1) {\n    if (isDef(parent)) {\n      if (isDef(ref$$1)) {\n        if (nodeOps.parentNode(ref$$1) === parent) {\n          nodeOps.insertBefore(parent, elm, ref$$1);\n        }\n      } else {\n        nodeOps.appendChild(parent, elm);\n      }\n    }\n  }\n\n  function createChildren (vnode, children, insertedVnodeQueue) {\n    if (Array.isArray(children)) {\n      if (process.env.NODE_ENV !== 'production') {\n        checkDuplicateKeys(children);\n      }\n      for (var i = 0; i < children.length; ++i) {\n        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true, children, i);\n      }\n    } else if (isPrimitive(vnode.text)) {\n      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(String(vnode.text)));\n    }\n  }\n\n  function isPatchable (vnode) {\n    while (vnode.componentInstance) {\n      vnode = vnode.componentInstance._vnode;\n    }\n    return isDef(vnode.tag)\n  }\n\n  function invokeCreateHooks (vnode, insertedVnodeQueue) {\n    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n      cbs.create[i$1](emptyNode, vnode);\n    }\n    i = vnode.data.hook; // Reuse variable\n    if (isDef(i)) {\n      if (isDef(i.create)) { i.create(emptyNode, vnode); }\n      if (isDef(i.insert)) { insertedVnodeQueue.push(vnode); }\n    }\n  }\n\n  // set scope id attribute for scoped CSS.\n  // this is implemented as a special case to avoid the overhead\n  // of going through the normal attribute patching process.\n  function setScope (vnode) {\n    var i;\n    if (isDef(i = vnode.fnScopeId)) {\n      nodeOps.setStyleScope(vnode.elm, i);\n    } else {\n      var ancestor = vnode;\n      while (ancestor) {\n        if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {\n          nodeOps.setStyleScope(vnode.elm, i);\n        }\n        ancestor = ancestor.parent;\n      }\n    }\n    // for slot content they should also get the scopeId from the host instance.\n    if (isDef(i = activeInstance) &&\n      i !== vnode.context &&\n      i !== vnode.fnContext &&\n      isDef(i = i.$options._scopeId)\n    ) {\n      nodeOps.setStyleScope(vnode.elm, i);\n    }\n  }\n\n  function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm, false, vnodes, startIdx);\n    }\n  }\n\n  function invokeDestroyHook (vnode) {\n    var i, j;\n    var data = vnode.data;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }\n      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }\n    }\n    if (isDef(i = vnode.children)) {\n      for (j = 0; j < vnode.children.length; ++j) {\n        invokeDestroyHook(vnode.children[j]);\n      }\n    }\n  }\n\n  function removeVnodes (parentElm, vnodes, startIdx, endIdx) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      var ch = vnodes[startIdx];\n      if (isDef(ch)) {\n        if (isDef(ch.tag)) {\n          removeAndInvokeRemoveHook(ch);\n          invokeDestroyHook(ch);\n        } else { // Text node\n          removeNode(ch.elm);\n        }\n      }\n    }\n  }\n\n  function removeAndInvokeRemoveHook (vnode, rm) {\n    if (isDef(rm) || isDef(vnode.data)) {\n      var i;\n      var listeners = cbs.remove.length + 1;\n      if (isDef(rm)) {\n        // we have a recursively passed down rm callback\n        // increase the listeners count\n        rm.listeners += listeners;\n      } else {\n        // directly removing\n        rm = createRmCb(vnode.elm, listeners);\n      }\n      // recursively invoke hooks on child component root node\n      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {\n        removeAndInvokeRemoveHook(i, rm);\n      }\n      for (i = 0; i < cbs.remove.length; ++i) {\n        cbs.remove[i](vnode, rm);\n      }\n      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {\n        i(vnode, rm);\n      } else {\n        rm();\n      }\n    } else {\n      removeNode(vnode.elm);\n    }\n  }\n\n  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {\n    var oldStartIdx = 0;\n    var newStartIdx = 0;\n    var oldEndIdx = oldCh.length - 1;\n    var oldStartVnode = oldCh[0];\n    var oldEndVnode = oldCh[oldEndIdx];\n    var newEndIdx = newCh.length - 1;\n    var newStartVnode = newCh[0];\n    var newEndVnode = newCh[newEndIdx];\n    var oldKeyToIdx, idxInOld, vnodeToMove, refElm;\n\n    // removeOnly is a special flag used only by <transition-group>\n    // to ensure removed elements stay in correct relative positions\n    // during leaving transitions\n    var canMove = !removeOnly;\n\n    if (process.env.NODE_ENV !== 'production') {\n      checkDuplicateKeys(newCh);\n    }\n\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n      if (isUndef(oldStartVnode)) {\n        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left\n      } else if (isUndef(oldEndVnode)) {\n        oldEndVnode = oldCh[--oldEndIdx];\n      } else if (sameVnode(oldStartVnode, newStartVnode)) {\n        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue, newCh, newStartIdx);\n        oldStartVnode = oldCh[++oldStartIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else if (sameVnode(oldEndVnode, newEndVnode)) {\n        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue, newCh, newEndIdx);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right\n        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue, newCh, newEndIdx);\n        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));\n        oldStartVnode = oldCh[++oldStartIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left\n        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue, newCh, newStartIdx);\n        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }\n        idxInOld = isDef(newStartVnode.key)\n          ? oldKeyToIdx[newStartVnode.key]\n          : findIdxInOld(newStartVnode, oldCh, oldStartIdx, oldEndIdx);\n        if (isUndef(idxInOld)) { // New element\n          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);\n        } else {\n          vnodeToMove = oldCh[idxInOld];\n          if (sameVnode(vnodeToMove, newStartVnode)) {\n            patchVnode(vnodeToMove, newStartVnode, insertedVnodeQueue, newCh, newStartIdx);\n            oldCh[idxInOld] = undefined;\n            canMove && nodeOps.insertBefore(parentElm, vnodeToMove.elm, oldStartVnode.elm);\n          } else {\n            // same key but different element. treat as new element\n            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);\n          }\n        }\n        newStartVnode = newCh[++newStartIdx];\n      }\n    }\n    if (oldStartIdx > oldEndIdx) {\n      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;\n      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n    } else if (newStartIdx > newEndIdx) {\n      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n    }\n  }\n\n  function checkDuplicateKeys (children) {\n    var seenKeys = {};\n    for (var i = 0; i < children.length; i++) {\n      var vnode = children[i];\n      var key = vnode.key;\n      if (isDef(key)) {\n        if (seenKeys[key]) {\n          warn(\n            (\"Duplicate keys detected: '\" + key + \"'. This may cause an update error.\"),\n            vnode.context\n          );\n        } else {\n          seenKeys[key] = true;\n        }\n      }\n    }\n  }\n\n  function findIdxInOld (node, oldCh, start, end) {\n    for (var i = start; i < end; i++) {\n      var c = oldCh[i];\n      if (isDef(c) && sameVnode(node, c)) { return i }\n    }\n  }\n\n  function patchVnode (\n    oldVnode,\n    vnode,\n    insertedVnodeQueue,\n    ownerArray,\n    index,\n    removeOnly\n  ) {\n    if (oldVnode === vnode) {\n      return\n    }\n\n    if (isDef(vnode.elm) && isDef(ownerArray)) {\n      // clone reused vnode\n      vnode = ownerArray[index] = cloneVNode(vnode);\n    }\n\n    var elm = vnode.elm = oldVnode.elm;\n\n    if (isTrue(oldVnode.isAsyncPlaceholder)) {\n      if (isDef(vnode.asyncFactory.resolved)) {\n        hydrate(oldVnode.elm, vnode, insertedVnodeQueue);\n      } else {\n        vnode.isAsyncPlaceholder = true;\n      }\n      return\n    }\n\n    // reuse element for static trees.\n    // note we only do this if the vnode is cloned -\n    // if the new node is not cloned it means the render functions have been\n    // reset by the hot-reload-api and we need to do a proper re-render.\n    if (isTrue(vnode.isStatic) &&\n      isTrue(oldVnode.isStatic) &&\n      vnode.key === oldVnode.key &&\n      (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))\n    ) {\n      vnode.componentInstance = oldVnode.componentInstance;\n      return\n    }\n\n    var i;\n    var data = vnode.data;\n    if (isDef(data) && isDef(i = data.hook) && isDef(i = i.prepatch)) {\n      i(oldVnode, vnode);\n    }\n\n    var oldCh = oldVnode.children;\n    var ch = vnode.children;\n    if (isDef(data) && isPatchable(vnode)) {\n      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }\n      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }\n    }\n    if (isUndef(vnode.text)) {\n      if (isDef(oldCh) && isDef(ch)) {\n        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }\n      } else if (isDef(ch)) {\n        if (process.env.NODE_ENV !== 'production') {\n          checkDuplicateKeys(ch);\n        }\n        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }\n        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n      } else if (isDef(oldCh)) {\n        removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n      } else if (isDef(oldVnode.text)) {\n        nodeOps.setTextContent(elm, '');\n      }\n    } else if (oldVnode.text !== vnode.text) {\n      nodeOps.setTextContent(elm, vnode.text);\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }\n    }\n  }\n\n  function invokeInsertHook (vnode, queue, initial) {\n    // delay insert hooks for component root nodes, invoke them after the\n    // element is really inserted\n    if (isTrue(initial) && isDef(vnode.parent)) {\n      vnode.parent.data.pendingInsert = queue;\n    } else {\n      for (var i = 0; i < queue.length; ++i) {\n        queue[i].data.hook.insert(queue[i]);\n      }\n    }\n  }\n\n  var hydrationBailed = false;\n  // list of modules that can skip create hook during hydration because they\n  // are already rendered on the client or has no need for initialization\n  // Note: style is excluded because it relies on initial clone for future\n  // deep updates (#7063).\n  var isRenderedModule = makeMap('attrs,class,staticClass,staticStyle,key');\n\n  // Note: this is a browser-only function so we can assume elms are DOM nodes.\n  function hydrate (elm, vnode, insertedVnodeQueue, inVPre) {\n    var i;\n    var tag = vnode.tag;\n    var data = vnode.data;\n    var children = vnode.children;\n    inVPre = inVPre || (data && data.pre);\n    vnode.elm = elm;\n\n    if (isTrue(vnode.isComment) && isDef(vnode.asyncFactory)) {\n      vnode.isAsyncPlaceholder = true;\n      return true\n    }\n    // assert node match\n    if (process.env.NODE_ENV !== 'production') {\n      if (!assertNodeMatch(elm, vnode, inVPre)) {\n        return false\n      }\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }\n      if (isDef(i = vnode.componentInstance)) {\n        // child component. it should have hydrated its own tree.\n        initComponent(vnode, insertedVnodeQueue);\n        return true\n      }\n    }\n    if (isDef(tag)) {\n      if (isDef(children)) {\n        // empty element, allow client to pick up and populate children\n        if (!elm.hasChildNodes()) {\n          createChildren(vnode, children, insertedVnodeQueue);\n        } else {\n          // v-html and domProps: innerHTML\n          if (isDef(i = data) && isDef(i = i.domProps) && isDef(i = i.innerHTML)) {\n            if (i !== elm.innerHTML) {\n              /* istanbul ignore if */\n              if (process.env.NODE_ENV !== 'production' &&\n                typeof console !== 'undefined' &&\n                !hydrationBailed\n              ) {\n                hydrationBailed = true;\n                console.warn('Parent: ', elm);\n                console.warn('server innerHTML: ', i);\n                console.warn('client innerHTML: ', elm.innerHTML);\n              }\n              return false\n            }\n          } else {\n            // iterate and compare children lists\n            var childrenMatch = true;\n            var childNode = elm.firstChild;\n            for (var i$1 = 0; i$1 < children.length; i$1++) {\n              if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue, inVPre)) {\n                childrenMatch = false;\n                break\n              }\n              childNode = childNode.nextSibling;\n            }\n            // if childNode is not null, it means the actual childNodes list is\n            // longer than the virtual children list.\n            if (!childrenMatch || childNode) {\n              /* istanbul ignore if */\n              if (process.env.NODE_ENV !== 'production' &&\n                typeof console !== 'undefined' &&\n                !hydrationBailed\n              ) {\n                hydrationBailed = true;\n                console.warn('Parent: ', elm);\n                console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);\n              }\n              return false\n            }\n          }\n        }\n      }\n      if (isDef(data)) {\n        var fullInvoke = false;\n        for (var key in data) {\n          if (!isRenderedModule(key)) {\n            fullInvoke = true;\n            invokeCreateHooks(vnode, insertedVnodeQueue);\n            break\n          }\n        }\n        if (!fullInvoke && data['class']) {\n          // ensure collecting deps for deep class bindings for future updates\n          traverse(data['class']);\n        }\n      }\n    } else if (elm.data !== vnode.text) {\n      elm.data = vnode.text;\n    }\n    return true\n  }\n\n  function assertNodeMatch (node, vnode, inVPre) {\n    if (isDef(vnode.tag)) {\n      return vnode.tag.indexOf('vue-component') === 0 || (\n        !isUnknownElement$$1(vnode, inVPre) &&\n        vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())\n      )\n    } else {\n      return node.nodeType === (vnode.isComment ? 8 : 3)\n    }\n  }\n\n  return function patch (oldVnode, vnode, hydrating, removeOnly) {\n    if (isUndef(vnode)) {\n      if (isDef(oldVnode)) { invokeDestroyHook(oldVnode); }\n      return\n    }\n\n    var isInitialPatch = false;\n    var insertedVnodeQueue = [];\n\n    if (isUndef(oldVnode)) {\n      // empty mount (likely as component), create new root element\n      isInitialPatch = true;\n      createElm(vnode, insertedVnodeQueue);\n    } else {\n      var isRealElement = isDef(oldVnode.nodeType);\n      if (!isRealElement && sameVnode(oldVnode, vnode)) {\n        // patch existing root node\n        patchVnode(oldVnode, vnode, insertedVnodeQueue, null, null, removeOnly);\n      } else {\n        if (isRealElement) {\n          // mounting to a real element\n          // check if this is server-rendered content and if we can perform\n          // a successful hydration.\n          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute(SSR_ATTR)) {\n            oldVnode.removeAttribute(SSR_ATTR);\n            hydrating = true;\n          }\n          if (isTrue(hydrating)) {\n            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {\n              invokeInsertHook(vnode, insertedVnodeQueue, true);\n              return oldVnode\n            } else if (process.env.NODE_ENV !== 'production') {\n              warn(\n                'The client-side rendered virtual DOM tree is not matching ' +\n                'server-rendered content. This is likely caused by incorrect ' +\n                'HTML markup, for example nesting block-level elements inside ' +\n                '<p>, or missing <tbody>. Bailing hydration and performing ' +\n                'full client-side render.'\n              );\n            }\n          }\n          // either not server-rendered, or hydration failed.\n          // create an empty node and replace it\n          oldVnode = emptyNodeAt(oldVnode);\n        }\n\n        // replacing existing element\n        var oldElm = oldVnode.elm;\n        var parentElm = nodeOps.parentNode(oldElm);\n\n        // create new node\n        createElm(\n          vnode,\n          insertedVnodeQueue,\n          // extremely rare edge case: do not insert if old element is in a\n          // leaving transition. Only happens when combining transition +\n          // keep-alive + HOCs. (#4590)\n          oldElm._leaveCb ? null : parentElm,\n          nodeOps.nextSibling(oldElm)\n        );\n\n        // update parent placeholder node element, recursively\n        if (isDef(vnode.parent)) {\n          var ancestor = vnode.parent;\n          var patchable = isPatchable(vnode);\n          while (ancestor) {\n            for (var i = 0; i < cbs.destroy.length; ++i) {\n              cbs.destroy[i](ancestor);\n            }\n            ancestor.elm = vnode.elm;\n            if (patchable) {\n              for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n                cbs.create[i$1](emptyNode, ancestor);\n              }\n              // #6513\n              // invoke insert hooks that may have been merged by create hooks.\n              // e.g. for directives that uses the \"inserted\" hook.\n              var insert = ancestor.data.hook.insert;\n              if (insert.merged) {\n                // start at index 1 to avoid re-invoking component mounted hook\n                for (var i$2 = 1; i$2 < insert.fns.length; i$2++) {\n                  insert.fns[i$2]();\n                }\n              }\n            } else {\n              registerRef(ancestor);\n            }\n            ancestor = ancestor.parent;\n          }\n        }\n\n        // destroy old node\n        if (isDef(parentElm)) {\n          removeVnodes(parentElm, [oldVnode], 0, 0);\n        } else if (isDef(oldVnode.tag)) {\n          invokeDestroyHook(oldVnode);\n        }\n      }\n    }\n\n    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);\n    return vnode.elm\n  }\n}\n\n/*  */\n\nvar directives = {\n  create: updateDirectives,\n  update: updateDirectives,\n  destroy: function unbindDirectives (vnode) {\n    updateDirectives(vnode, emptyNode);\n  }\n};\n\nfunction updateDirectives (oldVnode, vnode) {\n  if (oldVnode.data.directives || vnode.data.directives) {\n    _update(oldVnode, vnode);\n  }\n}\n\nfunction _update (oldVnode, vnode) {\n  var isCreate = oldVnode === emptyNode;\n  var isDestroy = vnode === emptyNode;\n  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);\n  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);\n\n  var dirsWithInsert = [];\n  var dirsWithPostpatch = [];\n\n  var key, oldDir, dir;\n  for (key in newDirs) {\n    oldDir = oldDirs[key];\n    dir = newDirs[key];\n    if (!oldDir) {\n      // new directive, bind\n      callHook$1(dir, 'bind', vnode, oldVnode);\n      if (dir.def && dir.def.inserted) {\n        dirsWithInsert.push(dir);\n      }\n    } else {\n      // existing directive, update\n      dir.oldValue = oldDir.value;\n      dir.oldArg = oldDir.arg;\n      callHook$1(dir, 'update', vnode, oldVnode);\n      if (dir.def && dir.def.componentUpdated) {\n        dirsWithPostpatch.push(dir);\n      }\n    }\n  }\n\n  if (dirsWithInsert.length) {\n    var callInsert = function () {\n      for (var i = 0; i < dirsWithInsert.length; i++) {\n        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);\n      }\n    };\n    if (isCreate) {\n      mergeVNodeHook(vnode, 'insert', callInsert);\n    } else {\n      callInsert();\n    }\n  }\n\n  if (dirsWithPostpatch.length) {\n    mergeVNodeHook(vnode, 'postpatch', function () {\n      for (var i = 0; i < dirsWithPostpatch.length; i++) {\n        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);\n      }\n    });\n  }\n\n  if (!isCreate) {\n    for (key in oldDirs) {\n      if (!newDirs[key]) {\n        // no longer present, unbind\n        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);\n      }\n    }\n  }\n}\n\nvar emptyModifiers = Object.create(null);\n\nfunction normalizeDirectives$1 (\n  dirs,\n  vm\n) {\n  var res = Object.create(null);\n  if (!dirs) {\n    // $flow-disable-line\n    return res\n  }\n  var i, dir;\n  for (i = 0; i < dirs.length; i++) {\n    dir = dirs[i];\n    if (!dir.modifiers) {\n      // $flow-disable-line\n      dir.modifiers = emptyModifiers;\n    }\n    res[getRawDirName(dir)] = dir;\n    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);\n  }\n  // $flow-disable-line\n  return res\n}\n\nfunction getRawDirName (dir) {\n  return dir.rawName || ((dir.name) + \".\" + (Object.keys(dir.modifiers || {}).join('.')))\n}\n\nfunction callHook$1 (dir, hook, vnode, oldVnode, isDestroy) {\n  var fn = dir.def && dir.def[hook];\n  if (fn) {\n    try {\n      fn(vnode.elm, dir, vnode, oldVnode, isDestroy);\n    } catch (e) {\n      handleError(e, vnode.context, (\"directive \" + (dir.name) + \" \" + hook + \" hook\"));\n    }\n  }\n}\n\nvar baseModules = [\n  ref,\n  directives\n];\n\n/*  */\n\nfunction updateAttrs (oldVnode, vnode) {\n  var opts = vnode.componentOptions;\n  if (isDef(opts) && opts.Ctor.options.inheritAttrs === false) {\n    return\n  }\n  if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {\n    return\n  }\n  var key, cur, old;\n  var elm = vnode.elm;\n  var oldAttrs = oldVnode.data.attrs || {};\n  var attrs = vnode.data.attrs || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(attrs.__ob__)) {\n    attrs = vnode.data.attrs = extend({}, attrs);\n  }\n\n  for (key in attrs) {\n    cur = attrs[key];\n    old = oldAttrs[key];\n    if (old !== cur) {\n      setAttr(elm, key, cur);\n    }\n  }\n  // #4391: in IE9, setting type can reset value for input[type=radio]\n  // #6666: IE/Edge forces progress value down to 1 before setting a max\n  /* istanbul ignore if */\n  if ((isIE || isEdge) && attrs.value !== oldAttrs.value) {\n    setAttr(elm, 'value', attrs.value);\n  }\n  for (key in oldAttrs) {\n    if (isUndef(attrs[key])) {\n      if (isXlink(key)) {\n        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));\n      } else if (!isEnumeratedAttr(key)) {\n        elm.removeAttribute(key);\n      }\n    }\n  }\n}\n\nfunction setAttr (el, key, value) {\n  if (el.tagName.indexOf('-') > -1) {\n    baseSetAttr(el, key, value);\n  } else if (isBooleanAttr(key)) {\n    // set attribute for blank value\n    // e.g. <option disabled>Select one</option>\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      // technically allowfullscreen is a boolean attribute for <iframe>,\n      // but Flash expects a value of \"true\" when used on <embed> tag\n      value = key === 'allowfullscreen' && el.tagName === 'EMBED'\n        ? 'true'\n        : key;\n      el.setAttribute(key, value);\n    }\n  } else if (isEnumeratedAttr(key)) {\n    el.setAttribute(key, convertEnumeratedValue(key, value));\n  } else if (isXlink(key)) {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttributeNS(xlinkNS, getXlinkProp(key));\n    } else {\n      el.setAttributeNS(xlinkNS, key, value);\n    }\n  } else {\n    baseSetAttr(el, key, value);\n  }\n}\n\nfunction baseSetAttr (el, key, value) {\n  if (isFalsyAttrValue(value)) {\n    el.removeAttribute(key);\n  } else {\n    // #7138: IE10 & 11 fires input event when setting placeholder on\n    // <textarea>... block the first input event and remove the blocker\n    // immediately.\n    /* istanbul ignore if */\n    if (\n      isIE && !isIE9 &&\n      el.tagName === 'TEXTAREA' &&\n      key === 'placeholder' && value !== '' && !el.__ieph\n    ) {\n      var blocker = function (e) {\n        e.stopImmediatePropagation();\n        el.removeEventListener('input', blocker);\n      };\n      el.addEventListener('input', blocker);\n      // $flow-disable-line\n      el.__ieph = true; /* IE placeholder patched */\n    }\n    el.setAttribute(key, value);\n  }\n}\n\nvar attrs = {\n  create: updateAttrs,\n  update: updateAttrs\n};\n\n/*  */\n\nfunction updateClass (oldVnode, vnode) {\n  var el = vnode.elm;\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n  if (\n    isUndef(data.staticClass) &&\n    isUndef(data.class) && (\n      isUndef(oldData) || (\n        isUndef(oldData.staticClass) &&\n        isUndef(oldData.class)\n      )\n    )\n  ) {\n    return\n  }\n\n  var cls = genClassForVnode(vnode);\n\n  // handle transition classes\n  var transitionClass = el._transitionClasses;\n  if (isDef(transitionClass)) {\n    cls = concat(cls, stringifyClass(transitionClass));\n  }\n\n  // set the class\n  if (cls !== el._prevClass) {\n    el.setAttribute('class', cls);\n    el._prevClass = cls;\n  }\n}\n\nvar klass = {\n  create: updateClass,\n  update: updateClass\n};\n\n/*  */\n\n/*  */\n\n/*  */\n\n/*  */\n\n// in some cases, the event used has to be determined at runtime\n// so we used some reserved tokens during compile.\nvar RANGE_TOKEN = '__r';\nvar CHECKBOX_RADIO_TOKEN = '__c';\n\n/*  */\n\n// normalize v-model event tokens that can only be determined at runtime.\n// it's important to place the event as the first in the array because\n// the whole point is ensuring the v-model callback gets called before\n// user-attached handlers.\nfunction normalizeEvents (on) {\n  /* istanbul ignore if */\n  if (isDef(on[RANGE_TOKEN])) {\n    // IE input[type=range] only supports `change` event\n    var event = isIE ? 'change' : 'input';\n    on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);\n    delete on[RANGE_TOKEN];\n  }\n  // This was originally intended to fix #4521 but no longer necessary\n  // after 2.5. Keeping it for backwards compat with generated code from < 2.4\n  /* istanbul ignore if */\n  if (isDef(on[CHECKBOX_RADIO_TOKEN])) {\n    on.change = [].concat(on[CHECKBOX_RADIO_TOKEN], on.change || []);\n    delete on[CHECKBOX_RADIO_TOKEN];\n  }\n}\n\nvar target$1;\n\nfunction createOnceHandler$1 (event, handler, capture) {\n  var _target = target$1; // save current target element in closure\n  return function onceHandler () {\n    var res = handler.apply(null, arguments);\n    if (res !== null) {\n      remove$2(event, onceHandler, capture, _target);\n    }\n  }\n}\n\n// #9446: Firefox <= 53 (in particular, ESR 52) has incorrect Event.timeStamp\n// implementation and does not fire microtasks in between event propagation, so\n// safe to exclude.\nvar useMicrotaskFix = isUsingMicroTask && !(isFF && Number(isFF[1]) <= 53);\n\nfunction add$1 (\n  name,\n  handler,\n  capture,\n  passive\n) {\n  // async edge case #6566: inner click event triggers patch, event handler\n  // attached to outer element during patch, and triggered again. This\n  // happens because browsers fire microtask ticks between event propagation.\n  // the solution is simple: we save the timestamp when a handler is attached,\n  // and the handler would only fire if the event passed to it was fired\n  // AFTER it was attached.\n  if (useMicrotaskFix) {\n    var attachedTimestamp = currentFlushTimestamp;\n    var original = handler;\n    handler = original._wrapper = function (e) {\n      if (\n        // no bubbling, should always fire.\n        // this is just a safety net in case event.timeStamp is unreliable in\n        // certain weird environments...\n        e.target === e.currentTarget ||\n        // event is fired after handler attachment\n        e.timeStamp >= attachedTimestamp ||\n        // bail for environments that have buggy event.timeStamp implementations\n        // #9462 iOS 9 bug: event.timeStamp is 0 after history.pushState\n        // #9681 QtWebEngine event.timeStamp is negative value\n        e.timeStamp <= 0 ||\n        // #9448 bail if event is fired in another document in a multi-page\n        // electron/nw.js app, since event.timeStamp will be using a different\n        // starting reference\n        e.target.ownerDocument !== document\n      ) {\n        return original.apply(this, arguments)\n      }\n    };\n  }\n  target$1.addEventListener(\n    name,\n    handler,\n    supportsPassive\n      ? { capture: capture, passive: passive }\n      : capture\n  );\n}\n\nfunction remove$2 (\n  name,\n  handler,\n  capture,\n  _target\n) {\n  (_target || target$1).removeEventListener(\n    name,\n    handler._wrapper || handler,\n    capture\n  );\n}\n\nfunction updateDOMListeners (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.on) && isUndef(vnode.data.on)) {\n    return\n  }\n  var on = vnode.data.on || {};\n  var oldOn = oldVnode.data.on || {};\n  target$1 = vnode.elm;\n  normalizeEvents(on);\n  updateListeners(on, oldOn, add$1, remove$2, createOnceHandler$1, vnode.context);\n  target$1 = undefined;\n}\n\nvar events = {\n  create: updateDOMListeners,\n  update: updateDOMListeners\n};\n\n/*  */\n\nvar svgContainer;\n\nfunction updateDOMProps (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.domProps) && isUndef(vnode.data.domProps)) {\n    return\n  }\n  var key, cur;\n  var elm = vnode.elm;\n  var oldProps = oldVnode.data.domProps || {};\n  var props = vnode.data.domProps || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(props.__ob__)) {\n    props = vnode.data.domProps = extend({}, props);\n  }\n\n  for (key in oldProps) {\n    if (!(key in props)) {\n      elm[key] = '';\n    }\n  }\n\n  for (key in props) {\n    cur = props[key];\n    // ignore children if the node has textContent or innerHTML,\n    // as these will throw away existing DOM nodes and cause removal errors\n    // on subsequent patches (#3360)\n    if (key === 'textContent' || key === 'innerHTML') {\n      if (vnode.children) { vnode.children.length = 0; }\n      if (cur === oldProps[key]) { continue }\n      // #6601 work around Chrome version <= 55 bug where single textNode\n      // replaced by innerHTML/textContent retains its parentNode property\n      if (elm.childNodes.length === 1) {\n        elm.removeChild(elm.childNodes[0]);\n      }\n    }\n\n    if (key === 'value' && elm.tagName !== 'PROGRESS') {\n      // store value as _value as well since\n      // non-string values will be stringified\n      elm._value = cur;\n      // avoid resetting cursor position when value is the same\n      var strCur = isUndef(cur) ? '' : String(cur);\n      if (shouldUpdateValue(elm, strCur)) {\n        elm.value = strCur;\n      }\n    } else if (key === 'innerHTML' && isSVG(elm.tagName) && isUndef(elm.innerHTML)) {\n      // IE doesn't support innerHTML for SVG elements\n      svgContainer = svgContainer || document.createElement('div');\n      svgContainer.innerHTML = \"<svg>\" + cur + \"</svg>\";\n      var svg = svgContainer.firstChild;\n      while (elm.firstChild) {\n        elm.removeChild(elm.firstChild);\n      }\n      while (svg.firstChild) {\n        elm.appendChild(svg.firstChild);\n      }\n    } else if (\n      // skip the update if old and new VDOM state is the same.\n      // `value` is handled separately because the DOM value may be temporarily\n      // out of sync with VDOM state due to focus, composition and modifiers.\n      // This  #4521 by skipping the unnecesarry `checked` update.\n      cur !== oldProps[key]\n    ) {\n      // some property updates can throw\n      // e.g. `value` on <progress> w/ non-finite value\n      try {\n        elm[key] = cur;\n      } catch (e) {}\n    }\n  }\n}\n\n// check platforms/web/util/attrs.js acceptValue\n\n\nfunction shouldUpdateValue (elm, checkVal) {\n  return (!elm.composing && (\n    elm.tagName === 'OPTION' ||\n    isNotInFocusAndDirty(elm, checkVal) ||\n    isDirtyWithModifiers(elm, checkVal)\n  ))\n}\n\nfunction isNotInFocusAndDirty (elm, checkVal) {\n  // return true when textbox (.number and .trim) loses focus and its value is\n  // not equal to the updated value\n  var notInFocus = true;\n  // #6157\n  // work around IE bug when accessing document.activeElement in an iframe\n  try { notInFocus = document.activeElement !== elm; } catch (e) {}\n  return notInFocus && elm.value !== checkVal\n}\n\nfunction isDirtyWithModifiers (elm, newVal) {\n  var value = elm.value;\n  var modifiers = elm._vModifiers; // injected by v-model runtime\n  if (isDef(modifiers)) {\n    if (modifiers.number) {\n      return toNumber(value) !== toNumber(newVal)\n    }\n    if (modifiers.trim) {\n      return value.trim() !== newVal.trim()\n    }\n  }\n  return value !== newVal\n}\n\nvar domProps = {\n  create: updateDOMProps,\n  update: updateDOMProps\n};\n\n/*  */\n\nvar parseStyleText = cached(function (cssText) {\n  var res = {};\n  var listDelimiter = /;(?![^(]*\\))/g;\n  var propertyDelimiter = /:(.+)/;\n  cssText.split(listDelimiter).forEach(function (item) {\n    if (item) {\n      var tmp = item.split(propertyDelimiter);\n      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return res\n});\n\n// merge static and dynamic style data on the same vnode\nfunction normalizeStyleData (data) {\n  var style = normalizeStyleBinding(data.style);\n  // static style is pre-processed into an object during compilation\n  // and is always a fresh object, so it's safe to merge into it\n  return data.staticStyle\n    ? extend(data.staticStyle, style)\n    : style\n}\n\n// normalize possible array / string values into Object\nfunction normalizeStyleBinding (bindingStyle) {\n  if (Array.isArray(bindingStyle)) {\n    return toObject(bindingStyle)\n  }\n  if (typeof bindingStyle === 'string') {\n    return parseStyleText(bindingStyle)\n  }\n  return bindingStyle\n}\n\n/**\n * parent component style should be after child's\n * so that parent component's style could override it\n */\nfunction getStyle (vnode, checkChild) {\n  var res = {};\n  var styleData;\n\n  if (checkChild) {\n    var childNode = vnode;\n    while (childNode.componentInstance) {\n      childNode = childNode.componentInstance._vnode;\n      if (\n        childNode && childNode.data &&\n        (styleData = normalizeStyleData(childNode.data))\n      ) {\n        extend(res, styleData);\n      }\n    }\n  }\n\n  if ((styleData = normalizeStyleData(vnode.data))) {\n    extend(res, styleData);\n  }\n\n  var parentNode = vnode;\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {\n      extend(res, styleData);\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar cssVarRE = /^--/;\nvar importantRE = /\\s*!important$/;\nvar setProp = function (el, name, val) {\n  /* istanbul ignore if */\n  if (cssVarRE.test(name)) {\n    el.style.setProperty(name, val);\n  } else if (importantRE.test(val)) {\n    el.style.setProperty(hyphenate(name), val.replace(importantRE, ''), 'important');\n  } else {\n    var normalizedName = normalize(name);\n    if (Array.isArray(val)) {\n      // Support values array created by autoprefixer, e.g.\n      // {display: [\"-webkit-box\", \"-ms-flexbox\", \"flex\"]}\n      // Set them one by one, and the browser will only set those it can recognize\n      for (var i = 0, len = val.length; i < len; i++) {\n        el.style[normalizedName] = val[i];\n      }\n    } else {\n      el.style[normalizedName] = val;\n    }\n  }\n};\n\nvar vendorNames = ['Webkit', 'Moz', 'ms'];\n\nvar emptyStyle;\nvar normalize = cached(function (prop) {\n  emptyStyle = emptyStyle || document.createElement('div').style;\n  prop = camelize(prop);\n  if (prop !== 'filter' && (prop in emptyStyle)) {\n    return prop\n  }\n  var capName = prop.charAt(0).toUpperCase() + prop.slice(1);\n  for (var i = 0; i < vendorNames.length; i++) {\n    var name = vendorNames[i] + capName;\n    if (name in emptyStyle) {\n      return name\n    }\n  }\n});\n\nfunction updateStyle (oldVnode, vnode) {\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n\n  if (isUndef(data.staticStyle) && isUndef(data.style) &&\n    isUndef(oldData.staticStyle) && isUndef(oldData.style)\n  ) {\n    return\n  }\n\n  var cur, name;\n  var el = vnode.elm;\n  var oldStaticStyle = oldData.staticStyle;\n  var oldStyleBinding = oldData.normalizedStyle || oldData.style || {};\n\n  // if static style exists, stylebinding already merged into it when doing normalizeStyleData\n  var oldStyle = oldStaticStyle || oldStyleBinding;\n\n  var style = normalizeStyleBinding(vnode.data.style) || {};\n\n  // store normalized style under a different key for next diff\n  // make sure to clone it if it's reactive, since the user likely wants\n  // to mutate it.\n  vnode.data.normalizedStyle = isDef(style.__ob__)\n    ? extend({}, style)\n    : style;\n\n  var newStyle = getStyle(vnode, true);\n\n  for (name in oldStyle) {\n    if (isUndef(newStyle[name])) {\n      setProp(el, name, '');\n    }\n  }\n  for (name in newStyle) {\n    cur = newStyle[name];\n    if (cur !== oldStyle[name]) {\n      // ie9 setting to null has no effect, must use empty string\n      setProp(el, name, cur == null ? '' : cur);\n    }\n  }\n}\n\nvar style = {\n  create: updateStyle,\n  update: updateStyle\n};\n\n/*  */\n\nvar whitespaceRE = /\\s+/;\n\n/**\n * Add class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction addClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(whitespaceRE).forEach(function (c) { return el.classList.add(c); });\n    } else {\n      el.classList.add(cls);\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      el.setAttribute('class', (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction removeClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(whitespaceRE).forEach(function (c) { return el.classList.remove(c); });\n    } else {\n      el.classList.remove(cls);\n    }\n    if (!el.classList.length) {\n      el.removeAttribute('class');\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    cur = cur.trim();\n    if (cur) {\n      el.setAttribute('class', cur);\n    } else {\n      el.removeAttribute('class');\n    }\n  }\n}\n\n/*  */\n\nfunction resolveTransition (def$$1) {\n  if (!def$$1) {\n    return\n  }\n  /* istanbul ignore else */\n  if (typeof def$$1 === 'object') {\n    var res = {};\n    if (def$$1.css !== false) {\n      extend(res, autoCssTransition(def$$1.name || 'v'));\n    }\n    extend(res, def$$1);\n    return res\n  } else if (typeof def$$1 === 'string') {\n    return autoCssTransition(def$$1)\n  }\n}\n\nvar autoCssTransition = cached(function (name) {\n  return {\n    enterClass: (name + \"-enter\"),\n    enterToClass: (name + \"-enter-to\"),\n    enterActiveClass: (name + \"-enter-active\"),\n    leaveClass: (name + \"-leave\"),\n    leaveToClass: (name + \"-leave-to\"),\n    leaveActiveClass: (name + \"-leave-active\")\n  }\n});\n\nvar hasTransition = inBrowser && !isIE9;\nvar TRANSITION = 'transition';\nvar ANIMATION = 'animation';\n\n// Transition property/event sniffing\nvar transitionProp = 'transition';\nvar transitionEndEvent = 'transitionend';\nvar animationProp = 'animation';\nvar animationEndEvent = 'animationend';\nif (hasTransition) {\n  /* istanbul ignore if */\n  if (window.ontransitionend === undefined &&\n    window.onwebkittransitionend !== undefined\n  ) {\n    transitionProp = 'WebkitTransition';\n    transitionEndEvent = 'webkitTransitionEnd';\n  }\n  if (window.onanimationend === undefined &&\n    window.onwebkitanimationend !== undefined\n  ) {\n    animationProp = 'WebkitAnimation';\n    animationEndEvent = 'webkitAnimationEnd';\n  }\n}\n\n// binding to window is necessary to make hot reload work in IE in strict mode\nvar raf = inBrowser\n  ? window.requestAnimationFrame\n    ? window.requestAnimationFrame.bind(window)\n    : setTimeout\n  : /* istanbul ignore next */ function (fn) { return fn(); };\n\nfunction nextFrame (fn) {\n  raf(function () {\n    raf(fn);\n  });\n}\n\nfunction addTransitionClass (el, cls) {\n  var transitionClasses = el._transitionClasses || (el._transitionClasses = []);\n  if (transitionClasses.indexOf(cls) < 0) {\n    transitionClasses.push(cls);\n    addClass(el, cls);\n  }\n}\n\nfunction removeTransitionClass (el, cls) {\n  if (el._transitionClasses) {\n    remove(el._transitionClasses, cls);\n  }\n  removeClass(el, cls);\n}\n\nfunction whenTransitionEnds (\n  el,\n  expectedType,\n  cb\n) {\n  var ref = getTransitionInfo(el, expectedType);\n  var type = ref.type;\n  var timeout = ref.timeout;\n  var propCount = ref.propCount;\n  if (!type) { return cb() }\n  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;\n  var ended = 0;\n  var end = function () {\n    el.removeEventListener(event, onEnd);\n    cb();\n  };\n  var onEnd = function (e) {\n    if (e.target === el) {\n      if (++ended >= propCount) {\n        end();\n      }\n    }\n  };\n  setTimeout(function () {\n    if (ended < propCount) {\n      end();\n    }\n  }, timeout + 1);\n  el.addEventListener(event, onEnd);\n}\n\nvar transformRE = /\\b(transform|all)(,|$)/;\n\nfunction getTransitionInfo (el, expectedType) {\n  var styles = window.getComputedStyle(el);\n  // JSDOM may return undefined for transition properties\n  var transitionDelays = (styles[transitionProp + 'Delay'] || '').split(', ');\n  var transitionDurations = (styles[transitionProp + 'Duration'] || '').split(', ');\n  var transitionTimeout = getTimeout(transitionDelays, transitionDurations);\n  var animationDelays = (styles[animationProp + 'Delay'] || '').split(', ');\n  var animationDurations = (styles[animationProp + 'Duration'] || '').split(', ');\n  var animationTimeout = getTimeout(animationDelays, animationDurations);\n\n  var type;\n  var timeout = 0;\n  var propCount = 0;\n  /* istanbul ignore if */\n  if (expectedType === TRANSITION) {\n    if (transitionTimeout > 0) {\n      type = TRANSITION;\n      timeout = transitionTimeout;\n      propCount = transitionDurations.length;\n    }\n  } else if (expectedType === ANIMATION) {\n    if (animationTimeout > 0) {\n      type = ANIMATION;\n      timeout = animationTimeout;\n      propCount = animationDurations.length;\n    }\n  } else {\n    timeout = Math.max(transitionTimeout, animationTimeout);\n    type = timeout > 0\n      ? transitionTimeout > animationTimeout\n        ? TRANSITION\n        : ANIMATION\n      : null;\n    propCount = type\n      ? type === TRANSITION\n        ? transitionDurations.length\n        : animationDurations.length\n      : 0;\n  }\n  var hasTransform =\n    type === TRANSITION &&\n    transformRE.test(styles[transitionProp + 'Property']);\n  return {\n    type: type,\n    timeout: timeout,\n    propCount: propCount,\n    hasTransform: hasTransform\n  }\n}\n\nfunction getTimeout (delays, durations) {\n  /* istanbul ignore next */\n  while (delays.length < durations.length) {\n    delays = delays.concat(delays);\n  }\n\n  return Math.max.apply(null, durations.map(function (d, i) {\n    return toMs(d) + toMs(delays[i])\n  }))\n}\n\n// Old versions of Chromium (below 61.0.3163.100) formats floating pointer numbers\n// in a locale-dependent way, using a comma instead of a dot.\n// If comma is not replaced with a dot, the input will be rounded down (i.e. acting\n// as a floor function) causing unexpected behaviors\nfunction toMs (s) {\n  return Number(s.slice(0, -1).replace(',', '.')) * 1000\n}\n\n/*  */\n\nfunction enter (vnode, toggleDisplay) {\n  var el = vnode.elm;\n\n  // call leave callback now\n  if (isDef(el._leaveCb)) {\n    el._leaveCb.cancelled = true;\n    el._leaveCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data)) {\n    return\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._enterCb) || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var enterClass = data.enterClass;\n  var enterToClass = data.enterToClass;\n  var enterActiveClass = data.enterActiveClass;\n  var appearClass = data.appearClass;\n  var appearToClass = data.appearToClass;\n  var appearActiveClass = data.appearActiveClass;\n  var beforeEnter = data.beforeEnter;\n  var enter = data.enter;\n  var afterEnter = data.afterEnter;\n  var enterCancelled = data.enterCancelled;\n  var beforeAppear = data.beforeAppear;\n  var appear = data.appear;\n  var afterAppear = data.afterAppear;\n  var appearCancelled = data.appearCancelled;\n  var duration = data.duration;\n\n  // activeInstance will always be the <transition> component managing this\n  // transition. One edge case to check is when the <transition> is placed\n  // as the root node of a child component. In that case we need to check\n  // <transition>'s parent for appear check.\n  var context = activeInstance;\n  var transitionNode = activeInstance.$vnode;\n  while (transitionNode && transitionNode.parent) {\n    context = transitionNode.context;\n    transitionNode = transitionNode.parent;\n  }\n\n  var isAppear = !context._isMounted || !vnode.isRootInsert;\n\n  if (isAppear && !appear && appear !== '') {\n    return\n  }\n\n  var startClass = isAppear && appearClass\n    ? appearClass\n    : enterClass;\n  var activeClass = isAppear && appearActiveClass\n    ? appearActiveClass\n    : enterActiveClass;\n  var toClass = isAppear && appearToClass\n    ? appearToClass\n    : enterToClass;\n\n  var beforeEnterHook = isAppear\n    ? (beforeAppear || beforeEnter)\n    : beforeEnter;\n  var enterHook = isAppear\n    ? (typeof appear === 'function' ? appear : enter)\n    : enter;\n  var afterEnterHook = isAppear\n    ? (afterAppear || afterEnter)\n    : afterEnter;\n  var enterCancelledHook = isAppear\n    ? (appearCancelled || enterCancelled)\n    : enterCancelled;\n\n  var explicitEnterDuration = toNumber(\n    isObject(duration)\n      ? duration.enter\n      : duration\n  );\n\n  if (process.env.NODE_ENV !== 'production' && explicitEnterDuration != null) {\n    checkDuration(explicitEnterDuration, 'enter', vnode);\n  }\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(enterHook);\n\n  var cb = el._enterCb = once(function () {\n    if (expectsCSS) {\n      removeTransitionClass(el, toClass);\n      removeTransitionClass(el, activeClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, startClass);\n      }\n      enterCancelledHook && enterCancelledHook(el);\n    } else {\n      afterEnterHook && afterEnterHook(el);\n    }\n    el._enterCb = null;\n  });\n\n  if (!vnode.data.show) {\n    // remove pending leave element on enter by injecting an insert hook\n    mergeVNodeHook(vnode, 'insert', function () {\n      var parent = el.parentNode;\n      var pendingNode = parent && parent._pending && parent._pending[vnode.key];\n      if (pendingNode &&\n        pendingNode.tag === vnode.tag &&\n        pendingNode.elm._leaveCb\n      ) {\n        pendingNode.elm._leaveCb();\n      }\n      enterHook && enterHook(el, cb);\n    });\n  }\n\n  // start enter transition\n  beforeEnterHook && beforeEnterHook(el);\n  if (expectsCSS) {\n    addTransitionClass(el, startClass);\n    addTransitionClass(el, activeClass);\n    nextFrame(function () {\n      removeTransitionClass(el, startClass);\n      if (!cb.cancelled) {\n        addTransitionClass(el, toClass);\n        if (!userWantsControl) {\n          if (isValidDuration(explicitEnterDuration)) {\n            setTimeout(cb, explicitEnterDuration);\n          } else {\n            whenTransitionEnds(el, type, cb);\n          }\n        }\n      }\n    });\n  }\n\n  if (vnode.data.show) {\n    toggleDisplay && toggleDisplay();\n    enterHook && enterHook(el, cb);\n  }\n\n  if (!expectsCSS && !userWantsControl) {\n    cb();\n  }\n}\n\nfunction leave (vnode, rm) {\n  var el = vnode.elm;\n\n  // call enter callback now\n  if (isDef(el._enterCb)) {\n    el._enterCb.cancelled = true;\n    el._enterCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data) || el.nodeType !== 1) {\n    return rm()\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._leaveCb)) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var leaveClass = data.leaveClass;\n  var leaveToClass = data.leaveToClass;\n  var leaveActiveClass = data.leaveActiveClass;\n  var beforeLeave = data.beforeLeave;\n  var leave = data.leave;\n  var afterLeave = data.afterLeave;\n  var leaveCancelled = data.leaveCancelled;\n  var delayLeave = data.delayLeave;\n  var duration = data.duration;\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(leave);\n\n  var explicitLeaveDuration = toNumber(\n    isObject(duration)\n      ? duration.leave\n      : duration\n  );\n\n  if (process.env.NODE_ENV !== 'production' && isDef(explicitLeaveDuration)) {\n    checkDuration(explicitLeaveDuration, 'leave', vnode);\n  }\n\n  var cb = el._leaveCb = once(function () {\n    if (el.parentNode && el.parentNode._pending) {\n      el.parentNode._pending[vnode.key] = null;\n    }\n    if (expectsCSS) {\n      removeTransitionClass(el, leaveToClass);\n      removeTransitionClass(el, leaveActiveClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, leaveClass);\n      }\n      leaveCancelled && leaveCancelled(el);\n    } else {\n      rm();\n      afterLeave && afterLeave(el);\n    }\n    el._leaveCb = null;\n  });\n\n  if (delayLeave) {\n    delayLeave(performLeave);\n  } else {\n    performLeave();\n  }\n\n  function performLeave () {\n    // the delayed leave may have already been cancelled\n    if (cb.cancelled) {\n      return\n    }\n    // record leaving element\n    if (!vnode.data.show && el.parentNode) {\n      (el.parentNode._pending || (el.parentNode._pending = {}))[(vnode.key)] = vnode;\n    }\n    beforeLeave && beforeLeave(el);\n    if (expectsCSS) {\n      addTransitionClass(el, leaveClass);\n      addTransitionClass(el, leaveActiveClass);\n      nextFrame(function () {\n        removeTransitionClass(el, leaveClass);\n        if (!cb.cancelled) {\n          addTransitionClass(el, leaveToClass);\n          if (!userWantsControl) {\n            if (isValidDuration(explicitLeaveDuration)) {\n              setTimeout(cb, explicitLeaveDuration);\n            } else {\n              whenTransitionEnds(el, type, cb);\n            }\n          }\n        }\n      });\n    }\n    leave && leave(el, cb);\n    if (!expectsCSS && !userWantsControl) {\n      cb();\n    }\n  }\n}\n\n// only used in dev mode\nfunction checkDuration (val, name, vnode) {\n  if (typeof val !== 'number') {\n    warn(\n      \"<transition> explicit \" + name + \" duration is not a valid number - \" +\n      \"got \" + (JSON.stringify(val)) + \".\",\n      vnode.context\n    );\n  } else if (isNaN(val)) {\n    warn(\n      \"<transition> explicit \" + name + \" duration is NaN - \" +\n      'the duration expression might be incorrect.',\n      vnode.context\n    );\n  }\n}\n\nfunction isValidDuration (val) {\n  return typeof val === 'number' && !isNaN(val)\n}\n\n/**\n * Normalize a transition hook's argument length. The hook may be:\n * - a merged hook (invoker) with the original in .fns\n * - a wrapped component method (check ._length)\n * - a plain function (.length)\n */\nfunction getHookArgumentsLength (fn) {\n  if (isUndef(fn)) {\n    return false\n  }\n  var invokerFns = fn.fns;\n  if (isDef(invokerFns)) {\n    // invoker\n    return getHookArgumentsLength(\n      Array.isArray(invokerFns)\n        ? invokerFns[0]\n        : invokerFns\n    )\n  } else {\n    return (fn._length || fn.length) > 1\n  }\n}\n\nfunction _enter (_, vnode) {\n  if (vnode.data.show !== true) {\n    enter(vnode);\n  }\n}\n\nvar transition = inBrowser ? {\n  create: _enter,\n  activate: _enter,\n  remove: function remove$$1 (vnode, rm) {\n    /* istanbul ignore else */\n    if (vnode.data.show !== true) {\n      leave(vnode, rm);\n    } else {\n      rm();\n    }\n  }\n} : {};\n\nvar platformModules = [\n  attrs,\n  klass,\n  events,\n  domProps,\n  style,\n  transition\n];\n\n/*  */\n\n// the directive module should be applied last, after all\n// built-in modules have been applied.\nvar modules = platformModules.concat(baseModules);\n\nvar patch = createPatchFunction({ nodeOps: nodeOps, modules: modules });\n\n/**\n * Not type checking this file because flow doesn't like attaching\n * properties to Elements.\n */\n\n/* istanbul ignore if */\nif (isIE9) {\n  // http://www.matts411.com/post/internet-explorer-9-oninput/\n  document.addEventListener('selectionchange', function () {\n    var el = document.activeElement;\n    if (el && el.vmodel) {\n      trigger(el, 'input');\n    }\n  });\n}\n\nvar directive = {\n  inserted: function inserted (el, binding, vnode, oldVnode) {\n    if (vnode.tag === 'select') {\n      // #6903\n      if (oldVnode.elm && !oldVnode.elm._vOptions) {\n        mergeVNodeHook(vnode, 'postpatch', function () {\n          directive.componentUpdated(el, binding, vnode);\n        });\n      } else {\n        setSelected(el, binding, vnode.context);\n      }\n      el._vOptions = [].map.call(el.options, getValue);\n    } else if (vnode.tag === 'textarea' || isTextInputType(el.type)) {\n      el._vModifiers = binding.modifiers;\n      if (!binding.modifiers.lazy) {\n        el.addEventListener('compositionstart', onCompositionStart);\n        el.addEventListener('compositionend', onCompositionEnd);\n        // Safari < 10.2 & UIWebView doesn't fire compositionend when\n        // switching focus before confirming composition choice\n        // this also fixes the issue where some browsers e.g. iOS Chrome\n        // fires \"change\" instead of \"input\" on autocomplete.\n        el.addEventListener('change', onCompositionEnd);\n        /* istanbul ignore if */\n        if (isIE9) {\n          el.vmodel = true;\n        }\n      }\n    }\n  },\n\n  componentUpdated: function componentUpdated (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      setSelected(el, binding, vnode.context);\n      // in case the options rendered by v-for have changed,\n      // it's possible that the value is out-of-sync with the rendered options.\n      // detect such cases and filter out values that no longer has a matching\n      // option in the DOM.\n      var prevOptions = el._vOptions;\n      var curOptions = el._vOptions = [].map.call(el.options, getValue);\n      if (curOptions.some(function (o, i) { return !looseEqual(o, prevOptions[i]); })) {\n        // trigger change event if\n        // no matching option found for at least one value\n        var needReset = el.multiple\n          ? binding.value.some(function (v) { return hasNoMatchingOption(v, curOptions); })\n          : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, curOptions);\n        if (needReset) {\n          trigger(el, 'change');\n        }\n      }\n    }\n  }\n};\n\nfunction setSelected (el, binding, vm) {\n  actuallySetSelected(el, binding, vm);\n  /* istanbul ignore if */\n  if (isIE || isEdge) {\n    setTimeout(function () {\n      actuallySetSelected(el, binding, vm);\n    }, 0);\n  }\n}\n\nfunction actuallySetSelected (el, binding, vm) {\n  var value = binding.value;\n  var isMultiple = el.multiple;\n  if (isMultiple && !Array.isArray(value)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"<select multiple v-model=\\\"\" + (binding.expression) + \"\\\"> \" +\n      \"expects an Array value for its binding, but got \" + (Object.prototype.toString.call(value).slice(8, -1)),\n      vm\n    );\n    return\n  }\n  var selected, option;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    option = el.options[i];\n    if (isMultiple) {\n      selected = looseIndexOf(value, getValue(option)) > -1;\n      if (option.selected !== selected) {\n        option.selected = selected;\n      }\n    } else {\n      if (looseEqual(getValue(option), value)) {\n        if (el.selectedIndex !== i) {\n          el.selectedIndex = i;\n        }\n        return\n      }\n    }\n  }\n  if (!isMultiple) {\n    el.selectedIndex = -1;\n  }\n}\n\nfunction hasNoMatchingOption (value, options) {\n  return options.every(function (o) { return !looseEqual(o, value); })\n}\n\nfunction getValue (option) {\n  return '_value' in option\n    ? option._value\n    : option.value\n}\n\nfunction onCompositionStart (e) {\n  e.target.composing = true;\n}\n\nfunction onCompositionEnd (e) {\n  // prevent triggering an input event for no reason\n  if (!e.target.composing) { return }\n  e.target.composing = false;\n  trigger(e.target, 'input');\n}\n\nfunction trigger (el, type) {\n  var e = document.createEvent('HTMLEvents');\n  e.initEvent(type, true, true);\n  el.dispatchEvent(e);\n}\n\n/*  */\n\n// recursively search for possible transition defined inside the component root\nfunction locateNode (vnode) {\n  return vnode.componentInstance && (!vnode.data || !vnode.data.transition)\n    ? locateNode(vnode.componentInstance._vnode)\n    : vnode\n}\n\nvar show = {\n  bind: function bind (el, ref, vnode) {\n    var value = ref.value;\n\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    var originalDisplay = el.__vOriginalDisplay =\n      el.style.display === 'none' ? '' : el.style.display;\n    if (value && transition$$1) {\n      vnode.data.show = true;\n      enter(vnode, function () {\n        el.style.display = originalDisplay;\n      });\n    } else {\n      el.style.display = value ? originalDisplay : 'none';\n    }\n  },\n\n  update: function update (el, ref, vnode) {\n    var value = ref.value;\n    var oldValue = ref.oldValue;\n\n    /* istanbul ignore if */\n    if (!value === !oldValue) { return }\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    if (transition$$1) {\n      vnode.data.show = true;\n      if (value) {\n        enter(vnode, function () {\n          el.style.display = el.__vOriginalDisplay;\n        });\n      } else {\n        leave(vnode, function () {\n          el.style.display = 'none';\n        });\n      }\n    } else {\n      el.style.display = value ? el.__vOriginalDisplay : 'none';\n    }\n  },\n\n  unbind: function unbind (\n    el,\n    binding,\n    vnode,\n    oldVnode,\n    isDestroy\n  ) {\n    if (!isDestroy) {\n      el.style.display = el.__vOriginalDisplay;\n    }\n  }\n};\n\nvar platformDirectives = {\n  model: directive,\n  show: show\n};\n\n/*  */\n\nvar transitionProps = {\n  name: String,\n  appear: Boolean,\n  css: Boolean,\n  mode: String,\n  type: String,\n  enterClass: String,\n  leaveClass: String,\n  enterToClass: String,\n  leaveToClass: String,\n  enterActiveClass: String,\n  leaveActiveClass: String,\n  appearClass: String,\n  appearActiveClass: String,\n  appearToClass: String,\n  duration: [Number, String, Object]\n};\n\n// in case the child is also an abstract component, e.g. <keep-alive>\n// we want to recursively retrieve the real component to be rendered\nfunction getRealChild (vnode) {\n  var compOptions = vnode && vnode.componentOptions;\n  if (compOptions && compOptions.Ctor.options.abstract) {\n    return getRealChild(getFirstComponentChild(compOptions.children))\n  } else {\n    return vnode\n  }\n}\n\nfunction extractTransitionData (comp) {\n  var data = {};\n  var options = comp.$options;\n  // props\n  for (var key in options.propsData) {\n    data[key] = comp[key];\n  }\n  // events.\n  // extract listeners and pass them directly to the transition methods\n  var listeners = options._parentListeners;\n  for (var key$1 in listeners) {\n    data[camelize(key$1)] = listeners[key$1];\n  }\n  return data\n}\n\nfunction placeholder (h, rawChild) {\n  if (/\\d-keep-alive$/.test(rawChild.tag)) {\n    return h('keep-alive', {\n      props: rawChild.componentOptions.propsData\n    })\n  }\n}\n\nfunction hasParentTransition (vnode) {\n  while ((vnode = vnode.parent)) {\n    if (vnode.data.transition) {\n      return true\n    }\n  }\n}\n\nfunction isSameChild (child, oldChild) {\n  return oldChild.key === child.key && oldChild.tag === child.tag\n}\n\nvar isNotTextNode = function (c) { return c.tag || isAsyncPlaceholder(c); };\n\nvar isVShowDirective = function (d) { return d.name === 'show'; };\n\nvar Transition = {\n  name: 'transition',\n  props: transitionProps,\n  abstract: true,\n\n  render: function render (h) {\n    var this$1 = this;\n\n    var children = this.$slots.default;\n    if (!children) {\n      return\n    }\n\n    // filter out text nodes (possible whitespaces)\n    children = children.filter(isNotTextNode);\n    /* istanbul ignore if */\n    if (!children.length) {\n      return\n    }\n\n    // warn multiple elements\n    if (process.env.NODE_ENV !== 'production' && children.length > 1) {\n      warn(\n        '<transition> can only be used on a single element. Use ' +\n        '<transition-group> for lists.',\n        this.$parent\n      );\n    }\n\n    var mode = this.mode;\n\n    // warn invalid mode\n    if (process.env.NODE_ENV !== 'production' &&\n      mode && mode !== 'in-out' && mode !== 'out-in'\n    ) {\n      warn(\n        'invalid <transition> mode: ' + mode,\n        this.$parent\n      );\n    }\n\n    var rawChild = children[0];\n\n    // if this is a component root node and the component's\n    // parent container node also has transition, skip.\n    if (hasParentTransition(this.$vnode)) {\n      return rawChild\n    }\n\n    // apply transition data to child\n    // use getRealChild() to ignore abstract components e.g. keep-alive\n    var child = getRealChild(rawChild);\n    /* istanbul ignore if */\n    if (!child) {\n      return rawChild\n    }\n\n    if (this._leaving) {\n      return placeholder(h, rawChild)\n    }\n\n    // ensure a key that is unique to the vnode type and to this transition\n    // component instance. This key will be used to remove pending leaving nodes\n    // during entering.\n    var id = \"__transition-\" + (this._uid) + \"-\";\n    child.key = child.key == null\n      ? child.isComment\n        ? id + 'comment'\n        : id + child.tag\n      : isPrimitive(child.key)\n        ? (String(child.key).indexOf(id) === 0 ? child.key : id + child.key)\n        : child.key;\n\n    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);\n    var oldRawChild = this._vnode;\n    var oldChild = getRealChild(oldRawChild);\n\n    // mark v-show\n    // so that the transition module can hand over the control to the directive\n    if (child.data.directives && child.data.directives.some(isVShowDirective)) {\n      child.data.show = true;\n    }\n\n    if (\n      oldChild &&\n      oldChild.data &&\n      !isSameChild(child, oldChild) &&\n      !isAsyncPlaceholder(oldChild) &&\n      // #6687 component root is a comment node\n      !(oldChild.componentInstance && oldChild.componentInstance._vnode.isComment)\n    ) {\n      // replace old child transition data with fresh one\n      // important for dynamic transitions!\n      var oldData = oldChild.data.transition = extend({}, data);\n      // handle transition mode\n      if (mode === 'out-in') {\n        // return placeholder node and queue update when leave finishes\n        this._leaving = true;\n        mergeVNodeHook(oldData, 'afterLeave', function () {\n          this$1._leaving = false;\n          this$1.$forceUpdate();\n        });\n        return placeholder(h, rawChild)\n      } else if (mode === 'in-out') {\n        if (isAsyncPlaceholder(child)) {\n          return oldRawChild\n        }\n        var delayedLeave;\n        var performLeave = function () { delayedLeave(); };\n        mergeVNodeHook(data, 'afterEnter', performLeave);\n        mergeVNodeHook(data, 'enterCancelled', performLeave);\n        mergeVNodeHook(oldData, 'delayLeave', function (leave) { delayedLeave = leave; });\n      }\n    }\n\n    return rawChild\n  }\n};\n\n/*  */\n\nvar props = extend({\n  tag: String,\n  moveClass: String\n}, transitionProps);\n\ndelete props.mode;\n\nvar TransitionGroup = {\n  props: props,\n\n  beforeMount: function beforeMount () {\n    var this$1 = this;\n\n    var update = this._update;\n    this._update = function (vnode, hydrating) {\n      var restoreActiveInstance = setActiveInstance(this$1);\n      // force removing pass\n      this$1.__patch__(\n        this$1._vnode,\n        this$1.kept,\n        false, // hydrating\n        true // removeOnly (!important, avoids unnecessary moves)\n      );\n      this$1._vnode = this$1.kept;\n      restoreActiveInstance();\n      update.call(this$1, vnode, hydrating);\n    };\n  },\n\n  render: function render (h) {\n    var tag = this.tag || this.$vnode.data.tag || 'span';\n    var map = Object.create(null);\n    var prevChildren = this.prevChildren = this.children;\n    var rawChildren = this.$slots.default || [];\n    var children = this.children = [];\n    var transitionData = extractTransitionData(this);\n\n    for (var i = 0; i < rawChildren.length; i++) {\n      var c = rawChildren[i];\n      if (c.tag) {\n        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {\n          children.push(c);\n          map[c.key] = c\n          ;(c.data || (c.data = {})).transition = transitionData;\n        } else if (process.env.NODE_ENV !== 'production') {\n          var opts = c.componentOptions;\n          var name = opts ? (opts.Ctor.options.name || opts.tag || '') : c.tag;\n          warn((\"<transition-group> children must be keyed: <\" + name + \">\"));\n        }\n      }\n    }\n\n    if (prevChildren) {\n      var kept = [];\n      var removed = [];\n      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {\n        var c$1 = prevChildren[i$1];\n        c$1.data.transition = transitionData;\n        c$1.data.pos = c$1.elm.getBoundingClientRect();\n        if (map[c$1.key]) {\n          kept.push(c$1);\n        } else {\n          removed.push(c$1);\n        }\n      }\n      this.kept = h(tag, null, kept);\n      this.removed = removed;\n    }\n\n    return h(tag, null, children)\n  },\n\n  updated: function updated () {\n    var children = this.prevChildren;\n    var moveClass = this.moveClass || ((this.name || 'v') + '-move');\n    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {\n      return\n    }\n\n    // we divide the work into three loops to avoid mixing DOM reads and writes\n    // in each iteration - which helps prevent layout thrashing.\n    children.forEach(callPendingCbs);\n    children.forEach(recordPosition);\n    children.forEach(applyTranslation);\n\n    // force reflow to put everything in position\n    // assign to this to avoid being removed in tree-shaking\n    // $flow-disable-line\n    this._reflow = document.body.offsetHeight;\n\n    children.forEach(function (c) {\n      if (c.data.moved) {\n        var el = c.elm;\n        var s = el.style;\n        addTransitionClass(el, moveClass);\n        s.transform = s.WebkitTransform = s.transitionDuration = '';\n        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {\n          if (e && e.target !== el) {\n            return\n          }\n          if (!e || /transform$/.test(e.propertyName)) {\n            el.removeEventListener(transitionEndEvent, cb);\n            el._moveCb = null;\n            removeTransitionClass(el, moveClass);\n          }\n        });\n      }\n    });\n  },\n\n  methods: {\n    hasMove: function hasMove (el, moveClass) {\n      /* istanbul ignore if */\n      if (!hasTransition) {\n        return false\n      }\n      /* istanbul ignore if */\n      if (this._hasMove) {\n        return this._hasMove\n      }\n      // Detect whether an element with the move class applied has\n      // CSS transitions. Since the element may be inside an entering\n      // transition at this very moment, we make a clone of it and remove\n      // all other transition classes applied to ensure only the move class\n      // is applied.\n      var clone = el.cloneNode();\n      if (el._transitionClasses) {\n        el._transitionClasses.forEach(function (cls) { removeClass(clone, cls); });\n      }\n      addClass(clone, moveClass);\n      clone.style.display = 'none';\n      this.$el.appendChild(clone);\n      var info = getTransitionInfo(clone);\n      this.$el.removeChild(clone);\n      return (this._hasMove = info.hasTransform)\n    }\n  }\n};\n\nfunction callPendingCbs (c) {\n  /* istanbul ignore if */\n  if (c.elm._moveCb) {\n    c.elm._moveCb();\n  }\n  /* istanbul ignore if */\n  if (c.elm._enterCb) {\n    c.elm._enterCb();\n  }\n}\n\nfunction recordPosition (c) {\n  c.data.newPos = c.elm.getBoundingClientRect();\n}\n\nfunction applyTranslation (c) {\n  var oldPos = c.data.pos;\n  var newPos = c.data.newPos;\n  var dx = oldPos.left - newPos.left;\n  var dy = oldPos.top - newPos.top;\n  if (dx || dy) {\n    c.data.moved = true;\n    var s = c.elm.style;\n    s.transform = s.WebkitTransform = \"translate(\" + dx + \"px,\" + dy + \"px)\";\n    s.transitionDuration = '0s';\n  }\n}\n\nvar platformComponents = {\n  Transition: Transition,\n  TransitionGroup: TransitionGroup\n};\n\n/*  */\n\n// install platform specific utils\nVue.config.mustUseProp = mustUseProp;\nVue.config.isReservedTag = isReservedTag;\nVue.config.isReservedAttr = isReservedAttr;\nVue.config.getTagNamespace = getTagNamespace;\nVue.config.isUnknownElement = isUnknownElement;\n\n// install platform runtime directives & components\nextend(Vue.options.directives, platformDirectives);\nextend(Vue.options.components, platformComponents);\n\n// install platform patch function\nVue.prototype.__patch__ = inBrowser ? patch : noop;\n\n// public mount method\nVue.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && inBrowser ? query(el) : undefined;\n  return mountComponent(this, el, hydrating)\n};\n\n// devtools global hook\n/* istanbul ignore next */\nif (inBrowser) {\n  setTimeout(function () {\n    if (config.devtools) {\n      if (devtools) {\n        devtools.emit('init', Vue);\n      } else if (\n        process.env.NODE_ENV !== 'production' &&\n        process.env.NODE_ENV !== 'test'\n      ) {\n        console[console.info ? 'info' : 'log'](\n          'Download the Vue Devtools extension for a better development experience:\\n' +\n          'https://github.com/vuejs/vue-devtools'\n        );\n      }\n    }\n    if (process.env.NODE_ENV !== 'production' &&\n      process.env.NODE_ENV !== 'test' &&\n      config.productionTip !== false &&\n      typeof console !== 'undefined'\n    ) {\n      console[console.info ? 'info' : 'log'](\n        \"You are running Vue in development mode.\\n\" +\n        \"Make sure to turn on production mode when deploying for production.\\n\" +\n        \"See more tips at https://vuejs.org/guide/deployment.html\"\n      );\n    }\n  }, 0);\n}\n\n/*  */\n\nexport default Vue;\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"vue\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"vue-3d-model\"] = factory(require(\"vue\"));\n\telse\n\t\troot[\"vue-3d-model\"] = factory(root[\"Vue\"]);\n})((typeof self !== 'undefined' ? self : this), function(__WEBPACK_EXTERNAL_MODULE__8bbf__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__webpack_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__webpack_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = \"c497\");\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ \"01f5\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// optional / simple context binding\nvar aFunction = __webpack_require__(\"648a\");\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n\n\n/***/ }),\n\n/***/ \"03b3\":\n/***/ (function(module, exports) {\n\nvar hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n\n\n/***/ }),\n\n/***/ \"0d5f\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// 7.3.20 SpeciesConstructor(O, defaultConstructor)\nvar anObject = __webpack_require__(\"a013\");\nvar aFunction = __webpack_require__(\"648a\");\nvar SPECIES = __webpack_require__(\"8b37\")('species');\nmodule.exports = function (O, D) {\n  var C = anObject(O).constructor;\n  var S;\n  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);\n};\n\n\n/***/ }),\n\n/***/ \"0e44\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// Works with __proto__ only. Old v8 can't work with null proto objects.\n/* eslint-disable no-proto */\nvar isObject = __webpack_require__(\"88dd\");\nvar anObject = __webpack_require__(\"a013\");\nvar check = function (O, proto) {\n  anObject(O);\n  if (!isObject(proto) && proto !== null) throw TypeError(proto + \": can't set as prototype!\");\n};\nmodule.exports = {\n  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line\n    function (test, buggy, set) {\n      try {\n        set = __webpack_require__(\"01f5\")(Function.call, __webpack_require__(\"acb9\").f(Object.prototype, '__proto__').set, 2);\n        set(test, []);\n        buggy = !(test instanceof Array);\n      } catch (e) { buggy = true; }\n      return function setPrototypeOf(O, proto) {\n        check(O, proto);\n        if (buggy) O.__proto__ = proto;\n        else set(O, proto);\n        return O;\n      };\n    }({}, false) : undefined),\n  check: check\n};\n\n\n/***/ }),\n\n/***/ \"14fc\":\n/***/ (function(module, exports) {\n\nmodule.exports = {};\n\n\n/***/ }),\n\n/***/ \"15c2\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\n\nvar toObject = __webpack_require__(\"db4b\");\nvar toAbsoluteIndex = __webpack_require__(\"5fe5\");\nvar toLength = __webpack_require__(\"b146\");\nmodule.exports = function fill(value /* , start = 0, end = @length */) {\n  var O = toObject(this);\n  var length = toLength(O.length);\n  var aLen = arguments.length;\n  var index = toAbsoluteIndex(aLen > 1 ? arguments[1] : undefined, length);\n  var end = aLen > 2 ? arguments[2] : undefined;\n  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);\n  while (endPos > index) O[index++] = value;\n  return O;\n};\n\n\n/***/ }),\n\n/***/ \"1a9b\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar classof = __webpack_require__(\"4819\");\nvar ITERATOR = __webpack_require__(\"8b37\")('iterator');\nvar Iterators = __webpack_require__(\"14fc\");\nmodule.exports = __webpack_require__(\"a4cc\").getIteratorMethod = function (it) {\n  if (it != undefined) return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n\n\n/***/ }),\n\n/***/ \"265a\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar document = __webpack_require__(\"3754\").document;\nmodule.exports = document && document.documentElement;\n\n\n/***/ }),\n\n/***/ \"2d43\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// 0 -> Array#forEach\n// 1 -> Array#map\n// 2 -> Array#filter\n// 3 -> Array#some\n// 4 -> Array#every\n// 5 -> Array#find\n// 6 -> Array#findIndex\nvar ctx = __webpack_require__(\"01f5\");\nvar IObject = __webpack_require__(\"6462\");\nvar toObject = __webpack_require__(\"db4b\");\nvar toLength = __webpack_require__(\"b146\");\nvar asc = __webpack_require__(\"5824\");\nmodule.exports = function (TYPE, $create) {\n  var IS_MAP = TYPE == 1;\n  var IS_FILTER = TYPE == 2;\n  var IS_SOME = TYPE == 3;\n  var IS_EVERY = TYPE == 4;\n  var IS_FIND_INDEX = TYPE == 6;\n  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n  var create = $create || asc;\n  return function ($this, callbackfn, that) {\n    var O = toObject($this);\n    var self = IObject(O);\n    var f = ctx(callbackfn, that, 3);\n    var length = toLength(self.length);\n    var index = 0;\n    var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;\n    var val, res;\n    for (;length > index; index++) if (NO_HOLES || index in self) {\n      val = self[index];\n      res = f(val, index, O);\n      if (TYPE) {\n        if (IS_MAP) result[index] = res;   // map\n        else if (res) switch (TYPE) {\n          case 3: return true;             // some\n          case 5: return val;              // find\n          case 6: return index;            // findIndex\n          case 2: result.push(val);        // filter\n        } else if (IS_EVERY) return false; // every\n      }\n    }\n    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;\n  };\n};\n\n\n/***/ }),\n\n/***/ \"3754\":\n/***/ (function(module, exports) {\n\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n\n\n/***/ }),\n\n/***/ \"3a68\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = __webpack_require__(\"6462\");\nvar defined = __webpack_require__(\"f01a\");\nmodule.exports = function (it) {\n  return IObject(defined(it));\n};\n\n\n/***/ }),\n\n/***/ \"4169\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar global = __webpack_require__(\"3754\");\nvar DESCRIPTORS = __webpack_require__(\"dad2\");\nvar LIBRARY = __webpack_require__(\"ca2b\");\nvar $typed = __webpack_require__(\"98ce\");\nvar hide = __webpack_require__(\"743d\");\nvar redefineAll = __webpack_require__(\"f216\");\nvar fails = __webpack_require__(\"b6f1\");\nvar anInstance = __webpack_require__(\"d74e\");\nvar toInteger = __webpack_require__(\"c481\");\nvar toLength = __webpack_require__(\"b146\");\nvar toIndex = __webpack_require__(\"9241\");\nvar gOPN = __webpack_require__(\"a891\").f;\nvar dP = __webpack_require__(\"ddf7\").f;\nvar arrayFill = __webpack_require__(\"15c2\");\nvar setToStringTag = __webpack_require__(\"6594\");\nvar ARRAY_BUFFER = 'ArrayBuffer';\nvar DATA_VIEW = 'DataView';\nvar PROTOTYPE = 'prototype';\nvar WRONG_LENGTH = 'Wrong length!';\nvar WRONG_INDEX = 'Wrong index!';\nvar $ArrayBuffer = global[ARRAY_BUFFER];\nvar $DataView = global[DATA_VIEW];\nvar Math = global.Math;\nvar RangeError = global.RangeError;\n// eslint-disable-next-line no-shadow-restricted-names\nvar Infinity = global.Infinity;\nvar BaseBuffer = $ArrayBuffer;\nvar abs = Math.abs;\nvar pow = Math.pow;\nvar floor = Math.floor;\nvar log = Math.log;\nvar LN2 = Math.LN2;\nvar BUFFER = 'buffer';\nvar BYTE_LENGTH = 'byteLength';\nvar BYTE_OFFSET = 'byteOffset';\nvar $BUFFER = DESCRIPTORS ? '_b' : BUFFER;\nvar $LENGTH = DESCRIPTORS ? '_l' : BYTE_LENGTH;\nvar $OFFSET = DESCRIPTORS ? '_o' : BYTE_OFFSET;\n\n// IEEE754 conversions based on https://github.com/feross/ieee754\nfunction packIEEE754(value, mLen, nBytes) {\n  var buffer = new Array(nBytes);\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var rt = mLen === 23 ? pow(2, -24) - pow(2, -77) : 0;\n  var i = 0;\n  var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;\n  var e, m, c;\n  value = abs(value);\n  // eslint-disable-next-line no-self-compare\n  if (value != value || value === Infinity) {\n    // eslint-disable-next-line no-self-compare\n    m = value != value ? 1 : 0;\n    e = eMax;\n  } else {\n    e = floor(log(value) / LN2);\n    if (value * (c = pow(2, -e)) < 1) {\n      e--;\n      c *= 2;\n    }\n    if (e + eBias >= 1) {\n      value += rt / c;\n    } else {\n      value += rt * pow(2, 1 - eBias);\n    }\n    if (value * c >= 2) {\n      e++;\n      c /= 2;\n    }\n    if (e + eBias >= eMax) {\n      m = 0;\n      e = eMax;\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * pow(2, mLen);\n      e = e + eBias;\n    } else {\n      m = value * pow(2, eBias - 1) * pow(2, mLen);\n      e = 0;\n    }\n  }\n  for (; mLen >= 8; buffer[i++] = m & 255, m /= 256, mLen -= 8);\n  e = e << mLen | m;\n  eLen += mLen;\n  for (; eLen > 0; buffer[i++] = e & 255, e /= 256, eLen -= 8);\n  buffer[--i] |= s * 128;\n  return buffer;\n}\nfunction unpackIEEE754(buffer, mLen, nBytes) {\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var nBits = eLen - 7;\n  var i = nBytes - 1;\n  var s = buffer[i--];\n  var e = s & 127;\n  var m;\n  s >>= 7;\n  for (; nBits > 0; e = e * 256 + buffer[i], i--, nBits -= 8);\n  m = e & (1 << -nBits) - 1;\n  e >>= -nBits;\n  nBits += mLen;\n  for (; nBits > 0; m = m * 256 + buffer[i], i--, nBits -= 8);\n  if (e === 0) {\n    e = 1 - eBias;\n  } else if (e === eMax) {\n    return m ? NaN : s ? -Infinity : Infinity;\n  } else {\n    m = m + pow(2, mLen);\n    e = e - eBias;\n  } return (s ? -1 : 1) * m * pow(2, e - mLen);\n}\n\nfunction unpackI32(bytes) {\n  return bytes[3] << 24 | bytes[2] << 16 | bytes[1] << 8 | bytes[0];\n}\nfunction packI8(it) {\n  return [it & 0xff];\n}\nfunction packI16(it) {\n  return [it & 0xff, it >> 8 & 0xff];\n}\nfunction packI32(it) {\n  return [it & 0xff, it >> 8 & 0xff, it >> 16 & 0xff, it >> 24 & 0xff];\n}\nfunction packF64(it) {\n  return packIEEE754(it, 52, 8);\n}\nfunction packF32(it) {\n  return packIEEE754(it, 23, 4);\n}\n\nfunction addGetter(C, key, internal) {\n  dP(C[PROTOTYPE], key, { get: function () { return this[internal]; } });\n}\n\nfunction get(view, bytes, index, isLittleEndian) {\n  var numIndex = +index;\n  var intIndex = toIndex(numIndex);\n  if (intIndex + bytes > view[$LENGTH]) throw RangeError(WRONG_INDEX);\n  var store = view[$BUFFER]._b;\n  var start = intIndex + view[$OFFSET];\n  var pack = store.slice(start, start + bytes);\n  return isLittleEndian ? pack : pack.reverse();\n}\nfunction set(view, bytes, index, conversion, value, isLittleEndian) {\n  var numIndex = +index;\n  var intIndex = toIndex(numIndex);\n  if (intIndex + bytes > view[$LENGTH]) throw RangeError(WRONG_INDEX);\n  var store = view[$BUFFER]._b;\n  var start = intIndex + view[$OFFSET];\n  var pack = conversion(+value);\n  for (var i = 0; i < bytes; i++) store[start + i] = pack[isLittleEndian ? i : bytes - i - 1];\n}\n\nif (!$typed.ABV) {\n  $ArrayBuffer = function ArrayBuffer(length) {\n    anInstance(this, $ArrayBuffer, ARRAY_BUFFER);\n    var byteLength = toIndex(length);\n    this._b = arrayFill.call(new Array(byteLength), 0);\n    this[$LENGTH] = byteLength;\n  };\n\n  $DataView = function DataView(buffer, byteOffset, byteLength) {\n    anInstance(this, $DataView, DATA_VIEW);\n    anInstance(buffer, $ArrayBuffer, DATA_VIEW);\n    var bufferLength = buffer[$LENGTH];\n    var offset = toInteger(byteOffset);\n    if (offset < 0 || offset > bufferLength) throw RangeError('Wrong offset!');\n    byteLength = byteLength === undefined ? bufferLength - offset : toLength(byteLength);\n    if (offset + byteLength > bufferLength) throw RangeError(WRONG_LENGTH);\n    this[$BUFFER] = buffer;\n    this[$OFFSET] = offset;\n    this[$LENGTH] = byteLength;\n  };\n\n  if (DESCRIPTORS) {\n    addGetter($ArrayBuffer, BYTE_LENGTH, '_l');\n    addGetter($DataView, BUFFER, '_b');\n    addGetter($DataView, BYTE_LENGTH, '_l');\n    addGetter($DataView, BYTE_OFFSET, '_o');\n  }\n\n  redefineAll($DataView[PROTOTYPE], {\n    getInt8: function getInt8(byteOffset) {\n      return get(this, 1, byteOffset)[0] << 24 >> 24;\n    },\n    getUint8: function getUint8(byteOffset) {\n      return get(this, 1, byteOffset)[0];\n    },\n    getInt16: function getInt16(byteOffset /* , littleEndian */) {\n      var bytes = get(this, 2, byteOffset, arguments[1]);\n      return (bytes[1] << 8 | bytes[0]) << 16 >> 16;\n    },\n    getUint16: function getUint16(byteOffset /* , littleEndian */) {\n      var bytes = get(this, 2, byteOffset, arguments[1]);\n      return bytes[1] << 8 | bytes[0];\n    },\n    getInt32: function getInt32(byteOffset /* , littleEndian */) {\n      return unpackI32(get(this, 4, byteOffset, arguments[1]));\n    },\n    getUint32: function getUint32(byteOffset /* , littleEndian */) {\n      return unpackI32(get(this, 4, byteOffset, arguments[1])) >>> 0;\n    },\n    getFloat32: function getFloat32(byteOffset /* , littleEndian */) {\n      return unpackIEEE754(get(this, 4, byteOffset, arguments[1]), 23, 4);\n    },\n    getFloat64: function getFloat64(byteOffset /* , littleEndian */) {\n      return unpackIEEE754(get(this, 8, byteOffset, arguments[1]), 52, 8);\n    },\n    setInt8: function setInt8(byteOffset, value) {\n      set(this, 1, byteOffset, packI8, value);\n    },\n    setUint8: function setUint8(byteOffset, value) {\n      set(this, 1, byteOffset, packI8, value);\n    },\n    setInt16: function setInt16(byteOffset, value /* , littleEndian */) {\n      set(this, 2, byteOffset, packI16, value, arguments[2]);\n    },\n    setUint16: function setUint16(byteOffset, value /* , littleEndian */) {\n      set(this, 2, byteOffset, packI16, value, arguments[2]);\n    },\n    setInt32: function setInt32(byteOffset, value /* , littleEndian */) {\n      set(this, 4, byteOffset, packI32, value, arguments[2]);\n    },\n    setUint32: function setUint32(byteOffset, value /* , littleEndian */) {\n      set(this, 4, byteOffset, packI32, value, arguments[2]);\n    },\n    setFloat32: function setFloat32(byteOffset, value /* , littleEndian */) {\n      set(this, 4, byteOffset, packF32, value, arguments[2]);\n    },\n    setFloat64: function setFloat64(byteOffset, value /* , littleEndian */) {\n      set(this, 8, byteOffset, packF64, value, arguments[2]);\n    }\n  });\n} else {\n  if (!fails(function () {\n    $ArrayBuffer(1);\n  }) || !fails(function () {\n    new $ArrayBuffer(-1); // eslint-disable-line no-new\n  }) || fails(function () {\n    new $ArrayBuffer(); // eslint-disable-line no-new\n    new $ArrayBuffer(1.5); // eslint-disable-line no-new\n    new $ArrayBuffer(NaN); // eslint-disable-line no-new\n    return $ArrayBuffer.name != ARRAY_BUFFER;\n  })) {\n    $ArrayBuffer = function ArrayBuffer(length) {\n      anInstance(this, $ArrayBuffer);\n      return new BaseBuffer(toIndex(length));\n    };\n    var ArrayBufferProto = $ArrayBuffer[PROTOTYPE] = BaseBuffer[PROTOTYPE];\n    for (var keys = gOPN(BaseBuffer), j = 0, key; keys.length > j;) {\n      if (!((key = keys[j++]) in $ArrayBuffer)) hide($ArrayBuffer, key, BaseBuffer[key]);\n    }\n    if (!LIBRARY) ArrayBufferProto.constructor = $ArrayBuffer;\n  }\n  // iOS Safari 7.x bug\n  var view = new $DataView(new $ArrayBuffer(2));\n  var $setInt8 = $DataView[PROTOTYPE].setInt8;\n  view.setInt8(0, 2147483648);\n  view.setInt8(1, 2147483649);\n  if (view.getInt8(0) || !view.getInt8(1)) redefineAll($DataView[PROTOTYPE], {\n    setInt8: function setInt8(byteOffset, value) {\n      $setInt8.call(this, byteOffset, value << 24 >> 24);\n    },\n    setUint8: function setUint8(byteOffset, value) {\n      $setInt8.call(this, byteOffset, value << 24 >> 24);\n    }\n  }, true);\n}\nsetToStringTag($ArrayBuffer, ARRAY_BUFFER);\nsetToStringTag($DataView, DATA_VIEW);\nhide($DataView[PROTOTYPE], $typed.VIEW, true);\nexports[ARRAY_BUFFER] = $ArrayBuffer;\nexports[DATA_VIEW] = $DataView;\n\n\n/***/ }),\n\n/***/ \"44de\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isObject = __webpack_require__(\"88dd\");\nvar setPrototypeOf = __webpack_require__(\"0e44\").set;\nmodule.exports = function (that, target, C) {\n  var S = target.constructor;\n  var P;\n  if (S !== C && typeof S == 'function' && (P = S.prototype) !== C.prototype && isObject(P) && setPrototypeOf) {\n    setPrototypeOf(that, P);\n  } return that;\n};\n\n\n/***/ }),\n\n/***/ \"4713\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\nvar has = __webpack_require__(\"03b3\");\nvar toObject = __webpack_require__(\"db4b\");\nvar IE_PROTO = __webpack_require__(\"dfab\")('IE_PROTO');\nvar ObjectProto = Object.prototype;\n\nmodule.exports = Object.getPrototypeOf || function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectProto : null;\n};\n\n\n/***/ }),\n\n/***/ \"4819\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = __webpack_require__(\"94ac\");\nvar TAG = __webpack_require__(\"8b37\")('toStringTag');\n// ES3 wrong here\nvar ARG = cof(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (e) { /* empty */ }\n};\n\nmodule.exports = function (it) {\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n\n\n/***/ }),\n\n/***/ \"5325\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = __webpack_require__(\"88dd\");\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n\n\n/***/ }),\n\n/***/ \"539d\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar $export = __webpack_require__(\"b2f5\");\nvar defined = __webpack_require__(\"f01a\");\nvar fails = __webpack_require__(\"b6f1\");\nvar spaces = __webpack_require__(\"c9ea\");\nvar space = '[' + spaces + ']';\nvar non = '\\u200b\\u0085';\nvar ltrim = RegExp('^' + space + space + '*');\nvar rtrim = RegExp(space + space + '*$');\n\nvar exporter = function (KEY, exec, ALIAS) {\n  var exp = {};\n  var FORCE = fails(function () {\n    return !!spaces[KEY]() || non[KEY]() != non;\n  });\n  var fn = exp[KEY] = FORCE ? exec(trim) : spaces[KEY];\n  if (ALIAS) exp[ALIAS] = fn;\n  $export($export.P + $export.F * FORCE, 'String', exp);\n};\n\n// 1 -> String#trimLeft\n// 2 -> String#trimRight\n// 3 -> String#trim\nvar trim = exporter.trim = function (string, TYPE) {\n  string = String(defined(string));\n  if (TYPE & 1) string = string.replace(ltrim, '');\n  if (TYPE & 2) string = string.replace(rtrim, '');\n  return string;\n};\n\nmodule.exports = exporter;\n\n\n/***/ }),\n\n/***/ \"54c8\":\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(\"9253\")('Float32', 4, function (init) {\n  return function Float32Array(data, byteOffset, length) {\n    return init(this, data, byteOffset, length);\n  };\n});\n\n\n/***/ }),\n\n/***/ \"568a\":\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = !__webpack_require__(\"dad2\") && !__webpack_require__(\"b6f1\")(function () {\n  return Object.defineProperty(__webpack_require__(\"e3e0\")('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n\n\n/***/ }),\n\n/***/ \"5824\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// 9.4.2.3 ArraySpeciesCreate(originalArray, length)\nvar speciesConstructor = __webpack_require__(\"f691\");\n\nmodule.exports = function (original, length) {\n  return new (speciesConstructor(original))(length);\n};\n\n\n/***/ }),\n\n/***/ \"5b55\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar ITERATOR = __webpack_require__(\"8b37\")('iterator');\nvar SAFE_CLOSING = false;\n\ntry {\n  var riter = [7][ITERATOR]();\n  riter['return'] = function () { SAFE_CLOSING = true; };\n  // eslint-disable-next-line no-throw-literal\n  Array.from(riter, function () { throw 2; });\n} catch (e) { /* empty */ }\n\nmodule.exports = function (exec, skipClosing) {\n  if (!skipClosing && !SAFE_CLOSING) return false;\n  var safe = false;\n  try {\n    var arr = [7];\n    var iter = arr[ITERATOR]();\n    iter.next = function () { return { done: safe = true }; };\n    arr[ITERATOR] = function () { return iter; };\n    exec(arr);\n  } catch (e) { /* empty */ }\n  return safe;\n};\n\n\n/***/ }),\n\n/***/ \"5fe5\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar toInteger = __webpack_require__(\"c481\");\nvar max = Math.max;\nvar min = Math.min;\nmodule.exports = function (index, length) {\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n\n\n/***/ }),\n\n/***/ \"644a\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// 22.1.3.31 Array.prototype[@@unscopables]\nvar UNSCOPABLES = __webpack_require__(\"8b37\")('unscopables');\nvar ArrayProto = Array.prototype;\nif (ArrayProto[UNSCOPABLES] == undefined) __webpack_require__(\"743d\")(ArrayProto, UNSCOPABLES, {});\nmodule.exports = function (key) {\n  ArrayProto[UNSCOPABLES][key] = true;\n};\n\n\n/***/ }),\n\n/***/ \"6462\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = __webpack_require__(\"94ac\");\n// eslint-disable-next-line no-prototype-builtins\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n\n\n/***/ }),\n\n/***/ \"648a\":\n/***/ (function(module, exports) {\n\nmodule.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n\n\n/***/ }),\n\n/***/ \"6594\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar def = __webpack_require__(\"ddf7\").f;\nvar has = __webpack_require__(\"03b3\");\nvar TAG = __webpack_require__(\"8b37\")('toStringTag');\n\nmodule.exports = function (it, tag, stat) {\n  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });\n};\n\n\n/***/ }),\n\n/***/ \"7266\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar create = __webpack_require__(\"a7b8\");\nvar descriptor = __webpack_require__(\"7dea\");\nvar setToStringTag = __webpack_require__(\"6594\");\nvar IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\n__webpack_require__(\"743d\")(IteratorPrototype, __webpack_require__(\"8b37\")('iterator'), function () { return this; });\n\nmodule.exports = function (Constructor, NAME, next) {\n  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n\n\n/***/ }),\n\n/***/ \"7364\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar dP = __webpack_require__(\"ddf7\").f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || __webpack_require__(\"dad2\") && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n\n\n/***/ }),\n\n/***/ \"743d\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar dP = __webpack_require__(\"ddf7\");\nvar createDesc = __webpack_require__(\"7dea\");\nmodule.exports = __webpack_require__(\"dad2\") ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n\n\n/***/ }),\n\n/***/ \"7656\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar LIBRARY = __webpack_require__(\"ca2b\");\nvar $export = __webpack_require__(\"b2f5\");\nvar redefine = __webpack_require__(\"e5ef\");\nvar hide = __webpack_require__(\"743d\");\nvar Iterators = __webpack_require__(\"14fc\");\nvar $iterCreate = __webpack_require__(\"7266\");\nvar setToStringTag = __webpack_require__(\"6594\");\nvar getPrototypeOf = __webpack_require__(\"4713\");\nvar ITERATOR = __webpack_require__(\"8b37\")('iterator');\nvar BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`\nvar FF_ITERATOR = '@@iterator';\nvar KEYS = 'keys';\nvar VALUES = 'values';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function (kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n    switch (kind) {\n      case KEYS: return function keys() { return new Constructor(this, kind); };\n      case VALUES: return function values() { return new Constructor(this, kind); };\n    } return function entries() { return new Constructor(this, kind); };\n  };\n  var TAG = NAME + ' Iterator';\n  var DEF_VALUES = DEFAULT == VALUES;\n  var VALUES_BUG = false;\n  var proto = Base.prototype;\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n  var $default = $native || getMethod(DEFAULT);\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n  var methods, key, IteratorPrototype;\n  // Fix native\n  if ($anyNative) {\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n      // Set @@toStringTag to native iterators\n      setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n    $default = function values() { return $native.call(this); };\n  }\n  // Define iterator\n  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG] = returnThis;\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n\n\n/***/ }),\n\n/***/ \"7d30\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n// 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)\n\nvar toObject = __webpack_require__(\"db4b\");\nvar toAbsoluteIndex = __webpack_require__(\"5fe5\");\nvar toLength = __webpack_require__(\"b146\");\n\nmodule.exports = [].copyWithin || function copyWithin(target /* = 0 */, start /* = 0, end = @length */) {\n  var O = toObject(this);\n  var len = toLength(O.length);\n  var to = toAbsoluteIndex(target, len);\n  var from = toAbsoluteIndex(start, len);\n  var end = arguments.length > 2 ? arguments[2] : undefined;\n  var count = Math.min((end === undefined ? len : toAbsoluteIndex(end, len)) - from, len - to);\n  var inc = 1;\n  if (from < to && to < from + count) {\n    inc = -1;\n    from += count - 1;\n    to += count - 1;\n  }\n  while (count-- > 0) {\n    if (from in O) O[to] = O[from];\n    else delete O[to];\n    to += inc;\n    from += inc;\n  } return O;\n};\n\n\n/***/ }),\n\n/***/ \"7dea\":\n/***/ (function(module, exports) {\n\nmodule.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n\n\n/***/ }),\n\n/***/ \"88dd\":\n/***/ (function(module, exports) {\n\nmodule.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n\n\n/***/ }),\n\n/***/ \"8b37\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar store = __webpack_require__(\"adbd\")('wks');\nvar uid = __webpack_require__(\"9d01\");\nvar Symbol = __webpack_require__(\"3754\").Symbol;\nvar USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function (name) {\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};\n\n$exports.store = store;\n\n\n/***/ }),\n\n/***/ \"8bbf\":\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE__8bbf__;\n\n/***/ }),\n\n/***/ \"9241\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// https://tc39.github.io/ecma262/#sec-toindex\nvar toInteger = __webpack_require__(\"c481\");\nvar toLength = __webpack_require__(\"b146\");\nmodule.exports = function (it) {\n  if (it === undefined) return 0;\n  var number = toInteger(it);\n  var length = toLength(number);\n  if (number !== length) throw RangeError('Wrong length!');\n  return length;\n};\n\n\n/***/ }),\n\n/***/ \"9253\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nif (__webpack_require__(\"dad2\")) {\n  var LIBRARY = __webpack_require__(\"ca2b\");\n  var global = __webpack_require__(\"3754\");\n  var fails = __webpack_require__(\"b6f1\");\n  var $export = __webpack_require__(\"b2f5\");\n  var $typed = __webpack_require__(\"98ce\");\n  var $buffer = __webpack_require__(\"4169\");\n  var ctx = __webpack_require__(\"01f5\");\n  var anInstance = __webpack_require__(\"d74e\");\n  var propertyDesc = __webpack_require__(\"7dea\");\n  var hide = __webpack_require__(\"743d\");\n  var redefineAll = __webpack_require__(\"f216\");\n  var toInteger = __webpack_require__(\"c481\");\n  var toLength = __webpack_require__(\"b146\");\n  var toIndex = __webpack_require__(\"9241\");\n  var toAbsoluteIndex = __webpack_require__(\"5fe5\");\n  var toPrimitive = __webpack_require__(\"5325\");\n  var has = __webpack_require__(\"03b3\");\n  var classof = __webpack_require__(\"4819\");\n  var isObject = __webpack_require__(\"88dd\");\n  var toObject = __webpack_require__(\"db4b\");\n  var isArrayIter = __webpack_require__(\"c847\");\n  var create = __webpack_require__(\"a7b8\");\n  var getPrototypeOf = __webpack_require__(\"4713\");\n  var gOPN = __webpack_require__(\"a891\").f;\n  var getIterFn = __webpack_require__(\"1a9b\");\n  var uid = __webpack_require__(\"9d01\");\n  var wks = __webpack_require__(\"8b37\");\n  var createArrayMethod = __webpack_require__(\"2d43\");\n  var createArrayIncludes = __webpack_require__(\"9f58\");\n  var speciesConstructor = __webpack_require__(\"0d5f\");\n  var ArrayIterators = __webpack_require__(\"dac5\");\n  var Iterators = __webpack_require__(\"14fc\");\n  var $iterDetect = __webpack_require__(\"5b55\");\n  var setSpecies = __webpack_require__(\"c650\");\n  var arrayFill = __webpack_require__(\"15c2\");\n  var arrayCopyWithin = __webpack_require__(\"7d30\");\n  var $DP = __webpack_require__(\"ddf7\");\n  var $GOPD = __webpack_require__(\"acb9\");\n  var dP = $DP.f;\n  var gOPD = $GOPD.f;\n  var RangeError = global.RangeError;\n  var TypeError = global.TypeError;\n  var Uint8Array = global.Uint8Array;\n  var ARRAY_BUFFER = 'ArrayBuffer';\n  var SHARED_BUFFER = 'Shared' + ARRAY_BUFFER;\n  var BYTES_PER_ELEMENT = 'BYTES_PER_ELEMENT';\n  var PROTOTYPE = 'prototype';\n  var ArrayProto = Array[PROTOTYPE];\n  var $ArrayBuffer = $buffer.ArrayBuffer;\n  var $DataView = $buffer.DataView;\n  var arrayForEach = createArrayMethod(0);\n  var arrayFilter = createArrayMethod(2);\n  var arraySome = createArrayMethod(3);\n  var arrayEvery = createArrayMethod(4);\n  var arrayFind = createArrayMethod(5);\n  var arrayFindIndex = createArrayMethod(6);\n  var arrayIncludes = createArrayIncludes(true);\n  var arrayIndexOf = createArrayIncludes(false);\n  var arrayValues = ArrayIterators.values;\n  var arrayKeys = ArrayIterators.keys;\n  var arrayEntries = ArrayIterators.entries;\n  var arrayLastIndexOf = ArrayProto.lastIndexOf;\n  var arrayReduce = ArrayProto.reduce;\n  var arrayReduceRight = ArrayProto.reduceRight;\n  var arrayJoin = ArrayProto.join;\n  var arraySort = ArrayProto.sort;\n  var arraySlice = ArrayProto.slice;\n  var arrayToString = ArrayProto.toString;\n  var arrayToLocaleString = ArrayProto.toLocaleString;\n  var ITERATOR = wks('iterator');\n  var TAG = wks('toStringTag');\n  var TYPED_CONSTRUCTOR = uid('typed_constructor');\n  var DEF_CONSTRUCTOR = uid('def_constructor');\n  var ALL_CONSTRUCTORS = $typed.CONSTR;\n  var TYPED_ARRAY = $typed.TYPED;\n  var VIEW = $typed.VIEW;\n  var WRONG_LENGTH = 'Wrong length!';\n\n  var $map = createArrayMethod(1, function (O, length) {\n    return allocate(speciesConstructor(O, O[DEF_CONSTRUCTOR]), length);\n  });\n\n  var LITTLE_ENDIAN = fails(function () {\n    // eslint-disable-next-line no-undef\n    return new Uint8Array(new Uint16Array([1]).buffer)[0] === 1;\n  });\n\n  var FORCED_SET = !!Uint8Array && !!Uint8Array[PROTOTYPE].set && fails(function () {\n    new Uint8Array(1).set({});\n  });\n\n  var toOffset = function (it, BYTES) {\n    var offset = toInteger(it);\n    if (offset < 0 || offset % BYTES) throw RangeError('Wrong offset!');\n    return offset;\n  };\n\n  var validate = function (it) {\n    if (isObject(it) && TYPED_ARRAY in it) return it;\n    throw TypeError(it + ' is not a typed array!');\n  };\n\n  var allocate = function (C, length) {\n    if (!(isObject(C) && TYPED_CONSTRUCTOR in C)) {\n      throw TypeError('It is not a typed array constructor!');\n    } return new C(length);\n  };\n\n  var speciesFromList = function (O, list) {\n    return fromList(speciesConstructor(O, O[DEF_CONSTRUCTOR]), list);\n  };\n\n  var fromList = function (C, list) {\n    var index = 0;\n    var length = list.length;\n    var result = allocate(C, length);\n    while (length > index) result[index] = list[index++];\n    return result;\n  };\n\n  var addGetter = function (it, key, internal) {\n    dP(it, key, { get: function () { return this._d[internal]; } });\n  };\n\n  var $from = function from(source /* , mapfn, thisArg */) {\n    var O = toObject(source);\n    var aLen = arguments.length;\n    var mapfn = aLen > 1 ? arguments[1] : undefined;\n    var mapping = mapfn !== undefined;\n    var iterFn = getIterFn(O);\n    var i, length, values, result, step, iterator;\n    if (iterFn != undefined && !isArrayIter(iterFn)) {\n      for (iterator = iterFn.call(O), values = [], i = 0; !(step = iterator.next()).done; i++) {\n        values.push(step.value);\n      } O = values;\n    }\n    if (mapping && aLen > 2) mapfn = ctx(mapfn, arguments[2], 2);\n    for (i = 0, length = toLength(O.length), result = allocate(this, length); length > i; i++) {\n      result[i] = mapping ? mapfn(O[i], i) : O[i];\n    }\n    return result;\n  };\n\n  var $of = function of(/* ...items */) {\n    var index = 0;\n    var length = arguments.length;\n    var result = allocate(this, length);\n    while (length > index) result[index] = arguments[index++];\n    return result;\n  };\n\n  // iOS Safari 6.x fails here\n  var TO_LOCALE_BUG = !!Uint8Array && fails(function () { arrayToLocaleString.call(new Uint8Array(1)); });\n\n  var $toLocaleString = function toLocaleString() {\n    return arrayToLocaleString.apply(TO_LOCALE_BUG ? arraySlice.call(validate(this)) : validate(this), arguments);\n  };\n\n  var proto = {\n    copyWithin: function copyWithin(target, start /* , end */) {\n      return arrayCopyWithin.call(validate(this), target, start, arguments.length > 2 ? arguments[2] : undefined);\n    },\n    every: function every(callbackfn /* , thisArg */) {\n      return arrayEvery(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    fill: function fill(value /* , start, end */) { // eslint-disable-line no-unused-vars\n      return arrayFill.apply(validate(this), arguments);\n    },\n    filter: function filter(callbackfn /* , thisArg */) {\n      return speciesFromList(this, arrayFilter(validate(this), callbackfn,\n        arguments.length > 1 ? arguments[1] : undefined));\n    },\n    find: function find(predicate /* , thisArg */) {\n      return arrayFind(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    findIndex: function findIndex(predicate /* , thisArg */) {\n      return arrayFindIndex(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    forEach: function forEach(callbackfn /* , thisArg */) {\n      arrayForEach(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    indexOf: function indexOf(searchElement /* , fromIndex */) {\n      return arrayIndexOf(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    includes: function includes(searchElement /* , fromIndex */) {\n      return arrayIncludes(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    join: function join(separator) { // eslint-disable-line no-unused-vars\n      return arrayJoin.apply(validate(this), arguments);\n    },\n    lastIndexOf: function lastIndexOf(searchElement /* , fromIndex */) { // eslint-disable-line no-unused-vars\n      return arrayLastIndexOf.apply(validate(this), arguments);\n    },\n    map: function map(mapfn /* , thisArg */) {\n      return $map(validate(this), mapfn, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    reduce: function reduce(callbackfn /* , initialValue */) { // eslint-disable-line no-unused-vars\n      return arrayReduce.apply(validate(this), arguments);\n    },\n    reduceRight: function reduceRight(callbackfn /* , initialValue */) { // eslint-disable-line no-unused-vars\n      return arrayReduceRight.apply(validate(this), arguments);\n    },\n    reverse: function reverse() {\n      var that = this;\n      var length = validate(that).length;\n      var middle = Math.floor(length / 2);\n      var index = 0;\n      var value;\n      while (index < middle) {\n        value = that[index];\n        that[index++] = that[--length];\n        that[length] = value;\n      } return that;\n    },\n    some: function some(callbackfn /* , thisArg */) {\n      return arraySome(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    sort: function sort(comparefn) {\n      return arraySort.call(validate(this), comparefn);\n    },\n    subarray: function subarray(begin, end) {\n      var O = validate(this);\n      var length = O.length;\n      var $begin = toAbsoluteIndex(begin, length);\n      return new (speciesConstructor(O, O[DEF_CONSTRUCTOR]))(\n        O.buffer,\n        O.byteOffset + $begin * O.BYTES_PER_ELEMENT,\n        toLength((end === undefined ? length : toAbsoluteIndex(end, length)) - $begin)\n      );\n    }\n  };\n\n  var $slice = function slice(start, end) {\n    return speciesFromList(this, arraySlice.call(validate(this), start, end));\n  };\n\n  var $set = function set(arrayLike /* , offset */) {\n    validate(this);\n    var offset = toOffset(arguments[1], 1);\n    var length = this.length;\n    var src = toObject(arrayLike);\n    var len = toLength(src.length);\n    var index = 0;\n    if (len + offset > length) throw RangeError(WRONG_LENGTH);\n    while (index < len) this[offset + index] = src[index++];\n  };\n\n  var $iterators = {\n    entries: function entries() {\n      return arrayEntries.call(validate(this));\n    },\n    keys: function keys() {\n      return arrayKeys.call(validate(this));\n    },\n    values: function values() {\n      return arrayValues.call(validate(this));\n    }\n  };\n\n  var isTAIndex = function (target, key) {\n    return isObject(target)\n      && target[TYPED_ARRAY]\n      && typeof key != 'symbol'\n      && key in target\n      && String(+key) == String(key);\n  };\n  var $getDesc = function getOwnPropertyDescriptor(target, key) {\n    return isTAIndex(target, key = toPrimitive(key, true))\n      ? propertyDesc(2, target[key])\n      : gOPD(target, key);\n  };\n  var $setDesc = function defineProperty(target, key, desc) {\n    if (isTAIndex(target, key = toPrimitive(key, true))\n      && isObject(desc)\n      && has(desc, 'value')\n      && !has(desc, 'get')\n      && !has(desc, 'set')\n      // TODO: add validation descriptor w/o calling accessors\n      && !desc.configurable\n      && (!has(desc, 'writable') || desc.writable)\n      && (!has(desc, 'enumerable') || desc.enumerable)\n    ) {\n      target[key] = desc.value;\n      return target;\n    } return dP(target, key, desc);\n  };\n\n  if (!ALL_CONSTRUCTORS) {\n    $GOPD.f = $getDesc;\n    $DP.f = $setDesc;\n  }\n\n  $export($export.S + $export.F * !ALL_CONSTRUCTORS, 'Object', {\n    getOwnPropertyDescriptor: $getDesc,\n    defineProperty: $setDesc\n  });\n\n  if (fails(function () { arrayToString.call({}); })) {\n    arrayToString = arrayToLocaleString = function toString() {\n      return arrayJoin.call(this);\n    };\n  }\n\n  var $TypedArrayPrototype$ = redefineAll({}, proto);\n  redefineAll($TypedArrayPrototype$, $iterators);\n  hide($TypedArrayPrototype$, ITERATOR, $iterators.values);\n  redefineAll($TypedArrayPrototype$, {\n    slice: $slice,\n    set: $set,\n    constructor: function () { /* noop */ },\n    toString: arrayToString,\n    toLocaleString: $toLocaleString\n  });\n  addGetter($TypedArrayPrototype$, 'buffer', 'b');\n  addGetter($TypedArrayPrototype$, 'byteOffset', 'o');\n  addGetter($TypedArrayPrototype$, 'byteLength', 'l');\n  addGetter($TypedArrayPrototype$, 'length', 'e');\n  dP($TypedArrayPrototype$, TAG, {\n    get: function () { return this[TYPED_ARRAY]; }\n  });\n\n  // eslint-disable-next-line max-statements\n  module.exports = function (KEY, BYTES, wrapper, CLAMPED) {\n    CLAMPED = !!CLAMPED;\n    var NAME = KEY + (CLAMPED ? 'Clamped' : '') + 'Array';\n    var GETTER = 'get' + KEY;\n    var SETTER = 'set' + KEY;\n    var TypedArray = global[NAME];\n    var Base = TypedArray || {};\n    var TAC = TypedArray && getPrototypeOf(TypedArray);\n    var FORCED = !TypedArray || !$typed.ABV;\n    var O = {};\n    var TypedArrayPrototype = TypedArray && TypedArray[PROTOTYPE];\n    var getter = function (that, index) {\n      var data = that._d;\n      return data.v[GETTER](index * BYTES + data.o, LITTLE_ENDIAN);\n    };\n    var setter = function (that, index, value) {\n      var data = that._d;\n      if (CLAMPED) value = (value = Math.round(value)) < 0 ? 0 : value > 0xff ? 0xff : value & 0xff;\n      data.v[SETTER](index * BYTES + data.o, value, LITTLE_ENDIAN);\n    };\n    var addElement = function (that, index) {\n      dP(that, index, {\n        get: function () {\n          return getter(this, index);\n        },\n        set: function (value) {\n          return setter(this, index, value);\n        },\n        enumerable: true\n      });\n    };\n    if (FORCED) {\n      TypedArray = wrapper(function (that, data, $offset, $length) {\n        anInstance(that, TypedArray, NAME, '_d');\n        var index = 0;\n        var offset = 0;\n        var buffer, byteLength, length, klass;\n        if (!isObject(data)) {\n          length = toIndex(data);\n          byteLength = length * BYTES;\n          buffer = new $ArrayBuffer(byteLength);\n        } else if (data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER) {\n          buffer = data;\n          offset = toOffset($offset, BYTES);\n          var $len = data.byteLength;\n          if ($length === undefined) {\n            if ($len % BYTES) throw RangeError(WRONG_LENGTH);\n            byteLength = $len - offset;\n            if (byteLength < 0) throw RangeError(WRONG_LENGTH);\n          } else {\n            byteLength = toLength($length) * BYTES;\n            if (byteLength + offset > $len) throw RangeError(WRONG_LENGTH);\n          }\n          length = byteLength / BYTES;\n        } else if (TYPED_ARRAY in data) {\n          return fromList(TypedArray, data);\n        } else {\n          return $from.call(TypedArray, data);\n        }\n        hide(that, '_d', {\n          b: buffer,\n          o: offset,\n          l: byteLength,\n          e: length,\n          v: new $DataView(buffer)\n        });\n        while (index < length) addElement(that, index++);\n      });\n      TypedArrayPrototype = TypedArray[PROTOTYPE] = create($TypedArrayPrototype$);\n      hide(TypedArrayPrototype, 'constructor', TypedArray);\n    } else if (!fails(function () {\n      TypedArray(1);\n    }) || !fails(function () {\n      new TypedArray(-1); // eslint-disable-line no-new\n    }) || !$iterDetect(function (iter) {\n      new TypedArray(); // eslint-disable-line no-new\n      new TypedArray(null); // eslint-disable-line no-new\n      new TypedArray(1.5); // eslint-disable-line no-new\n      new TypedArray(iter); // eslint-disable-line no-new\n    }, true)) {\n      TypedArray = wrapper(function (that, data, $offset, $length) {\n        anInstance(that, TypedArray, NAME);\n        var klass;\n        // `ws` module bug, temporarily remove validation length for Uint8Array\n        // https://github.com/websockets/ws/pull/645\n        if (!isObject(data)) return new Base(toIndex(data));\n        if (data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER) {\n          return $length !== undefined\n            ? new Base(data, toOffset($offset, BYTES), $length)\n            : $offset !== undefined\n              ? new Base(data, toOffset($offset, BYTES))\n              : new Base(data);\n        }\n        if (TYPED_ARRAY in data) return fromList(TypedArray, data);\n        return $from.call(TypedArray, data);\n      });\n      arrayForEach(TAC !== Function.prototype ? gOPN(Base).concat(gOPN(TAC)) : gOPN(Base), function (key) {\n        if (!(key in TypedArray)) hide(TypedArray, key, Base[key]);\n      });\n      TypedArray[PROTOTYPE] = TypedArrayPrototype;\n      if (!LIBRARY) TypedArrayPrototype.constructor = TypedArray;\n    }\n    var $nativeIterator = TypedArrayPrototype[ITERATOR];\n    var CORRECT_ITER_NAME = !!$nativeIterator\n      && ($nativeIterator.name == 'values' || $nativeIterator.name == undefined);\n    var $iterator = $iterators.values;\n    hide(TypedArray, TYPED_CONSTRUCTOR, true);\n    hide(TypedArrayPrototype, TYPED_ARRAY, NAME);\n    hide(TypedArrayPrototype, VIEW, true);\n    hide(TypedArrayPrototype, DEF_CONSTRUCTOR, TypedArray);\n\n    if (CLAMPED ? new TypedArray(1)[TAG] != NAME : !(TAG in TypedArrayPrototype)) {\n      dP(TypedArrayPrototype, TAG, {\n        get: function () { return NAME; }\n      });\n    }\n\n    O[NAME] = TypedArray;\n\n    $export($export.G + $export.W + $export.F * (TypedArray != Base), O);\n\n    $export($export.S, NAME, {\n      BYTES_PER_ELEMENT: BYTES\n    });\n\n    $export($export.S + $export.F * fails(function () { Base.of.call(TypedArray, 1); }), NAME, {\n      from: $from,\n      of: $of\n    });\n\n    if (!(BYTES_PER_ELEMENT in TypedArrayPrototype)) hide(TypedArrayPrototype, BYTES_PER_ELEMENT, BYTES);\n\n    $export($export.P, NAME, proto);\n\n    setSpecies(NAME);\n\n    $export($export.P + $export.F * FORCED_SET, NAME, { set: $set });\n\n    $export($export.P + $export.F * !CORRECT_ITER_NAME, NAME, $iterators);\n\n    if (!LIBRARY && TypedArrayPrototype.toString != arrayToString) TypedArrayPrototype.toString = arrayToString;\n\n    $export($export.P + $export.F * fails(function () {\n      new TypedArray(1).slice();\n    }), NAME, { slice: $slice });\n\n    $export($export.P + $export.F * (fails(function () {\n      return [1, 2].toLocaleString() != new TypedArray([1, 2]).toLocaleString();\n    }) || !fails(function () {\n      TypedArrayPrototype.toLocaleString.call([1, 2]);\n    })), NAME, { toLocaleString: $toLocaleString });\n\n    Iterators[NAME] = CORRECT_ITER_NAME ? $nativeIterator : $iterator;\n    if (!LIBRARY && !CORRECT_ITER_NAME) hide(TypedArrayPrototype, ITERATOR, $iterator);\n  };\n} else module.exports = function () { /* empty */ };\n\n\n/***/ }),\n\n/***/ \"94ac\":\n/***/ (function(module, exports) {\n\nvar toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n\n\n/***/ }),\n\n/***/ \"98ce\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar global = __webpack_require__(\"3754\");\nvar hide = __webpack_require__(\"743d\");\nvar uid = __webpack_require__(\"9d01\");\nvar TYPED = uid('typed_array');\nvar VIEW = uid('view');\nvar ABV = !!(global.ArrayBuffer && global.DataView);\nvar CONSTR = ABV;\nvar i = 0;\nvar l = 9;\nvar Typed;\n\nvar TypedArrayConstructors = (\n  'Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array'\n).split(',');\n\nwhile (i < l) {\n  if (Typed = global[TypedArrayConstructors[i++]]) {\n    hide(Typed.prototype, TYPED, true);\n    hide(Typed.prototype, VIEW, true);\n  } else CONSTR = false;\n}\n\nmodule.exports = {\n  ABV: ABV,\n  CONSTR: CONSTR,\n  TYPED: TYPED,\n  VIEW: VIEW\n};\n\n\n/***/ }),\n\n/***/ \"9d01\":\n/***/ (function(module, exports) {\n\nvar id = 0;\nvar px = Math.random();\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n\n\n/***/ }),\n\n/***/ \"9f58\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = __webpack_require__(\"3a68\");\nvar toLength = __webpack_require__(\"b146\");\nvar toAbsoluteIndex = __webpack_require__(\"5fe5\");\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\n      if (O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\n\n/***/ }),\n\n/***/ \"a013\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isObject = __webpack_require__(\"88dd\");\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n\n\n/***/ }),\n\n/***/ \"a4cc\":\n/***/ (function(module, exports) {\n\nvar core = module.exports = { version: '2.6.9' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n\n\n/***/ }),\n\n/***/ \"a7b8\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\nvar anObject = __webpack_require__(\"a013\");\nvar dPs = __webpack_require__(\"bf29\");\nvar enumBugKeys = __webpack_require__(\"b4e0\");\nvar IE_PROTO = __webpack_require__(\"dfab\")('IE_PROTO');\nvar Empty = function () { /* empty */ };\nvar PROTOTYPE = 'prototype';\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = __webpack_require__(\"e3e0\")('iframe');\n  var i = enumBugKeys.length;\n  var lt = '<';\n  var gt = '>';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  __webpack_require__(\"265a\").appendChild(iframe);\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n  // createDict = iframe.contentWindow.Object;\n  // html.removeChild(iframe);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];\n  return createDict();\n};\n\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n\n\n/***/ }),\n\n/***/ \"a891\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)\nvar $keys = __webpack_require__(\"fb6d\");\nvar hiddenKeys = __webpack_require__(\"b4e0\").concat('length', 'prototype');\n\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return $keys(O, hiddenKeys);\n};\n\n\n/***/ }),\n\n/***/ \"acb9\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar pIE = __webpack_require__(\"d217\");\nvar createDesc = __webpack_require__(\"7dea\");\nvar toIObject = __webpack_require__(\"3a68\");\nvar toPrimitive = __webpack_require__(\"5325\");\nvar has = __webpack_require__(\"03b3\");\nvar IE8_DOM_DEFINE = __webpack_require__(\"568a\");\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nexports.f = __webpack_require__(\"dad2\") ? gOPD : function getOwnPropertyDescriptor(O, P) {\n  O = toIObject(O);\n  P = toPrimitive(P, true);\n  if (IE8_DOM_DEFINE) try {\n    return gOPD(O, P);\n  } catch (e) { /* empty */ }\n  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);\n};\n\n\n/***/ }),\n\n/***/ \"adbd\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar core = __webpack_require__(\"a4cc\");\nvar global = __webpack_require__(\"3754\");\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: core.version,\n  mode: __webpack_require__(\"ca2b\") ? 'pure' : 'global',\n  copyright: '© 2019 Denis Pushkarev (zloirock.ru)'\n});\n\n\n/***/ }),\n\n/***/ \"b146\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// 7.1.15 ToLength\nvar toInteger = __webpack_require__(\"c481\");\nvar min = Math.min;\nmodule.exports = function (it) {\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n\n\n/***/ }),\n\n/***/ \"b2f5\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar global = __webpack_require__(\"3754\");\nvar core = __webpack_require__(\"a4cc\");\nvar hide = __webpack_require__(\"743d\");\nvar redefine = __webpack_require__(\"e5ef\");\nvar ctx = __webpack_require__(\"01f5\");\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE];\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});\n  var key, own, out, exp;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    // export native or passed\n    out = (own ? target : source)[key];\n    // bind timers to global for call from export context\n    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // extend global\n    if (target) redefine(target, key, out, type & $export.U);\n    // export\n    if (exports[key] != out) hide(exports, key, exp);\n    if (IS_PROTO && expProto[key] != out) expProto[key] = out;\n  }\n};\nglobal.core = core;\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n\n\n/***/ }),\n\n/***/ \"b4e0\":\n/***/ (function(module, exports) {\n\n// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n\n\n/***/ }),\n\n/***/ \"b5b8\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// 7.2.2 IsArray(argument)\nvar cof = __webpack_require__(\"94ac\");\nmodule.exports = Array.isArray || function isArray(arg) {\n  return cof(arg) == 'Array';\n};\n\n\n/***/ }),\n\n/***/ \"b6f1\":\n/***/ (function(module, exports) {\n\nmodule.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n\n\n/***/ }),\n\n/***/ \"bf29\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar dP = __webpack_require__(\"ddf7\");\nvar anObject = __webpack_require__(\"a013\");\nvar getKeys = __webpack_require__(\"cfc7\");\n\nmodule.exports = __webpack_require__(\"dad2\") ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = getKeys(Properties);\n  var length = keys.length;\n  var i = 0;\n  var P;\n  while (length > i) dP.f(O, P = keys[i++], Properties[P]);\n  return O;\n};\n\n\n/***/ }),\n\n/***/ \"c481\":\n/***/ (function(module, exports) {\n\n// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n\n\n/***/ }),\n\n/***/ \"c497\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n\n// CONCATENATED MODULE: ./node_modules/_@vue_cli-service@3.8.4@@vue/cli-service/lib/commands/build/setPublicPath.js\n// This file is imported into lib/wc client bundles.\n\nif (typeof window !== 'undefined') {\n  if (true) {\n    __webpack_require__(\"e67d\")\n  }\n\n  var setPublicPath_i\n  if ((setPublicPath_i = window.document.currentScript) && (setPublicPath_i = setPublicPath_i.src.match(/(.+\\/)[^/]+\\.js(\\?.*)?$/))) {\n    __webpack_require__.p = setPublicPath_i[1] // eslint-disable-line\n  }\n}\n\n// Indicate to webpack that this file can be concatenated\n/* harmony default export */ var setPublicPath = (null);\n\n// EXTERNAL MODULE: ./node_modules/_core-js@2.6.9@core-js/modules/es6.function.name.js\nvar es6_function_name = __webpack_require__(\"7364\");\n\n// EXTERNAL MODULE: ./node_modules/_core-js@2.6.9@core-js/modules/web.dom.iterable.js\nvar web_dom_iterable = __webpack_require__(\"f763\");\n\n// EXTERNAL MODULE: external {\"commonjs\":\"vue\",\"commonjs2\":\"vue\",\"root\":\"Vue\"}\nvar external_commonjs_vue_commonjs2_vue_root_Vue_ = __webpack_require__(\"8bbf\");\nvar external_commonjs_vue_commonjs2_vue_root_Vue_default = /*#__PURE__*/__webpack_require__.n(external_commonjs_vue_commonjs2_vue_root_Vue_);\n\n// CONCATENATED MODULE: ./node_modules/_three@0.105.2@three/build/three.module.js\n// Polyfills\n\nif ( Number.EPSILON === undefined ) {\n\n\tNumber.EPSILON = Math.pow( 2, - 52 );\n\n}\n\nif ( Number.isInteger === undefined ) {\n\n\t// Missing in IE\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger\n\n\tNumber.isInteger = function ( value ) {\n\n\t\treturn typeof value === 'number' && isFinite( value ) && Math.floor( value ) === value;\n\n\t};\n\n}\n\n//\n\nif ( Math.sign === undefined ) {\n\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\n\n\tMath.sign = function ( x ) {\n\n\t\treturn ( x < 0 ) ? - 1 : ( x > 0 ) ? 1 : + x;\n\n\t};\n\n}\n\nif ( 'name' in Function.prototype === false ) {\n\n\t// Missing in IE\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\n\n\tObject.defineProperty( Function.prototype, 'name', {\n\n\t\tget: function () {\n\n\t\t\treturn this.toString().match( /^\\s*function\\s*([^\\(\\s]*)/ )[ 1 ];\n\n\t\t}\n\n\t} );\n\n}\n\nif ( Object.assign === undefined ) {\n\n\t// Missing in IE\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n\n\t( function () {\n\n\t\tObject.assign = function ( target ) {\n\n\t\t\tif ( target === undefined || target === null ) {\n\n\t\t\t\tthrow new TypeError( 'Cannot convert undefined or null to object' );\n\n\t\t\t}\n\n\t\t\tvar output = Object( target );\n\n\t\t\tfor ( var index = 1; index < arguments.length; index ++ ) {\n\n\t\t\t\tvar source = arguments[ index ];\n\n\t\t\t\tif ( source !== undefined && source !== null ) {\n\n\t\t\t\t\tfor ( var nextKey in source ) {\n\n\t\t\t\t\t\tif ( Object.prototype.hasOwnProperty.call( source, nextKey ) ) {\n\n\t\t\t\t\t\t\toutput[ nextKey ] = source[ nextKey ];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn output;\n\n\t\t};\n\n\t} )();\n\n}\n\n/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */\n\nfunction EventDispatcher() {}\n\nObject.assign( EventDispatcher.prototype, {\n\n\taddEventListener: function ( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) this._listeners = {};\n\n\t\tvar listeners = this._listeners;\n\n\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\tlisteners[ type ] = [];\n\n\t\t}\n\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\tlisteners[ type ].push( listener );\n\n\t\t}\n\n\t},\n\n\thasEventListener: function ( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return false;\n\n\t\tvar listeners = this._listeners;\n\n\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n\n\t},\n\n\tremoveEventListener: function ( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tvar listeners = this._listeners;\n\t\tvar listenerArray = listeners[ type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tvar index = listenerArray.indexOf( listener );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tdispatchEvent: function ( event ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tvar listeners = this._listeners;\n\t\tvar listenerArray = listeners[ event.type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tevent.target = this;\n\n\t\t\tvar array = listenerArray.slice( 0 );\n\n\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n} );\n\nvar REVISION = '105';\nvar MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2 };\nvar CullFaceNone = 0;\nvar CullFaceBack = 1;\nvar CullFaceFront = 2;\nvar CullFaceFrontBack = 3;\nvar FrontFaceDirectionCW = 0;\nvar FrontFaceDirectionCCW = 1;\nvar BasicShadowMap = 0;\nvar PCFShadowMap = 1;\nvar PCFSoftShadowMap = 2;\nvar FrontSide = 0;\nvar BackSide = 1;\nvar DoubleSide = 2;\nvar FlatShading = 1;\nvar SmoothShading = 2;\nvar NoColors = 0;\nvar FaceColors = 1;\nvar VertexColors = 2;\nvar NoBlending = 0;\nvar NormalBlending = 1;\nvar AdditiveBlending = 2;\nvar SubtractiveBlending = 3;\nvar MultiplyBlending = 4;\nvar CustomBlending = 5;\nvar AddEquation = 100;\nvar SubtractEquation = 101;\nvar ReverseSubtractEquation = 102;\nvar MinEquation = 103;\nvar MaxEquation = 104;\nvar ZeroFactor = 200;\nvar OneFactor = 201;\nvar SrcColorFactor = 202;\nvar OneMinusSrcColorFactor = 203;\nvar SrcAlphaFactor = 204;\nvar OneMinusSrcAlphaFactor = 205;\nvar DstAlphaFactor = 206;\nvar OneMinusDstAlphaFactor = 207;\nvar DstColorFactor = 208;\nvar OneMinusDstColorFactor = 209;\nvar SrcAlphaSaturateFactor = 210;\nvar NeverDepth = 0;\nvar AlwaysDepth = 1;\nvar LessDepth = 2;\nvar LessEqualDepth = 3;\nvar EqualDepth = 4;\nvar GreaterEqualDepth = 5;\nvar GreaterDepth = 6;\nvar NotEqualDepth = 7;\nvar MultiplyOperation = 0;\nvar MixOperation = 1;\nvar AddOperation = 2;\nvar NoToneMapping = 0;\nvar LinearToneMapping = 1;\nvar ReinhardToneMapping = 2;\nvar Uncharted2ToneMapping = 3;\nvar CineonToneMapping = 4;\nvar ACESFilmicToneMapping = 5;\n\nvar UVMapping = 300;\nvar CubeReflectionMapping = 301;\nvar CubeRefractionMapping = 302;\nvar EquirectangularReflectionMapping = 303;\nvar EquirectangularRefractionMapping = 304;\nvar SphericalReflectionMapping = 305;\nvar CubeUVReflectionMapping = 306;\nvar CubeUVRefractionMapping = 307;\nvar RepeatWrapping = 1000;\nvar ClampToEdgeWrapping = 1001;\nvar MirroredRepeatWrapping = 1002;\nvar NearestFilter = 1003;\nvar NearestMipMapNearestFilter = 1004;\nvar NearestMipMapLinearFilter = 1005;\nvar LinearFilter = 1006;\nvar LinearMipMapNearestFilter = 1007;\nvar LinearMipMapLinearFilter = 1008;\nvar UnsignedByteType = 1009;\nvar ByteType = 1010;\nvar ShortType = 1011;\nvar UnsignedShortType = 1012;\nvar IntType = 1013;\nvar UnsignedIntType = 1014;\nvar FloatType = 1015;\nvar HalfFloatType = 1016;\nvar UnsignedShort4444Type = 1017;\nvar UnsignedShort5551Type = 1018;\nvar UnsignedShort565Type = 1019;\nvar UnsignedInt248Type = 1020;\nvar AlphaFormat = 1021;\nvar RGBFormat = 1022;\nvar RGBAFormat = 1023;\nvar LuminanceFormat = 1024;\nvar LuminanceAlphaFormat = 1025;\nvar RGBEFormat = RGBAFormat;\nvar DepthFormat = 1026;\nvar DepthStencilFormat = 1027;\nvar RedFormat = 1028;\nvar RGB_S3TC_DXT1_Format = 33776;\nvar RGBA_S3TC_DXT1_Format = 33777;\nvar RGBA_S3TC_DXT3_Format = 33778;\nvar RGBA_S3TC_DXT5_Format = 33779;\nvar RGB_PVRTC_4BPPV1_Format = 35840;\nvar RGB_PVRTC_2BPPV1_Format = 35841;\nvar RGBA_PVRTC_4BPPV1_Format = 35842;\nvar RGBA_PVRTC_2BPPV1_Format = 35843;\nvar RGB_ETC1_Format = 36196;\nvar RGBA_ASTC_4x4_Format = 37808;\nvar RGBA_ASTC_5x4_Format = 37809;\nvar RGBA_ASTC_5x5_Format = 37810;\nvar RGBA_ASTC_6x5_Format = 37811;\nvar RGBA_ASTC_6x6_Format = 37812;\nvar RGBA_ASTC_8x5_Format = 37813;\nvar RGBA_ASTC_8x6_Format = 37814;\nvar RGBA_ASTC_8x8_Format = 37815;\nvar RGBA_ASTC_10x5_Format = 37816;\nvar RGBA_ASTC_10x6_Format = 37817;\nvar RGBA_ASTC_10x8_Format = 37818;\nvar RGBA_ASTC_10x10_Format = 37819;\nvar RGBA_ASTC_12x10_Format = 37820;\nvar RGBA_ASTC_12x12_Format = 37821;\nvar LoopOnce = 2200;\nvar LoopRepeat = 2201;\nvar LoopPingPong = 2202;\nvar InterpolateDiscrete = 2300;\nvar InterpolateLinear = 2301;\nvar InterpolateSmooth = 2302;\nvar ZeroCurvatureEnding = 2400;\nvar ZeroSlopeEnding = 2401;\nvar WrapAroundEnding = 2402;\nvar TrianglesDrawMode = 0;\nvar TriangleStripDrawMode = 1;\nvar TriangleFanDrawMode = 2;\nvar LinearEncoding = 3000;\nvar sRGBEncoding = 3001;\nvar GammaEncoding = 3007;\nvar RGBEEncoding = 3002;\nvar LogLuvEncoding = 3003;\nvar RGBM7Encoding = 3004;\nvar RGBM16Encoding = 3005;\nvar RGBDEncoding = 3006;\nvar BasicDepthPacking = 3200;\nvar RGBADepthPacking = 3201;\nvar TangentSpaceNormalMap = 0;\nvar ObjectSpaceNormalMap = 1;\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar _Math = {\n\n\tDEG2RAD: Math.PI / 180,\n\tRAD2DEG: 180 / Math.PI,\n\n\tgenerateUUID: ( function () {\n\n\t\t// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\n\n\t\tvar lut = [];\n\n\t\tfor ( var i = 0; i < 256; i ++ ) {\n\n\t\t\tlut[ i ] = ( i < 16 ? '0' : '' ) + ( i ).toString( 16 );\n\n\t\t}\n\n\t\treturn function generateUUID() {\n\n\t\t\tvar d0 = Math.random() * 0xffffffff | 0;\n\t\t\tvar d1 = Math.random() * 0xffffffff | 0;\n\t\t\tvar d2 = Math.random() * 0xffffffff | 0;\n\t\t\tvar d3 = Math.random() * 0xffffffff | 0;\n\t\t\tvar uuid = lut[ d0 & 0xff ] + lut[ d0 >> 8 & 0xff ] + lut[ d0 >> 16 & 0xff ] + lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t\tlut[ d1 & 0xff ] + lut[ d1 >> 8 & 0xff ] + '-' + lut[ d1 >> 16 & 0x0f | 0x40 ] + lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t\tlut[ d2 & 0x3f | 0x80 ] + lut[ d2 >> 8 & 0xff ] + '-' + lut[ d2 >> 16 & 0xff ] + lut[ d2 >> 24 & 0xff ] +\n\t\t\t\tlut[ d3 & 0xff ] + lut[ d3 >> 8 & 0xff ] + lut[ d3 >> 16 & 0xff ] + lut[ d3 >> 24 & 0xff ];\n\n\t\t\t// .toUpperCase() here flattens concatenated strings to save heap memory space.\n\t\t\treturn uuid.toUpperCase();\n\n\t\t};\n\n\t} )(),\n\n\tclamp: function ( value, min, max ) {\n\n\t\treturn Math.max( min, Math.min( max, value ) );\n\n\t},\n\n\t// compute euclidian modulo of m % n\n\t// https://en.wikipedia.org/wiki/Modulo_operation\n\n\teuclideanModulo: function ( n, m ) {\n\n\t\treturn ( ( n % m ) + m ) % m;\n\n\t},\n\n\t// Linear mapping from range <a1, a2> to range <b1, b2>\n\n\tmapLinear: function ( x, a1, a2, b1, b2 ) {\n\n\t\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n\t},\n\n\t// https://en.wikipedia.org/wiki/Linear_interpolation\n\n\tlerp: function ( x, y, t ) {\n\n\t\treturn ( 1 - t ) * x + t * y;\n\n\t},\n\n\t// http://en.wikipedia.org/wiki/Smoothstep\n\n\tsmoothstep: function ( x, min, max ) {\n\n\t\tif ( x <= min ) return 0;\n\t\tif ( x >= max ) return 1;\n\n\t\tx = ( x - min ) / ( max - min );\n\n\t\treturn x * x * ( 3 - 2 * x );\n\n\t},\n\n\tsmootherstep: function ( x, min, max ) {\n\n\t\tif ( x <= min ) return 0;\n\t\tif ( x >= max ) return 1;\n\n\t\tx = ( x - min ) / ( max - min );\n\n\t\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n\t},\n\n\t// Random integer from <low, high> interval\n\n\trandInt: function ( low, high ) {\n\n\t\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n\t},\n\n\t// Random float from <low, high> interval\n\n\trandFloat: function ( low, high ) {\n\n\t\treturn low + Math.random() * ( high - low );\n\n\t},\n\n\t// Random float from <-range/2, range/2> interval\n\n\trandFloatSpread: function ( range ) {\n\n\t\treturn range * ( 0.5 - Math.random() );\n\n\t},\n\n\tdegToRad: function ( degrees ) {\n\n\t\treturn degrees * _Math.DEG2RAD;\n\n\t},\n\n\tradToDeg: function ( radians ) {\n\n\t\treturn radians * _Math.RAD2DEG;\n\n\t},\n\n\tisPowerOfTwo: function ( value ) {\n\n\t\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n\t},\n\n\tceilPowerOfTwo: function ( value ) {\n\n\t\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n\t},\n\n\tfloorPowerOfTwo: function ( value ) {\n\n\t\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n\t}\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author philogb / http://blog.thejit.org/\n * @author egraether / http://egraether.com/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n */\n\nfunction Vector2( x, y ) {\n\n\tthis.x = x || 0;\n\tthis.y = y || 0;\n\n}\n\nObject.defineProperties( Vector2.prototype, {\n\n\t\"width\": {\n\n\t\tget: function () {\n\n\t\t\treturn this.x;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis.x = value;\n\n\t\t}\n\n\t},\n\n\t\"height\": {\n\n\t\tget: function () {\n\n\t\t\treturn this.y;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis.y = value;\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( Vector2.prototype, {\n\n\tisVector2: true,\n\n\tset: function ( x, y ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetX: function ( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponent: function ( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetComponent: function ( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.x, this.y );\n\n\t},\n\n\tcopy: function ( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\n\t\treturn this;\n\n\t},\n\n\taddVectors: function ( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\n\t\treturn this;\n\n\t},\n\n\taddScaledVector: function ( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\n\t\treturn this;\n\n\t},\n\n\tsubScalar: function ( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\n\t\treturn this;\n\n\t},\n\n\tsubVectors: function ( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\n\t\treturn this;\n\n\t},\n\n\tdivide: function ( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\n\t\treturn this;\n\n\t},\n\n\tdivideScalar: function ( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t},\n\n\tapplyMatrix3: function ( m ) {\n\n\t\tvar x = this.x, y = this.y;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\n\n\t\treturn this;\n\n\t},\n\n\tmin: function ( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\n\t\treturn this;\n\n\t},\n\n\tmax: function ( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\n\t\treturn this;\n\n\t},\n\n\tclamp: function ( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampScalar: function ( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampLength: function ( min, max ) {\n\n\t\tvar length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t},\n\n\tfloor: function () {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\n\t\treturn this;\n\n\t},\n\n\tceil: function () {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\n\t\treturn this;\n\n\t},\n\n\tround: function () {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\n\t\treturn this;\n\n\t},\n\n\troundToZero: function () {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y;\n\n\t},\n\n\tcross: function ( v ) {\n\n\t\treturn this.x * v.y - this.y * v.x;\n\n\t},\n\n\tlengthSq: function () {\n\n\t\treturn this.x * this.x + this.y * this.y;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t},\n\n\tmanhattanLength: function () {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t},\n\n\tnormalize: function () {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t},\n\n\tangle: function () {\n\n\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\tvar angle = Math.atan2( this.y, this.x );\n\n\t\tif ( angle < 0 ) angle += 2 * Math.PI;\n\n\t\treturn angle;\n\n\t},\n\n\tdistanceTo: function ( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t},\n\n\tdistanceToSquared: function ( v ) {\n\n\t\tvar dx = this.x - v.x, dy = this.y - v.y;\n\t\treturn dx * dx + dy * dy;\n\n\t},\n\n\tmanhattanDistanceTo: function ( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t},\n\n\tsetLength: function ( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t},\n\n\tlerp: function ( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t},\n\n\tequals: function ( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\n\t\treturn array;\n\n\t},\n\n\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\n\t\treturn this;\n\n\t},\n\n\trotateAround: function ( center, angle ) {\n\n\t\tvar c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\tvar x = this.x - center.x;\n\t\tvar y = this.y - center.y;\n\n\t\tthis.x = x * c - y * s + center.x;\n\t\tthis.y = x * s + y * c + center.y;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n */\n\nfunction Quaternion( x, y, z, w ) {\n\n\tthis._x = x || 0;\n\tthis._y = y || 0;\n\tthis._z = z || 0;\n\tthis._w = ( w !== undefined ) ? w : 1;\n\n}\n\nObject.assign( Quaternion, {\n\n\tslerp: function ( qa, qb, qm, t ) {\n\n\t\treturn qm.copy( qa ).slerp( qb, t );\n\n\t},\n\n\tslerpFlat: function ( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\tvar x0 = src0[ srcOffset0 + 0 ],\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\tw0 = src0[ srcOffset0 + 3 ],\n\n\t\t\tx1 = src1[ srcOffset1 + 0 ],\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\tvar s = 1 - t,\n\n\t\t\t\tcos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\tvar sin = Math.sqrt( sqrSin ),\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t}\n\n\t\t\tvar tDir = t * dir;\n\n\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t// Normalize in case we just did a lerp:\n\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\tvar f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\tx0 *= f;\n\t\t\t\ty0 *= f;\n\t\t\t\tz0 *= f;\n\t\t\t\tw0 *= f;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdst[ dstOffset ] = x0;\n\t\tdst[ dstOffset + 1 ] = y0;\n\t\tdst[ dstOffset + 2 ] = z0;\n\t\tdst[ dstOffset + 3 ] = w0;\n\n\t}\n\n} );\n\nObject.defineProperties( Quaternion.prototype, {\n\n\tx: {\n\n\t\tget: function () {\n\n\t\t\treturn this._x;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._x = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\ty: {\n\n\t\tget: function () {\n\n\t\t\treturn this._y;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._y = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\tz: {\n\n\t\tget: function () {\n\n\t\t\treturn this._z;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._z = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\tw: {\n\n\t\tget: function () {\n\n\t\t\treturn this._w;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._w = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( Quaternion.prototype, {\n\n\tisQuaternion: true,\n\n\tset: function ( x, y, z, w ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t},\n\n\tcopy: function ( quaternion ) {\n\n\t\tthis._x = quaternion.x;\n\t\tthis._y = quaternion.y;\n\t\tthis._z = quaternion.z;\n\t\tthis._w = quaternion.w;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromEuler: function ( euler, update ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\tvar x = euler._x, y = euler._y, z = euler._z, order = euler.order;\n\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t//\tcontent/SpinCalc.m\n\n\t\tvar cos = Math.cos;\n\t\tvar sin = Math.sin;\n\n\t\tvar c1 = cos( x / 2 );\n\t\tvar c2 = cos( y / 2 );\n\t\tvar c3 = cos( z / 2 );\n\n\t\tvar s1 = sin( x / 2 );\n\t\tvar s2 = sin( y / 2 );\n\t\tvar s3 = sin( z / 2 );\n\n\t\tif ( order === 'XYZ' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t} else if ( order === 'YXZ' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t} else if ( order === 'ZXY' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t} else if ( order === 'ZYX' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t} else if ( order === 'YZX' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t} else if ( order === 'XZY' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t}\n\n\t\tif ( update !== false ) this.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromAxisAngle: function ( axis, angle ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t// assumes axis is normalized\n\n\t\tvar halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\tthis._x = axis.x * s;\n\t\tthis._y = axis.y * s;\n\t\tthis._z = axis.z * s;\n\t\tthis._w = Math.cos( halfAngle );\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromRotationMatrix: function ( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tvar te = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\ttrace = m11 + m22 + m33,\n\t\t\ts;\n\n\t\tif ( trace > 0 ) {\n\n\t\t\ts = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\tthis._w = 0.25 / s;\n\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\tthis._x = 0.25 * s;\n\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t} else if ( m22 > m33 ) {\n\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\tthis._y = 0.25 * s;\n\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t} else {\n\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\tthis._z = 0.25 * s;\n\n\t\t}\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromUnitVectors: function ( vFrom, vTo ) {\n\n\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\tvar EPS = 0.000001;\n\n\t\tvar r = vFrom.dot( vTo ) + 1;\n\n\t\tif ( r < EPS ) {\n\n\t\t\tr = 0;\n\n\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\tthis._x = - vFrom.y;\n\t\t\t\tthis._y = vFrom.x;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = r;\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = - vFrom.z;\n\t\t\t\tthis._z = vFrom.y;\n\t\t\t\tthis._w = r;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n\n\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n\t\t\tthis._w = r;\n\n\t\t}\n\n\t\treturn this.normalize();\n\n\t},\n\n\tangleTo: function ( q ) {\n\n\t\treturn 2 * Math.acos( Math.abs( _Math.clamp( this.dot( q ), - 1, 1 ) ) );\n\n\t},\n\n\trotateTowards: function ( q, step ) {\n\n\t\tvar angle = this.angleTo( q );\n\n\t\tif ( angle === 0 ) return this;\n\n\t\tvar t = Math.min( 1, step / angle );\n\n\t\tthis.slerp( q, t );\n\n\t\treturn this;\n\n\t},\n\n\tinverse: function () {\n\n\t\t// quaternion is assumed to have unit length\n\n\t\treturn this.conjugate();\n\n\t},\n\n\tconjugate: function () {\n\n\t\tthis._x *= - 1;\n\t\tthis._y *= - 1;\n\t\tthis._z *= - 1;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t},\n\n\tlengthSq: function () {\n\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t},\n\n\tnormalize: function () {\n\n\t\tvar l = this.length();\n\n\t\tif ( l === 0 ) {\n\n\t\t\tthis._x = 0;\n\t\t\tthis._y = 0;\n\t\t\tthis._z = 0;\n\t\t\tthis._w = 1;\n\n\t\t} else {\n\n\t\t\tl = 1 / l;\n\n\t\t\tthis._x = this._x * l;\n\t\t\tthis._y = this._y * l;\n\t\t\tthis._z = this._z * l;\n\t\t\tthis._w = this._w * l;\n\n\t\t}\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( q, p ) {\n\n\t\tif ( p !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\n\t\t\treturn this.multiplyQuaternions( q, p );\n\n\t\t}\n\n\t\treturn this.multiplyQuaternions( this, q );\n\n\t},\n\n\tpremultiply: function ( q ) {\n\n\t\treturn this.multiplyQuaternions( q, this );\n\n\t},\n\n\tmultiplyQuaternions: function ( a, b ) {\n\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\tvar qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\tvar qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tslerp: function ( qb, t ) {\n\n\t\tif ( t === 0 ) return this;\n\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\tvar x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\tvar cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\tthis._w = - qb._w;\n\t\t\tthis._x = - qb._x;\n\t\t\tthis._y = - qb._y;\n\t\t\tthis._z = - qb._z;\n\n\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t} else {\n\n\t\t\tthis.copy( qb );\n\n\t\t}\n\n\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\tthis._w = w;\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\n\n\t\t\tvar s = 1 - t;\n\t\t\tthis._w = s * w + t * this._w;\n\t\t\tthis._x = s * x + t * this._x;\n\t\t\tthis._y = s * y + t * this._y;\n\t\t\tthis._z = s * z + t * this._z;\n\n\t\t\treturn this.normalize();\n\n\t\t}\n\n\t\tvar sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\n\t\tvar halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\tvar ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( quaternion ) {\n\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis._x = array[ offset ];\n\t\tthis._y = array[ offset + 1 ];\n\t\tthis._z = array[ offset + 2 ];\n\t\tthis._w = array[ offset + 3 ];\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._w;\n\n\t\treturn array;\n\n\t},\n\n\tonChange: function ( callback ) {\n\n\t\tthis.onChangeCallback = callback;\n\n\t\treturn this;\n\n\t},\n\n\tonChangeCallback: function () {}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author kile / http://kile.stravaganza.org/\n * @author philogb / http://blog.thejit.org/\n * @author mikael emtinger / http://gomo.se/\n * @author egraether / http://egraether.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Vector3( x, y, z ) {\n\n\tthis.x = x || 0;\n\tthis.y = y || 0;\n\tthis.z = z || 0;\n\n}\n\nObject.assign( Vector3.prototype, {\n\n\tisVector3: true,\n\n\tset: function ( x, y, z ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetX: function ( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetZ: function ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponent: function ( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetComponent: function ( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t},\n\n\tcopy: function ( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\n\t\treturn this;\n\n\t},\n\n\taddVectors: function ( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\n\t\treturn this;\n\n\t},\n\n\taddScaledVector: function ( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tsubScalar: function ( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\n\t\treturn this;\n\n\t},\n\n\tsubVectors: function ( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\n\t\t\treturn this.multiplyVectors( v, w );\n\n\t\t}\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyVectors: function ( a, b ) {\n\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\n\t\treturn this;\n\n\t},\n\n\tapplyEuler: function () {\n\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function applyEuler( euler ) {\n\n\t\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\t\tconsole.error( 'THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t\t}\n\n\t\t\treturn this.applyQuaternion( quaternion.setFromEuler( euler ) );\n\n\t\t};\n\n\t}(),\n\n\tapplyAxisAngle: function () {\n\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function applyAxisAngle( axis, angle ) {\n\n\t\t\treturn this.applyQuaternion( quaternion.setFromAxisAngle( axis, angle ) );\n\n\t\t};\n\n\t}(),\n\n\tapplyMatrix3: function ( m ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix4: function ( m ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\n\t\tvar w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\treturn this;\n\n\t},\n\n\tapplyQuaternion: function ( q ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// calculate quat * vector\n\n\t\tvar ix = qw * x + qy * z - qz * y;\n\t\tvar iy = qw * y + qz * x - qx * z;\n\t\tvar iz = qw * z + qx * y - qy * x;\n\t\tvar iw = - qx * x - qy * y - qz * z;\n\n\t\t// calculate result * inverse quat\n\n\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\n\t\treturn this;\n\n\t},\n\n\tproject: function ( camera ) {\n\n\t\treturn this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\n\n\t},\n\n\tunproject: function ( camera ) {\n\n\t\treturn this.applyMatrix4( camera.projectionMatrixInverse ).applyMatrix4( camera.matrixWorld );\n\n\t},\n\n\ttransformDirection: function ( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\treturn this.normalize();\n\n\t},\n\n\tdivide: function ( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tdivideScalar: function ( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t},\n\n\tmin: function ( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\n\t\treturn this;\n\n\t},\n\n\tmax: function ( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\n\t\treturn this;\n\n\t},\n\n\tclamp: function ( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampScalar: function ( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampLength: function ( min, max ) {\n\n\t\tvar length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t},\n\n\tfloor: function () {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tceil: function () {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tround: function () {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\n\t\treturn this;\n\n\t},\n\n\troundToZero: function () {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t},\n\n\t// TODO lengthSquared?\n\n\tlengthSq: function () {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t},\n\n\tmanhattanLength: function () {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t},\n\n\tnormalize: function () {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t},\n\n\tsetLength: function ( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t},\n\n\tlerp: function ( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t},\n\n\tcross: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\n\t\t\treturn this.crossVectors( v, w );\n\n\t\t}\n\n\t\treturn this.crossVectors( this, v );\n\n\t},\n\n\tcrossVectors: function ( a, b ) {\n\n\t\tvar ax = a.x, ay = a.y, az = a.z;\n\t\tvar bx = b.x, by = b.y, bz = b.z;\n\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\n\t\treturn this;\n\n\t},\n\n\tprojectOnVector: function ( vector ) {\n\n\t\tvar scalar = vector.dot( this ) / vector.lengthSq();\n\n\t\treturn this.copy( vector ).multiplyScalar( scalar );\n\n\t},\n\n\tprojectOnPlane: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function projectOnPlane( planeNormal ) {\n\n\t\t\tv1.copy( this ).projectOnVector( planeNormal );\n\n\t\t\treturn this.sub( v1 );\n\n\t\t};\n\n\t}(),\n\n\treflect: function () {\n\n\t\t// reflect incident vector off plane orthogonal to normal\n\t\t// normal is assumed to have unit length\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function reflect( normal ) {\n\n\t\t\treturn this.sub( v1.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t\t};\n\n\t}(),\n\n\tangleTo: function ( v ) {\n\n\t\tvar theta = this.dot( v ) / ( Math.sqrt( this.lengthSq() * v.lengthSq() ) );\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( _Math.clamp( theta, - 1, 1 ) );\n\n\t},\n\n\tdistanceTo: function ( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t},\n\n\tdistanceToSquared: function ( v ) {\n\n\t\tvar dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t},\n\n\tmanhattanDistanceTo: function ( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t},\n\n\tsetFromSpherical: function ( s ) {\n\n\t\treturn this.setFromSphericalCoords( s.radius, s.phi, s.theta );\n\n\t},\n\n\tsetFromSphericalCoords: function ( radius, phi, theta ) {\n\n\t\tvar sinPhiRadius = Math.sin( phi ) * radius;\n\n\t\tthis.x = sinPhiRadius * Math.sin( theta );\n\t\tthis.y = Math.cos( phi ) * radius;\n\t\tthis.z = sinPhiRadius * Math.cos( theta );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCylindrical: function ( c ) {\n\n\t\treturn this.setFromCylindricalCoords( c.radius, c.theta, c.y );\n\n\t},\n\n\tsetFromCylindricalCoords: function ( radius, theta, y ) {\n\n\t\tthis.x = radius * Math.sin( theta );\n\t\tthis.y = y;\n\t\tthis.z = radius * Math.cos( theta );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrixPosition: function ( m ) {\n\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrixScale: function ( m ) {\n\n\t\tvar sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\tvar sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\tvar sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrixColumn: function ( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t},\n\n\tequals: function ( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\n\t\treturn array;\n\n\t},\n\n\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n * @author tschw\n */\n\nfunction Matrix3() {\n\n\tthis.elements = [\n\n\t\t1, 0, 0,\n\t\t0, 1, 0,\n\t\t0, 0, 1\n\n\t];\n\n\tif ( arguments.length > 0 ) {\n\n\t\tconsole.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );\n\n\t}\n\n}\n\nObject.assign( Matrix3.prototype, {\n\n\tisMatrix3: true,\n\n\tset: function ( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\treturn this;\n\n\t},\n\n\tidentity: function () {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().fromArray( this.elements );\n\n\t},\n\n\tcopy: function ( m ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrix4: function ( m ) {\n\n\t\tvar me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\n\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\n\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tapplyToBufferAttribute: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function applyToBufferAttribute( attribute ) {\n\n\t\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\tv1.x = attribute.getX( i );\n\t\t\t\tv1.y = attribute.getY( i );\n\t\t\t\tv1.z = attribute.getZ( i );\n\n\t\t\t\tv1.applyMatrix3( this );\n\n\t\t\t\tattribute.setXYZ( i, v1.x, v1.y, v1.z );\n\n\t\t\t}\n\n\t\t\treturn attribute;\n\n\t\t};\n\n\t}(),\n\n\tmultiply: function ( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t},\n\n\tpremultiply: function ( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t},\n\n\tmultiplyMatrices: function ( a, b ) {\n\n\t\tvar ae = a.elements;\n\t\tvar be = b.elements;\n\t\tvar te = this.elements;\n\n\t\tvar a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\tvar a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\tvar a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\n\t\tvar b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\tvar b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\tvar b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( s ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\treturn this;\n\n\t},\n\n\tdeterminant: function () {\n\n\t\tvar te = this.elements;\n\n\t\tvar a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t},\n\n\tgetInverse: function ( matrix, throwOnDegenerate ) {\n\n\t\tif ( matrix && matrix.isMatrix4 ) {\n\n\t\t\tconsole.error( \"THREE.Matrix3: .getInverse() no longer takes a Matrix4 argument.\" );\n\n\t\t}\n\n\t\tvar me = matrix.elements,\n\t\t\tte = this.elements,\n\n\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ],\n\t\t\tn12 = me[ 3 ], n22 = me[ 4 ], n32 = me[ 5 ],\n\t\t\tn13 = me[ 6 ], n23 = me[ 7 ], n33 = me[ 8 ],\n\n\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\tif ( det === 0 ) {\n\n\t\t\tvar msg = \"THREE.Matrix3: .getInverse() can't invert matrix, determinant is 0\";\n\n\t\t\tif ( throwOnDegenerate === true ) {\n\n\t\t\t\tthrow new Error( msg );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( msg );\n\n\t\t\t}\n\n\t\t\treturn this.identity();\n\n\t\t}\n\n\t\tvar detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\tte[ 3 ] = t12 * detInv;\n\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\tte[ 6 ] = t13 * detInv;\n\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\treturn this;\n\n\t},\n\n\ttranspose: function () {\n\n\t\tvar tmp, m = this.elements;\n\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\treturn this;\n\n\t},\n\n\tgetNormalMatrix: function ( matrix4 ) {\n\n\t\treturn this.setFromMatrix4( matrix4 ).getInverse( this ).transpose();\n\n\t},\n\n\ttransposeIntoArray: function ( r ) {\n\n\t\tvar m = this.elements;\n\n\t\tr[ 0 ] = m[ 0 ];\n\t\tr[ 1 ] = m[ 3 ];\n\t\tr[ 2 ] = m[ 6 ];\n\t\tr[ 3 ] = m[ 1 ];\n\t\tr[ 4 ] = m[ 4 ];\n\t\tr[ 5 ] = m[ 7 ];\n\t\tr[ 6 ] = m[ 2 ];\n\t\tr[ 7 ] = m[ 5 ];\n\t\tr[ 8 ] = m[ 8 ];\n\n\t\treturn this;\n\n\t},\n\n\tsetUvTransform: function ( tx, ty, sx, sy, rotation, cx, cy ) {\n\n\t\tvar c = Math.cos( rotation );\n\t\tvar s = Math.sin( rotation );\n\n\t\tthis.set(\n\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\n\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\n\t\t\t0, 0, 1\n\t\t);\n\n\t},\n\n\tscale: function ( sx, sy ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] *= sx; te[ 3 ] *= sx; te[ 6 ] *= sx;\n\t\tte[ 1 ] *= sy; te[ 4 ] *= sy; te[ 7 ] *= sy;\n\n\t\treturn this;\n\n\t},\n\n\trotate: function ( theta ) {\n\n\t\tvar c = Math.cos( theta );\n\t\tvar s = Math.sin( theta );\n\n\t\tvar te = this.elements;\n\n\t\tvar a11 = te[ 0 ], a12 = te[ 3 ], a13 = te[ 6 ];\n\t\tvar a21 = te[ 1 ], a22 = te[ 4 ], a23 = te[ 7 ];\n\n\t\tte[ 0 ] = c * a11 + s * a21;\n\t\tte[ 3 ] = c * a12 + s * a22;\n\t\tte[ 6 ] = c * a13 + s * a23;\n\n\t\tte[ 1 ] = - s * a11 + c * a21;\n\t\tte[ 4 ] = - s * a12 + c * a22;\n\t\tte[ 7 ] = - s * a13 + c * a23;\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( tx, ty ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] += tx * te[ 2 ]; te[ 3 ] += tx * te[ 5 ]; te[ 6 ] += tx * te[ 8 ];\n\t\tte[ 1 ] += ty * te[ 2 ]; te[ 4 ] += ty * te[ 5 ]; te[ 7 ] += ty * te[ 8 ];\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( matrix ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = matrix.elements;\n\n\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tvar te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\n\t\treturn array;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author szimek / https://github.com/szimek/\n */\n\nvar _canvas;\n\nvar ImageUtils = {\n\n\tgetDataURL: function ( image ) {\n\n\t\tvar canvas;\n\n\t\tif ( typeof HTMLCanvasElement == 'undefined' ) {\n\n\t\t\treturn image.src;\n\n\t\t} else if ( image instanceof HTMLCanvasElement ) {\n\n\t\t\tcanvas = image;\n\n\t\t} else {\n\n\t\t\tif ( _canvas === undefined ) _canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\n\t\t\t_canvas.width = image.width;\n\t\t\t_canvas.height = image.height;\n\n\t\t\tvar context = _canvas.getContext( '2d' );\n\n\t\t\tif ( image instanceof ImageData ) {\n\n\t\t\t\tcontext.putImageData( image, 0, 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t}\n\n\t\t\tcanvas = _canvas;\n\n\t\t}\n\n\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n\t\t} else {\n\n\t\t\treturn canvas.toDataURL( 'image/png' );\n\n\t\t}\n\n\t}\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author szimek / https://github.com/szimek/\n */\n\nvar textureId = 0;\n\nfunction Texture( image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\tObject.defineProperty( this, 'id', { value: textureId ++ } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\n\tthis.image = image !== undefined ? image : Texture.DEFAULT_IMAGE;\n\tthis.mipmaps = [];\n\n\tthis.mapping = mapping !== undefined ? mapping : Texture.DEFAULT_MAPPING;\n\n\tthis.wrapS = wrapS !== undefined ? wrapS : ClampToEdgeWrapping;\n\tthis.wrapT = wrapT !== undefined ? wrapT : ClampToEdgeWrapping;\n\n\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\tthis.minFilter = minFilter !== undefined ? minFilter : LinearMipMapLinearFilter;\n\n\tthis.anisotropy = anisotropy !== undefined ? anisotropy : 1;\n\n\tthis.format = format !== undefined ? format : RGBAFormat;\n\tthis.type = type !== undefined ? type : UnsignedByteType;\n\n\tthis.offset = new Vector2( 0, 0 );\n\tthis.repeat = new Vector2( 1, 1 );\n\tthis.center = new Vector2( 0, 0 );\n\tthis.rotation = 0;\n\n\tthis.matrixAutoUpdate = true;\n\tthis.matrix = new Matrix3();\n\n\tthis.generateMipmaps = true;\n\tthis.premultiplyAlpha = false;\n\tthis.flipY = true;\n\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\t// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n\t//\n\t// Also changing the encoding after already used by a Material will not automatically make the Material\n\t// update. You need to explicitly call Material.needsUpdate to trigger it to recompile.\n\tthis.encoding = encoding !== undefined ? encoding : LinearEncoding;\n\n\tthis.version = 0;\n\tthis.onUpdate = null;\n\n}\n\nTexture.DEFAULT_IMAGE = undefined;\nTexture.DEFAULT_MAPPING = UVMapping;\n\nTexture.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: Texture,\n\n\tisTexture: true,\n\n\tupdateMatrix: function () {\n\n\t\tthis.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.image = source.image;\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\tthis.mapping = source.mapping;\n\n\t\tthis.wrapS = source.wrapS;\n\t\tthis.wrapT = source.wrapT;\n\n\t\tthis.magFilter = source.magFilter;\n\t\tthis.minFilter = source.minFilter;\n\n\t\tthis.anisotropy = source.anisotropy;\n\n\t\tthis.format = source.format;\n\t\tthis.type = source.type;\n\n\t\tthis.offset.copy( source.offset );\n\t\tthis.repeat.copy( source.repeat );\n\t\tthis.center.copy( source.center );\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrix.copy( source.matrix );\n\n\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\tthis.flipY = source.flipY;\n\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\tthis.encoding = source.encoding;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t}\n\n\t\tvar output = {\n\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Texture',\n\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t},\n\n\t\t\tuuid: this.uuid,\n\t\t\tname: this.name,\n\n\t\t\tmapping: this.mapping,\n\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\tcenter: [ this.center.x, this.center.y ],\n\t\t\trotation: this.rotation,\n\n\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\tformat: this.format,\n\t\t\ttype: this.type,\n\t\t\tencoding: this.encoding,\n\n\t\t\tminFilter: this.minFilter,\n\t\t\tmagFilter: this.magFilter,\n\t\t\tanisotropy: this.anisotropy,\n\n\t\t\tflipY: this.flipY,\n\n\t\t\tpremultiplyAlpha: this.premultiplyAlpha,\n\t\t\tunpackAlignment: this.unpackAlignment\n\n\t\t};\n\n\t\tif ( this.image !== undefined ) {\n\n\t\t\t// TODO: Move to THREE.Image\n\n\t\t\tvar image = this.image;\n\n\t\t\tif ( image.uuid === undefined ) {\n\n\t\t\t\timage.uuid = _Math.generateUUID(); // UGH\n\n\t\t\t}\n\n\t\t\tif ( ! isRootObject && meta.images[ image.uuid ] === undefined ) {\n\n\t\t\t\tvar url;\n\n\t\t\t\tif ( Array.isArray( image ) ) {\n\n\t\t\t\t\t// process array of images e.g. CubeTexture\n\n\t\t\t\t\turl = [];\n\n\t\t\t\t\tfor ( var i = 0, l = image.length; i < l; i ++ ) {\n\n\t\t\t\t\t\turl.push( ImageUtils.getDataURL( image[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// process single image\n\n\t\t\t\t\turl = ImageUtils.getDataURL( image );\n\n\t\t\t\t}\n\n\t\t\t\tmeta.images[ image.uuid ] = {\n\t\t\t\t\tuuid: image.uuid,\n\t\t\t\t\turl: url\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\toutput.image = image.uuid;\n\n\t\t}\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t},\n\n\ttransformUv: function ( uv ) {\n\n\t\tif ( this.mapping !== UVMapping ) return uv;\n\n\t\tuv.applyMatrix3( this.matrix );\n\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.flipY ) {\n\n\t\t\tuv.y = 1 - uv.y;\n\n\t\t}\n\n\t\treturn uv;\n\n\t}\n\n} );\n\nObject.defineProperty( Texture.prototype, \"needsUpdate\", {\n\n\tset: function ( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n} );\n\n/**\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author philogb / http://blog.thejit.org/\n * @author mikael emtinger / http://gomo.se/\n * @author egraether / http://egraether.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Vector4( x, y, z, w ) {\n\n\tthis.x = x || 0;\n\tthis.y = y || 0;\n\tthis.z = z || 0;\n\tthis.w = ( w !== undefined ) ? w : 1;\n\n}\n\nObject.assign( Vector4.prototype, {\n\n\tisVector4: true,\n\n\tset: function ( x, y, z, w ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\t\tthis.w = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetX: function ( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetZ: function ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetW: function ( w ) {\n\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponent: function ( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tcase 3: this.w = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetComponent: function ( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tcase 3: return this.w;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t},\n\n\tcopy: function ( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\t\tthis.w += v.w;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\t\tthis.w += s;\n\n\t\treturn this;\n\n\t},\n\n\taddVectors: function ( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\t\tthis.w = a.w + b.w;\n\n\t\treturn this;\n\n\t},\n\n\taddScaledVector: function ( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\t\tthis.w += v.w * s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\t\tthis.w -= v.w;\n\n\t\treturn this;\n\n\t},\n\n\tsubScalar: function ( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\t\tthis.w -= s;\n\n\t\treturn this;\n\n\t},\n\n\tsubVectors: function ( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\t\tthis.w = a.w - b.w;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\t\tthis.w *= scalar;\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix4: function ( m ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z, w = this.w;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\treturn this;\n\n\t},\n\n\tdivideScalar: function ( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t},\n\n\tsetAxisAngleFromQuaternion: function ( q ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t// q is assumed to be normalized\n\n\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\tvar s = Math.sqrt( 1 - q.w * q.w );\n\n\t\tif ( s < 0.0001 ) {\n\n\t\t\tthis.x = 1;\n\t\t\tthis.y = 0;\n\t\t\tthis.z = 0;\n\n\t\t} else {\n\n\t\t\tthis.x = q.x / s;\n\t\t\tthis.y = q.y / s;\n\t\t\tthis.z = q.z / s;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetAxisAngleFromRotationMatrix: function ( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tvar angle, x, y, z,\t\t// variables for result\n\t\t\tepsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\tte = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t// singularity found\n\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t}\n\n\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\tangle = Math.PI;\n\n\t\t\tvar xx = ( m11 + 1 ) / 2;\n\t\t\tvar yy = ( m22 + 1 ) / 2;\n\t\t\tvar zz = ( m33 + 1 ) / 2;\n\t\t\tvar xy = ( m12 + m21 ) / 4;\n\t\t\tvar xz = ( m13 + m31 ) / 4;\n\t\t\tvar yz = ( m23 + m32 ) / 4;\n\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\tx = 0;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\ty = xy / x;\n\t\t\t\t\tz = xz / x;\n\n\t\t\t\t}\n\n\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\tx = xy / y;\n\t\t\t\t\tz = yz / y;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\tx = xz / z;\n\t\t\t\t\ty = yz / z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.set( x, y, z, angle );\n\n\t\t\treturn this; // return 180 deg rotation\n\n\t\t}\n\n\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\tvar s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t                   ( m13 - m31 ) * ( m13 - m31 ) +\n\t\t                   ( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\tthis.x = ( m32 - m23 ) / s;\n\t\tthis.y = ( m13 - m31 ) / s;\n\t\tthis.z = ( m21 - m12 ) / s;\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\treturn this;\n\n\t},\n\n\tmin: function ( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\t\tthis.w = Math.min( this.w, v.w );\n\n\t\treturn this;\n\n\t},\n\n\tmax: function ( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\t\tthis.w = Math.max( this.w, v.w );\n\n\t\treturn this;\n\n\t},\n\n\tclamp: function ( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampScalar: function () {\n\n\t\tvar min, max;\n\n\t\treturn function clampScalar( minVal, maxVal ) {\n\n\t\t\tif ( min === undefined ) {\n\n\t\t\t\tmin = new Vector4();\n\t\t\t\tmax = new Vector4();\n\n\t\t\t}\n\n\t\t\tmin.set( minVal, minVal, minVal, minVal );\n\t\t\tmax.set( maxVal, maxVal, maxVal, maxVal );\n\n\t\t\treturn this.clamp( min, max );\n\n\t\t};\n\n\t}(),\n\n\tclampLength: function ( min, max ) {\n\n\t\tvar length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t},\n\n\tfloor: function () {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\t\tthis.w = Math.floor( this.w );\n\n\t\treturn this;\n\n\t},\n\n\tceil: function () {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\t\tthis.w = Math.ceil( this.w );\n\n\t\treturn this;\n\n\t},\n\n\tround: function () {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\t\tthis.w = Math.round( this.w );\n\n\t\treturn this;\n\n\t},\n\n\troundToZero: function () {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\t\tthis.w = - this.w;\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t},\n\n\tlengthSq: function () {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t},\n\n\tmanhattanLength: function () {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t},\n\n\tnormalize: function () {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t},\n\n\tsetLength: function ( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t},\n\n\tlerp: function ( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t},\n\n\tequals: function ( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\t\tthis.w = array[ offset + 3 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\t\tarray[ offset + 3 ] = this.w;\n\n\t\treturn array;\n\n\t},\n\n\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\t\tthis.w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author szimek / https://github.com/szimek/\n * @author alteredq / http://alteredqualia.com/\n * @author Marius Kintel / https://github.com/kintel\n */\n\n/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/\nfunction WebGLRenderTarget( width, height, options ) {\n\n\tthis.width = width;\n\tthis.height = height;\n\n\tthis.scissor = new Vector4( 0, 0, width, height );\n\tthis.scissorTest = false;\n\n\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\toptions = options || {};\n\n\tthis.texture = new Texture( undefined, undefined, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n\n\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;\n\tthis.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\n\n}\n\nWebGLRenderTarget.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: WebGLRenderTarget,\n\n\tisWebGLRenderTarget: true,\n\n\tsetSize: function ( width, height ) {\n\n\t\tif ( this.width !== width || this.height !== height ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.texture = source.texture.clone();\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\t\tthis.depthTexture = source.depthTexture;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n * @author Matt DesLauriers / @mattdesl\n */\n\nfunction WebGLMultisampleRenderTarget( width, height, options ) {\n\n\tWebGLRenderTarget.call( this, width, height, options );\n\n\tthis.samples = 4;\n\n}\n\nWebGLMultisampleRenderTarget.prototype = Object.assign( Object.create( WebGLRenderTarget.prototype ), {\n\n\tconstructor: WebGLMultisampleRenderTarget,\n\n\tisWebGLMultisampleRenderTarget: true,\n\n\tcopy: function ( source ) {\n\n\t\tWebGLRenderTarget.prototype.copy.call( this, source );\n\n\t\tthis.samples = source.samples;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com\n */\n\nfunction WebGLRenderTargetCube( width, height, options ) {\n\n\tWebGLRenderTarget.call( this, width, height, options );\n\n}\n\nWebGLRenderTargetCube.prototype = Object.create( WebGLRenderTarget.prototype );\nWebGLRenderTargetCube.prototype.constructor = WebGLRenderTargetCube;\n\nWebGLRenderTargetCube.prototype.isWebGLRenderTargetCube = true;\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction DataTexture( data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\tthis.image = { data: data, width: width, height: height };\n\n\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\tthis.generateMipmaps = false;\n\tthis.flipY = false;\n\tthis.unpackAlignment = 1;\n\n}\n\nDataTexture.prototype = Object.create( Texture.prototype );\nDataTexture.prototype.constructor = DataTexture;\n\nDataTexture.prototype.isDataTexture = true;\n\n/**\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Box3( min, max ) {\n\n\tthis.min = ( min !== undefined ) ? min : new Vector3( + Infinity, + Infinity, + Infinity );\n\tthis.max = ( max !== undefined ) ? max : new Vector3( - Infinity, - Infinity, - Infinity );\n\n}\n\nObject.assign( Box3.prototype, {\n\n\tisBox3: true,\n\n\tset: function ( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromArray: function ( array ) {\n\n\t\tvar minX = + Infinity;\n\t\tvar minY = + Infinity;\n\t\tvar minZ = + Infinity;\n\n\t\tvar maxX = - Infinity;\n\t\tvar maxY = - Infinity;\n\t\tvar maxZ = - Infinity;\n\n\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\tvar x = array[ i ];\n\t\t\tvar y = array[ i + 1 ];\n\t\t\tvar z = array[ i + 2 ];\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromBufferAttribute: function ( attribute ) {\n\n\t\tvar minX = + Infinity;\n\t\tvar minY = + Infinity;\n\t\tvar minZ = + Infinity;\n\n\t\tvar maxX = - Infinity;\n\t\tvar maxY = - Infinity;\n\t\tvar maxZ = - Infinity;\n\n\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\tvar x = attribute.getX( i );\n\t\t\tvar y = attribute.getY( i );\n\t\t\tvar z = attribute.getZ( i );\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCenterAndSize: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function setFromCenterAndSize( center, size ) {\n\n\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\n\n\t\t\tthis.min.copy( center ).sub( halfSize );\n\t\t\tthis.max.copy( center ).add( halfSize );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tsetFromObject: function ( object ) {\n\n\t\tthis.makeEmpty();\n\n\t\treturn this.expandByObject( object );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tmakeEmpty: function () {\n\n\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\treturn this;\n\n\t},\n\n\tisEmpty: function () {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t},\n\n\tgetCenter: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .getCenter() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t},\n\n\tgetSize: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .getSize() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t},\n\n\texpandByPoint: function ( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t},\n\n\texpandByVector: function ( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t},\n\n\texpandByScalar: function ( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t},\n\n\texpandByObject: function () {\n\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t// accounting for both the object's, and children's, world transforms\n\n\t\tvar scope, i, l;\n\n\t\tvar v1 = new Vector3();\n\n\t\tfunction traverse( node ) {\n\n\t\t\tvar geometry = node.geometry;\n\n\t\t\tif ( geometry !== undefined ) {\n\n\t\t\t\tif ( geometry.isGeometry ) {\n\n\t\t\t\t\tvar vertices = geometry.vertices;\n\n\t\t\t\t\tfor ( i = 0, l = vertices.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tv1.copy( vertices[ i ] );\n\t\t\t\t\t\tv1.applyMatrix4( node.matrixWorld );\n\n\t\t\t\t\t\tscope.expandByPoint( v1 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( geometry.isBufferGeometry ) {\n\n\t\t\t\t\tvar attribute = geometry.attributes.position;\n\n\t\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\t\tfor ( i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tv1.fromBufferAttribute( attribute, i ).applyMatrix4( node.matrixWorld );\n\n\t\t\t\t\t\t\tscope.expandByPoint( v1 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn function expandByObject( object ) {\n\n\t\t\tscope = this;\n\n\t\t\tobject.updateMatrixWorld( true );\n\n\t\t\tobject.traverse( traverse );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ||\n\t\t\tpoint.z < this.min.z || point.z > this.max.z ? false : true;\n\n\t},\n\n\tcontainsBox: function ( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t},\n\n\tgetParameter: function ( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .getParameter() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t);\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\t// using 6 splitting planes to rule out intersections.\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ||\n\t\t\tbox.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n\n\t},\n\n\tintersectsSphere: ( function () {\n\n\t\tvar closestPoint = new Vector3();\n\n\t\treturn function intersectsSphere( sphere ) {\n\n\t\t\t// Find the point on the AABB closest to the sphere center.\n\t\t\tthis.clampPoint( sphere.center, closestPoint );\n\n\t\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\t\treturn closestPoint.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t\t};\n\n\t} )(),\n\n\tintersectsPlane: function ( plane ) {\n\n\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\tvar min, max;\n\n\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t} else {\n\n\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t}\n\n\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t}\n\n\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t}\n\n\t\treturn ( min <= - plane.constant && max >= - plane.constant );\n\n\t},\n\n\tintersectsTriangle: ( function () {\n\n\t\t// triangle centered vertices\n\t\tvar v0 = new Vector3();\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\n\t\t// triangle edge vectors\n\t\tvar f0 = new Vector3();\n\t\tvar f1 = new Vector3();\n\t\tvar f2 = new Vector3();\n\n\t\tvar testAxis = new Vector3();\n\n\t\tvar center = new Vector3();\n\t\tvar extents = new Vector3();\n\n\t\tvar triangleNormal = new Vector3();\n\n\t\tfunction satForAxes( axes ) {\n\n\t\t\tvar i, j;\n\n\t\t\tfor ( i = 0, j = axes.length - 3; i <= j; i += 3 ) {\n\n\t\t\t\ttestAxis.fromArray( axes, i );\n\t\t\t\t// project the aabb onto the seperating axis\n\t\t\t\tvar r = extents.x * Math.abs( testAxis.x ) + extents.y * Math.abs( testAxis.y ) + extents.z * Math.abs( testAxis.z );\n\t\t\t\t// project all 3 vertices of the triangle onto the seperating axis\n\t\t\t\tvar p0 = v0.dot( testAxis );\n\t\t\t\tvar p1 = v1.dot( testAxis );\n\t\t\t\tvar p2 = v2.dot( testAxis );\n\t\t\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\n\t\t\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n\t\t\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t\t\t// the axis is seperating and we can exit\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn function intersectsTriangle( triangle ) {\n\n\t\t\tif ( this.isEmpty() ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\t// compute box center and extents\n\t\t\tthis.getCenter( center );\n\t\t\textents.subVectors( this.max, center );\n\n\t\t\t// translate triangle to aabb origin\n\t\t\tv0.subVectors( triangle.a, center );\n\t\t\tv1.subVectors( triangle.b, center );\n\t\t\tv2.subVectors( triangle.c, center );\n\n\t\t\t// compute edge vectors for triangle\n\t\t\tf0.subVectors( v1, v0 );\n\t\t\tf1.subVectors( v2, v1 );\n\t\t\tf2.subVectors( v0, v2 );\n\n\t\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\t\t\tvar axes = [\n\t\t\t\t0, - f0.z, f0.y, 0, - f1.z, f1.y, 0, - f2.z, f2.y,\n\t\t\t\tf0.z, 0, - f0.x, f1.z, 0, - f1.x, f2.z, 0, - f2.x,\n\t\t\t\t- f0.y, f0.x, 0, - f1.y, f1.x, 0, - f2.y, f2.x, 0\n\t\t\t];\n\t\t\tif ( ! satForAxes( axes ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\t// test 3 face normals from the aabb\n\t\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\n\t\t\tif ( ! satForAxes( axes ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\t// finally testing the face normal of the triangle\n\t\t\t// use already existing triangle edge vectors here\n\t\t\ttriangleNormal.crossVectors( f0, f1 );\n\t\t\taxes = [ triangleNormal.x, triangleNormal.y, triangleNormal.z ];\n\t\t\treturn satForAxes( axes );\n\n\t\t};\n\n\t} )(),\n\n\tclampPoint: function ( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .clampPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t},\n\n\tdistanceToPoint: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function distanceToPoint( point ) {\n\n\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\n\t\t\treturn clampedPoint.sub( point ).length();\n\n\t\t};\n\n\t}(),\n\n\tgetBoundingSphere: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function getBoundingSphere( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.error( 'THREE.Box3: .getBoundingSphere() target is now required' );\n\t\t\t\t//target = new Sphere(); // removed to avoid cyclic dependency\n\n\t\t\t}\n\n\t\t\tthis.getCenter( target.center );\n\n\t\t\ttarget.radius = this.getSize( v1 ).length() * 0.5;\n\n\t\t\treturn target;\n\n\t\t};\n\n\t}(),\n\n\tintersect: function ( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t},\n\n\tunion: function ( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix4: function () {\n\n\t\tvar points = [\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3()\n\t\t];\n\n\t\treturn function applyMatrix4( matrix ) {\n\n\t\t\t// transform of empty box is an empty box.\n\t\t\tif ( this.isEmpty() ) return this;\n\n\t\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t\tpoints[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t\tpoints[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t\tpoints[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t\tpoints[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t\tpoints[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t\tpoints[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t\tpoints[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t\tpoints[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 111\n\n\t\t\tthis.setFromPoints( points );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Sphere( center, radius ) {\n\n\tthis.center = ( center !== undefined ) ? center : new Vector3();\n\tthis.radius = ( radius !== undefined ) ? radius : 0;\n\n}\n\nObject.assign( Sphere.prototype, {\n\n\tset: function ( center, radius ) {\n\n\t\tthis.center.copy( center );\n\t\tthis.radius = radius;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function () {\n\n\t\tvar box = new Box3();\n\n\t\treturn function setFromPoints( points, optionalCenter ) {\n\n\t\t\tvar center = this.center;\n\n\t\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\t\tcenter.copy( optionalCenter );\n\n\t\t\t} else {\n\n\t\t\t\tbox.setFromPoints( points ).getCenter( center );\n\n\t\t\t}\n\n\t\t\tvar maxRadiusSq = 0;\n\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t\t}\n\n\t\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( sphere ) {\n\n\t\tthis.center.copy( sphere.center );\n\t\tthis.radius = sphere.radius;\n\n\t\treturn this;\n\n\t},\n\n\tempty: function () {\n\n\t\treturn ( this.radius <= 0 );\n\n\t},\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t},\n\n\tdistanceToPoint: function ( point ) {\n\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t},\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\tvar radiusSum = this.radius + sphere.radius;\n\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\treturn box.intersectsSphere( this );\n\n\t},\n\n\tintersectsPlane: function ( plane ) {\n\n\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\n\n\t},\n\n\tclampPoint: function ( point, target ) {\n\n\t\tvar deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Sphere: .clampPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\ttarget.copy( point );\n\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\ttarget.sub( this.center ).normalize();\n\t\t\ttarget.multiplyScalar( this.radius ).add( this.center );\n\n\t\t}\n\n\t\treturn target;\n\n\t},\n\n\tgetBoundingBox: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Sphere: .getBoundingBox() target is now required' );\n\t\t\ttarget = new Box3();\n\n\t\t}\n\n\t\ttarget.set( this.center, this.center );\n\t\ttarget.expandByScalar( this.radius );\n\n\t\treturn target;\n\n\t},\n\n\tapplyMatrix4: function ( matrix ) {\n\n\t\tthis.center.applyMatrix4( matrix );\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.center.add( offset );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( sphere ) {\n\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n */\n\nfunction Plane( normal, constant ) {\n\n\t// normal is assumed to be normalized\n\n\tthis.normal = ( normal !== undefined ) ? normal : new Vector3( 1, 0, 0 );\n\tthis.constant = ( constant !== undefined ) ? constant : 0;\n\n}\n\nObject.assign( Plane.prototype, {\n\n\tset: function ( normal, constant ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = constant;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponents: function ( x, y, z, w ) {\n\n\t\tthis.normal.set( x, y, z );\n\t\tthis.constant = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromNormalAndCoplanarPoint: function ( normal, point ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = - point.dot( this.normal );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCoplanarPoints: function () {\n\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\n\t\treturn function setFromCoplanarPoints( a, b, c ) {\n\n\t\t\tvar normal = v1.subVectors( c, b ).cross( v2.subVectors( a, b ) ).normalize();\n\n\t\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( plane ) {\n\n\t\tthis.normal.copy( plane.normal );\n\t\tthis.constant = plane.constant;\n\n\t\treturn this;\n\n\t},\n\n\tnormalize: function () {\n\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\tvar inverseNormalLength = 1.0 / this.normal.length();\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\tthis.constant *= inverseNormalLength;\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.constant *= - 1;\n\t\tthis.normal.negate();\n\n\t\treturn this;\n\n\t},\n\n\tdistanceToPoint: function ( point ) {\n\n\t\treturn this.normal.dot( point ) + this.constant;\n\n\t},\n\n\tdistanceToSphere: function ( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t},\n\n\tprojectPoint: function ( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Plane: .projectPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.distanceToPoint( point ) ).add( point );\n\n\t},\n\n\tintersectLine: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function intersectLine( line, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Plane: .intersectLine() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tvar direction = line.delta( v1 );\n\n\t\t\tvar denominator = this.normal.dot( direction );\n\n\t\t\tif ( denominator === 0 ) {\n\n\t\t\t\t// line is coplanar, return origin\n\t\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\t\treturn target.copy( line.start );\n\n\t\t\t\t}\n\n\t\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\t\treturn undefined;\n\n\t\t\t}\n\n\t\t\tvar t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\t\treturn undefined;\n\n\t\t\t}\n\n\t\t\treturn target.copy( direction ).multiplyScalar( t ).add( line.start );\n\n\t\t};\n\n\t}(),\n\n\tintersectsLine: function ( line ) {\n\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\tvar startSign = this.distanceToPoint( line.start );\n\t\tvar endSign = this.distanceToPoint( line.end );\n\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\treturn box.intersectsPlane( this );\n\n\t},\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\treturn sphere.intersectsPlane( this );\n\n\t},\n\n\tcoplanarPoint: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Plane: .coplanarPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t},\n\n\tapplyMatrix4: function () {\n\n\t\tvar v1 = new Vector3();\n\t\tvar m1 = new Matrix3();\n\n\t\treturn function applyMatrix4( matrix, optionalNormalMatrix ) {\n\n\t\t\tvar normalMatrix = optionalNormalMatrix || m1.getNormalMatrix( matrix );\n\n\t\t\tvar referencePoint = this.coplanarPoint( v1 ).applyMatrix4( matrix );\n\n\t\t\tvar normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.constant -= offset.dot( this.normal );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( plane ) {\n\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author bhouston / http://clara.io\n */\n\nfunction Frustum( p0, p1, p2, p3, p4, p5 ) {\n\n\tthis.planes = [\n\n\t\t( p0 !== undefined ) ? p0 : new Plane(),\n\t\t( p1 !== undefined ) ? p1 : new Plane(),\n\t\t( p2 !== undefined ) ? p2 : new Plane(),\n\t\t( p3 !== undefined ) ? p3 : new Plane(),\n\t\t( p4 !== undefined ) ? p4 : new Plane(),\n\t\t( p5 !== undefined ) ? p5 : new Plane()\n\n\t];\n\n}\n\nObject.assign( Frustum.prototype, {\n\n\tset: function ( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tvar planes = this.planes;\n\n\t\tplanes[ 0 ].copy( p0 );\n\t\tplanes[ 1 ].copy( p1 );\n\t\tplanes[ 2 ].copy( p2 );\n\t\tplanes[ 3 ].copy( p3 );\n\t\tplanes[ 4 ].copy( p4 );\n\t\tplanes[ 5 ].copy( p5 );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( frustum ) {\n\n\t\tvar planes = this.planes;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrix: function ( m ) {\n\n\t\tvar planes = this.planes;\n\t\tvar me = m.elements;\n\t\tvar me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\tvar me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\tvar me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\tvar me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\treturn this;\n\n\t},\n\n\tintersectsObject: function () {\n\n\t\tvar sphere = new Sphere();\n\n\t\treturn function intersectsObject( object ) {\n\n\t\t\tvar geometry = object.geometry;\n\n\t\t\tif ( geometry.boundingSphere === null )\n\t\t\t\tgeometry.computeBoundingSphere();\n\n\t\t\tsphere.copy( geometry.boundingSphere )\n\t\t\t\t.applyMatrix4( object.matrixWorld );\n\n\t\t\treturn this.intersectsSphere( sphere );\n\n\t\t};\n\n\t}(),\n\n\tintersectsSprite: function () {\n\n\t\tvar sphere = new Sphere();\n\n\t\treturn function intersectsSprite( sprite ) {\n\n\t\t\tsphere.center.set( 0, 0, 0 );\n\t\t\tsphere.radius = 0.7071067811865476;\n\t\t\tsphere.applyMatrix4( sprite.matrixWorld );\n\n\t\t\treturn this.intersectsSphere( sphere );\n\n\t\t};\n\n\t}(),\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\tvar planes = this.planes;\n\t\tvar center = sphere.center;\n\t\tvar negRadius = - sphere.radius;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\tvar distance = planes[ i ].distanceToPoint( center );\n\n\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tintersectsBox: function () {\n\n\t\tvar p = new Vector3();\n\n\t\treturn function intersectsBox( box ) {\n\n\t\t\tvar planes = this.planes;\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tvar plane = planes[ i ];\n\n\t\t\t\t// corner at max distance\n\n\t\t\t\tp.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t\tp.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t\tp.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\t\tif ( plane.distanceToPoint( p ) < 0 ) {\n\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t};\n\n\t}(),\n\n\tcontainsPoint: function ( point ) {\n\n\t\tvar planes = this.planes;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author philogb / http://blog.thejit.org/\n * @author jordi_ros / http://plattsoft.com\n * @author D1plo1d / http://github.com/D1plo1d\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author timknip / http://www.floorplanner.com/\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Matrix4() {\n\n\tthis.elements = [\n\n\t\t1, 0, 0, 0,\n\t\t0, 1, 0, 0,\n\t\t0, 0, 1, 0,\n\t\t0, 0, 0, 1\n\n\t];\n\n\tif ( arguments.length > 0 ) {\n\n\t\tconsole.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\n\n\t}\n\n}\n\nObject.assign( Matrix4.prototype, {\n\n\tisMatrix4: true,\n\n\tset: function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\treturn this;\n\n\t},\n\n\tidentity: function () {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new Matrix4().fromArray( this.elements );\n\n\t},\n\n\tcopy: function ( m ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\treturn this;\n\n\t},\n\n\tcopyPosition: function ( m ) {\n\n\t\tvar te = this.elements, me = m.elements;\n\n\t\tte[ 12 ] = me[ 12 ];\n\t\tte[ 13 ] = me[ 13 ];\n\t\tte[ 14 ] = me[ 14 ];\n\n\t\treturn this;\n\n\t},\n\n\textractBasis: function ( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\treturn this;\n\n\t},\n\n\tmakeBasis: function ( xAxis, yAxis, zAxis ) {\n\n\t\tthis.set(\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\textractRotation: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function extractRotation( m ) {\n\n\t\t\t// this method does not support reflection matrices\n\n\t\t\tvar te = this.elements;\n\t\t\tvar me = m.elements;\n\n\t\t\tvar scaleX = 1 / v1.setFromMatrixColumn( m, 0 ).length();\n\t\t\tvar scaleY = 1 / v1.setFromMatrixColumn( m, 1 ).length();\n\t\t\tvar scaleZ = 1 / v1.setFromMatrixColumn( m, 2 ).length();\n\n\t\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\t\t\tte[ 3 ] = 0;\n\n\t\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\t\t\tte[ 7 ] = 0;\n\n\t\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\t\t\tte[ 11 ] = 0;\n\n\t\t\tte[ 12 ] = 0;\n\t\t\tte[ 13 ] = 0;\n\t\t\tte[ 14 ] = 0;\n\t\t\tte[ 15 ] = 1;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tmakeRotationFromEuler: function ( euler ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\tvar te = this.elements;\n\n\t\tvar x = euler.x, y = euler.y, z = euler.z;\n\t\tvar a = Math.cos( x ), b = Math.sin( x );\n\t\tvar c = Math.cos( y ), d = Math.sin( y );\n\t\tvar e = Math.cos( z ), f = Math.sin( z );\n\n\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - c * f;\n\t\t\tte[ 8 ] = d;\n\n\t\t\tte[ 1 ] = af + be * d;\n\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\tte[ 9 ] = - b * c;\n\n\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\tte[ 6 ] = be + af * d;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce + df * b;\n\t\t\tte[ 4 ] = de * b - cf;\n\t\t\tte[ 8 ] = a * d;\n\n\t\t\tte[ 1 ] = a * f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b;\n\n\t\t\tte[ 2 ] = cf * b - de;\n\t\t\tte[ 6 ] = df + ce * b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce - df * b;\n\t\t\tte[ 4 ] = - a * f;\n\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\tte[ 1 ] = cf + de * b;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\tte[ 2 ] = - a * d;\n\t\t\tte[ 6 ] = b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = be * d - af;\n\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\tte[ 1 ] = c * f;\n\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\tte[ 2 ] = - d;\n\t\t\tte[ 6 ] = b * c;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\tte[ 1 ] = f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b * e;\n\n\t\t\tte[ 2 ] = - d * e;\n\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - f;\n\t\t\tte[ 8 ] = d * e;\n\n\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\tte[ 6 ] = b * e;\n\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t}\n\n\t\t// bottom row\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// last column\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationFromQuaternion: function () {\n\n\t\tvar zero = new Vector3( 0, 0, 0 );\n\t\tvar one = new Vector3( 1, 1, 1 );\n\n\t\treturn function makeRotationFromQuaternion( q ) {\n\n\t\t\treturn this.compose( zero, q, one );\n\n\t\t};\n\n\t}(),\n\n\tlookAt: function () {\n\n\t\tvar x = new Vector3();\n\t\tvar y = new Vector3();\n\t\tvar z = new Vector3();\n\n\t\treturn function lookAt( eye, target, up ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tz.subVectors( eye, target );\n\n\t\t\tif ( z.lengthSq() === 0 ) {\n\n\t\t\t\t// eye and target are in the same position\n\n\t\t\t\tz.z = 1;\n\n\t\t\t}\n\n\t\t\tz.normalize();\n\t\t\tx.crossVectors( up, z );\n\n\t\t\tif ( x.lengthSq() === 0 ) {\n\n\t\t\t\t// up and z are parallel\n\n\t\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t\tz.x += 0.0001;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz.z += 0.0001;\n\n\t\t\t\t}\n\n\t\t\t\tz.normalize();\n\t\t\t\tx.crossVectors( up, z );\n\n\t\t\t}\n\n\t\t\tx.normalize();\n\t\t\ty.crossVectors( z, x );\n\n\t\t\tte[ 0 ] = x.x; te[ 4 ] = y.x; te[ 8 ] = z.x;\n\t\t\tte[ 1 ] = x.y; te[ 5 ] = y.y; te[ 9 ] = z.y;\n\t\t\tte[ 2 ] = x.z; te[ 6 ] = y.z; te[ 10 ] = z.z;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tmultiply: function ( m, n ) {\n\n\t\tif ( n !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\n\t\t\treturn this.multiplyMatrices( m, n );\n\n\t\t}\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t},\n\n\tpremultiply: function ( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t},\n\n\tmultiplyMatrices: function ( a, b ) {\n\n\t\tvar ae = a.elements;\n\t\tvar be = b.elements;\n\t\tvar te = this.elements;\n\n\t\tvar a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\tvar a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\tvar a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\tvar a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\tvar b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\tvar b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\tvar b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\tvar b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( s ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\treturn this;\n\n\t},\n\n\tapplyToBufferAttribute: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function applyToBufferAttribute( attribute ) {\n\n\t\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\tv1.x = attribute.getX( i );\n\t\t\t\tv1.y = attribute.getY( i );\n\t\t\t\tv1.z = attribute.getZ( i );\n\n\t\t\t\tv1.applyMatrix4( this );\n\n\t\t\t\tattribute.setXYZ( i, v1.x, v1.y, v1.z );\n\n\t\t\t}\n\n\t\t\treturn attribute;\n\n\t\t};\n\n\t}(),\n\n\tdeterminant: function () {\n\n\t\tvar te = this.elements;\n\n\t\tvar n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\tvar n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\tvar n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\tvar n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t//TODO: make this more efficient\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\treturn (\n\t\t\tn41 * (\n\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t - n13 * n24 * n32\n\t\t\t\t - n14 * n22 * n33\n\t\t\t\t + n12 * n24 * n33\n\t\t\t\t + n13 * n22 * n34\n\t\t\t\t - n12 * n23 * n34\n\t\t\t) +\n\t\t\tn42 * (\n\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t - n11 * n24 * n33\n\t\t\t\t + n14 * n21 * n33\n\t\t\t\t - n13 * n21 * n34\n\t\t\t\t + n13 * n24 * n31\n\t\t\t\t - n14 * n23 * n31\n\t\t\t) +\n\t\t\tn43 * (\n\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t - n11 * n22 * n34\n\t\t\t\t - n14 * n21 * n32\n\t\t\t\t + n12 * n21 * n34\n\t\t\t\t + n14 * n22 * n31\n\t\t\t\t - n12 * n24 * n31\n\t\t\t) +\n\t\t\tn44 * (\n\t\t\t\t- n13 * n22 * n31\n\t\t\t\t - n11 * n23 * n32\n\t\t\t\t + n11 * n22 * n33\n\t\t\t\t + n13 * n21 * n32\n\t\t\t\t - n12 * n21 * n33\n\t\t\t\t + n12 * n23 * n31\n\t\t\t)\n\n\t\t);\n\n\t},\n\n\ttranspose: function () {\n\n\t\tvar te = this.elements;\n\t\tvar tmp;\n\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\treturn this;\n\n\t},\n\n\tsetPosition: function ( x, y, z ) {\n\n\t\tvar te = this.elements;\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tte[ 12 ] = x.x;\n\t\t\tte[ 13 ] = x.y;\n\t\t\tte[ 14 ] = x.z;\n\n\t\t} else {\n\n\t\t\tte[ 12 ] = x;\n\t\t\tte[ 13 ] = y;\n\t\t\tte[ 14 ] = z;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetInverse: function ( m, throwOnDegenerate ) {\n\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\tvar te = this.elements,\n\t\t\tme = m.elements,\n\n\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ], n41 = me[ 3 ],\n\t\t\tn12 = me[ 4 ], n22 = me[ 5 ], n32 = me[ 6 ], n42 = me[ 7 ],\n\t\t\tn13 = me[ 8 ], n23 = me[ 9 ], n33 = me[ 10 ], n43 = me[ 11 ],\n\t\t\tn14 = me[ 12 ], n24 = me[ 13 ], n34 = me[ 14 ], n44 = me[ 15 ],\n\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\tvar det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\tif ( det === 0 ) {\n\n\t\t\tvar msg = \"THREE.Matrix4: .getInverse() can't invert matrix, determinant is 0\";\n\n\t\t\tif ( throwOnDegenerate === true ) {\n\n\t\t\t\tthrow new Error( msg );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( msg );\n\n\t\t\t}\n\n\t\t\treturn this.identity();\n\n\t\t}\n\n\t\tvar detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\tte[ 4 ] = t12 * detInv;\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\tte[ 8 ] = t13 * detInv;\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\tte[ 12 ] = t14 * detInv;\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\treturn this;\n\n\t},\n\n\tscale: function ( v ) {\n\n\t\tvar te = this.elements;\n\t\tvar x = v.x, y = v.y, z = v.z;\n\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\treturn this;\n\n\t},\n\n\tgetMaxScaleOnAxis: function () {\n\n\t\tvar te = this.elements;\n\n\t\tvar scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\tvar scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\tvar scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t},\n\n\tmakeTranslation: function ( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, x,\n\t\t\t0, 1, 0, y,\n\t\t\t0, 0, 1, z,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationX: function ( theta ) {\n\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, c, - s, 0,\n\t\t\t0, s, c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationY: function ( theta ) {\n\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t c, 0, s, 0,\n\t\t\t 0, 1, 0, 0,\n\t\t\t- s, 0, c, 0,\n\t\t\t 0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationZ: function ( theta ) {\n\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0, 0,\n\t\t\ts, c, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationAxis: function ( axis, angle ) {\n\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\tvar c = Math.cos( angle );\n\t\tvar s = Math.sin( angle );\n\t\tvar t = 1 - c;\n\t\tvar x = axis.x, y = axis.y, z = axis.z;\n\t\tvar tx = t * x, ty = t * y;\n\n\t\tthis.set(\n\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\t return this;\n\n\t},\n\n\tmakeScale: function ( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0, 0,\n\t\t\t0, y, 0, 0,\n\t\t\t0, 0, z, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeShear: function ( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\t1, y, z, 0,\n\t\t\tx, 1, z, 0,\n\t\t\tx, y, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tcompose: function ( position, quaternion, scale ) {\n\n\t\tvar te = this.elements;\n\n\t\tvar x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\n\t\tvar x2 = x + x,\ty2 = y + y, z2 = z + z;\n\t\tvar xx = x * x2, xy = x * y2, xz = x * z2;\n\t\tvar yy = y * y2, yz = y * z2, zz = z * z2;\n\t\tvar wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\tvar sx = scale.x, sy = scale.y, sz = scale.z;\n\n\t\tte[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\n\t\tte[ 1 ] = ( xy + wz ) * sx;\n\t\tte[ 2 ] = ( xz - wy ) * sx;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = ( xy - wz ) * sy;\n\t\tte[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\n\t\tte[ 6 ] = ( yz + wx ) * sy;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = ( xz + wy ) * sz;\n\t\tte[ 9 ] = ( yz - wx ) * sz;\n\t\tte[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = position.x;\n\t\tte[ 13 ] = position.y;\n\t\tte[ 14 ] = position.z;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t},\n\n\tdecompose: function () {\n\n\t\tvar vector = new Vector3();\n\t\tvar matrix = new Matrix4();\n\n\t\treturn function decompose( position, quaternion, scale ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar sx = vector.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\t\tvar sy = vector.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\t\tvar sz = vector.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t\t// if determine is negative, we need to invert one scale\n\t\t\tvar det = this.determinant();\n\t\t\tif ( det < 0 ) sx = - sx;\n\n\t\t\tposition.x = te[ 12 ];\n\t\t\tposition.y = te[ 13 ];\n\t\t\tposition.z = te[ 14 ];\n\n\t\t\t// scale the rotation part\n\t\t\tmatrix.copy( this );\n\n\t\t\tvar invSX = 1 / sx;\n\t\t\tvar invSY = 1 / sy;\n\t\t\tvar invSZ = 1 / sz;\n\n\t\t\tmatrix.elements[ 0 ] *= invSX;\n\t\t\tmatrix.elements[ 1 ] *= invSX;\n\t\t\tmatrix.elements[ 2 ] *= invSX;\n\n\t\t\tmatrix.elements[ 4 ] *= invSY;\n\t\t\tmatrix.elements[ 5 ] *= invSY;\n\t\t\tmatrix.elements[ 6 ] *= invSY;\n\n\t\t\tmatrix.elements[ 8 ] *= invSZ;\n\t\t\tmatrix.elements[ 9 ] *= invSZ;\n\t\t\tmatrix.elements[ 10 ] *= invSZ;\n\n\t\t\tquaternion.setFromRotationMatrix( matrix );\n\n\t\t\tscale.x = sx;\n\t\t\tscale.y = sy;\n\t\t\tscale.z = sz;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tmakePerspective: function ( left, right, top, bottom, near, far ) {\n\n\t\tif ( far === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.' );\n\n\t\t}\n\n\t\tvar te = this.elements;\n\t\tvar x = 2 * near / ( right - left );\n\t\tvar y = 2 * near / ( top - bottom );\n\n\t\tvar a = ( right + left ) / ( right - left );\n\t\tvar b = ( top + bottom ) / ( top - bottom );\n\t\tvar c = - ( far + near ) / ( far - near );\n\t\tvar d = - 2 * far * near / ( far - near );\n\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\treturn this;\n\n\t},\n\n\tmakeOrthographic: function ( left, right, top, bottom, near, far ) {\n\n\t\tvar te = this.elements;\n\t\tvar w = 1.0 / ( right - left );\n\t\tvar h = 1.0 / ( top - bottom );\n\t\tvar p = 1.0 / ( far - near );\n\n\t\tvar x = ( right + left ) * w;\n\t\tvar y = ( top + bottom ) * h;\n\t\tvar z = ( far + near ) * p;\n\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 * p;\tte[ 14 ] = - z;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( matrix ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = matrix.elements;\n\n\t\tfor ( var i = 0; i < 16; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tfor ( var i = 0; i < 16; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tvar te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\treturn array;\n\n\t}\n\n} );\n\nvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\";\n\nvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar alphatest_fragment = \"#ifdef ALPHATEST\\n\\tif ( diffuseColor.a < ALPHATEST ) discard;\\n#endif\";\n\nvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\n\\t#endif\\n#endif\";\n\nvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\nvar begin_vertex = \"vec3 transformed = vec3( position );\";\n\nvar beginnormal_vertex = \"vec3 objectNormal = vec3( normal );\\n#ifdef USE_TANGENT\\n\\tvec3 objectTangent = vec3( tangent.xyz );\\n#endif\";\n\nvar bsdfs = \"vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\\n}\\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\tif( cutoffDistance > 0.0 ) {\\n\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t}\\n\\treturn distanceFalloff;\\n#else\\n\\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\\n\\t\\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\t}\\n\\treturn 1.0;\\n#endif\\n}\\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\\n\\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n}\\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\\n\\tvec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\\n\\treturn Fr * fresnel + F0;\\n}\\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\treturn 1.0 / ( gl * gv );\\n}\\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( G * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE  = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\\n\\treturn specularColor * brdf.x + brdf.y;\\n}\\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tvec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\\n\\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\\n\\tvec3 FssEss = F * brdf.x + brdf.y;\\n\\tfloat Ess = brdf.x + brdf.y;\\n\\tfloat Ems = 1.0 - Ess;\\n\\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\\n\\tsingleScatter += FssEss;\\n\\tmultiScatter += Fms * Ems;\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\n\\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\\n}\\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\\n\\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\\n}\";\n\nvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\\t\\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\\n\\t\\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 );\\n\\t\\tfDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\";\n\nvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif\";\n\nvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\t#if ! defined( PHYSICAL ) && ! defined( PHONG ) && ! defined( MATCAP )\\n\\t\\tvarying vec3 vViewPosition;\\n\\t#endif\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\";\n\nvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG ) && ! defined( MATCAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\";\n\nvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG ) && ! defined( MATCAP )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\";\n\nvar color_fragment = \"#ifdef USE_COLOR\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\nvar color_pars_fragment = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_pars_vertex = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_vertex = \"#ifdef USE_COLOR\\n\\tvColor.xyz = color.xyz;\\n#endif\";\n\nvar common = \"#define PI 3.14159265359\\n#define PI2 6.28318530718\\n#define PI_HALF 1.5707963267949\\n#define RECIPROCAL_PI 0.31830988618\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract(sin(sn) * c);\\n}\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\treturn - distance * planeNormal + point;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat linearToRelativeLuminance( const in vec3 color ) {\\n\\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\\n\\treturn dot( weights, color.rgb );\\n}\";\n\nvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n#define cubeUV_textureSize (1024.0)\\nint getFaceFromDirection(vec3 direction) {\\n\\tvec3 absDirection = abs(direction);\\n\\tint face = -1;\\n\\tif( absDirection.x > absDirection.z ) {\\n\\t\\tif(absDirection.x > absDirection.y )\\n\\t\\t\\tface = direction.x > 0.0 ? 0 : 3;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\telse {\\n\\t\\tif(absDirection.z > absDirection.y )\\n\\t\\t\\tface = direction.z > 0.0 ? 2 : 5;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\treturn face;\\n}\\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\\n\\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\\n\\tfloat dxRoughness = dFdx(roughness);\\n\\tfloat dyRoughness = dFdy(roughness);\\n\\tvec3 dx = dFdx( vec * scale * dxRoughness );\\n\\tvec3 dy = dFdy( vec * scale * dyRoughness );\\n\\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\\n\\td = clamp(d, 1.0, cubeUV_rangeClamp);\\n\\tfloat mipLevel = 0.5 * log2(d);\\n\\treturn vec2(floor(mipLevel), fract(mipLevel));\\n}\\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\\n\\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\\n\\tfloat a = 16.0 * cubeUV_rcpTextureSize;\\n\\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\\n\\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\\n\\tfloat powScale = exp2_packed.x * exp2_packed.y;\\n\\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\\n\\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\\n\\tbool bRes = mipLevel == 0.0;\\n\\tscale =  bRes && (scale < a) ? a : scale;\\n\\tvec3 r;\\n\\tvec2 offset;\\n\\tint face = getFaceFromDirection(direction);\\n\\tfloat rcpPowScale = 1.0 / powScale;\\n\\tif( face == 0) {\\n\\t\\tr = vec3(direction.x, -direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 1) {\\n\\t\\tr = vec3(direction.y, direction.x, direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 2) {\\n\\t\\tr = vec3(direction.z, direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 3) {\\n\\t\\tr = vec3(direction.x, direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse if( face == 4) {\\n\\t\\tr = vec3(direction.y, direction.x, -direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse {\\n\\t\\tr = vec3(direction.z, -direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\tr = normalize(r);\\n\\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\\n\\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\\n\\tvec2 base = offset + vec2( texelOffset );\\n\\treturn base + s * ( scale - 2.0 * texelOffset );\\n}\\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\\nvec4 textureCubeUV( sampler2D envMap, vec3 reflectedDirection, float roughness ) {\\n\\tfloat roughnessVal = roughness* cubeUV_maxLods3;\\n\\tfloat r1 = floor(roughnessVal);\\n\\tfloat r2 = r1 + 1.0;\\n\\tfloat t = fract(roughnessVal);\\n\\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\\n\\tfloat s = mipInfo.y;\\n\\tfloat level0 = mipInfo.x;\\n\\tfloat level1 = level0 + 1.0;\\n\\tlevel1 = level1 > 5.0 ? 5.0 : level1;\\n\\tlevel0 += min( floor( s + 0.5 ), 5.0 );\\n\\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\\n\\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\\n\\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\\n\\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\\n\\tvec4 result = mix(color10, color20, t);\\n\\treturn vec4(result.rgb, 1.0);\\n}\\n#endif\";\n\nvar defaultnormal_vertex = \"vec3 transformedNormal = normalMatrix * objectNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n#ifdef USE_TANGENT\\n\\tvec3 transformedTangent = normalMatrix * objectTangent;\\n\\t#ifdef FLIP_SIDED\\n\\t\\ttransformedTangent = - transformedTangent;\\n\\t#endif\\n#endif\";\n\nvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\";\n\nvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\\n#endif\";\n\nvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\";\n\nvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\";\n\nvar encodings_fragment = \"gl_FragColor = linearToOutputTexel( gl_FragColor );\";\n\nvar encodings_pars_fragment = \"\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n\\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n\\tfloat maxComponent = max( max( value.r, value.g ), value.b );\\n\\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n\\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n\\tM = ceil( M * 255.0 ) / 255.0;\\n\\treturn vec4( value.rgb / ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\\tfloat D = max( maxRange / maxRGB, 1.0 );\\n\\tD = min( floor( D ) / 255.0, 1.0 );\\n\\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value )  {\\n\\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\\n\\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\\n\\tvec4 vResult;\\n\\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n\\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n\\tvResult.w = fract( Le );\\n\\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\\n\\treturn vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n\\tfloat Le = value.z * 255.0 + value.w;\\n\\tvec3 Xp_Y_XYZp;\\n\\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\\n\\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n\\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n\\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\\n\\treturn vec4( max( vRGB, 0.0 ), 1.0 );\\n}\";\n\nvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\tvec2 sampleUV;\\n\\t\\treflectVec = normalize( reflectVec );\\n\\t\\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\t\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\tvec4 envColor = texture2D( envMap, sampleUV );\\n\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\treflectVec = normalize( reflectVec );\\n\\t\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\\n\\t\\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\tenvColor = envMapTexelToLinear( envColor );\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\";\n\nvar envmap_pars_fragment = \"#if defined( USE_ENVMAP ) || defined( PHYSICAL )\\n\\tuniform float reflectivity;\\n\\tuniform float envMapIntensity;\\n#endif\\n#ifdef USE_ENVMAP\\n\\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\tuniform float flipEnvMap;\\n\\tuniform int maxMipLevel;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\";\n\nvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\";\n\nvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar fog_vertex = \"#ifdef USE_FOG\\n\\tfogDepth = -mvPosition.z;\\n#endif\";\n\nvar fog_pars_vertex = \"#ifdef USE_FOG\\n\\tvarying float fogDepth;\\n#endif\";\n\nvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\";\n\nvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float fogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";\n\nvar gradientmap_pars_fragment = \"#ifdef TOON\\n\\tuniform sampler2D gradientMap;\\n\\tvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\t\\tfloat dotNL = dot( normal, lightDirection );\\n\\t\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t\\t#ifdef USE_GRADIENTMAP\\n\\t\\t\\treturn texture2D( gradientMap, coord ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n#endif\";\n\nvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\nvar lights_lambert_vertex = \"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\nvIndirectFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n\\tvIndirectBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\n#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar lights_pars_begin = \"uniform vec3 ambientLightColor;\\nuniform vec3 lightProbe[ 9 ];\\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\\n\\tfloat x = normal.x, y = normal.y, z = normal.z;\\n\\tvec3 result = shCoefficients[ 0 ] * 0.886227;\\n\\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\\n\\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\\n\\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\\n\\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\\n\\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\\n\\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\\n\\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\\n\\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\\n\\treturn result;\\n}\\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\\n\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\\n\\treturn irradiance;\\n}\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treturn irradiance;\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tdirectLight.color = directionalLight.color;\\n\\t\\tdirectLight.direction = directionalLight.direction;\\n\\t\\tdirectLight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t\\tfloat shadowCameraNear;\\n\\t\\tfloat shadowCameraFar;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tdirectLight.color = pointLight.color;\\n\\t\\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tfloat angleCos = dot( directLight.direction, spotLight.direction );\\n\\t\\tif ( angleCos > spotLight.coneCos ) {\\n\\t\\t\\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\t\\tdirectLight.color = spotLight.color;\\n\\t\\t\\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tdirectLight.visible = true;\\n\\t\\t} else {\\n\\t\\t\\tdirectLight.color = vec3( 0.0 );\\n\\t\\t\\tdirectLight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\\n\\t\\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tirradiance *= PI;\\n\\t\\t#endif\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\";\n\nvar envmap_physical_pars_fragment = \"#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\\n\\t\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, queryVec, 1.0 );\\n\\t\\t#else\\n\\t\\t\\tvec4 envMapColor = vec4( 0.0 );\\n\\t\\t#endif\\n\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t}\\n\\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\tfloat maxMIPLevelScalar = float( maxMIPLevel );\\n\\t\\tfloat desiredMIPLevel = maxMIPLevelScalar + 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\\n\\t\\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\n\\t}\\n\\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\\n\\t\\t#endif\\n\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent ));\\n\\t\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\t\\tvec2 sampleUV;\\n\\t\\t\\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\t\\t\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\t\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#endif\\n\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t}\\n#endif\";\n\nvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct BlinnPhongMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tvec3\\tspecularColor;\\n\\tfloat\\tspecularShininess;\\n\\tfloat\\tspecularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifdef TOON\\n\\t\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\t#else\\n\\t\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\t\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#endif\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\";\n\nvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\\n#ifdef STANDARD\\n\\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.clearCoat = saturate( clearCoat );\\tmaterial.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\\n#endif\";\n\nvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tfloat\\tspecularRoughness;\\n\\tvec3\\tspecularColor;\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoat;\\n\\t\\tfloat clearCoatRoughness;\\n\\t#endif\\n};\\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\\n\\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.specularRoughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\\n\\treflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifndef ENVMAP_TYPE_CUBE_UV\\n\\t\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\t#endif\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\\n\\t#ifndef STANDARD\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\tfloat dotNL = dotNV;\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\tfloat clearCoatInv = 1.0 - clearCoatDHR;\\n\\t#if defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tvec3 singleScattering = vec3( 0.0 );\\n\\t\\tvec3 multiScattering = vec3( 0.0 );\\n\\t\\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\\n\\t\\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\\n\\t\\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\\n\\t\\treflectedLight.indirectSpecular += clearCoatInv * radiance * singleScattering;\\n\\t\\treflectedLight.indirectDiffuse += multiScattering * cosineWeightedIrradiance;\\n\\t\\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\\n\\t#else\\n\\t\\treflectedLight.indirectSpecular += clearCoatInv * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\\n\\t#endif\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\";\n\nvar lights_fragment_begin = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = normalize( vViewPosition );\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t}\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearCoatRadiance = vec3( 0.0 );\\n#endif\";\n\nvar lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tlightMapIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tirradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tradiance += getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), maxMipLevel );\\n\\t#ifndef STANDARD\\n\\t\\tclearCoatRadiance += getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), maxMipLevel );\\n\\t#endif\\n#endif\";\n\nvar lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, irradiance, clearCoatRadiance, geometry, material, reflectedLight );\\n#endif\";\n\nvar logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\n\nvar logdepthbuf_pars_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n#endif\";\n\nvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t#else\\n\\t\\tuniform float logDepthBufFC;\\n\\t#endif\\n#endif\";\n\nvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t#else\\n\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\tgl_Position.z *= gl_Position.w;\\n\\t#endif\\n#endif\";\n\nvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 texelColor = texture2D( map, vUv );\\n\\ttexelColor = mapTexelToLinear( texelColor );\\n\\tdiffuseColor *= texelColor;\\n#endif\";\n\nvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\";\n\nvar map_particle_fragment = \"#ifdef USE_MAP\\n\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n\\tvec4 mapTexel = texture2D( map, uv );\\n\\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\";\n\nvar map_particle_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform mat3 uvTransform;\\n\\tuniform sampler2D map;\\n#endif\";\n\nvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\";\n\nvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\nvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n\\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n\\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n\\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n#endif\";\n\nvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\t#ifndef USE_MORPHNORMALS\\n\\tuniform float morphTargetInfluences[ 8 ];\\n\\t#else\\n\\tuniform float morphTargetInfluences[ 4 ];\\n\\t#endif\\n#endif\";\n\nvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\n\\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\n\\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\n\\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n\\t#ifndef USE_MORPHNORMALS\\n\\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\n\\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\n\\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\n\\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n\\t#endif\\n#endif\";\n\nvar normal_fragment_begin = \"#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t#endif\\n\\t#ifdef USE_TANGENT\\n\\t\\tvec3 tangent = normalize( vTangent );\\n\\t\\tvec3 bitangent = normalize( vBitangent );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\ttangent = tangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\t\\tbitangent = bitangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar normal_fragment_maps = \"#ifdef USE_NORMALMAP\\n\\t#ifdef OBJECTSPACE_NORMALMAP\\n\\t\\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t\\t#ifdef FLIP_SIDED\\n\\t\\t\\tnormal = - normal;\\n\\t\\t#endif\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\t#endif\\n\\t\\tnormal = normalize( normalMatrix * normal );\\n\\t#else\\n\\t\\t#ifdef USE_TANGENT\\n\\t\\t\\tmat3 vTBN = mat3( tangent, bitangent, normal );\\n\\t\\t\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t\\t\\tmapN.xy = normalScale * mapN.xy;\\n\\t\\t\\tnormal = normalize( vTBN * mapN );\\n\\t\\t#else\\n\\t\\t\\tnormal = perturbNormal2Arb( -vViewPosition, normal );\\n\\t\\t#endif\\n\\t#endif\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n#endif\";\n\nvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n\\t#ifdef OBJECTSPACE_NORMALMAP\\n\\t\\tuniform mat3 normalMatrix;\\n\\t#else\\n\\t\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\n\\t\\t\\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\\n\\t\\t\\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\\n\\t\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\t\\tfloat scale = sign( st1.t * st0.s - st0.t * st1.s );\\n\\t\\t\\tvec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\\n\\t\\t\\tvec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\\n\\t\\t\\tvec3 N = normalize( surf_norm );\\n\\t\\t\\tmat3 tsn = mat3( S, T, N );\\n\\t\\t\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t\\t\\tmapN.xy *= normalScale;\\n\\t\\t\\tmapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\t\\treturn normalize( tsn * mapN );\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\nvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n\\treturn linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\";\n\nvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\";\n\nvar project_vertex = \"vec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\\ngl_Position = projectionMatrix * mvPosition;\";\n\nvar dithering_fragment = \"#if defined( DITHERING )\\n\\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\";\n\nvar dithering_pars_fragment = \"#if defined( DITHERING )\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\";\n\nvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\";\n\nvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\nvar shadowmap_pars_fragment = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\\n\\t\\tconst vec2 offset = vec2( 0.0, 1.0 );\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / size;\\n\\t\\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\\n\\t\\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\\n\\t\\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\\n\\t\\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\\n\\t\\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\\n\\t\\tvec2 f = fract( uv * size + 0.5 );\\n\\t\\tfloat a = mix( lb, lt, f.y );\\n\\t\\tfloat b = mix( rb, rt, f.y );\\n\\t\\tfloat c = mix( a, b, f.x );\\n\\t\\treturn c;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar shadowmap_pars_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n#endif\";\n\nvar shadowmap_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n#endif\";\n\nvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\tDirectionalLight directionalLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\tSpotLight spotLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\tPointLight pointLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\";\n\nvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\nvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\t#ifdef BONE_TEXTURE\\n\\t\\tuniform sampler2D boneTexture;\\n\\t\\tuniform int boneTextureSize;\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#else\\n\\t\\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tmat4 bone = boneMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\nvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\";\n\nvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\t#ifdef USE_TANGENT\\n\\t\\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#endif\\n#endif\";\n\nvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\nvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\nvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n\\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\";\n\nvar tonemapping_pars_fragment = \"#ifndef saturate\\n\\t#define saturate(a) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nuniform float toneMappingWhitePoint;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\\nvec3 Uncharted2ToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\nvec3 ACESFilmicToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( ( color * ( 2.51 * color + 0.03 ) ) / ( color * ( 2.43 * color + 0.59 ) + 0.14 ) );\\n}\";\n\nvar uv_pars_fragment = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n#endif\";\n\nvar uv_pars_vertex = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n\\tuniform mat3 uvTransform;\\n#endif\";\n\nvar uv_vertex = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n#endif\";\n\nvar uv2_pars_fragment = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\";\n\nvar uv2_pars_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n#endif\";\n\nvar uv2_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = uv2;\\n#endif\";\n\nvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\\n\\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\\n#endif\";\n\nvar background_frag = \"uniform sampler2D t2D;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tvec4 texColor = texture2D( t2D, vUv );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\nvar background_vert = \"varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\tgl_Position = vec4( position.xy, 1.0, 1.0 );\\n}\";\n\nvar cube_frag = \"uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\nvoid main() {\\n\\tvec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\tgl_FragColor.a *= opacity;\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\nvar cube_vert = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\nvar depth_frag = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - gl_FragCoord.z ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\\n\\t#endif\\n}\";\n\nvar depth_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n}\";\n\nvar distanceRGBA_frag = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\";\n\nvar distanceRGBA_vert = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\";\n\nvar equirect_frag = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldDirection );\\n\\tvec2 sampleUV;\\n\\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tvec4 texColor = texture2D( tEquirect, sampleUV );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\nvar equirect_vert = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\";\n\nvar linedashed_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nvar linedashed_vert = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\tvLineDistance = scale * lineDistance;\\n\\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar meshbasic_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\treflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nvar meshbasic_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_ENVMAP\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar meshlambert_frag = \"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vIndirectFront;\\n\\t#endif\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nvar meshlambert_vert = \"#define LAMBERT\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar meshmatcap_frag = \"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\t#ifdef USE_MATCAP\\n\\t\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\t\\tmatcapColor = matcapTexelToLinear( matcapColor );\\n\\t#else\\n\\t\\tvec4 matcapColor = vec4( 1.0 );\\n\\t#endif\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nvar meshmatcap_vert = \"#define MATCAP\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#ifndef FLAT_SHADED\\n\\t\\tvNormal = normalize( transformedNormal );\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\";\n\nvar meshphong_frag = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nvar meshphong_vert = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar meshphysical_frag = \"#define PHYSICAL\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifndef STANDARD\\n\\tuniform float clearCoat;\\n\\tuniform float clearCoatRoughness;\\n#endif\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <bsdfs>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <lights_physical_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nvar meshphysical_vert = \"#define PHYSICAL\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar normal_frag = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\nvoid main() {\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n}\";\n\nvar normal_vert = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\";\n\nvar points_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nvar points_vert = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar shadow_frag = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <fog_fragment>\\n}\";\n\nvar shadow_vert = \"#include <fog_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar sprite_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nvar sprite_vert = \"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar ShaderChunk = {\n\talphamap_fragment: alphamap_fragment,\n\talphamap_pars_fragment: alphamap_pars_fragment,\n\talphatest_fragment: alphatest_fragment,\n\taomap_fragment: aomap_fragment,\n\taomap_pars_fragment: aomap_pars_fragment,\n\tbegin_vertex: begin_vertex,\n\tbeginnormal_vertex: beginnormal_vertex,\n\tbsdfs: bsdfs,\n\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\tclipping_planes_fragment: clipping_planes_fragment,\n\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\tclipping_planes_vertex: clipping_planes_vertex,\n\tcolor_fragment: color_fragment,\n\tcolor_pars_fragment: color_pars_fragment,\n\tcolor_pars_vertex: color_pars_vertex,\n\tcolor_vertex: color_vertex,\n\tcommon: common,\n\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\tdefaultnormal_vertex: defaultnormal_vertex,\n\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\tdisplacementmap_vertex: displacementmap_vertex,\n\temissivemap_fragment: emissivemap_fragment,\n\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\tencodings_fragment: encodings_fragment,\n\tencodings_pars_fragment: encodings_pars_fragment,\n\tenvmap_fragment: envmap_fragment,\n\tenvmap_pars_fragment: envmap_pars_fragment,\n\tenvmap_pars_vertex: envmap_pars_vertex,\n\tenvmap_physical_pars_fragment: envmap_physical_pars_fragment,\n\tenvmap_vertex: envmap_vertex,\n\tfog_vertex: fog_vertex,\n\tfog_pars_vertex: fog_pars_vertex,\n\tfog_fragment: fog_fragment,\n\tfog_pars_fragment: fog_pars_fragment,\n\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\tlightmap_fragment: lightmap_fragment,\n\tlightmap_pars_fragment: lightmap_pars_fragment,\n\tlights_lambert_vertex: lights_lambert_vertex,\n\tlights_pars_begin: lights_pars_begin,\n\tlights_phong_fragment: lights_phong_fragment,\n\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\tlights_physical_fragment: lights_physical_fragment,\n\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\tlights_fragment_begin: lights_fragment_begin,\n\tlights_fragment_maps: lights_fragment_maps,\n\tlights_fragment_end: lights_fragment_end,\n\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\tmap_fragment: map_fragment,\n\tmap_pars_fragment: map_pars_fragment,\n\tmap_particle_fragment: map_particle_fragment,\n\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\tmetalnessmap_fragment: metalnessmap_fragment,\n\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\tmorphnormal_vertex: morphnormal_vertex,\n\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\tmorphtarget_vertex: morphtarget_vertex,\n\tnormal_fragment_begin: normal_fragment_begin,\n\tnormal_fragment_maps: normal_fragment_maps,\n\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\tpacking: packing,\n\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\tproject_vertex: project_vertex,\n\tdithering_fragment: dithering_fragment,\n\tdithering_pars_fragment: dithering_pars_fragment,\n\troughnessmap_fragment: roughnessmap_fragment,\n\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\tshadowmap_vertex: shadowmap_vertex,\n\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\tskinbase_vertex: skinbase_vertex,\n\tskinning_pars_vertex: skinning_pars_vertex,\n\tskinning_vertex: skinning_vertex,\n\tskinnormal_vertex: skinnormal_vertex,\n\tspecularmap_fragment: specularmap_fragment,\n\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\ttonemapping_fragment: tonemapping_fragment,\n\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\tuv_pars_fragment: uv_pars_fragment,\n\tuv_pars_vertex: uv_pars_vertex,\n\tuv_vertex: uv_vertex,\n\tuv2_pars_fragment: uv2_pars_fragment,\n\tuv2_pars_vertex: uv2_pars_vertex,\n\tuv2_vertex: uv2_vertex,\n\tworldpos_vertex: worldpos_vertex,\n\n\tbackground_frag: background_frag,\n\tbackground_vert: background_vert,\n\tcube_frag: cube_frag,\n\tcube_vert: cube_vert,\n\tdepth_frag: depth_frag,\n\tdepth_vert: depth_vert,\n\tdistanceRGBA_frag: distanceRGBA_frag,\n\tdistanceRGBA_vert: distanceRGBA_vert,\n\tequirect_frag: equirect_frag,\n\tequirect_vert: equirect_vert,\n\tlinedashed_frag: linedashed_frag,\n\tlinedashed_vert: linedashed_vert,\n\tmeshbasic_frag: meshbasic_frag,\n\tmeshbasic_vert: meshbasic_vert,\n\tmeshlambert_frag: meshlambert_frag,\n\tmeshlambert_vert: meshlambert_vert,\n\tmeshmatcap_frag: meshmatcap_frag,\n\tmeshmatcap_vert: meshmatcap_vert,\n\tmeshphong_frag: meshphong_frag,\n\tmeshphong_vert: meshphong_vert,\n\tmeshphysical_frag: meshphysical_frag,\n\tmeshphysical_vert: meshphysical_vert,\n\tnormal_frag: normal_frag,\n\tnormal_vert: normal_vert,\n\tpoints_frag: points_frag,\n\tpoints_vert: points_vert,\n\tshadow_frag: shadow_frag,\n\tshadow_vert: shadow_vert,\n\tsprite_frag: sprite_frag,\n\tsprite_vert: sprite_vert\n};\n\n/**\n * Uniform Utilities\n */\n\nfunction cloneUniforms( src ) {\n\n\tvar dst = {};\n\n\tfor ( var u in src ) {\n\n\t\tdst[ u ] = {};\n\n\t\tfor ( var p in src[ u ] ) {\n\n\t\t\tvar property = src[ u ][ p ];\n\n\t\t\tif ( property && ( property.isColor ||\n\t\t\t\tproperty.isMatrix3 || property.isMatrix4 ||\n\t\t\t\tproperty.isVector2 || property.isVector3 || property.isVector4 ||\n\t\t\t\tproperty.isTexture ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.clone();\n\n\t\t\t} else if ( Array.isArray( property ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.slice();\n\n\t\t\t} else {\n\n\t\t\t\tdst[ u ][ p ] = property;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction mergeUniforms( uniforms ) {\n\n\tvar merged = {};\n\n\tfor ( var u = 0; u < uniforms.length; u ++ ) {\n\n\t\tvar tmp = cloneUniforms( uniforms[ u ] );\n\n\t\tfor ( var p in tmp ) {\n\n\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t}\n\n\t}\n\n\treturn merged;\n\n}\n\n// Legacy\n\nvar UniformsUtils = { clone: cloneUniforms, merge: mergeUniforms };\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar ColorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\nfunction Color( r, g, b ) {\n\n\tif ( g === undefined && b === undefined ) {\n\n\t\t// r is THREE.Color, hex or string\n\t\treturn this.set( r );\n\n\t}\n\n\treturn this.setRGB( r, g, b );\n\n}\n\nObject.assign( Color.prototype, {\n\n\tisColor: true,\n\n\tr: 1, g: 1, b: 1,\n\n\tset: function ( value ) {\n\n\t\tif ( value && value.isColor ) {\n\n\t\t\tthis.copy( value );\n\n\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\tthis.setHex( value );\n\n\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\tthis.setStyle( value );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.r = scalar;\n\t\tthis.g = scalar;\n\t\tthis.b = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetHex: function ( hex ) {\n\n\t\thex = Math.floor( hex );\n\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\treturn this;\n\n\t},\n\n\tsetRGB: function ( r, g, b ) {\n\n\t\tthis.r = r;\n\t\tthis.g = g;\n\t\tthis.b = b;\n\n\t\treturn this;\n\n\t},\n\n\tsetHSL: function () {\n\n\t\tfunction hue2rgb( p, q, t ) {\n\n\t\t\tif ( t < 0 ) t += 1;\n\t\t\tif ( t > 1 ) t -= 1;\n\t\t\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\t\t\tif ( t < 1 / 2 ) return q;\n\t\t\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\t\t\treturn p;\n\n\t\t}\n\n\t\treturn function setHSL( h, s, l ) {\n\n\t\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\t\th = _Math.euclideanModulo( h, 1 );\n\t\t\ts = _Math.clamp( s, 0, 1 );\n\t\t\tl = _Math.clamp( l, 0, 1 );\n\n\t\t\tif ( s === 0 ) {\n\n\t\t\t\tthis.r = this.g = this.b = l;\n\n\t\t\t} else {\n\n\t\t\t\tvar p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\t\tvar q = ( 2 * l ) - p;\n\n\t\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tsetStyle: function ( style ) {\n\n\t\tfunction handleAlpha( string ) {\n\n\t\t\tif ( string === undefined ) return;\n\n\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tvar m;\n\n\t\tif ( m = /^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t// rgb / hsl\n\n\t\t\tvar color;\n\t\t\tvar name = m[ 1 ];\n\t\t\tvar components = m[ 2 ];\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'rgb':\n\t\t\t\tcase 'rgba':\n\n\t\t\t\t\tif ( color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\n\n\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\n\n\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'hsl':\n\t\t\t\tcase 'hsla':\n\n\t\t\t\t\tif ( color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\t\t\t\t\t\tvar h = parseFloat( color[ 1 ] ) / 360;\n\t\t\t\t\t\tvar s = parseInt( color[ 2 ], 10 ) / 100;\n\t\t\t\t\t\tvar l = parseInt( color[ 3 ], 10 ) / 100;\n\n\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\treturn this.setHSL( h, s, l );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t} else if ( m = /^\\#([A-Fa-f0-9]+)$/.exec( style ) ) {\n\n\t\t\t// hex color\n\n\t\t\tvar hex = m[ 1 ];\n\t\t\tvar size = hex.length;\n\n\t\t\tif ( size === 3 ) {\n\n\t\t\t\t// #ff0\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\n\n\t\t\t\treturn this;\n\n\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t// #ff0000\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( style && style.length > 0 ) {\n\n\t\t\t// color keywords\n\t\t\tvar hex = ColorKeywords[ style ];\n\n\t\t\tif ( hex !== undefined ) {\n\n\t\t\t\t// red\n\t\t\t\tthis.setHex( hex );\n\n\t\t\t} else {\n\n\t\t\t\t// unknown color\n\t\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t},\n\n\tcopy: function ( color ) {\n\n\t\tthis.r = color.r;\n\t\tthis.g = color.g;\n\t\tthis.b = color.b;\n\n\t\treturn this;\n\n\t},\n\n\tcopyGammaToLinear: function ( color, gammaFactor ) {\n\n\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\n\n\t\tthis.r = Math.pow( color.r, gammaFactor );\n\t\tthis.g = Math.pow( color.g, gammaFactor );\n\t\tthis.b = Math.pow( color.b, gammaFactor );\n\n\t\treturn this;\n\n\t},\n\n\tcopyLinearToGamma: function ( color, gammaFactor ) {\n\n\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\n\n\t\tvar safeInverse = ( gammaFactor > 0 ) ? ( 1.0 / gammaFactor ) : 1.0;\n\n\t\tthis.r = Math.pow( color.r, safeInverse );\n\t\tthis.g = Math.pow( color.g, safeInverse );\n\t\tthis.b = Math.pow( color.b, safeInverse );\n\n\t\treturn this;\n\n\t},\n\n\tconvertGammaToLinear: function ( gammaFactor ) {\n\n\t\tthis.copyGammaToLinear( this, gammaFactor );\n\n\t\treturn this;\n\n\t},\n\n\tconvertLinearToGamma: function ( gammaFactor ) {\n\n\t\tthis.copyLinearToGamma( this, gammaFactor );\n\n\t\treturn this;\n\n\t},\n\n\tcopySRGBToLinear: function () {\n\n\t\tfunction SRGBToLinear( c ) {\n\n\t\t\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\n\n\t\t}\n\n\t\treturn function copySRGBToLinear( color ) {\n\n\t\t\tthis.r = SRGBToLinear( color.r );\n\t\t\tthis.g = SRGBToLinear( color.g );\n\t\t\tthis.b = SRGBToLinear( color.b );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tcopyLinearToSRGB: function () {\n\n\t\tfunction LinearToSRGB( c ) {\n\n\t\t\treturn ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\n\n\t\t}\n\n\t\treturn function copyLinearToSRGB( color ) {\n\n\t\t\tthis.r = LinearToSRGB( color.r );\n\t\t\tthis.g = LinearToSRGB( color.g );\n\t\t\tthis.b = LinearToSRGB( color.b );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tconvertSRGBToLinear: function () {\n\n\t\tthis.copySRGBToLinear( this );\n\n\t\treturn this;\n\n\t},\n\n\tconvertLinearToSRGB: function () {\n\n\t\tthis.copyLinearToSRGB( this );\n\n\t\treturn this;\n\n\t},\n\n\tgetHex: function () {\n\n\t\treturn ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;\n\n\t},\n\n\tgetHexString: function () {\n\n\t\treturn ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );\n\n\t},\n\n\tgetHSL: function ( target ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Color: .getHSL() target is now required' );\n\t\t\ttarget = { h: 0, s: 0, l: 0 };\n\n\t\t}\n\n\t\tvar r = this.r, g = this.g, b = this.b;\n\n\t\tvar max = Math.max( r, g, b );\n\t\tvar min = Math.min( r, g, b );\n\n\t\tvar hue, saturation;\n\t\tvar lightness = ( min + max ) / 2.0;\n\n\t\tif ( min === max ) {\n\n\t\t\thue = 0;\n\t\t\tsaturation = 0;\n\n\t\t} else {\n\n\t\t\tvar delta = max - min;\n\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\tswitch ( max ) {\n\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t}\n\n\t\t\thue /= 6;\n\n\t\t}\n\n\t\ttarget.h = hue;\n\t\ttarget.s = saturation;\n\t\ttarget.l = lightness;\n\n\t\treturn target;\n\n\t},\n\n\tgetStyle: function () {\n\n\t\treturn 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';\n\n\t},\n\n\toffsetHSL: function () {\n\n\t\tvar hsl = {};\n\n\t\treturn function ( h, s, l ) {\n\n\t\t\tthis.getHSL( hsl );\n\n\t\t\thsl.h += h; hsl.s += s; hsl.l += l;\n\n\t\t\tthis.setHSL( hsl.h, hsl.s, hsl.l );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tadd: function ( color ) {\n\n\t\tthis.r += color.r;\n\t\tthis.g += color.g;\n\t\tthis.b += color.b;\n\n\t\treturn this;\n\n\t},\n\n\taddColors: function ( color1, color2 ) {\n\n\t\tthis.r = color1.r + color2.r;\n\t\tthis.g = color1.g + color2.g;\n\t\tthis.b = color1.b + color2.b;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.r += s;\n\t\tthis.g += s;\n\t\tthis.b += s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( color ) {\n\n\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( color ) {\n\n\t\tthis.r *= color.r;\n\t\tthis.g *= color.g;\n\t\tthis.b *= color.b;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( s ) {\n\n\t\tthis.r *= s;\n\t\tthis.g *= s;\n\t\tthis.b *= s;\n\n\t\treturn this;\n\n\t},\n\n\tlerp: function ( color, alpha ) {\n\n\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tlerpHSL: function () {\n\n\t\tvar hslA = { h: 0, s: 0, l: 0 };\n\t\tvar hslB = { h: 0, s: 0, l: 0 };\n\n\t\treturn function lerpHSL( color, alpha ) {\n\n\t\t\tthis.getHSL( hslA );\n\t\t\tcolor.getHSL( hslB );\n\n\t\t\tvar h = _Math.lerp( hslA.h, hslB.h, alpha );\n\t\t\tvar s = _Math.lerp( hslA.s, hslB.s, alpha );\n\t\t\tvar l = _Math.lerp( hslA.l, hslB.l, alpha );\n\n\t\t\tthis.setHSL( h, s, l );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tequals: function ( c ) {\n\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.r = array[ offset ];\n\t\tthis.g = array[ offset + 1 ];\n\t\tthis.b = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.r;\n\t\tarray[ offset + 1 ] = this.g;\n\t\tarray[ offset + 2 ] = this.b;\n\n\t\treturn array;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\treturn this.getHex();\n\n\t}\n\n} );\n\n/**\n * Uniforms library for shared webgl shaders\n */\n\nvar UniformsLib = {\n\n\tcommon: {\n\n\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\topacity: { value: 1.0 },\n\n\t\tmap: { value: null },\n\t\tuvTransform: { value: new Matrix3() },\n\n\t\talphaMap: { value: null },\n\n\t},\n\n\tspecularmap: {\n\n\t\tspecularMap: { value: null },\n\n\t},\n\n\tenvmap: {\n\n\t\tenvMap: { value: null },\n\t\tflipEnvMap: { value: - 1 },\n\t\treflectivity: { value: 1.0 },\n\t\trefractionRatio: { value: 0.98 },\n\t\tmaxMipLevel: { value: 0 }\n\n\t},\n\n\taomap: {\n\n\t\taoMap: { value: null },\n\t\taoMapIntensity: { value: 1 }\n\n\t},\n\n\tlightmap: {\n\n\t\tlightMap: { value: null },\n\t\tlightMapIntensity: { value: 1 }\n\n\t},\n\n\temissivemap: {\n\n\t\temissiveMap: { value: null }\n\n\t},\n\n\tbumpmap: {\n\n\t\tbumpMap: { value: null },\n\t\tbumpScale: { value: 1 }\n\n\t},\n\n\tnormalmap: {\n\n\t\tnormalMap: { value: null },\n\t\tnormalScale: { value: new Vector2( 1, 1 ) }\n\n\t},\n\n\tdisplacementmap: {\n\n\t\tdisplacementMap: { value: null },\n\t\tdisplacementScale: { value: 1 },\n\t\tdisplacementBias: { value: 0 }\n\n\t},\n\n\troughnessmap: {\n\n\t\troughnessMap: { value: null }\n\n\t},\n\n\tmetalnessmap: {\n\n\t\tmetalnessMap: { value: null }\n\n\t},\n\n\tgradientmap: {\n\n\t\tgradientMap: { value: null }\n\n\t},\n\n\tfog: {\n\n\t\tfogDensity: { value: 0.00025 },\n\t\tfogNear: { value: 1 },\n\t\tfogFar: { value: 2000 },\n\t\tfogColor: { value: new Color( 0xffffff ) }\n\n\t},\n\n\tlights: {\n\n\t\tambientLightColor: { value: [] },\n\n\t\tlightProbe: { value: [] },\n\n\t\tdirectionalLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tcolor: {},\n\n\t\t\tshadow: {},\n\t\t\tshadowBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tdirectionalShadowMap: { value: [] },\n\t\tdirectionalShadowMatrix: { value: [] },\n\n\t\tspotLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdirection: {},\n\t\t\tdistance: {},\n\t\t\tconeCos: {},\n\t\t\tpenumbraCos: {},\n\t\t\tdecay: {},\n\n\t\t\tshadow: {},\n\t\t\tshadowBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tspotShadowMap: { value: [] },\n\t\tspotShadowMatrix: { value: [] },\n\n\t\tpointLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdecay: {},\n\t\t\tdistance: {},\n\n\t\t\tshadow: {},\n\t\t\tshadowBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {},\n\t\t\tshadowCameraNear: {},\n\t\t\tshadowCameraFar: {}\n\t\t} },\n\n\t\tpointShadowMap: { value: [] },\n\t\tpointShadowMatrix: { value: [] },\n\n\t\themisphereLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tskyColor: {},\n\t\t\tgroundColor: {}\n\t\t} },\n\n\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\trectAreaLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\twidth: {},\n\t\t\theight: {}\n\t\t} }\n\n\t},\n\n\tpoints: {\n\n\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\topacity: { value: 1.0 },\n\t\tsize: { value: 1.0 },\n\t\tscale: { value: 1.0 },\n\t\tmap: { value: null },\n\t\tuvTransform: { value: new Matrix3() }\n\n\t},\n\n\tsprite: {\n\n\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\topacity: { value: 1.0 },\n\t\tcenter: { value: new Vector2( 0.5, 0.5 ) },\n\t\trotation: { value: 0.0 },\n\t\tmap: { value: null },\n\t\tuvTransform: { value: new Matrix3() }\n\n\t}\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n */\n\nvar ShaderLib = {\n\n\tbasic: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\n\t},\n\n\tlambert: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\n\t},\n\n\tphong: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.gradientmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\tspecular: { value: new Color( 0x111111 ) },\n\t\t\t\tshininess: { value: 30 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\tfragmentShader: ShaderChunk.meshphong_frag\n\n\t},\n\n\tstandard: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.roughnessmap,\n\t\t\tUniformsLib.metalnessmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\troughness: { value: 0.5 },\n\t\t\t\tmetalness: { value: 0.5 },\n\t\t\t\tenvMapIntensity: { value: 1 } // temporary\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t},\n\n\tmatcap: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tmatcap: { value: null }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshmatcap_vert,\n\t\tfragmentShader: ShaderChunk.meshmatcap_frag\n\n\t},\n\n\tpoints: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.points,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.points_vert,\n\t\tfragmentShader: ShaderChunk.points_frag\n\n\t},\n\n\tdashed: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tscale: { value: 1 },\n\t\t\t\tdashSize: { value: 1 },\n\t\t\t\ttotalSize: { value: 2 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\tfragmentShader: ShaderChunk.linedashed_frag\n\n\t},\n\n\tdepth: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.depth_vert,\n\t\tfragmentShader: ShaderChunk.depth_frag\n\n\t},\n\n\tnormal: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.normal_vert,\n\t\tfragmentShader: ShaderChunk.normal_frag\n\n\t},\n\n\tsprite: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.sprite,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.sprite_vert,\n\t\tfragmentShader: ShaderChunk.sprite_frag\n\n\t},\n\n\tbackground: {\n\n\t\tuniforms: {\n\t\t\tuvTransform: { value: new Matrix3() },\n\t\t\tt2D: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.background_vert,\n\t\tfragmentShader: ShaderChunk.background_frag\n\n\t},\n\t/* -------------------------------------------------------------------------\n\t//\tCube map shader\n\t ------------------------------------------------------------------------- */\n\n\tcube: {\n\n\t\tuniforms: {\n\t\t\ttCube: { value: null },\n\t\t\ttFlip: { value: - 1 },\n\t\t\topacity: { value: 1.0 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.cube_vert,\n\t\tfragmentShader: ShaderChunk.cube_frag\n\n\t},\n\n\tequirect: {\n\n\t\tuniforms: {\n\t\t\ttEquirect: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\tfragmentShader: ShaderChunk.equirect_frag\n\n\t},\n\n\tdistanceRGBA: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\treferencePosition: { value: new Vector3() },\n\t\t\t\tnearDistance: { value: 1 },\n\t\t\t\tfarDistance: { value: 1000 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\n\t},\n\n\tshadow: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.lights,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tcolor: { value: new Color( 0x00000 ) },\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t},\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\tfragmentShader: ShaderChunk.shadow_frag\n\n\t}\n\n};\n\nShaderLib.physical = {\n\n\tuniforms: mergeUniforms( [\n\t\tShaderLib.standard.uniforms,\n\t\t{\n\t\t\tclearCoat: { value: 0 },\n\t\t\tclearCoatRoughness: { value: 0 }\n\t\t}\n\t] ),\n\n\tvertexShader: ShaderChunk.meshphysical_vert,\n\tfragmentShader: ShaderChunk.meshphysical_frag\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLAnimation() {\n\n\tvar context = null;\n\tvar isAnimating = false;\n\tvar animationLoop = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tif ( isAnimating === false ) return;\n\n\t\tanimationLoop( time, frame );\n\n\t\tcontext.requestAnimationFrame( onAnimationFrame );\n\n\t}\n\n\treturn {\n\n\t\tstart: function () {\n\n\t\t\tif ( isAnimating === true ) return;\n\t\t\tif ( animationLoop === null ) return;\n\n\t\t\tcontext.requestAnimationFrame( onAnimationFrame );\n\n\t\t\tisAnimating = true;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tisAnimating = false;\n\n\t\t},\n\n\t\tsetAnimationLoop: function ( callback ) {\n\n\t\t\tanimationLoop = callback;\n\n\t\t},\n\n\t\tsetContext: function ( value ) {\n\n\t\t\tcontext = value;\n\n\t\t}\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLAttributes( gl ) {\n\n\tvar buffers = new WeakMap();\n\n\tfunction createBuffer( attribute, bufferType ) {\n\n\t\tvar array = attribute.array;\n\t\tvar usage = attribute.dynamic ? 35048 : 35044;\n\n\t\tvar buffer = gl.createBuffer();\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\t\tgl.bufferData( bufferType, array, usage );\n\n\t\tattribute.onUploadCallback();\n\n\t\tvar type = 5126;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\ttype = 5126;\n\n\t\t} else if ( array instanceof Float64Array ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.' );\n\n\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\ttype = 5123;\n\n\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\ttype = 5122;\n\n\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\ttype = 5125;\n\n\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\ttype = 5124;\n\n\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\ttype = 5120;\n\n\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\ttype = 5121;\n\n\t\t}\n\n\t\treturn {\n\t\t\tbuffer: buffer,\n\t\t\ttype: type,\n\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\tversion: attribute.version\n\t\t};\n\n\t}\n\n\tfunction updateBuffer( buffer, attribute, bufferType ) {\n\n\t\tvar array = attribute.array;\n\t\tvar updateRange = attribute.updateRange;\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\n\t\tif ( attribute.dynamic === false ) {\n\n\t\t\tgl.bufferData( bufferType, array, 35044 );\n\n\t\t} else if ( updateRange.count === - 1 ) {\n\n\t\t\t// Not using update ranges\n\n\t\t\tgl.bufferSubData( bufferType, 0, array );\n\n\t\t} else if ( updateRange.count === 0 ) {\n\n\t\t\tconsole.error( 'THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.' );\n\n\t\t} else {\n\n\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\tarray.subarray( updateRange.offset, updateRange.offset + updateRange.count ) );\n\n\t\t\tupdateRange.count = - 1; // reset range\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction get( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\treturn buffers.get( attribute );\n\n\t}\n\n\tfunction remove( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tvar data = buffers.get( attribute );\n\n\t\tif ( data ) {\n\n\t\t\tgl.deleteBuffer( data.buffer );\n\n\t\t\tbuffers.delete( attribute );\n\n\t\t}\n\n\t}\n\n\tfunction update( attribute, bufferType ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tvar data = buffers.get( attribute );\n\n\t\tif ( data === undefined ) {\n\n\t\t\tbuffers.set( attribute, createBuffer( attribute, bufferType ) );\n\n\t\t} else if ( data.version < attribute.version ) {\n\n\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\n\n\t\t\tdata.version = attribute.version;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Face3( a, b, c, normal, color, materialIndex ) {\n\n\tthis.a = a;\n\tthis.b = b;\n\tthis.c = c;\n\n\tthis.normal = ( normal && normal.isVector3 ) ? normal : new Vector3();\n\tthis.vertexNormals = Array.isArray( normal ) ? normal : [];\n\n\tthis.color = ( color && color.isColor ) ? color : new Color();\n\tthis.vertexColors = Array.isArray( color ) ? color : [];\n\n\tthis.materialIndex = materialIndex !== undefined ? materialIndex : 0;\n\n}\n\nObject.assign( Face3.prototype, {\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.a = source.a;\n\t\tthis.b = source.b;\n\t\tthis.c = source.c;\n\n\t\tthis.normal.copy( source.normal );\n\t\tthis.color.copy( source.color );\n\n\t\tthis.materialIndex = source.materialIndex;\n\n\t\tfor ( var i = 0, il = source.vertexNormals.length; i < il; i ++ ) {\n\n\t\t\tthis.vertexNormals[ i ] = source.vertexNormals[ i ].clone();\n\n\t\t}\n\n\t\tfor ( var i = 0, il = source.vertexColors.length; i < il; i ++ ) {\n\n\t\t\tthis.vertexColors[ i ] = source.vertexColors[ i ].clone();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n */\n\nfunction Euler( x, y, z, order ) {\n\n\tthis._x = x || 0;\n\tthis._y = y || 0;\n\tthis._z = z || 0;\n\tthis._order = order || Euler.DefaultOrder;\n\n}\n\nEuler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\n\nEuler.DefaultOrder = 'XYZ';\n\nObject.defineProperties( Euler.prototype, {\n\n\tx: {\n\n\t\tget: function () {\n\n\t\t\treturn this._x;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._x = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\ty: {\n\n\t\tget: function () {\n\n\t\t\treturn this._y;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._y = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\tz: {\n\n\t\tget: function () {\n\n\t\t\treturn this._z;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._z = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\torder: {\n\n\t\tget: function () {\n\n\t\t\treturn this._order;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._order = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( Euler.prototype, {\n\n\tisEuler: true,\n\n\tset: function ( x, y, z, order ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order || this._order;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t},\n\n\tcopy: function ( euler ) {\n\n\t\tthis._x = euler._x;\n\t\tthis._y = euler._y;\n\t\tthis._z = euler._z;\n\t\tthis._order = euler._order;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromRotationMatrix: function ( m, order, update ) {\n\n\t\tvar clamp = _Math.clamp;\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tvar te = m.elements;\n\t\tvar m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\tvar m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\tvar m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\torder = order || this._order;\n\n\t\tif ( order === 'XYZ' ) {\n\n\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m13 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\tthis._z = 0;\n\n\t\t\t}\n\n\t\t} else if ( order === 'YXZ' ) {\n\n\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m23 ) < 0.99999 ) {\n\n\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\tthis._z = 0;\n\n\t\t\t}\n\n\t\t} else if ( order === 'ZXY' ) {\n\n\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m32 ) < 0.99999 ) {\n\n\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._y = 0;\n\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t}\n\n\t\t} else if ( order === 'ZYX' ) {\n\n\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m31 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t}\n\n\t\t} else if ( order === 'YZX' ) {\n\n\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m21 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t}\n\n\t\t} else if ( order === 'XZY' ) {\n\n\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m12 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\tthis._y = 0;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() given unsupported order: ' + order );\n\n\t\t}\n\n\t\tthis._order = order;\n\n\t\tif ( update !== false ) this.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromQuaternion: function () {\n\n\t\tvar matrix = new Matrix4();\n\n\t\treturn function setFromQuaternion( q, order, update ) {\n\n\t\t\tmatrix.makeRotationFromQuaternion( q );\n\n\t\t\treturn this.setFromRotationMatrix( matrix, order, update );\n\n\t\t};\n\n\t}(),\n\n\tsetFromVector3: function ( v, order ) {\n\n\t\treturn this.set( v.x, v.y, v.z, order || this._order );\n\n\t},\n\n\treorder: function () {\n\n\t\t// WARNING: this discards revolution information -bhouston\n\n\t\tvar q = new Quaternion();\n\n\t\treturn function reorder( newOrder ) {\n\n\t\t\tq.setFromEuler( this );\n\n\t\t\treturn this.setFromQuaternion( q, newOrder );\n\n\t\t};\n\n\t}(),\n\n\tequals: function ( euler ) {\n\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t},\n\n\tfromArray: function ( array ) {\n\n\t\tthis._x = array[ 0 ];\n\t\tthis._y = array[ 1 ];\n\t\tthis._z = array[ 2 ];\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._order;\n\n\t\treturn array;\n\n\t},\n\n\ttoVector3: function ( optionalResult ) {\n\n\t\tif ( optionalResult ) {\n\n\t\t\treturn optionalResult.set( this._x, this._y, this._z );\n\n\t\t} else {\n\n\t\t\treturn new Vector3( this._x, this._y, this._z );\n\n\t\t}\n\n\t},\n\n\tonChange: function ( callback ) {\n\n\t\tthis.onChangeCallback = callback;\n\n\t\treturn this;\n\n\t},\n\n\tonChangeCallback: function () {}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Layers() {\n\n\tthis.mask = 1 | 0;\n\n}\n\nObject.assign( Layers.prototype, {\n\n\tset: function ( channel ) {\n\n\t\tthis.mask = 1 << channel | 0;\n\n\t},\n\n\tenable: function ( channel ) {\n\n\t\tthis.mask |= 1 << channel | 0;\n\n\t},\n\n\ttoggle: function ( channel ) {\n\n\t\tthis.mask ^= 1 << channel | 0;\n\n\t},\n\n\tdisable: function ( channel ) {\n\n\t\tthis.mask &= ~ ( 1 << channel | 0 );\n\n\t},\n\n\ttest: function ( layers ) {\n\n\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author elephantatwork / www.elephantatwork.ch\n */\n\nvar object3DId = 0;\n\nfunction Object3D() {\n\n\tObject.defineProperty( this, 'id', { value: object3DId ++ } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'Object3D';\n\n\tthis.parent = null;\n\tthis.children = [];\n\n\tthis.up = Object3D.DefaultUp.clone();\n\n\tvar position = new Vector3();\n\tvar rotation = new Euler();\n\tvar quaternion = new Quaternion();\n\tvar scale = new Vector3( 1, 1, 1 );\n\n\tfunction onRotationChange() {\n\n\t\tquaternion.setFromEuler( rotation, false );\n\n\t}\n\n\tfunction onQuaternionChange() {\n\n\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t}\n\n\trotation.onChange( onRotationChange );\n\tquaternion.onChange( onQuaternionChange );\n\n\tObject.defineProperties( this, {\n\t\tposition: {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: true,\n\t\t\tvalue: position\n\t\t},\n\t\trotation: {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: true,\n\t\t\tvalue: rotation\n\t\t},\n\t\tquaternion: {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: true,\n\t\t\tvalue: quaternion\n\t\t},\n\t\tscale: {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: true,\n\t\t\tvalue: scale\n\t\t},\n\t\tmodelViewMatrix: {\n\t\t\tvalue: new Matrix4()\n\t\t},\n\t\tnormalMatrix: {\n\t\t\tvalue: new Matrix3()\n\t\t}\n\t} );\n\n\tthis.matrix = new Matrix4();\n\tthis.matrixWorld = new Matrix4();\n\n\tthis.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;\n\tthis.matrixWorldNeedsUpdate = false;\n\n\tthis.layers = new Layers();\n\tthis.visible = true;\n\n\tthis.castShadow = false;\n\tthis.receiveShadow = false;\n\n\tthis.frustumCulled = true;\n\tthis.renderOrder = 0;\n\n\tthis.userData = {};\n\n}\n\nObject3D.DefaultUp = new Vector3( 0, 1, 0 );\nObject3D.DefaultMatrixAutoUpdate = true;\n\nObject3D.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: Object3D,\n\n\tisObject3D: true,\n\n\tonBeforeRender: function () {},\n\tonAfterRender: function () {},\n\n\tapplyMatrix: function ( matrix ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tthis.matrix.premultiply( matrix );\n\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t},\n\n\tapplyQuaternion: function ( q ) {\n\n\t\tthis.quaternion.premultiply( q );\n\n\t\treturn this;\n\n\t},\n\n\tsetRotationFromAxisAngle: function ( axis, angle ) {\n\n\t\t// assumes axis is normalized\n\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t},\n\n\tsetRotationFromEuler: function ( euler ) {\n\n\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t},\n\n\tsetRotationFromMatrix: function ( m ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t},\n\n\tsetRotationFromQuaternion: function ( q ) {\n\n\t\t// assumes q is normalized\n\n\t\tthis.quaternion.copy( q );\n\n\t},\n\n\trotateOnAxis: function () {\n\n\t\t// rotate object on axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\tvar q1 = new Quaternion();\n\n\t\treturn function rotateOnAxis( axis, angle ) {\n\n\t\t\tq1.setFromAxisAngle( axis, angle );\n\n\t\t\tthis.quaternion.multiply( q1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateOnWorldAxis: function () {\n\n\t\t// rotate object on axis in world space\n\t\t// axis is assumed to be normalized\n\t\t// method assumes no rotated parent\n\n\t\tvar q1 = new Quaternion();\n\n\t\treturn function rotateOnWorldAxis( axis, angle ) {\n\n\t\t\tq1.setFromAxisAngle( axis, angle );\n\n\t\t\tthis.quaternion.premultiply( q1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateX: function () {\n\n\t\tvar v1 = new Vector3( 1, 0, 0 );\n\n\t\treturn function rotateX( angle ) {\n\n\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t};\n\n\t}(),\n\n\trotateY: function () {\n\n\t\tvar v1 = new Vector3( 0, 1, 0 );\n\n\t\treturn function rotateY( angle ) {\n\n\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t};\n\n\t}(),\n\n\trotateZ: function () {\n\n\t\tvar v1 = new Vector3( 0, 0, 1 );\n\n\t\treturn function rotateZ( angle ) {\n\n\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t};\n\n\t}(),\n\n\ttranslateOnAxis: function () {\n\n\t\t// translate object by distance along axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function translateOnAxis( axis, distance ) {\n\n\t\t\tv1.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\t\tthis.position.add( v1.multiplyScalar( distance ) );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslateX: function () {\n\n\t\tvar v1 = new Vector3( 1, 0, 0 );\n\n\t\treturn function translateX( distance ) {\n\n\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t};\n\n\t}(),\n\n\ttranslateY: function () {\n\n\t\tvar v1 = new Vector3( 0, 1, 0 );\n\n\t\treturn function translateY( distance ) {\n\n\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t};\n\n\t}(),\n\n\ttranslateZ: function () {\n\n\t\tvar v1 = new Vector3( 0, 0, 1 );\n\n\t\treturn function translateZ( distance ) {\n\n\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t};\n\n\t}(),\n\n\tlocalToWorld: function ( vector ) {\n\n\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t},\n\n\tworldToLocal: function () {\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function worldToLocal( vector ) {\n\n\t\t\treturn vector.applyMatrix4( m1.getInverse( this.matrixWorld ) );\n\n\t\t};\n\n\t}(),\n\n\tlookAt: function () {\n\n\t\t// This method does not support objects having non-uniformly-scaled parent(s)\n\n\t\tvar q1 = new Quaternion();\n\t\tvar m1 = new Matrix4();\n\t\tvar target = new Vector3();\n\t\tvar position = new Vector3();\n\n\t\treturn function lookAt( x, y, z ) {\n\n\t\t\tif ( x.isVector3 ) {\n\n\t\t\t\ttarget.copy( x );\n\n\t\t\t} else {\n\n\t\t\t\ttarget.set( x, y, z );\n\n\t\t\t}\n\n\t\t\tvar parent = this.parent;\n\n\t\t\tthis.updateWorldMatrix( true, false );\n\n\t\t\tposition.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tif ( this.isCamera || this.isLight ) {\n\n\t\t\t\tm1.lookAt( position, target, this.up );\n\n\t\t\t} else {\n\n\t\t\t\tm1.lookAt( target, position, this.up );\n\n\t\t\t}\n\n\t\t\tthis.quaternion.setFromRotationMatrix( m1 );\n\n\t\t\tif ( parent ) {\n\n\t\t\t\tm1.extractRotation( parent.matrixWorld );\n\t\t\t\tq1.setFromRotationMatrix( m1 );\n\t\t\t\tthis.quaternion.premultiply( q1.inverse() );\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\tadd: function ( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object === this ) {\n\n\t\t\tconsole.error( \"THREE.Object3D.add: object can't be added as a child of itself.\", object );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( ( object && object.isObject3D ) ) {\n\n\t\t\tif ( object.parent !== null ) {\n\n\t\t\t\tobject.parent.remove( object );\n\n\t\t\t}\n\n\t\t\tobject.parent = this;\n\t\t\tobject.dispatchEvent( { type: 'added' } );\n\n\t\t\tthis.children.push( object );\n\n\t\t} else {\n\n\t\t\tconsole.error( \"THREE.Object3D.add: object not an instance of THREE.Object3D.\", object );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tremove: function ( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar index = this.children.indexOf( object );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\tobject.parent = null;\n\n\t\t\tobject.dispatchEvent( { type: 'removed' } );\n\n\t\t\tthis.children.splice( index, 1 );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tattach: function () {\n\n\t\t// adds object as a child of this, while maintaining the object's world transform\n\n\t\tvar m = new Matrix4();\n\n\t\treturn function attach( object ) {\n\n\t\t\tthis.updateWorldMatrix( true, false );\n\n\t\t\tm.getInverse( this.matrixWorld );\n\n\t\t\tif ( object.parent !== null ) {\n\n\t\t\t\tobject.parent.updateWorldMatrix( true, false );\n\n\t\t\t\tm.multiply( object.parent.matrixWorld );\n\n\t\t\t}\n\n\t\t\tobject.applyMatrix( m );\n\n\t\t\tobject.updateWorldMatrix( false, false );\n\n\t\t\tthis.add( object );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tgetObjectById: function ( id ) {\n\n\t\treturn this.getObjectByProperty( 'id', id );\n\n\t},\n\n\tgetObjectByName: function ( name ) {\n\n\t\treturn this.getObjectByProperty( 'name', name );\n\n\t},\n\n\tgetObjectByProperty: function ( name, value ) {\n\n\t\tif ( this[ name ] === value ) return this;\n\n\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tvar child = this.children[ i ];\n\t\t\tvar object = child.getObjectByProperty( name, value );\n\n\t\t\tif ( object !== undefined ) {\n\n\t\t\t\treturn object;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t},\n\n\tgetWorldPosition: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .getWorldPosition() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tthis.updateMatrixWorld( true );\n\n\t\treturn target.setFromMatrixPosition( this.matrixWorld );\n\n\t},\n\n\tgetWorldQuaternion: function () {\n\n\t\tvar position = new Vector3();\n\t\tvar scale = new Vector3();\n\n\t\treturn function getWorldQuaternion( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .getWorldQuaternion() target is now required' );\n\t\t\t\ttarget = new Quaternion();\n\n\t\t\t}\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.matrixWorld.decompose( position, target, scale );\n\n\t\t\treturn target;\n\n\t\t};\n\n\t}(),\n\n\tgetWorldScale: function () {\n\n\t\tvar position = new Vector3();\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function getWorldScale( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .getWorldScale() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.matrixWorld.decompose( position, quaternion, target );\n\n\t\t\treturn target;\n\n\t\t};\n\n\t}(),\n\n\tgetWorldDirection: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .getWorldDirection() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tthis.updateMatrixWorld( true );\n\n\t\tvar e = this.matrixWorld.elements;\n\n\t\treturn target.set( e[ 8 ], e[ 9 ], e[ 10 ] ).normalize();\n\n\t},\n\n\traycast: function () {},\n\n\ttraverse: function ( callback ) {\n\n\t\tcallback( this );\n\n\t\tvar children = this.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverse( callback );\n\n\t\t}\n\n\t},\n\n\ttraverseVisible: function ( callback ) {\n\n\t\tif ( this.visible === false ) return;\n\n\t\tcallback( this );\n\n\t\tvar children = this.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t}\n\n\t},\n\n\ttraverseAncestors: function ( callback ) {\n\n\t\tvar parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tcallback( parent );\n\n\t\t\tparent.traverseAncestors( callback );\n\n\t\t}\n\n\t},\n\n\tupdateMatrix: function () {\n\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t},\n\n\tupdateMatrixWorld: function ( force ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\n\t\t\tif ( this.parent === null ) {\n\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t}\n\n\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\tforce = true;\n\n\t\t}\n\n\t\t// update children\n\n\t\tvar children = this.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].updateMatrixWorld( force );\n\n\t\t}\n\n\t},\n\n\tupdateWorldMatrix: function ( updateParents, updateChildren ) {\n\n\t\tvar parent = this.parent;\n\n\t\tif ( updateParents === true && parent !== null ) {\n\n\t\t\tparent.updateWorldMatrix( true, false );\n\n\t\t}\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.parent === null ) {\n\n\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t} else {\n\n\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t}\n\n\t\t// update children\n\n\t\tif ( updateChildren === true ) {\n\n\t\t\tvar children = this.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].updateWorldMatrix( false, true );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\t// meta is a string when called from JSON.stringify\n\t\tvar isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tvar output = {};\n\n\t\t// meta is a hash used to collect geometries, materials.\n\t\t// not providing it implies that this is the root object\n\t\t// being serialized.\n\t\tif ( isRootObject ) {\n\n\t\t\t// initialize meta obj\n\t\t\tmeta = {\n\t\t\t\tgeometries: {},\n\t\t\t\tmaterials: {},\n\t\t\t\ttextures: {},\n\t\t\t\timages: {},\n\t\t\t\tshapes: {}\n\t\t\t};\n\n\t\t\toutput.metadata = {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Object',\n\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t};\n\n\t\t}\n\n\t\t// standard Object3D serialization\n\n\t\tvar object = {};\n\n\t\tobject.uuid = this.uuid;\n\t\tobject.type = this.type;\n\n\t\tif ( this.name !== '' ) object.name = this.name;\n\t\tif ( this.castShadow === true ) object.castShadow = true;\n\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\tif ( this.visible === false ) object.visible = false;\n\t\tif ( this.frustumCulled === false ) object.frustumCulled = false;\n\t\tif ( this.renderOrder !== 0 ) object.renderOrder = this.renderOrder;\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) object.userData = this.userData;\n\n\t\tobject.layers = this.layers.mask;\n\t\tobject.matrix = this.matrix.toArray();\n\n\t\tif ( this.matrixAutoUpdate === false ) object.matrixAutoUpdate = false;\n\n\t\t// object specific properties\n\n\t\tif ( this.isMesh && this.drawMode !== TrianglesDrawMode ) object.drawMode = this.drawMode;\n\n\t\t//\n\n\t\tfunction serialize( library, element ) {\n\n\t\t\tif ( library[ element.uuid ] === undefined ) {\n\n\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\n\n\t\t\t}\n\n\t\t\treturn element.uuid;\n\n\t\t}\n\n\t\tif ( this.isMesh || this.isLine || this.isPoints ) {\n\n\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\n\n\t\t\tvar parameters = this.geometry.parameters;\n\n\t\t\tif ( parameters !== undefined && parameters.shapes !== undefined ) {\n\n\t\t\t\tvar shapes = parameters.shapes;\n\n\t\t\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\t\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tvar shape = shapes[ i ];\n\n\t\t\t\t\t\tserialize( meta.shapes, shape );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tserialize( meta.shapes, shapes );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.material !== undefined ) {\n\n\t\t\tif ( Array.isArray( this.material ) ) {\n\n\t\t\t\tvar uuids = [];\n\n\t\t\t\tfor ( var i = 0, l = this.material.length; i < l; i ++ ) {\n\n\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tobject.material = uuids;\n\n\t\t\t} else {\n\n\t\t\t\tobject.material = serialize( meta.materials, this.material );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.children.length > 0 ) {\n\n\t\t\tobject.children = [];\n\n\t\t\tfor ( var i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tvar geometries = extractFromCache( meta.geometries );\n\t\t\tvar materials = extractFromCache( meta.materials );\n\t\t\tvar textures = extractFromCache( meta.textures );\n\t\t\tvar images = extractFromCache( meta.images );\n\t\t\tvar shapes = extractFromCache( meta.shapes );\n\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\n\t\t\tif ( images.length > 0 ) output.images = images;\n\t\t\tif ( shapes.length > 0 ) output.shapes = shapes;\n\n\t\t}\n\n\t\toutput.object = object;\n\n\t\treturn output;\n\n\t\t// extract data from the cache hash\n\t\t// remove metadata on each item\n\t\t// and return as array\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tvar values = [];\n\t\t\tfor ( var key in cache ) {\n\n\t\t\t\tvar data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\t\t\treturn values;\n\n\t\t}\n\n\t},\n\n\tclone: function ( recursive ) {\n\n\t\treturn new this.constructor().copy( this, recursive );\n\n\t},\n\n\tcopy: function ( source, recursive ) {\n\n\t\tif ( recursive === undefined ) recursive = true;\n\n\t\tthis.name = source.name;\n\n\t\tthis.up.copy( source.up );\n\n\t\tthis.position.copy( source.position );\n\t\tthis.quaternion.copy( source.quaternion );\n\t\tthis.scale.copy( source.scale );\n\n\t\tthis.matrix.copy( source.matrix );\n\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\tthis.layers.mask = source.layers.mask;\n\t\tthis.visible = source.visible;\n\n\t\tthis.castShadow = source.castShadow;\n\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\tthis.frustumCulled = source.frustumCulled;\n\t\tthis.renderOrder = source.renderOrder;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tif ( recursive === true ) {\n\n\t\t\tfor ( var i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\tvar child = source.children[ i ];\n\t\t\t\tthis.add( child.clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author kile / http://kile.stravaganza.org/\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author bhouston / http://clara.io\n */\n\nvar geometryId = 0; // Geometry uses even numbers as Id\n\nfunction Geometry() {\n\n\tObject.defineProperty( this, 'id', { value: geometryId += 2 } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'Geometry';\n\n\tthis.vertices = [];\n\tthis.colors = [];\n\tthis.faces = [];\n\tthis.faceVertexUvs = [[]];\n\n\tthis.morphTargets = [];\n\tthis.morphNormals = [];\n\n\tthis.skinWeights = [];\n\tthis.skinIndices = [];\n\n\tthis.lineDistances = [];\n\n\tthis.boundingBox = null;\n\tthis.boundingSphere = null;\n\n\t// update flags\n\n\tthis.elementsNeedUpdate = false;\n\tthis.verticesNeedUpdate = false;\n\tthis.uvsNeedUpdate = false;\n\tthis.normalsNeedUpdate = false;\n\tthis.colorsNeedUpdate = false;\n\tthis.lineDistancesNeedUpdate = false;\n\tthis.groupsNeedUpdate = false;\n\n}\n\nGeometry.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: Geometry,\n\n\tisGeometry: true,\n\n\tapplyMatrix: function ( matrix ) {\n\n\t\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\tfor ( var i = 0, il = this.vertices.length; i < il; i ++ ) {\n\n\t\t\tvar vertex = this.vertices[ i ];\n\t\t\tvertex.applyMatrix4( matrix );\n\n\t\t}\n\n\t\tfor ( var i = 0, il = this.faces.length; i < il; i ++ ) {\n\n\t\t\tvar face = this.faces[ i ];\n\t\t\tface.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\tface.vertexNormals[ j ].applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\tthis.verticesNeedUpdate = true;\n\t\tthis.normalsNeedUpdate = true;\n\n\t\treturn this;\n\n\t},\n\n\trotateX: function () {\n\n\t\t// rotate geometry around world x-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateX( angle ) {\n\n\t\t\tm1.makeRotationX( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateY: function () {\n\n\t\t// rotate geometry around world y-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateY( angle ) {\n\n\t\t\tm1.makeRotationY( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateZ: function () {\n\n\t\t// rotate geometry around world z-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateZ( angle ) {\n\n\t\t\tm1.makeRotationZ( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslate: function () {\n\n\t\t// translate geometry\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function translate( x, y, z ) {\n\n\t\t\tm1.makeTranslation( x, y, z );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tscale: function () {\n\n\t\t// scale geometry\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function scale( x, y, z ) {\n\n\t\t\tm1.makeScale( x, y, z );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tlookAt: function () {\n\n\t\tvar obj = new Object3D();\n\n\t\treturn function lookAt( vector ) {\n\n\t\t\tobj.lookAt( vector );\n\n\t\t\tobj.updateMatrix();\n\n\t\t\tthis.applyMatrix( obj.matrix );\n\n\t\t};\n\n\t}(),\n\n\tfromBufferGeometry: function ( geometry ) {\n\n\t\tvar scope = this;\n\n\t\tvar indices = geometry.index !== null ? geometry.index.array : undefined;\n\t\tvar attributes = geometry.attributes;\n\n\t\tvar positions = attributes.position.array;\n\t\tvar normals = attributes.normal !== undefined ? attributes.normal.array : undefined;\n\t\tvar colors = attributes.color !== undefined ? attributes.color.array : undefined;\n\t\tvar uvs = attributes.uv !== undefined ? attributes.uv.array : undefined;\n\t\tvar uvs2 = attributes.uv2 !== undefined ? attributes.uv2.array : undefined;\n\n\t\tif ( uvs2 !== undefined ) this.faceVertexUvs[ 1 ] = [];\n\n\t\tfor ( var i = 0; i < positions.length; i += 3 ) {\n\n\t\t\tscope.vertices.push( new Vector3().fromArray( positions, i ) );\n\n\t\t\tif ( colors !== undefined ) {\n\n\t\t\t\tscope.colors.push( new Color().fromArray( colors, i ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction addFace( a, b, c, materialIndex ) {\n\n\t\t\tvar vertexColors = ( colors === undefined ) ? [] : [\n\t\t\t\tscope.colors[ a ].clone(),\n\t\t\t\tscope.colors[ b ].clone(),\n\t\t\t\tscope.colors[ c ].clone() ];\n\n\t\t\tvar vertexNormals = ( normals === undefined ) ? [] : [\n\t\t\t\tnew Vector3().fromArray( normals, a * 3 ),\n\t\t\t\tnew Vector3().fromArray( normals, b * 3 ),\n\t\t\t\tnew Vector3().fromArray( normals, c * 3 )\n\t\t\t];\n\n\t\t\tvar face = new Face3( a, b, c, vertexNormals, vertexColors, materialIndex );\n\n\t\t\tscope.faces.push( face );\n\n\t\t\tif ( uvs !== undefined ) {\n\n\t\t\t\tscope.faceVertexUvs[ 0 ].push( [\n\t\t\t\t\tnew Vector2().fromArray( uvs, a * 2 ),\n\t\t\t\t\tnew Vector2().fromArray( uvs, b * 2 ),\n\t\t\t\t\tnew Vector2().fromArray( uvs, c * 2 )\n\t\t\t\t] );\n\n\t\t\t}\n\n\t\t\tif ( uvs2 !== undefined ) {\n\n\t\t\t\tscope.faceVertexUvs[ 1 ].push( [\n\t\t\t\t\tnew Vector2().fromArray( uvs2, a * 2 ),\n\t\t\t\t\tnew Vector2().fromArray( uvs2, b * 2 ),\n\t\t\t\t\tnew Vector2().fromArray( uvs2, c * 2 )\n\t\t\t\t] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar groups = geometry.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tfor ( var i = 0; i < groups.length; i ++ ) {\n\n\t\t\t\tvar group = groups[ i ];\n\n\t\t\t\tvar start = group.start;\n\t\t\t\tvar count = group.count;\n\n\t\t\t\tfor ( var j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\t\tif ( indices !== undefined ) {\n\n\t\t\t\t\t\taddFace( indices[ j ], indices[ j + 1 ], indices[ j + 2 ], group.materialIndex );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\taddFace( j, j + 1, j + 2, group.materialIndex );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( indices !== undefined ) {\n\n\t\t\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t\taddFace( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tfor ( var i = 0; i < positions.length / 3; i += 3 ) {\n\n\t\t\t\t\taddFace( i, i + 1, i + 2 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.computeFaceNormals();\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t}\n\n\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcenter: function () {\n\n\t\tvar offset = new Vector3();\n\n\t\treturn function center() {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t\tthis.boundingBox.getCenter( offset ).negate();\n\n\t\t\tthis.translate( offset.x, offset.y, offset.z );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tnormalize: function () {\n\n\t\tthis.computeBoundingSphere();\n\n\t\tvar center = this.boundingSphere.center;\n\t\tvar radius = this.boundingSphere.radius;\n\n\t\tvar s = radius === 0 ? 1 : 1.0 / radius;\n\n\t\tvar matrix = new Matrix4();\n\t\tmatrix.set(\n\t\t\ts, 0, 0, - s * center.x,\n\t\t\t0, s, 0, - s * center.y,\n\t\t\t0, 0, s, - s * center.z,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\tthis.applyMatrix( matrix );\n\n\t\treturn this;\n\n\t},\n\n\tcomputeFaceNormals: function () {\n\n\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\tfor ( var f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tvar face = this.faces[ f ];\n\n\t\t\tvar vA = this.vertices[ face.a ];\n\t\t\tvar vB = this.vertices[ face.b ];\n\t\t\tvar vC = this.vertices[ face.c ];\n\n\t\t\tcb.subVectors( vC, vB );\n\t\t\tab.subVectors( vA, vB );\n\t\t\tcb.cross( ab );\n\n\t\t\tcb.normalize();\n\n\t\t\tface.normal.copy( cb );\n\n\t\t}\n\n\t},\n\n\tcomputeVertexNormals: function ( areaWeighted ) {\n\n\t\tif ( areaWeighted === undefined ) areaWeighted = true;\n\n\t\tvar v, vl, f, fl, face, vertices;\n\n\t\tvertices = new Array( this.vertices.length );\n\n\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\n\n\t\t\tvertices[ v ] = new Vector3();\n\n\t\t}\n\n\t\tif ( areaWeighted ) {\n\n\t\t\t// vertex normals weighted by triangle areas\n\t\t\t// http://www.iquilezles.org/www/articles/normals/normals.htm\n\n\t\t\tvar vA, vB, vC;\n\t\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tvA = this.vertices[ face.a ];\n\t\t\t\tvB = this.vertices[ face.b ];\n\t\t\t\tvC = this.vertices[ face.c ];\n\n\t\t\t\tcb.subVectors( vC, vB );\n\t\t\t\tab.subVectors( vA, vB );\n\t\t\t\tcb.cross( ab );\n\n\t\t\t\tvertices[ face.a ].add( cb );\n\t\t\t\tvertices[ face.b ].add( cb );\n\t\t\t\tvertices[ face.c ].add( cb );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.computeFaceNormals();\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tvertices[ face.a ].add( face.normal );\n\t\t\t\tvertices[ face.b ].add( face.normal );\n\t\t\t\tvertices[ face.c ].add( face.normal );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\n\n\t\t\tvertices[ v ].normalize();\n\n\t\t}\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\tvertexNormals[ 0 ].copy( vertices[ face.a ] );\n\t\t\t\tvertexNormals[ 1 ].copy( vertices[ face.b ] );\n\t\t\t\tvertexNormals[ 2 ].copy( vertices[ face.c ] );\n\n\t\t\t} else {\n\n\t\t\t\tvertexNormals[ 0 ] = vertices[ face.a ].clone();\n\t\t\t\tvertexNormals[ 1 ] = vertices[ face.b ].clone();\n\t\t\t\tvertexNormals[ 2 ] = vertices[ face.c ].clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.faces.length > 0 ) {\n\n\t\t\tthis.normalsNeedUpdate = true;\n\n\t\t}\n\n\t},\n\n\tcomputeFlatVertexNormals: function () {\n\n\t\tvar f, fl, face;\n\n\t\tthis.computeFaceNormals();\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\tvertexNormals[ 0 ].copy( face.normal );\n\t\t\t\tvertexNormals[ 1 ].copy( face.normal );\n\t\t\t\tvertexNormals[ 2 ].copy( face.normal );\n\n\t\t\t} else {\n\n\t\t\t\tvertexNormals[ 0 ] = face.normal.clone();\n\t\t\t\tvertexNormals[ 1 ] = face.normal.clone();\n\t\t\t\tvertexNormals[ 2 ] = face.normal.clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.faces.length > 0 ) {\n\n\t\t\tthis.normalsNeedUpdate = true;\n\n\t\t}\n\n\t},\n\n\tcomputeMorphNormals: function () {\n\n\t\tvar i, il, f, fl, face;\n\n\t\t// save original normals\n\t\t// - create temp variables on first access\n\t\t//   otherwise just copy (for faster repeated calls)\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tif ( ! face.__originalFaceNormal ) {\n\n\t\t\t\tface.__originalFaceNormal = face.normal.clone();\n\n\t\t\t} else {\n\n\t\t\t\tface.__originalFaceNormal.copy( face.normal );\n\n\t\t\t}\n\n\t\t\tif ( ! face.__originalVertexNormals ) face.__originalVertexNormals = [];\n\n\t\t\tfor ( i = 0, il = face.vertexNormals.length; i < il; i ++ ) {\n\n\t\t\t\tif ( ! face.__originalVertexNormals[ i ] ) {\n\n\t\t\t\t\tface.__originalVertexNormals[ i ] = face.vertexNormals[ i ].clone();\n\n\t\t\t\t} else {\n\n\t\t\t\t\tface.__originalVertexNormals[ i ].copy( face.vertexNormals[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// use temp geometry to compute face and vertex normals for each morph\n\n\t\tvar tmpGeo = new Geometry();\n\t\ttmpGeo.faces = this.faces;\n\n\t\tfor ( i = 0, il = this.morphTargets.length; i < il; i ++ ) {\n\n\t\t\t// create on first access\n\n\t\t\tif ( ! this.morphNormals[ i ] ) {\n\n\t\t\t\tthis.morphNormals[ i ] = {};\n\t\t\t\tthis.morphNormals[ i ].faceNormals = [];\n\t\t\t\tthis.morphNormals[ i ].vertexNormals = [];\n\n\t\t\t\tvar dstNormalsFace = this.morphNormals[ i ].faceNormals;\n\t\t\t\tvar dstNormalsVertex = this.morphNormals[ i ].vertexNormals;\n\n\t\t\t\tvar faceNormal, vertexNormals;\n\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\tfaceNormal = new Vector3();\n\t\t\t\t\tvertexNormals = { a: new Vector3(), b: new Vector3(), c: new Vector3() };\n\n\t\t\t\t\tdstNormalsFace.push( faceNormal );\n\t\t\t\t\tdstNormalsVertex.push( vertexNormals );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar morphNormals = this.morphNormals[ i ];\n\n\t\t\t// set vertices to morph target\n\n\t\t\ttmpGeo.vertices = this.morphTargets[ i ].vertices;\n\n\t\t\t// compute morph normals\n\n\t\t\ttmpGeo.computeFaceNormals();\n\t\t\ttmpGeo.computeVertexNormals();\n\n\t\t\t// store morph normals\n\n\t\t\tvar faceNormal, vertexNormals;\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tfaceNormal = morphNormals.faceNormals[ f ];\n\t\t\t\tvertexNormals = morphNormals.vertexNormals[ f ];\n\n\t\t\t\tfaceNormal.copy( face.normal );\n\n\t\t\t\tvertexNormals.a.copy( face.vertexNormals[ 0 ] );\n\t\t\t\tvertexNormals.b.copy( face.vertexNormals[ 1 ] );\n\t\t\t\tvertexNormals.c.copy( face.vertexNormals[ 2 ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// restore original normals\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tface.normal = face.__originalFaceNormal;\n\t\t\tface.vertexNormals = face.__originalVertexNormals;\n\n\t\t}\n\n\t},\n\n\tcomputeBoundingBox: function () {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tthis.boundingBox.setFromPoints( this.vertices );\n\n\t},\n\n\tcomputeBoundingSphere: function () {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.setFromPoints( this.vertices );\n\n\t},\n\n\tmerge: function ( geometry, matrix, materialIndexOffset ) {\n\n\t\tif ( ! ( geometry && geometry.isGeometry ) ) {\n\n\t\t\tconsole.error( 'THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.', geometry );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar normalMatrix,\n\t\t\tvertexOffset = this.vertices.length,\n\t\t\tvertices1 = this.vertices,\n\t\t\tvertices2 = geometry.vertices,\n\t\t\tfaces1 = this.faces,\n\t\t\tfaces2 = geometry.faces,\n\t\t\tuvs1 = this.faceVertexUvs[ 0 ],\n\t\t\tuvs2 = geometry.faceVertexUvs[ 0 ],\n\t\t\tcolors1 = this.colors,\n\t\t\tcolors2 = geometry.colors;\n\n\t\tif ( materialIndexOffset === undefined ) materialIndexOffset = 0;\n\n\t\tif ( matrix !== undefined ) {\n\n\t\t\tnormalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t}\n\n\t\t// vertices\n\n\t\tfor ( var i = 0, il = vertices2.length; i < il; i ++ ) {\n\n\t\t\tvar vertex = vertices2[ i ];\n\n\t\t\tvar vertexCopy = vertex.clone();\n\n\t\t\tif ( matrix !== undefined ) vertexCopy.applyMatrix4( matrix );\n\n\t\t\tvertices1.push( vertexCopy );\n\n\t\t}\n\n\t\t// colors\n\n\t\tfor ( var i = 0, il = colors2.length; i < il; i ++ ) {\n\n\t\t\tcolors1.push( colors2[ i ].clone() );\n\n\t\t}\n\n\t\t// faces\n\n\t\tfor ( i = 0, il = faces2.length; i < il; i ++ ) {\n\n\t\t\tvar face = faces2[ i ], faceCopy, normal, color,\n\t\t\t\tfaceVertexNormals = face.vertexNormals,\n\t\t\t\tfaceVertexColors = face.vertexColors;\n\n\t\t\tfaceCopy = new Face3( face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset );\n\t\t\tfaceCopy.normal.copy( face.normal );\n\n\t\t\tif ( normalMatrix !== undefined ) {\n\n\t\t\t\tfaceCopy.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t}\n\n\t\t\tfor ( var j = 0, jl = faceVertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\tnormal = faceVertexNormals[ j ].clone();\n\n\t\t\t\tif ( normalMatrix !== undefined ) {\n\n\t\t\t\t\tnormal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\t}\n\n\t\t\t\tfaceCopy.vertexNormals.push( normal );\n\n\t\t\t}\n\n\t\t\tfaceCopy.color.copy( face.color );\n\n\t\t\tfor ( var j = 0, jl = faceVertexColors.length; j < jl; j ++ ) {\n\n\t\t\t\tcolor = faceVertexColors[ j ];\n\t\t\t\tfaceCopy.vertexColors.push( color.clone() );\n\n\t\t\t}\n\n\t\t\tfaceCopy.materialIndex = face.materialIndex + materialIndexOffset;\n\n\t\t\tfaces1.push( faceCopy );\n\n\t\t}\n\n\t\t// uvs\n\n\t\tfor ( i = 0, il = uvs2.length; i < il; i ++ ) {\n\n\t\t\tvar uv = uvs2[ i ], uvCopy = [];\n\n\t\t\tif ( uv === undefined ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tfor ( var j = 0, jl = uv.length; j < jl; j ++ ) {\n\n\t\t\t\tuvCopy.push( uv[ j ].clone() );\n\n\t\t\t}\n\n\t\t\tuvs1.push( uvCopy );\n\n\t\t}\n\n\t},\n\n\tmergeMesh: function ( mesh ) {\n\n\t\tif ( ! ( mesh && mesh.isMesh ) ) {\n\n\t\t\tconsole.error( 'THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.', mesh );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( mesh.matrixAutoUpdate ) mesh.updateMatrix();\n\n\t\tthis.merge( mesh.geometry, mesh.matrix );\n\n\t},\n\n\t/*\n\t * Checks for duplicate vertices with hashmap.\n\t * Duplicated vertices are removed\n\t * and faces' vertices are updated.\n\t */\n\n\tmergeVertices: function () {\n\n\t\tvar verticesMap = {}; // Hashmap for looking up vertices by position coordinates (and making sure they are unique)\n\t\tvar unique = [], changes = [];\n\n\t\tvar v, key;\n\t\tvar precisionPoints = 4; // number of decimal points, e.g. 4 for epsilon of 0.0001\n\t\tvar precision = Math.pow( 10, precisionPoints );\n\t\tvar i, il, face;\n\t\tvar indices, j, jl;\n\n\t\tfor ( i = 0, il = this.vertices.length; i < il; i ++ ) {\n\n\t\t\tv = this.vertices[ i ];\n\t\t\tkey = Math.round( v.x * precision ) + '_' + Math.round( v.y * precision ) + '_' + Math.round( v.z * precision );\n\n\t\t\tif ( verticesMap[ key ] === undefined ) {\n\n\t\t\t\tverticesMap[ key ] = i;\n\t\t\t\tunique.push( this.vertices[ i ] );\n\t\t\t\tchanges[ i ] = unique.length - 1;\n\n\t\t\t} else {\n\n\t\t\t\t//console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);\n\t\t\t\tchanges[ i ] = changes[ verticesMap[ key ] ];\n\n\t\t\t}\n\n\t\t}\n\n\n\t\t// if faces are completely degenerate after merging vertices, we\n\t\t// have to remove them from the geometry.\n\t\tvar faceIndicesToRemove = [];\n\n\t\tfor ( i = 0, il = this.faces.length; i < il; i ++ ) {\n\n\t\t\tface = this.faces[ i ];\n\n\t\t\tface.a = changes[ face.a ];\n\t\t\tface.b = changes[ face.b ];\n\t\t\tface.c = changes[ face.c ];\n\n\t\t\tindices = [ face.a, face.b, face.c ];\n\n\t\t\t// if any duplicate vertices are found in a Face3\n\t\t\t// we have to remove the face as nothing can be saved\n\t\t\tfor ( var n = 0; n < 3; n ++ ) {\n\n\t\t\t\tif ( indices[ n ] === indices[ ( n + 1 ) % 3 ] ) {\n\n\t\t\t\t\tfaceIndicesToRemove.push( i );\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( i = faceIndicesToRemove.length - 1; i >= 0; i -- ) {\n\n\t\t\tvar idx = faceIndicesToRemove[ i ];\n\n\t\t\tthis.faces.splice( idx, 1 );\n\n\t\t\tfor ( j = 0, jl = this.faceVertexUvs.length; j < jl; j ++ ) {\n\n\t\t\t\tthis.faceVertexUvs[ j ].splice( idx, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Use unique set of vertices\n\n\t\tvar diff = this.vertices.length - unique.length;\n\t\tthis.vertices = unique;\n\t\treturn diff;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.vertices = [];\n\n\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tvar point = points[ i ];\n\t\t\tthis.vertices.push( new Vector3( point.x, point.y, point.z || 0 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsortFacesByMaterialIndex: function () {\n\n\t\tvar faces = this.faces;\n\t\tvar length = faces.length;\n\n\t\t// tag faces\n\n\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\tfaces[ i ]._id = i;\n\n\t\t}\n\n\t\t// sort faces\n\n\t\tfunction materialIndexSort( a, b ) {\n\n\t\t\treturn a.materialIndex - b.materialIndex;\n\n\t\t}\n\n\t\tfaces.sort( materialIndexSort );\n\n\t\t// sort uvs\n\n\t\tvar uvs1 = this.faceVertexUvs[ 0 ];\n\t\tvar uvs2 = this.faceVertexUvs[ 1 ];\n\n\t\tvar newUvs1, newUvs2;\n\n\t\tif ( uvs1 && uvs1.length === length ) newUvs1 = [];\n\t\tif ( uvs2 && uvs2.length === length ) newUvs2 = [];\n\n\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\tvar id = faces[ i ]._id;\n\n\t\t\tif ( newUvs1 ) newUvs1.push( uvs1[ id ] );\n\t\t\tif ( newUvs2 ) newUvs2.push( uvs2[ id ] );\n\n\t\t}\n\n\t\tif ( newUvs1 ) this.faceVertexUvs[ 0 ] = newUvs1;\n\t\tif ( newUvs2 ) this.faceVertexUvs[ 1 ] = newUvs2;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Geometry',\n\t\t\t\tgenerator: 'Geometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Geometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tvar parameters = this.parameters;\n\n\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tvar vertices = [];\n\n\t\tfor ( var i = 0; i < this.vertices.length; i ++ ) {\n\n\t\t\tvar vertex = this.vertices[ i ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t\tvar faces = [];\n\t\tvar normals = [];\n\t\tvar normalsHash = {};\n\t\tvar colors = [];\n\t\tvar colorsHash = {};\n\t\tvar uvs = [];\n\t\tvar uvsHash = {};\n\n\t\tfor ( var i = 0; i < this.faces.length; i ++ ) {\n\n\t\t\tvar face = this.faces[ i ];\n\n\t\t\tvar hasMaterial = true;\n\t\t\tvar hasFaceUv = false; // deprecated\n\t\t\tvar hasFaceVertexUv = this.faceVertexUvs[ 0 ][ i ] !== undefined;\n\t\t\tvar hasFaceNormal = face.normal.length() > 0;\n\t\t\tvar hasFaceVertexNormal = face.vertexNormals.length > 0;\n\t\t\tvar hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;\n\t\t\tvar hasFaceVertexColor = face.vertexColors.length > 0;\n\n\t\t\tvar faceType = 0;\n\n\t\t\tfaceType = setBit( faceType, 0, 0 ); // isQuad\n\t\t\tfaceType = setBit( faceType, 1, hasMaterial );\n\t\t\tfaceType = setBit( faceType, 2, hasFaceUv );\n\t\t\tfaceType = setBit( faceType, 3, hasFaceVertexUv );\n\t\t\tfaceType = setBit( faceType, 4, hasFaceNormal );\n\t\t\tfaceType = setBit( faceType, 5, hasFaceVertexNormal );\n\t\t\tfaceType = setBit( faceType, 6, hasFaceColor );\n\t\t\tfaceType = setBit( faceType, 7, hasFaceVertexColor );\n\n\t\t\tfaces.push( faceType );\n\t\t\tfaces.push( face.a, face.b, face.c );\n\t\t\tfaces.push( face.materialIndex );\n\n\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\tvar faceVertexUvs = this.faceVertexUvs[ 0 ][ i ];\n\n\t\t\t\tfaces.push(\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 0 ] ),\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 1 ] ),\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 2 ] )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\tfaces.push( getNormalIndex( face.normal ) );\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\t\tfaces.push(\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 0 ] ),\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 1 ] ),\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 2 ] )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\tfaces.push( getColorIndex( face.color ) );\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\tvar vertexColors = face.vertexColors;\n\n\t\t\t\tfaces.push(\n\t\t\t\t\tgetColorIndex( vertexColors[ 0 ] ),\n\t\t\t\t\tgetColorIndex( vertexColors[ 1 ] ),\n\t\t\t\t\tgetColorIndex( vertexColors[ 2 ] )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setBit( value, position, enabled ) {\n\n\t\t\treturn enabled ? value | ( 1 << position ) : value & ( ~ ( 1 << position ) );\n\n\t\t}\n\n\t\tfunction getNormalIndex( normal ) {\n\n\t\t\tvar hash = normal.x.toString() + normal.y.toString() + normal.z.toString();\n\n\t\t\tif ( normalsHash[ hash ] !== undefined ) {\n\n\t\t\t\treturn normalsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tnormalsHash[ hash ] = normals.length / 3;\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\treturn normalsHash[ hash ];\n\n\t\t}\n\n\t\tfunction getColorIndex( color ) {\n\n\t\t\tvar hash = color.r.toString() + color.g.toString() + color.b.toString();\n\n\t\t\tif ( colorsHash[ hash ] !== undefined ) {\n\n\t\t\t\treturn colorsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tcolorsHash[ hash ] = colors.length;\n\t\t\tcolors.push( color.getHex() );\n\n\t\t\treturn colorsHash[ hash ];\n\n\t\t}\n\n\t\tfunction getUvIndex( uv ) {\n\n\t\t\tvar hash = uv.x.toString() + uv.y.toString();\n\n\t\t\tif ( uvsHash[ hash ] !== undefined ) {\n\n\t\t\t\treturn uvsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tuvsHash[ hash ] = uvs.length / 2;\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\treturn uvsHash[ hash ];\n\n\t\t}\n\n\t\tdata.data = {};\n\n\t\tdata.data.vertices = vertices;\n\t\tdata.data.normals = normals;\n\t\tif ( colors.length > 0 ) data.data.colors = colors;\n\t\tif ( uvs.length > 0 ) data.data.uvs = [ uvs ]; // temporal backward compatibility\n\t\tdata.data.faces = faces;\n\n\t\treturn data;\n\n\t},\n\n\tclone: function () {\n\n\t\t/*\n\t\t // Handle primitives\n\n\t\t var parameters = this.parameters;\n\n\t\t if ( parameters !== undefined ) {\n\n\t\t var values = [];\n\n\t\t for ( var key in parameters ) {\n\n\t\t values.push( parameters[ key ] );\n\n\t\t }\n\n\t\t var geometry = Object.create( this.constructor.prototype );\n\t\t this.constructor.apply( geometry, values );\n\t\t return geometry;\n\n\t\t }\n\n\t\t return new this.constructor().copy( this );\n\t\t */\n\n\t\treturn new Geometry().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tvar i, il, j, jl, k, kl;\n\n\t\t// reset\n\n\t\tthis.vertices = [];\n\t\tthis.colors = [];\n\t\tthis.faces = [];\n\t\tthis.faceVertexUvs = [[]];\n\t\tthis.morphTargets = [];\n\t\tthis.morphNormals = [];\n\t\tthis.skinWeights = [];\n\t\tthis.skinIndices = [];\n\t\tthis.lineDistances = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// vertices\n\n\t\tvar vertices = source.vertices;\n\n\t\tfor ( i = 0, il = vertices.length; i < il; i ++ ) {\n\n\t\t\tthis.vertices.push( vertices[ i ].clone() );\n\n\t\t}\n\n\t\t// colors\n\n\t\tvar colors = source.colors;\n\n\t\tfor ( i = 0, il = colors.length; i < il; i ++ ) {\n\n\t\t\tthis.colors.push( colors[ i ].clone() );\n\n\t\t}\n\n\t\t// faces\n\n\t\tvar faces = source.faces;\n\n\t\tfor ( i = 0, il = faces.length; i < il; i ++ ) {\n\n\t\t\tthis.faces.push( faces[ i ].clone() );\n\n\t\t}\n\n\t\t// face vertex uvs\n\n\t\tfor ( i = 0, il = source.faceVertexUvs.length; i < il; i ++ ) {\n\n\t\t\tvar faceVertexUvs = source.faceVertexUvs[ i ];\n\n\t\t\tif ( this.faceVertexUvs[ i ] === undefined ) {\n\n\t\t\t\tthis.faceVertexUvs[ i ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( j = 0, jl = faceVertexUvs.length; j < jl; j ++ ) {\n\n\t\t\t\tvar uvs = faceVertexUvs[ j ], uvsCopy = [];\n\n\t\t\t\tfor ( k = 0, kl = uvs.length; k < kl; k ++ ) {\n\n\t\t\t\t\tvar uv = uvs[ k ];\n\n\t\t\t\t\tuvsCopy.push( uv.clone() );\n\n\t\t\t\t}\n\n\t\t\t\tthis.faceVertexUvs[ i ].push( uvsCopy );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tvar morphTargets = source.morphTargets;\n\n\t\tfor ( i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tvar morphTarget = {};\n\t\t\tmorphTarget.name = morphTargets[ i ].name;\n\n\t\t\t// vertices\n\n\t\t\tif ( morphTargets[ i ].vertices !== undefined ) {\n\n\t\t\t\tmorphTarget.vertices = [];\n\n\t\t\t\tfor ( j = 0, jl = morphTargets[ i ].vertices.length; j < jl; j ++ ) {\n\n\t\t\t\t\tmorphTarget.vertices.push( morphTargets[ i ].vertices[ j ].clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// normals\n\n\t\t\tif ( morphTargets[ i ].normals !== undefined ) {\n\n\t\t\t\tmorphTarget.normals = [];\n\n\t\t\t\tfor ( j = 0, jl = morphTargets[ i ].normals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tmorphTarget.normals.push( morphTargets[ i ].normals[ j ].clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.morphTargets.push( morphTarget );\n\n\t\t}\n\n\t\t// morph normals\n\n\t\tvar morphNormals = source.morphNormals;\n\n\t\tfor ( i = 0, il = morphNormals.length; i < il; i ++ ) {\n\n\t\t\tvar morphNormal = {};\n\n\t\t\t// vertex normals\n\n\t\t\tif ( morphNormals[ i ].vertexNormals !== undefined ) {\n\n\t\t\t\tmorphNormal.vertexNormals = [];\n\n\t\t\t\tfor ( j = 0, jl = morphNormals[ i ].vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar srcVertexNormal = morphNormals[ i ].vertexNormals[ j ];\n\t\t\t\t\tvar destVertexNormal = {};\n\n\t\t\t\t\tdestVertexNormal.a = srcVertexNormal.a.clone();\n\t\t\t\t\tdestVertexNormal.b = srcVertexNormal.b.clone();\n\t\t\t\t\tdestVertexNormal.c = srcVertexNormal.c.clone();\n\n\t\t\t\t\tmorphNormal.vertexNormals.push( destVertexNormal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// face normals\n\n\t\t\tif ( morphNormals[ i ].faceNormals !== undefined ) {\n\n\t\t\t\tmorphNormal.faceNormals = [];\n\n\t\t\t\tfor ( j = 0, jl = morphNormals[ i ].faceNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tmorphNormal.faceNormals.push( morphNormals[ i ].faceNormals[ j ].clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.morphNormals.push( morphNormal );\n\n\t\t}\n\n\t\t// skin weights\n\n\t\tvar skinWeights = source.skinWeights;\n\n\t\tfor ( i = 0, il = skinWeights.length; i < il; i ++ ) {\n\n\t\t\tthis.skinWeights.push( skinWeights[ i ].clone() );\n\n\t\t}\n\n\t\t// skin indices\n\n\t\tvar skinIndices = source.skinIndices;\n\n\t\tfor ( i = 0, il = skinIndices.length; i < il; i ++ ) {\n\n\t\t\tthis.skinIndices.push( skinIndices[ i ].clone() );\n\n\t\t}\n\n\t\t// line distances\n\n\t\tvar lineDistances = source.lineDistances;\n\n\t\tfor ( i = 0, il = lineDistances.length; i < il; i ++ ) {\n\n\t\t\tthis.lineDistances.push( lineDistances[ i ] );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tvar boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tvar boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// update flags\n\n\t\tthis.elementsNeedUpdate = source.elementsNeedUpdate;\n\t\tthis.verticesNeedUpdate = source.verticesNeedUpdate;\n\t\tthis.uvsNeedUpdate = source.uvsNeedUpdate;\n\t\tthis.normalsNeedUpdate = source.normalsNeedUpdate;\n\t\tthis.colorsNeedUpdate = source.colorsNeedUpdate;\n\t\tthis.lineDistancesNeedUpdate = source.lineDistancesNeedUpdate;\n\t\tthis.groupsNeedUpdate = source.groupsNeedUpdate;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction BufferAttribute( array, itemSize, normalized ) {\n\n\tif ( Array.isArray( array ) ) {\n\n\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t}\n\n\tthis.name = '';\n\n\tthis.array = array;\n\tthis.itemSize = itemSize;\n\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\tthis.normalized = normalized === true;\n\n\tthis.dynamic = false;\n\tthis.updateRange = { offset: 0, count: - 1 };\n\n\tthis.version = 0;\n\n}\n\nObject.defineProperty( BufferAttribute.prototype, 'needsUpdate', {\n\n\tset: function ( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n} );\n\nObject.assign( BufferAttribute.prototype, {\n\n\tisBufferAttribute: true,\n\n\tonUploadCallback: function () {},\n\n\tsetArray: function ( array ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.count = array !== undefined ? array.length / this.itemSize : 0;\n\t\tthis.array = array;\n\n\t\treturn this;\n\n\t},\n\n\tsetDynamic: function ( value ) {\n\n\t\tthis.dynamic = value;\n\n\t\treturn this;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.itemSize = source.itemSize;\n\t\tthis.count = source.count;\n\t\tthis.normalized = source.normalized;\n\n\t\tthis.dynamic = source.dynamic;\n\n\t\treturn this;\n\n\t},\n\n\tcopyAt: function ( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.itemSize;\n\t\tindex2 *= attribute.itemSize;\n\n\t\tfor ( var i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyArray: function ( array ) {\n\n\t\tthis.array.set( array );\n\n\t\treturn this;\n\n\t},\n\n\tcopyColorsArray: function ( colors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = colors.length; i < l; i ++ ) {\n\n\t\t\tvar color = colors[ i ];\n\n\t\t\tif ( color === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyColorsArray(): color is undefined', i );\n\t\t\t\tcolor = new Color();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = color.r;\n\t\t\tarray[ offset ++ ] = color.g;\n\t\t\tarray[ offset ++ ] = color.b;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyVector2sArray: function ( vectors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tvar vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector2();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyVector3sArray: function ( vectors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tvar vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector3();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\tarray[ offset ++ ] = vector.z;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyVector4sArray: function ( vectors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tvar vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector4();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\tarray[ offset ++ ] = vector.z;\n\t\t\tarray[ offset ++ ] = vector.w;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tset: function ( value, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t},\n\n\tgetX: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize ];\n\n\t},\n\n\tsetX: function ( index, x ) {\n\n\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\treturn this;\n\n\t},\n\n\tgetY: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 1 ];\n\n\t},\n\n\tsetY: function ( index, y ) {\n\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tgetZ: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 2 ];\n\n\t},\n\n\tsetZ: function ( index, z ) {\n\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tgetW: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 3 ];\n\n\t},\n\n\tsetW: function ( index, w ) {\n\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetXY: function ( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZ: function ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZW: function ( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\t\tthis.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t},\n\n\tonUpload: function ( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\n\t},\n\n\ttoJSON: function () {\n\n\t\treturn {\n\t\t\titemSize: this.itemSize,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tarray: Array.prototype.slice.call( this.array ),\n\t\t\tnormalized: this.normalized\n\t\t};\n\n\t}\n\n} );\n\n//\n\nfunction Int8BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Int8Array( array ), itemSize, normalized );\n\n}\n\nInt8BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nInt8BufferAttribute.prototype.constructor = Int8BufferAttribute;\n\n\nfunction Uint8BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint8Array( array ), itemSize, normalized );\n\n}\n\nUint8BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint8BufferAttribute.prototype.constructor = Uint8BufferAttribute;\n\n\nfunction Uint8ClampedBufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint8ClampedArray( array ), itemSize, normalized );\n\n}\n\nUint8ClampedBufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint8ClampedBufferAttribute.prototype.constructor = Uint8ClampedBufferAttribute;\n\n\nfunction Int16BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Int16Array( array ), itemSize, normalized );\n\n}\n\nInt16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nInt16BufferAttribute.prototype.constructor = Int16BufferAttribute;\n\n\nfunction Uint16BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint16Array( array ), itemSize, normalized );\n\n}\n\nUint16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint16BufferAttribute.prototype.constructor = Uint16BufferAttribute;\n\n\nfunction Int32BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Int32Array( array ), itemSize, normalized );\n\n}\n\nInt32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nInt32BufferAttribute.prototype.constructor = Int32BufferAttribute;\n\n\nfunction Uint32BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint32Array( array ), itemSize, normalized );\n\n}\n\nUint32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint32BufferAttribute.prototype.constructor = Uint32BufferAttribute;\n\n\nfunction Float32BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Float32Array( array ), itemSize, normalized );\n\n}\n\nFloat32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nFloat32BufferAttribute.prototype.constructor = Float32BufferAttribute;\n\n\nfunction Float64BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Float64Array( array ), itemSize, normalized );\n\n}\n\nFloat64BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nFloat64BufferAttribute.prototype.constructor = Float64BufferAttribute;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction DirectGeometry() {\n\n\tthis.vertices = [];\n\tthis.normals = [];\n\tthis.colors = [];\n\tthis.uvs = [];\n\tthis.uvs2 = [];\n\n\tthis.groups = [];\n\n\tthis.morphTargets = {};\n\n\tthis.skinWeights = [];\n\tthis.skinIndices = [];\n\n\t// this.lineDistances = [];\n\n\tthis.boundingBox = null;\n\tthis.boundingSphere = null;\n\n\t// update flags\n\n\tthis.verticesNeedUpdate = false;\n\tthis.normalsNeedUpdate = false;\n\tthis.colorsNeedUpdate = false;\n\tthis.uvsNeedUpdate = false;\n\tthis.groupsNeedUpdate = false;\n\n}\n\nObject.assign( DirectGeometry.prototype, {\n\n\tcomputeGroups: function ( geometry ) {\n\n\t\tvar group;\n\t\tvar groups = [];\n\t\tvar materialIndex = undefined;\n\n\t\tvar faces = geometry.faces;\n\n\t\tfor ( var i = 0; i < faces.length; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\t// materials\n\n\t\t\tif ( face.materialIndex !== materialIndex ) {\n\n\t\t\t\tmaterialIndex = face.materialIndex;\n\n\t\t\t\tif ( group !== undefined ) {\n\n\t\t\t\t\tgroup.count = ( i * 3 ) - group.start;\n\t\t\t\t\tgroups.push( group );\n\n\t\t\t\t}\n\n\t\t\t\tgroup = {\n\t\t\t\t\tstart: i * 3,\n\t\t\t\t\tmaterialIndex: materialIndex\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( group !== undefined ) {\n\n\t\t\tgroup.count = ( i * 3 ) - group.start;\n\t\t\tgroups.push( group );\n\n\t\t}\n\n\t\tthis.groups = groups;\n\n\t},\n\n\tfromGeometry: function ( geometry ) {\n\n\t\tvar faces = geometry.faces;\n\t\tvar vertices = geometry.vertices;\n\t\tvar faceVertexUvs = geometry.faceVertexUvs;\n\n\t\tvar hasFaceVertexUv = faceVertexUvs[ 0 ] && faceVertexUvs[ 0 ].length > 0;\n\t\tvar hasFaceVertexUv2 = faceVertexUvs[ 1 ] && faceVertexUvs[ 1 ].length > 0;\n\n\t\t// morphs\n\n\t\tvar morphTargets = geometry.morphTargets;\n\t\tvar morphTargetsLength = morphTargets.length;\n\n\t\tvar morphTargetsPosition;\n\n\t\tif ( morphTargetsLength > 0 ) {\n\n\t\t\tmorphTargetsPosition = [];\n\n\t\t\tfor ( var i = 0; i < morphTargetsLength; i ++ ) {\n\n\t\t\t\tmorphTargetsPosition[ i ] = {\n\t\t\t\t\tname: morphTargets[ i ].name,\n\t\t\t\t \tdata: []\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tthis.morphTargets.position = morphTargetsPosition;\n\n\t\t}\n\n\t\tvar morphNormals = geometry.morphNormals;\n\t\tvar morphNormalsLength = morphNormals.length;\n\n\t\tvar morphTargetsNormal;\n\n\t\tif ( morphNormalsLength > 0 ) {\n\n\t\t\tmorphTargetsNormal = [];\n\n\t\t\tfor ( var i = 0; i < morphNormalsLength; i ++ ) {\n\n\t\t\t\tmorphTargetsNormal[ i ] = {\n\t\t\t\t\tname: morphNormals[ i ].name,\n\t\t\t\t \tdata: []\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tthis.morphTargets.normal = morphTargetsNormal;\n\n\t\t}\n\n\t\t// skins\n\n\t\tvar skinIndices = geometry.skinIndices;\n\t\tvar skinWeights = geometry.skinWeights;\n\n\t\tvar hasSkinIndices = skinIndices.length === vertices.length;\n\t\tvar hasSkinWeights = skinWeights.length === vertices.length;\n\n\t\t//\n\n\t\tif ( vertices.length > 0 && faces.length === 0 ) {\n\n\t\t\tconsole.error( 'THREE.DirectGeometry: Faceless geometries are not supported.' );\n\n\t\t}\n\n\t\tfor ( var i = 0; i < faces.length; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tthis.vertices.push( vertices[ face.a ], vertices[ face.b ], vertices[ face.c ] );\n\n\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\tthis.normals.push( vertexNormals[ 0 ], vertexNormals[ 1 ], vertexNormals[ 2 ] );\n\n\t\t\t} else {\n\n\t\t\t\tvar normal = face.normal;\n\n\t\t\t\tthis.normals.push( normal, normal, normal );\n\n\t\t\t}\n\n\t\t\tvar vertexColors = face.vertexColors;\n\n\t\t\tif ( vertexColors.length === 3 ) {\n\n\t\t\t\tthis.colors.push( vertexColors[ 0 ], vertexColors[ 1 ], vertexColors[ 2 ] );\n\n\t\t\t} else {\n\n\t\t\t\tvar color = face.color;\n\n\t\t\t\tthis.colors.push( color, color, color );\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexUv === true ) {\n\n\t\t\t\tvar vertexUvs = faceVertexUvs[ 0 ][ i ];\n\n\t\t\t\tif ( vertexUvs !== undefined ) {\n\n\t\t\t\t\tthis.uvs.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ', i );\n\n\t\t\t\t\tthis.uvs.push( new Vector2(), new Vector2(), new Vector2() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexUv2 === true ) {\n\n\t\t\t\tvar vertexUvs = faceVertexUvs[ 1 ][ i ];\n\n\t\t\t\tif ( vertexUvs !== undefined ) {\n\n\t\t\t\t\tthis.uvs2.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ', i );\n\n\t\t\t\t\tthis.uvs2.push( new Vector2(), new Vector2(), new Vector2() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// morphs\n\n\t\t\tfor ( var j = 0; j < morphTargetsLength; j ++ ) {\n\n\t\t\t\tvar morphTarget = morphTargets[ j ].vertices;\n\n\t\t\t\tmorphTargetsPosition[ j ].data.push( morphTarget[ face.a ], morphTarget[ face.b ], morphTarget[ face.c ] );\n\n\t\t\t}\n\n\t\t\tfor ( var j = 0; j < morphNormalsLength; j ++ ) {\n\n\t\t\t\tvar morphNormal = morphNormals[ j ].vertexNormals[ i ];\n\n\t\t\t\tmorphTargetsNormal[ j ].data.push( morphNormal.a, morphNormal.b, morphNormal.c );\n\n\t\t\t}\n\n\t\t\t// skins\n\n\t\t\tif ( hasSkinIndices ) {\n\n\t\t\t\tthis.skinIndices.push( skinIndices[ face.a ], skinIndices[ face.b ], skinIndices[ face.c ] );\n\n\t\t\t}\n\n\t\t\tif ( hasSkinWeights ) {\n\n\t\t\t\tthis.skinWeights.push( skinWeights[ face.a ], skinWeights[ face.b ], skinWeights[ face.c ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.computeGroups( geometry );\n\n\t\tthis.verticesNeedUpdate = geometry.verticesNeedUpdate;\n\t\tthis.normalsNeedUpdate = geometry.normalsNeedUpdate;\n\t\tthis.colorsNeedUpdate = geometry.colorsNeedUpdate;\n\t\tthis.uvsNeedUpdate = geometry.uvsNeedUpdate;\n\t\tthis.groupsNeedUpdate = geometry.groupsNeedUpdate;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction arrayMax( array ) {\n\n\tif ( array.length === 0 ) return - Infinity;\n\n\tvar max = array[ 0 ];\n\n\tfor ( var i = 1, l = array.length; i < l; ++ i ) {\n\n\t\tif ( array[ i ] > max ) max = array[ i ];\n\n\t}\n\n\treturn max;\n\n}\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar bufferGeometryId = 1; // BufferGeometry uses odd numbers as Id\n\nfunction BufferGeometry() {\n\n\tObject.defineProperty( this, 'id', { value: bufferGeometryId += 2 } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'BufferGeometry';\n\n\tthis.index = null;\n\tthis.attributes = {};\n\n\tthis.morphAttributes = {};\n\n\tthis.groups = [];\n\n\tthis.boundingBox = null;\n\tthis.boundingSphere = null;\n\n\tthis.drawRange = { start: 0, count: Infinity };\n\n\tthis.userData = {};\n\n}\n\nBufferGeometry.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: BufferGeometry,\n\n\tisBufferGeometry: true,\n\n\tgetIndex: function () {\n\n\t\treturn this.index;\n\n\t},\n\n\tsetIndex: function ( index ) {\n\n\t\tif ( Array.isArray( index ) ) {\n\n\t\t\tthis.index = new ( arrayMax( index ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\n\n\t\t} else {\n\n\t\t\tthis.index = index;\n\n\t\t}\n\n\t},\n\n\taddAttribute: function ( name, attribute ) {\n\n\t\tif ( ! ( attribute && attribute.isBufferAttribute ) && ! ( attribute && attribute.isInterleavedBufferAttribute ) ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).' );\n\n\t\t\treturn this.addAttribute( name, new BufferAttribute( arguments[ 1 ], arguments[ 2 ] ) );\n\n\t\t}\n\n\t\tif ( name === 'index' ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.' );\n\t\t\tthis.setIndex( attribute );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis.attributes[ name ] = attribute;\n\n\t\treturn this;\n\n\t},\n\n\tgetAttribute: function ( name ) {\n\n\t\treturn this.attributes[ name ];\n\n\t},\n\n\tremoveAttribute: function ( name ) {\n\n\t\tdelete this.attributes[ name ];\n\n\t\treturn this;\n\n\t},\n\n\taddGroup: function ( start, count, materialIndex ) {\n\n\t\tthis.groups.push( {\n\n\t\t\tstart: start,\n\t\t\tcount: count,\n\t\t\tmaterialIndex: materialIndex !== undefined ? materialIndex : 0\n\n\t\t} );\n\n\t},\n\n\tclearGroups: function () {\n\n\t\tthis.groups = [];\n\n\t},\n\n\tsetDrawRange: function ( start, count ) {\n\n\t\tthis.drawRange.start = start;\n\t\tthis.drawRange.count = count;\n\n\t},\n\n\tapplyMatrix: function ( matrix ) {\n\n\t\tvar position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tmatrix.applyToBufferAttribute( position );\n\t\t\tposition.needsUpdate = true;\n\n\t\t}\n\n\t\tvar normal = this.attributes.normal;\n\n\t\tif ( normal !== undefined ) {\n\n\t\t\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\tnormalMatrix.applyToBufferAttribute( normal );\n\t\t\tnormal.needsUpdate = true;\n\n\t\t}\n\n\t\tvar tangent = this.attributes.tangent;\n\n\t\tif ( tangent !== undefined ) {\n\n\t\t\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\t// Tangent is vec4, but the '.w' component is a sign value (+1/-1).\n\t\t\tnormalMatrix.applyToBufferAttribute( tangent );\n\t\t\ttangent.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\trotateX: function () {\n\n\t\t// rotate geometry around world x-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateX( angle ) {\n\n\t\t\tm1.makeRotationX( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateY: function () {\n\n\t\t// rotate geometry around world y-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateY( angle ) {\n\n\t\t\tm1.makeRotationY( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateZ: function () {\n\n\t\t// rotate geometry around world z-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateZ( angle ) {\n\n\t\t\tm1.makeRotationZ( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslate: function () {\n\n\t\t// translate geometry\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function translate( x, y, z ) {\n\n\t\t\tm1.makeTranslation( x, y, z );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tscale: function () {\n\n\t\t// scale geometry\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function scale( x, y, z ) {\n\n\t\t\tm1.makeScale( x, y, z );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tlookAt: function () {\n\n\t\tvar obj = new Object3D();\n\n\t\treturn function lookAt( vector ) {\n\n\t\t\tobj.lookAt( vector );\n\n\t\t\tobj.updateMatrix();\n\n\t\t\tthis.applyMatrix( obj.matrix );\n\n\t\t};\n\n\t}(),\n\n\tcenter: function () {\n\n\t\tvar offset = new Vector3();\n\n\t\treturn function center() {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t\tthis.boundingBox.getCenter( offset ).negate();\n\n\t\t\tthis.translate( offset.x, offset.y, offset.z );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tsetFromObject: function ( object ) {\n\n\t\t// console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );\n\n\t\tvar geometry = object.geometry;\n\n\t\tif ( object.isPoints || object.isLine ) {\n\n\t\t\tvar positions = new Float32BufferAttribute( geometry.vertices.length * 3, 3 );\n\t\t\tvar colors = new Float32BufferAttribute( geometry.colors.length * 3, 3 );\n\n\t\t\tthis.addAttribute( 'position', positions.copyVector3sArray( geometry.vertices ) );\n\t\t\tthis.addAttribute( 'color', colors.copyColorsArray( geometry.colors ) );\n\n\t\t\tif ( geometry.lineDistances && geometry.lineDistances.length === geometry.vertices.length ) {\n\n\t\t\t\tvar lineDistances = new Float32BufferAttribute( geometry.lineDistances.length, 1 );\n\n\t\t\t\tthis.addAttribute( 'lineDistance', lineDistances.copyArray( geometry.lineDistances ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t\t}\n\n\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t\t}\n\n\t\t} else if ( object.isMesh ) {\n\n\t\t\tif ( geometry && geometry.isGeometry ) {\n\n\t\t\t\tthis.fromGeometry( geometry );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tvar position = [];\n\n\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tvar point = points[ i ];\n\t\t\tposition.push( point.x, point.y, point.z || 0 );\n\n\t\t}\n\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\n\n\t\treturn this;\n\n\t},\n\n\tupdateFromObject: function ( object ) {\n\n\t\tvar geometry = object.geometry;\n\n\t\tif ( object.isMesh ) {\n\n\t\t\tvar direct = geometry.__directGeometry;\n\n\t\t\tif ( geometry.elementsNeedUpdate === true ) {\n\n\t\t\t\tdirect = undefined;\n\t\t\t\tgeometry.elementsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( direct === undefined ) {\n\n\t\t\t\treturn this.fromGeometry( geometry );\n\n\t\t\t}\n\n\t\t\tdirect.verticesNeedUpdate = geometry.verticesNeedUpdate;\n\t\t\tdirect.normalsNeedUpdate = geometry.normalsNeedUpdate;\n\t\t\tdirect.colorsNeedUpdate = geometry.colorsNeedUpdate;\n\t\t\tdirect.uvsNeedUpdate = geometry.uvsNeedUpdate;\n\t\t\tdirect.groupsNeedUpdate = geometry.groupsNeedUpdate;\n\n\t\t\tgeometry.verticesNeedUpdate = false;\n\t\t\tgeometry.normalsNeedUpdate = false;\n\t\t\tgeometry.colorsNeedUpdate = false;\n\t\t\tgeometry.uvsNeedUpdate = false;\n\t\t\tgeometry.groupsNeedUpdate = false;\n\n\t\t\tgeometry = direct;\n\n\t\t}\n\n\t\tvar attribute;\n\n\t\tif ( geometry.verticesNeedUpdate === true ) {\n\n\t\t\tattribute = this.attributes.position;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyVector3sArray( geometry.vertices );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.verticesNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.normalsNeedUpdate === true ) {\n\n\t\t\tattribute = this.attributes.normal;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyVector3sArray( geometry.normals );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.normalsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.colorsNeedUpdate === true ) {\n\n\t\t\tattribute = this.attributes.color;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyColorsArray( geometry.colors );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.colorsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.uvsNeedUpdate ) {\n\n\t\t\tattribute = this.attributes.uv;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyVector2sArray( geometry.uvs );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.uvsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.lineDistancesNeedUpdate ) {\n\n\t\t\tattribute = this.attributes.lineDistance;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyArray( geometry.lineDistances );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.lineDistancesNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.groupsNeedUpdate ) {\n\n\t\t\tgeometry.computeGroups( object.geometry );\n\t\t\tthis.groups = geometry.groups;\n\n\t\t\tgeometry.groupsNeedUpdate = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tfromGeometry: function ( geometry ) {\n\n\t\tgeometry.__directGeometry = new DirectGeometry().fromGeometry( geometry );\n\n\t\treturn this.fromDirectGeometry( geometry.__directGeometry );\n\n\t},\n\n\tfromDirectGeometry: function ( geometry ) {\n\n\t\tvar positions = new Float32Array( geometry.vertices.length * 3 );\n\t\tthis.addAttribute( 'position', new BufferAttribute( positions, 3 ).copyVector3sArray( geometry.vertices ) );\n\n\t\tif ( geometry.normals.length > 0 ) {\n\n\t\t\tvar normals = new Float32Array( geometry.normals.length * 3 );\n\t\t\tthis.addAttribute( 'normal', new BufferAttribute( normals, 3 ).copyVector3sArray( geometry.normals ) );\n\n\t\t}\n\n\t\tif ( geometry.colors.length > 0 ) {\n\n\t\t\tvar colors = new Float32Array( geometry.colors.length * 3 );\n\t\t\tthis.addAttribute( 'color', new BufferAttribute( colors, 3 ).copyColorsArray( geometry.colors ) );\n\n\t\t}\n\n\t\tif ( geometry.uvs.length > 0 ) {\n\n\t\t\tvar uvs = new Float32Array( geometry.uvs.length * 2 );\n\t\t\tthis.addAttribute( 'uv', new BufferAttribute( uvs, 2 ).copyVector2sArray( geometry.uvs ) );\n\n\t\t}\n\n\t\tif ( geometry.uvs2.length > 0 ) {\n\n\t\t\tvar uvs2 = new Float32Array( geometry.uvs2.length * 2 );\n\t\t\tthis.addAttribute( 'uv2', new BufferAttribute( uvs2, 2 ).copyVector2sArray( geometry.uvs2 ) );\n\n\t\t}\n\n\t\t// groups\n\n\t\tthis.groups = geometry.groups;\n\n\t\t// morphs\n\n\t\tfor ( var name in geometry.morphTargets ) {\n\n\t\t\tvar array = [];\n\t\t\tvar morphTargets = geometry.morphTargets[ name ];\n\n\t\t\tfor ( var i = 0, l = morphTargets.length; i < l; i ++ ) {\n\n\t\t\t\tvar morphTarget = morphTargets[ i ];\n\n\t\t\t\tvar attribute = new Float32BufferAttribute( morphTarget.data.length * 3, 3 );\n\t\t\t\tattribute.name = morphTarget.name;\n\n\t\t\t\tarray.push( attribute.copyVector3sArray( morphTarget.data ) );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\t// skinning\n\n\t\tif ( geometry.skinIndices.length > 0 ) {\n\n\t\t\tvar skinIndices = new Float32BufferAttribute( geometry.skinIndices.length * 4, 4 );\n\t\t\tthis.addAttribute( 'skinIndex', skinIndices.copyVector4sArray( geometry.skinIndices ) );\n\n\t\t}\n\n\t\tif ( geometry.skinWeights.length > 0 ) {\n\n\t\t\tvar skinWeights = new Float32BufferAttribute( geometry.skinWeights.length * 4, 4 );\n\t\t\tthis.addAttribute( 'skinWeight', skinWeights.copyVector4sArray( geometry.skinWeights ) );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t}\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcomputeBoundingBox: function () {\n\n\t\tvar box = new Box3();\n\n\t\treturn function computeBoundingBox() {\n\n\t\t\tif ( this.boundingBox === null ) {\n\n\t\t\t\tthis.boundingBox = new Box3();\n\n\t\t\t}\n\n\t\t\tvar position = this.attributes.position;\n\t\t\tvar morphAttributesPosition = this.morphAttributes.position;\n\n\t\t\tif ( position !== undefined ) {\n\n\t\t\t\tthis.boundingBox.setFromBufferAttribute( position );\n\n\t\t\t\t// process morph attributes if present\n\n\t\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\t\tfor ( var i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t\tbox.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( box.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( box.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t\t}\n\n\t\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\tcomputeBoundingSphere: function () {\n\n\t\tvar box = new Box3();\n\t\tvar boxMorphTargets = new Box3();\n\t\tvar vector = new Vector3();\n\n\t\treturn function computeBoundingSphere() {\n\n\t\t\tif ( this.boundingSphere === null ) {\n\n\t\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t\t}\n\n\t\t\tvar position = this.attributes.position;\n\t\t\tvar morphAttributesPosition = this.morphAttributes.position;\n\n\t\t\tif ( position ) {\n\n\t\t\t\t// first, find the center of the bounding sphere\n\n\t\t\t\tvar center = this.boundingSphere.center;\n\n\t\t\t\tbox.setFromBufferAttribute( position );\n\n\t\t\t\t// process morph attributes if present\n\n\t\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\t\tfor ( var i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t\tboxMorphTargets.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\t\tbox.expandByPoint( boxMorphTargets.min );\n\t\t\t\t\t\tbox.expandByPoint( boxMorphTargets.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tbox.getCenter( center );\n\n\t\t\t\t// second, try to find a boundingSphere with a radius smaller than the\n\t\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\t\tvar maxRadiusSq = 0;\n\n\t\t\t\tfor ( var i = 0, il = position.count; i < il; i ++ ) {\n\n\t\t\t\t\tvector.fromBufferAttribute( position, i );\n\n\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\n\n\t\t\t\t}\n\n\t\t\t\t// process morph attributes if present\n\n\t\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\t\tfor ( var i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar morphAttribute = morphAttributesPosition[ i ];\n\n\t\t\t\t\t\tfor ( var j = 0, jl = morphAttribute.count; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tvector.fromBufferAttribute( morphAttribute, j );\n\n\t\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\tcomputeFaceNormals: function () {\n\n\t\t// backwards compatibility\n\n\t},\n\n\tcomputeVertexNormals: function () {\n\n\t\tvar index = this.index;\n\t\tvar attributes = this.attributes;\n\n\t\tif ( attributes.position ) {\n\n\t\t\tvar positions = attributes.position.array;\n\n\t\t\tif ( attributes.normal === undefined ) {\n\n\t\t\t\tthis.addAttribute( 'normal', new BufferAttribute( new Float32Array( positions.length ), 3 ) );\n\n\t\t\t} else {\n\n\t\t\t\t// reset existing normals to zero\n\n\t\t\t\tvar array = attributes.normal.array;\n\n\t\t\t\tfor ( var i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t\t\tarray[ i ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar normals = attributes.normal.array;\n\n\t\t\tvar vA, vB, vC;\n\t\t\tvar pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\n\t\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\t\t// indexed elements\n\n\t\t\tif ( index ) {\n\n\t\t\t\tvar indices = index.array;\n\n\t\t\t\tfor ( var i = 0, il = index.count; i < il; i += 3 ) {\n\n\t\t\t\t\tvA = indices[ i + 0 ] * 3;\n\t\t\t\t\tvB = indices[ i + 1 ] * 3;\n\t\t\t\t\tvC = indices[ i + 2 ] * 3;\n\n\t\t\t\t\tpA.fromArray( positions, vA );\n\t\t\t\t\tpB.fromArray( positions, vB );\n\t\t\t\t\tpC.fromArray( positions, vC );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnormals[ vA ] += cb.x;\n\t\t\t\t\tnormals[ vA + 1 ] += cb.y;\n\t\t\t\t\tnormals[ vA + 2 ] += cb.z;\n\n\t\t\t\t\tnormals[ vB ] += cb.x;\n\t\t\t\t\tnormals[ vB + 1 ] += cb.y;\n\t\t\t\t\tnormals[ vB + 2 ] += cb.z;\n\n\t\t\t\t\tnormals[ vC ] += cb.x;\n\t\t\t\t\tnormals[ vC + 1 ] += cb.y;\n\t\t\t\t\tnormals[ vC + 2 ] += cb.z;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 9 ) {\n\n\t\t\t\t\tpA.fromArray( positions, i );\n\t\t\t\t\tpB.fromArray( positions, i + 3 );\n\t\t\t\t\tpC.fromArray( positions, i + 6 );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnormals[ i ] = cb.x;\n\t\t\t\t\tnormals[ i + 1 ] = cb.y;\n\t\t\t\t\tnormals[ i + 2 ] = cb.z;\n\n\t\t\t\t\tnormals[ i + 3 ] = cb.x;\n\t\t\t\t\tnormals[ i + 4 ] = cb.y;\n\t\t\t\t\tnormals[ i + 5 ] = cb.z;\n\n\t\t\t\t\tnormals[ i + 6 ] = cb.x;\n\t\t\t\t\tnormals[ i + 7 ] = cb.y;\n\t\t\t\t\tnormals[ i + 8 ] = cb.z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.normalizeNormals();\n\n\t\t\tattributes.normal.needsUpdate = true;\n\n\t\t}\n\n\t},\n\n\tmerge: function ( geometry, offset ) {\n\n\t\tif ( ! ( geometry && geometry.isBufferGeometry ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( offset === undefined ) {\n\n\t\t\toffset = 0;\n\n\t\t\tconsole.warn(\n\t\t\t\t'THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. '\n\t\t\t\t+ 'Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge.'\n\t\t\t);\n\n\t\t}\n\n\t\tvar attributes = this.attributes;\n\n\t\tfor ( var key in attributes ) {\n\n\t\t\tif ( geometry.attributes[ key ] === undefined ) continue;\n\n\t\t\tvar attribute1 = attributes[ key ];\n\t\t\tvar attributeArray1 = attribute1.array;\n\n\t\t\tvar attribute2 = geometry.attributes[ key ];\n\t\t\tvar attributeArray2 = attribute2.array;\n\n\t\t\tvar attributeOffset = attribute2.itemSize * offset;\n\t\t\tvar length = Math.min( attributeArray2.length, attributeArray1.length - attributeOffset );\n\n\t\t\tfor ( var i = 0, j = attributeOffset; i < length; i ++, j ++ ) {\n\n\t\t\t\tattributeArray1[ j ] = attributeArray2[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tnormalizeNormals: function () {\n\n\t\tvar vector = new Vector3();\n\n\t\treturn function normalizeNormals() {\n\n\t\t\tvar normals = this.attributes.normal;\n\n\t\t\tfor ( var i = 0, il = normals.count; i < il; i ++ ) {\n\n\t\t\t\tvector.x = normals.getX( i );\n\t\t\t\tvector.y = normals.getY( i );\n\t\t\t\tvector.z = normals.getZ( i );\n\n\t\t\t\tvector.normalize();\n\n\t\t\t\tnormals.setXYZ( i, vector.x, vector.y, vector.z );\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\ttoNonIndexed: function () {\n\n\t\tfunction convertBufferAttribute( attribute, indices ) {\n\n\t\t\tvar array = attribute.array;\n\t\t\tvar itemSize = attribute.itemSize;\n\n\t\t\tvar array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\tvar index = 0, index2 = 0;\n\n\t\t\tfor ( var i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\tfor ( var j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( array2, itemSize );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.index === null ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed.' );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar geometry2 = new BufferGeometry();\n\n\t\tvar indices = this.index.array;\n\t\tvar attributes = this.attributes;\n\n\t\t// attributes\n\n\t\tfor ( var name in attributes ) {\n\n\t\t\tvar attribute = attributes[ name ];\n\n\t\t\tvar newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\tgeometry2.addAttribute( name, newAttribute );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tvar morphAttributes = this.morphAttributes;\n\n\t\tfor ( name in morphAttributes ) {\n\n\t\t\tvar morphArray = [];\n\t\t\tvar morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( var i = 0, il = morphAttribute.length; i < il; i ++ ) {\n\n\t\t\t\tvar attribute = morphAttribute[ i ];\n\n\t\t\t\tvar newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\t\tmorphArray.push( newAttribute );\n\n\t\t\t}\n\n\t\t\tgeometry2.morphAttributes[ name ] = morphArray;\n\n\t\t}\n\n\t\t// groups\n\n\t\tvar groups = this.groups;\n\n\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tvar group = groups[ i ];\n\t\t\tgeometry2.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\treturn geometry2;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard BufferGeometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tvar parameters = this.parameters;\n\n\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tdata.data = { attributes: {} };\n\n\t\tvar index = this.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tdata.data.index = {\n\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\tarray: Array.prototype.slice.call( index.array )\n\t\t\t};\n\n\t\t}\n\n\t\tvar attributes = this.attributes;\n\n\t\tfor ( var key in attributes ) {\n\n\t\t\tvar attribute = attributes[ key ];\n\n\t\t\tvar attributeData = attribute.toJSON();\n\n\t\t\tif ( attribute.name !== '' ) attributeData.name = attribute.name;\n\n\t\t\tdata.data.attributes[ key ] = attributeData;\n\n\t\t}\n\n\t\tvar morphAttributes = {};\n\t\tvar hasMorphAttributes = false;\n\n\t\tfor ( var key in this.morphAttributes ) {\n\n\t\t\tvar attributeArray = this.morphAttributes[ key ];\n\n\t\t\tvar array = [];\n\n\t\t\tfor ( var i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\tvar attribute = attributeArray[ i ];\n\n\t\t\t\tvar attributeData = attribute.toJSON();\n\n\t\t\t\tif ( attribute.name !== '' ) attributeData.name = attribute.name;\n\n\t\t\t\tarray.push( attributeData );\n\n\t\t\t}\n\n\t\t\tif ( array.length > 0 ) {\n\n\t\t\t\tmorphAttributes[ key ] = array;\n\n\t\t\t\thasMorphAttributes = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( hasMorphAttributes ) data.data.morphAttributes = morphAttributes;\n\n\t\tvar groups = this.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t}\n\n\t\tvar boundingSphere = this.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tdata.data.boundingSphere = {\n\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\tradius: boundingSphere.radius\n\t\t\t};\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tclone: function () {\n\n\t\t/*\n\t\t // Handle primitives\n\n\t\t var parameters = this.parameters;\n\n\t\t if ( parameters !== undefined ) {\n\n\t\t var values = [];\n\n\t\t for ( var key in parameters ) {\n\n\t\t values.push( parameters[ key ] );\n\n\t\t }\n\n\t\t var geometry = Object.create( this.constructor.prototype );\n\t\t this.constructor.apply( geometry, values );\n\t\t return geometry;\n\n\t\t }\n\n\t\t return new this.constructor().copy( this );\n\t\t */\n\n\t\treturn new BufferGeometry().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tvar name, i, l;\n\n\t\t// reset\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\t\tthis.morphAttributes = {};\n\t\tthis.groups = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// index\n\n\t\tvar index = source.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tthis.setIndex( index.clone() );\n\n\t\t}\n\n\t\t// attributes\n\n\t\tvar attributes = source.attributes;\n\n\t\tfor ( name in attributes ) {\n\n\t\t\tvar attribute = attributes[ name ];\n\t\t\tthis.addAttribute( name, attribute.clone() );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tvar morphAttributes = source.morphAttributes;\n\n\t\tfor ( name in morphAttributes ) {\n\n\t\t\tvar array = [];\n\t\t\tvar morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( i = 0, l = morphAttribute.length; i < l; i ++ ) {\n\n\t\t\t\tarray.push( morphAttribute[ i ].clone() );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\t// groups\n\n\t\tvar groups = source.groups;\n\n\t\tfor ( i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tvar group = groups[ i ];\n\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tvar boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tvar boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// draw range\n\n\t\tthis.drawRange.start = source.drawRange.start;\n\t\tthis.drawRange.count = source.drawRange.count;\n\n\t\t// user data\n\n\t\tthis.userData = source.userData;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// BoxGeometry\n\nfunction BoxGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'BoxGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\tdepth: depth,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tdepthSegments: depthSegments\n\t};\n\n\tthis.fromBufferGeometry( new BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) );\n\tthis.mergeVertices();\n\n}\n\nBoxGeometry.prototype = Object.create( Geometry.prototype );\nBoxGeometry.prototype.constructor = BoxGeometry;\n\n// BoxBufferGeometry\n\nfunction BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'BoxBufferGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\tdepth: depth,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tdepthSegments: depthSegments\n\t};\n\n\tvar scope = this;\n\n\twidth = width || 1;\n\theight = height || 1;\n\tdepth = depth || 1;\n\n\t// segments\n\n\twidthSegments = Math.floor( widthSegments ) || 1;\n\theightSegments = Math.floor( heightSegments ) || 1;\n\tdepthSegments = Math.floor( depthSegments ) || 1;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar numberOfVertices = 0;\n\tvar groupStart = 0;\n\n\t// build each side of the box geometry\n\n\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\n\tbuildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\n\tbuildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\n\tbuildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\n\tbuildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\n\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\tvar segmentWidth = width / gridX;\n\t\tvar segmentHeight = height / gridY;\n\n\t\tvar widthHalf = width / 2;\n\t\tvar heightHalf = height / 2;\n\t\tvar depthHalf = depth / 2;\n\n\t\tvar gridX1 = gridX + 1;\n\t\tvar gridY1 = gridY + 1;\n\n\t\tvar vertexCounter = 0;\n\t\tvar groupCount = 0;\n\n\t\tvar ix, iy;\n\n\t\tvar vector = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\tvar y = iy * segmentHeight - heightHalf;\n\n\t\t\tfor ( ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\tvar x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t// set values to correct vector component\n\n\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t// now apply vector to vertex buffer\n\n\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t// set values to correct vector component\n\n\t\t\t\tvector[ u ] = 0;\n\t\t\t\tvector[ v ] = 0;\n\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t// now apply vector to normal buffer\n\n\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t// uvs\n\n\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t\t// counters\n\n\t\t\t\tvertexCounter += 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\t// 1. you need three indices to draw a single face\n\t\t// 2. a single segment consists of two faces\n\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\tfor ( iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\tvar a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\tvar b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\tvar c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\tvar d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t// increase counter\n\n\t\t\t\tgroupCount += 6;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t// calculate new start value for groups\n\n\t\tgroupStart += groupCount;\n\n\t\t// update total number of vertices\n\n\t\tnumberOfVertices += vertexCounter;\n\n\t}\n\n}\n\nBoxBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nBoxBufferGeometry.prototype.constructor = BoxBufferGeometry;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// PlaneGeometry\n\nfunction PlaneGeometry( width, height, widthSegments, heightSegments ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'PlaneGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments\n\t};\n\n\tthis.fromBufferGeometry( new PlaneBufferGeometry( width, height, widthSegments, heightSegments ) );\n\tthis.mergeVertices();\n\n}\n\nPlaneGeometry.prototype = Object.create( Geometry.prototype );\nPlaneGeometry.prototype.constructor = PlaneGeometry;\n\n// PlaneBufferGeometry\n\nfunction PlaneBufferGeometry( width, height, widthSegments, heightSegments ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'PlaneBufferGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments\n\t};\n\n\twidth = width || 1;\n\theight = height || 1;\n\n\tvar width_half = width / 2;\n\tvar height_half = height / 2;\n\n\tvar gridX = Math.floor( widthSegments ) || 1;\n\tvar gridY = Math.floor( heightSegments ) || 1;\n\n\tvar gridX1 = gridX + 1;\n\tvar gridY1 = gridY + 1;\n\n\tvar segment_width = width / gridX;\n\tvar segment_height = height / gridY;\n\n\tvar ix, iy;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// generate vertices, normals and uvs\n\n\tfor ( iy = 0; iy < gridY1; iy ++ ) {\n\n\t\tvar y = iy * segment_height - height_half;\n\n\t\tfor ( ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\tvar x = ix * segment_width - width_half;\n\n\t\t\tvertices.push( x, - y, 0 );\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\tuvs.push( ix / gridX );\n\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t}\n\n\t}\n\n\t// indices\n\n\tfor ( iy = 0; iy < gridY; iy ++ ) {\n\n\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\tvar a = ix + gridX1 * iy;\n\t\t\tvar b = ix + gridX1 * ( iy + 1 );\n\t\t\tvar c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\tvar d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nPlaneBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nPlaneBufferGeometry.prototype.constructor = PlaneBufferGeometry;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nvar materialId = 0;\n\nfunction Material() {\n\n\tObject.defineProperty( this, 'id', { value: materialId ++ } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'Material';\n\n\tthis.fog = true;\n\tthis.lights = true;\n\n\tthis.blending = NormalBlending;\n\tthis.side = FrontSide;\n\tthis.flatShading = false;\n\tthis.vertexTangents = false;\n\tthis.vertexColors = NoColors; // THREE.NoColors, THREE.VertexColors, THREE.FaceColors\n\n\tthis.opacity = 1;\n\tthis.transparent = false;\n\n\tthis.blendSrc = SrcAlphaFactor;\n\tthis.blendDst = OneMinusSrcAlphaFactor;\n\tthis.blendEquation = AddEquation;\n\tthis.blendSrcAlpha = null;\n\tthis.blendDstAlpha = null;\n\tthis.blendEquationAlpha = null;\n\n\tthis.depthFunc = LessEqualDepth;\n\tthis.depthTest = true;\n\tthis.depthWrite = true;\n\n\tthis.clippingPlanes = null;\n\tthis.clipIntersection = false;\n\tthis.clipShadows = false;\n\n\tthis.shadowSide = null;\n\n\tthis.colorWrite = true;\n\n\tthis.precision = null; // override the renderer's default precision for this material\n\n\tthis.polygonOffset = false;\n\tthis.polygonOffsetFactor = 0;\n\tthis.polygonOffsetUnits = 0;\n\n\tthis.dithering = false;\n\n\tthis.alphaTest = 0;\n\tthis.premultipliedAlpha = false;\n\n\tthis.visible = true;\n\n\tthis.userData = {};\n\n\tthis.needsUpdate = true;\n\n}\n\nMaterial.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: Material,\n\n\tisMaterial: true,\n\n\tonBeforeCompile: function () {},\n\n\tsetValues: function ( values ) {\n\n\t\tif ( values === undefined ) return;\n\n\t\tfor ( var key in values ) {\n\n\t\t\tvar newValue = values[ key ];\n\n\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\tconsole.warn( \"THREE.Material: '\" + key + \"' parameter is undefined.\" );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\t// for backward compatability if shading is set in the constructor\n\t\t\tif ( key === 'shading' ) {\n\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\t\t\t\tthis.flatShading = ( newValue === FlatShading ) ? true : false;\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tvar currentValue = this[ key ];\n\n\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\tconsole.warn( \"THREE.\" + this.type + \": '\" + key + \"' is not a property of this material.\" );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( currentValue && currentValue.isColor ) {\n\n\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\n\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t} else {\n\n\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar isRoot = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( isRoot ) {\n\n\t\t\tmeta = {\n\t\t\t\ttextures: {},\n\t\t\t\timages: {}\n\t\t\t};\n\n\t\t}\n\n\t\tvar data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Material',\n\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Material serialization\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\n\n\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\n\t\tif ( this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;\n\n\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\t\tif ( this.clearCoat !== undefined ) data.clearCoat = this.clearCoat;\n\t\tif ( this.clearCoatRoughness !== undefined ) data.clearCoatRoughness = this.clearCoatRoughness;\n\n\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\n\t\tif ( this.matcap && this.matcap.isTexture ) data.matcap = this.matcap.toJSON( meta ).uuid;\n\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\t\tif ( this.lightMap && this.lightMap.isTexture ) data.lightMap = this.lightMap.toJSON( meta ).uuid;\n\n\t\tif ( this.aoMap && this.aoMap.isTexture ) {\n\n\t\t\tdata.aoMap = this.aoMap.toJSON( meta ).uuid;\n\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\n\n\t\t}\n\n\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t}\n\n\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\tdata.normalMapType = this.normalMapType;\n\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t}\n\n\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\n\t\tif ( this.envMap && this.envMap.isTexture ) {\n\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\t\t\tdata.reflectivity = this.reflectivity; // Scale behind envMap\n\n\t\t\tif ( this.combine !== undefined ) data.combine = this.combine;\n\t\t\tif ( this.envMapIntensity !== undefined ) data.envMapIntensity = this.envMapIntensity;\n\n\t\t}\n\n\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\n\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\tif ( this.flatShading === true ) data.flatShading = this.flatShading;\n\t\tif ( this.side !== FrontSide ) data.side = this.side;\n\t\tif ( this.vertexColors !== NoColors ) data.vertexColors = this.vertexColors;\n\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\tif ( this.transparent === true ) data.transparent = this.transparent;\n\n\t\tdata.depthFunc = this.depthFunc;\n\t\tdata.depthTest = this.depthTest;\n\t\tdata.depthWrite = this.depthWrite;\n\n\t\t// rotation (SpriteMaterial)\n\t\tif ( this.rotation !== 0 ) data.rotation = this.rotation;\n\n\t\tif ( this.polygonOffset === true ) data.polygonOffset = true;\n\t\tif ( this.polygonOffsetFactor !== 0 ) data.polygonOffsetFactor = this.polygonOffsetFactor;\n\t\tif ( this.polygonOffsetUnits !== 0 ) data.polygonOffsetUnits = this.polygonOffsetUnits;\n\n\t\tif ( this.linewidth !== 1 ) data.linewidth = this.linewidth;\n\t\tif ( this.dashSize !== undefined ) data.dashSize = this.dashSize;\n\t\tif ( this.gapSize !== undefined ) data.gapSize = this.gapSize;\n\t\tif ( this.scale !== undefined ) data.scale = this.scale;\n\n\t\tif ( this.dithering === true ) data.dithering = true;\n\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = this.premultipliedAlpha;\n\n\t\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\n\t\tif ( this.morphTargets === true ) data.morphTargets = true;\n\t\tif ( this.skinning === true ) data.skinning = true;\n\n\t\tif ( this.visible === false ) data.visible = false;\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) data.userData = this.userData;\n\n\t\t// TODO: Copied from Object3D.toJSON\n\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tvar values = [];\n\n\t\t\tfor ( var key in cache ) {\n\n\t\t\t\tvar data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t\tif ( isRoot ) {\n\n\t\t\tvar textures = extractFromCache( meta.textures );\n\t\t\tvar images = extractFromCache( meta.images );\n\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.fog = source.fog;\n\t\tthis.lights = source.lights;\n\n\t\tthis.blending = source.blending;\n\t\tthis.side = source.side;\n\t\tthis.flatShading = source.flatShading;\n\t\tthis.vertexColors = source.vertexColors;\n\n\t\tthis.opacity = source.opacity;\n\t\tthis.transparent = source.transparent;\n\n\t\tthis.blendSrc = source.blendSrc;\n\t\tthis.blendDst = source.blendDst;\n\t\tthis.blendEquation = source.blendEquation;\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\n\t\tthis.depthFunc = source.depthFunc;\n\t\tthis.depthTest = source.depthTest;\n\t\tthis.depthWrite = source.depthWrite;\n\n\t\tthis.colorWrite = source.colorWrite;\n\n\t\tthis.precision = source.precision;\n\n\t\tthis.polygonOffset = source.polygonOffset;\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\tthis.dithering = source.dithering;\n\n\t\tthis.alphaTest = source.alphaTest;\n\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\n\t\tthis.visible = source.visible;\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tthis.clipShadows = source.clipShadows;\n\t\tthis.clipIntersection = source.clipIntersection;\n\n\t\tvar srcPlanes = source.clippingPlanes,\n\t\t\tdstPlanes = null;\n\n\t\tif ( srcPlanes !== null ) {\n\n\t\t\tvar n = srcPlanes.length;\n\t\t\tdstPlanes = new Array( n );\n\n\t\t\tfor ( var i = 0; i !== n; ++ i )\n\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t}\n\n\t\tthis.clippingPlanes = dstPlanes;\n\n\t\tthis.shadowSide = source.shadowSide;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\nvar default_vertex = \"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";\n\nvar default_fragment = \"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  defines: { \"label\" : \"value\" },\n *  uniforms: { \"parameter1\": { value: 1.0 }, \"parameter2\": { value2: 2 } },\n *\n *  fragmentShader: <string>,\n *  vertexShader: <string>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  lights: <bool>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction ShaderMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'ShaderMaterial';\n\n\tthis.defines = {};\n\tthis.uniforms = {};\n\n\tthis.vertexShader = default_vertex;\n\tthis.fragmentShader = default_fragment;\n\n\tthis.linewidth = 1;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\n\tthis.fog = false; // set to use scene fog\n\tthis.lights = false; // set to use scene lights\n\tthis.clipping = false; // set to use user-defined clipping planes\n\n\tthis.skinning = false; // set to use skinning attribute streams\n\tthis.morphTargets = false; // set to use morph targets\n\tthis.morphNormals = false; // set to use morph normals\n\n\tthis.extensions = {\n\t\tderivatives: false, // set to use derivatives\n\t\tfragDepth: false, // set to use fragment depth values\n\t\tdrawBuffers: false, // set to use draw buffers\n\t\tshaderTextureLOD: false // set to use shader texture LOD\n\t};\n\n\t// When rendered geometry doesn't include these attributes but the material does,\n\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\tthis.defaultAttributeValues = {\n\t\t'color': [ 1, 1, 1 ],\n\t\t'uv': [ 0, 0 ],\n\t\t'uv2': [ 0, 0 ]\n\t};\n\n\tthis.index0AttributeName = undefined;\n\tthis.uniformsNeedUpdate = false;\n\n\tif ( parameters !== undefined ) {\n\n\t\tif ( parameters.attributes !== undefined ) {\n\n\t\t\tconsole.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' );\n\n\t\t}\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n}\n\nShaderMaterial.prototype = Object.create( Material.prototype );\nShaderMaterial.prototype.constructor = ShaderMaterial;\n\nShaderMaterial.prototype.isShaderMaterial = true;\n\nShaderMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.fragmentShader = source.fragmentShader;\n\tthis.vertexShader = source.vertexShader;\n\n\tthis.uniforms = cloneUniforms( source.uniforms );\n\n\tthis.defines = Object.assign( {}, source.defines );\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\tthis.lights = source.lights;\n\tthis.clipping = source.clipping;\n\n\tthis.skinning = source.skinning;\n\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\tthis.extensions = source.extensions;\n\n\treturn this;\n\n};\n\nShaderMaterial.prototype.toJSON = function ( meta ) {\n\n\tvar data = Material.prototype.toJSON.call( this, meta );\n\n\tdata.uniforms = {};\n\n\tfor ( var name in this.uniforms ) {\n\n\t\tvar uniform = this.uniforms[ name ];\n\t\tvar value = uniform.value;\n\n\t\tif ( value && value.isTexture ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 't',\n\t\t\t\tvalue: value.toJSON( meta ).uuid\n\t\t\t};\n\n\t\t} else if ( value && value.isColor ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 'c',\n\t\t\t\tvalue: value.getHex()\n\t\t\t};\n\n\t\t} else if ( value && value.isVector2 ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 'v2',\n\t\t\t\tvalue: value.toArray()\n\t\t\t};\n\n\t\t} else if ( value && value.isVector3 ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 'v3',\n\t\t\t\tvalue: value.toArray()\n\t\t\t};\n\n\t\t} else if ( value && value.isVector4 ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 'v4',\n\t\t\t\tvalue: value.toArray()\n\t\t\t};\n\n\t\t} else if ( value && value.isMatrix3 ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 'm3',\n\t\t\t\tvalue: value.toArray()\n\t\t\t};\n\n\t\t} else if ( value && value.isMatrix4 ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 'm4',\n\t\t\t\tvalue: value.toArray()\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\tvalue: value\n\t\t\t};\n\n\t\t\t// note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n\n\t\t}\n\n\t}\n\n\tif ( Object.keys( this.defines ).length > 0 ) data.defines = this.defines;\n\n\tdata.vertexShader = this.vertexShader;\n\tdata.fragmentShader = this.fragmentShader;\n\n\tvar extensions = {};\n\n\tfor ( var key in this.extensions ) {\n\n\t\tif ( this.extensions[ key ] === true ) extensions[ key ] = true;\n\n\t}\n\n\tif ( Object.keys( extensions ).length > 0 ) data.extensions = extensions;\n\n\treturn data;\n\n};\n\n/**\n * @author bhouston / http://clara.io\n */\n\nfunction Ray( origin, direction ) {\n\n\tthis.origin = ( origin !== undefined ) ? origin : new Vector3();\n\tthis.direction = ( direction !== undefined ) ? direction : new Vector3();\n\n}\n\nObject.assign( Ray.prototype, {\n\n\tset: function ( origin, direction ) {\n\n\t\tthis.origin.copy( origin );\n\t\tthis.direction.copy( direction );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( ray ) {\n\n\t\tthis.origin.copy( ray.origin );\n\t\tthis.direction.copy( ray.direction );\n\n\t\treturn this;\n\n\t},\n\n\tat: function ( t, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Ray: .at() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( this.direction ).multiplyScalar( t ).add( this.origin );\n\n\t},\n\n\tlookAt: function ( v ) {\n\n\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\treturn this;\n\n\t},\n\n\trecast: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function recast( t ) {\n\n\t\t\tthis.origin.copy( this.at( t, v1 ) );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tclosestPointToPoint: function ( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Ray: .closestPointToPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\ttarget.subVectors( point, this.origin );\n\n\t\tvar directionDistance = target.dot( this.direction );\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn target.copy( this.origin );\n\n\t\t}\n\n\t\treturn target.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t},\n\n\tdistanceToPoint: function ( point ) {\n\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t},\n\n\tdistanceSqToPoint: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function distanceSqToPoint( point ) {\n\n\t\t\tvar directionDistance = v1.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t\t// point behind the ray\n\n\t\t\tif ( directionDistance < 0 ) {\n\n\t\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t\t}\n\n\t\t\tv1.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t\t\treturn v1.distanceToSquared( point );\n\n\t\t};\n\n\t}(),\n\n\tdistanceSqToSegment: function () {\n\n\t\tvar segCenter = new Vector3();\n\t\tvar segDir = new Vector3();\n\t\tvar diff = new Vector3();\n\n\t\treturn function distanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t\t// It returns the min distance between the ray and the segment\n\t\t\t// defined by v0 and v1\n\t\t\t// It can also set two optional targets :\n\t\t\t// - The closest point on the ray\n\t\t\t// - The closest point on the segment\n\n\t\t\tsegCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t\tsegDir.copy( v1 ).sub( v0 ).normalize();\n\t\t\tdiff.copy( this.origin ).sub( segCenter );\n\n\t\t\tvar segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\t\tvar a01 = - this.direction.dot( segDir );\n\t\t\tvar b0 = diff.dot( this.direction );\n\t\t\tvar b1 = - diff.dot( segDir );\n\t\t\tvar c = diff.lengthSq();\n\t\t\tvar det = Math.abs( 1 - a01 * a01 );\n\t\t\tvar s0, s1, sqrDist, extDet;\n\n\t\t\tif ( det > 0 ) {\n\n\t\t\t\t// The ray and segment are not parallel.\n\n\t\t\t\ts0 = a01 * b1 - b0;\n\t\t\t\ts1 = a01 * b0 - b1;\n\t\t\t\textDet = segExtent * det;\n\n\t\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\t\tvar invDet = 1 / det;\n\t\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 5\n\n\t\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t\t// region 4\n\n\t\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t\t// region 3\n\n\t\t\t\t\t\ts0 = 0;\n\t\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 2\n\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// Ray and segment are parallel.\n\n\t\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t}\n\n\t\t\tif ( optionalPointOnRay ) {\n\n\t\t\t\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\n\n\t\t\t}\n\n\t\t\tif ( optionalPointOnSegment ) {\n\n\t\t\t\toptionalPointOnSegment.copy( segDir ).multiplyScalar( s1 ).add( segCenter );\n\n\t\t\t}\n\n\t\t\treturn sqrDist;\n\n\t\t};\n\n\t}(),\n\n\tintersectSphere: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function intersectSphere( sphere, target ) {\n\n\t\t\tv1.subVectors( sphere.center, this.origin );\n\t\t\tvar tca = v1.dot( this.direction );\n\t\t\tvar d2 = v1.dot( v1 ) - tca * tca;\n\t\t\tvar radius2 = sphere.radius * sphere.radius;\n\n\t\t\tif ( d2 > radius2 ) return null;\n\n\t\t\tvar thc = Math.sqrt( radius2 - d2 );\n\n\t\t\t// t0 = first intersect point - entrance on front of sphere\n\t\t\tvar t0 = tca - thc;\n\n\t\t\t// t1 = second intersect point - exit point on back of sphere\n\t\t\tvar t1 = tca + thc;\n\n\t\t\t// test to see if both t0 and t1 are behind the ray - if so, return null\n\t\t\tif ( t0 < 0 && t1 < 0 ) return null;\n\n\t\t\t// test to see if t0 is behind the ray:\n\t\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t\t// in order to always return an intersect point that is in front of the ray.\n\t\t\tif ( t0 < 0 ) return this.at( t1, target );\n\n\t\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\t\treturn this.at( t0, target );\n\n\t\t};\n\n\t}(),\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\treturn this.distanceSqToPoint( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t},\n\n\tdistanceToPlane: function ( plane ) {\n\n\t\tvar denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tvar t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t// Return if the ray never intersects the plane\n\n\t\treturn t >= 0 ? t : null;\n\n\t},\n\n\tintersectPlane: function ( plane, target ) {\n\n\t\tvar t = this.distanceToPlane( plane );\n\n\t\tif ( t === null ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn this.at( t, target );\n\n\t},\n\n\tintersectsPlane: function ( plane ) {\n\n\t\t// check if the ray lies on the plane first\n\n\t\tvar distToPoint = plane.distanceToPoint( this.origin );\n\n\t\tif ( distToPoint === 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tvar denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\treturn false;\n\n\t},\n\n\tintersectBox: function ( box, target ) {\n\n\t\tvar tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\tvar invdirx = 1 / this.direction.x,\n\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\tvar origin = this.origin;\n\n\t\tif ( invdirx >= 0 ) {\n\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t} else {\n\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t}\n\n\t\tif ( invdiry >= 0 ) {\n\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t} else {\n\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t}\n\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\t// These lines also handle the case where tmin or tmax is NaN\n\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\n\n\t\tif ( tymin > tmin || tmin !== tmin ) tmin = tymin;\n\n\t\tif ( tymax < tmax || tmax !== tmax ) tmax = tymax;\n\n\t\tif ( invdirz >= 0 ) {\n\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t} else {\n\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t}\n\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t//return point closest to the ray (positive side)\n\n\t\tif ( tmax < 0 ) return null;\n\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, target );\n\n\t},\n\n\tintersectsBox: ( function () {\n\n\t\tvar v = new Vector3();\n\n\t\treturn function intersectsBox( box ) {\n\n\t\t\treturn this.intersectBox( box, v ) !== null;\n\n\t\t};\n\n\t} )(),\n\n\tintersectTriangle: function () {\n\n\t\t// Compute the offset origin, edges, and normal.\n\t\tvar diff = new Vector3();\n\t\tvar edge1 = new Vector3();\n\t\tvar edge2 = new Vector3();\n\t\tvar normal = new Vector3();\n\n\t\treturn function intersectTriangle( a, b, c, backfaceCulling, target ) {\n\n\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t\tedge1.subVectors( b, a );\n\t\t\tedge2.subVectors( c, a );\n\t\t\tnormal.crossVectors( edge1, edge2 );\n\n\t\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\t\tvar DdN = this.direction.dot( normal );\n\t\t\tvar sign;\n\n\t\t\tif ( DdN > 0 ) {\n\n\t\t\t\tif ( backfaceCulling ) return null;\n\t\t\t\tsign = 1;\n\n\t\t\t} else if ( DdN < 0 ) {\n\n\t\t\t\tsign = - 1;\n\t\t\t\tDdN = - DdN;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tdiff.subVectors( this.origin, a );\n\t\t\tvar DdQxE2 = sign * this.direction.dot( edge2.crossVectors( diff, edge2 ) );\n\n\t\t\t// b1 < 0, no intersection\n\t\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tvar DdE1xQ = sign * this.direction.dot( edge1.cross( diff ) );\n\n\t\t\t// b2 < 0, no intersection\n\t\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t// b1+b2 > 1, no intersection\n\t\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t// Line intersects triangle, check if ray does.\n\t\t\tvar QdN = - sign * diff.dot( normal );\n\n\t\t\t// t < 0, no intersection\n\t\t\tif ( QdN < 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t// Ray intersects triangle.\n\t\t\treturn this.at( QdN / DdN, target );\n\n\t\t};\n\n\t}(),\n\n\tapplyMatrix4: function ( matrix4 ) {\n\n\t\tthis.origin.applyMatrix4( matrix4 );\n\t\tthis.direction.transformDirection( matrix4 );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( ray ) {\n\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Triangle( a, b, c ) {\n\n\tthis.a = ( a !== undefined ) ? a : new Vector3();\n\tthis.b = ( b !== undefined ) ? b : new Vector3();\n\tthis.c = ( c !== undefined ) ? c : new Vector3();\n\n}\n\nObject.assign( Triangle, {\n\n\tgetNormal: function () {\n\n\t\tvar v0 = new Vector3();\n\n\t\treturn function getNormal( a, b, c, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Triangle: .getNormal() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\ttarget.subVectors( c, b );\n\t\t\tv0.subVectors( a, b );\n\t\t\ttarget.cross( v0 );\n\n\t\t\tvar targetLengthSq = target.lengthSq();\n\t\t\tif ( targetLengthSq > 0 ) {\n\n\t\t\t\treturn target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\n\n\t\t\t}\n\n\t\t\treturn target.set( 0, 0, 0 );\n\n\t\t};\n\n\t}(),\n\n\t// static/instance method to calculate barycentric coordinates\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\tgetBarycoord: function () {\n\n\t\tvar v0 = new Vector3();\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\n\t\treturn function getBarycoord( point, a, b, c, target ) {\n\n\t\t\tv0.subVectors( c, a );\n\t\t\tv1.subVectors( b, a );\n\t\t\tv2.subVectors( point, a );\n\n\t\t\tvar dot00 = v0.dot( v0 );\n\t\t\tvar dot01 = v0.dot( v1 );\n\t\t\tvar dot02 = v0.dot( v2 );\n\t\t\tvar dot11 = v1.dot( v1 );\n\t\t\tvar dot12 = v1.dot( v2 );\n\n\t\t\tvar denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Triangle: .getBarycoord() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\t// collinear or singular triangle\n\t\t\tif ( denom === 0 ) {\n\n\t\t\t\t// arbitrary location outside of triangle?\n\t\t\t\t// not sure if this is the best idea, maybe should be returning undefined\n\t\t\t\treturn target.set( - 2, - 1, - 1 );\n\n\t\t\t}\n\n\t\t\tvar invDenom = 1 / denom;\n\t\t\tvar u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\t\tvar v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t\t// barycentric coordinates must always sum to 1\n\t\t\treturn target.set( 1 - u - v, v, u );\n\n\t\t};\n\n\t}(),\n\n\tcontainsPoint: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function containsPoint( point, a, b, c ) {\n\n\t\t\tTriangle.getBarycoord( point, a, b, c, v1 );\n\n\t\t\treturn ( v1.x >= 0 ) && ( v1.y >= 0 ) && ( ( v1.x + v1.y ) <= 1 );\n\n\t\t};\n\n\t}(),\n\n\tgetUV: function () {\n\n\t\tvar barycoord = new Vector3();\n\n\t\treturn function getUV( point, p1, p2, p3, uv1, uv2, uv3, target ) {\n\n\t\t\tthis.getBarycoord( point, p1, p2, p3, barycoord );\n\n\t\t\ttarget.set( 0, 0 );\n\t\t\ttarget.addScaledVector( uv1, barycoord.x );\n\t\t\ttarget.addScaledVector( uv2, barycoord.y );\n\t\t\ttarget.addScaledVector( uv3, barycoord.z );\n\n\t\t\treturn target;\n\n\t\t};\n\n\t}(),\n\n\tisFrontFacing: function () {\n\n\t\tvar v0 = new Vector3();\n\t\tvar v1 = new Vector3();\n\n\t\treturn function isFrontFacing( a, b, c, direction ) {\n\n\t\t\tv0.subVectors( c, b );\n\t\t\tv1.subVectors( a, b );\n\n\t\t\t// strictly front facing\n\t\t\treturn ( v0.cross( v1 ).dot( direction ) < 0 ) ? true : false;\n\n\t\t};\n\n\t}()\n\n} );\n\nObject.assign( Triangle.prototype, {\n\n\tset: function ( a, b, c ) {\n\n\t\tthis.a.copy( a );\n\t\tthis.b.copy( b );\n\t\tthis.c.copy( c );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPointsAndIndices: function ( points, i0, i1, i2 ) {\n\n\t\tthis.a.copy( points[ i0 ] );\n\t\tthis.b.copy( points[ i1 ] );\n\t\tthis.c.copy( points[ i2 ] );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( triangle ) {\n\n\t\tthis.a.copy( triangle.a );\n\t\tthis.b.copy( triangle.b );\n\t\tthis.c.copy( triangle.c );\n\n\t\treturn this;\n\n\t},\n\n\tgetArea: function () {\n\n\t\tvar v0 = new Vector3();\n\t\tvar v1 = new Vector3();\n\n\t\treturn function getArea() {\n\n\t\t\tv0.subVectors( this.c, this.b );\n\t\t\tv1.subVectors( this.a, this.b );\n\n\t\t\treturn v0.cross( v1 ).length() * 0.5;\n\n\t\t};\n\n\t}(),\n\n\tgetMidpoint: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .getMidpoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t},\n\n\tgetNormal: function ( target ) {\n\n\t\treturn Triangle.getNormal( this.a, this.b, this.c, target );\n\n\t},\n\n\tgetPlane: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .getPlane() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t},\n\n\tgetBarycoord: function ( point, target ) {\n\n\t\treturn Triangle.getBarycoord( point, this.a, this.b, this.c, target );\n\n\t},\n\n\tgetUV: function ( point, uv1, uv2, uv3, target ) {\n\n\t\treturn Triangle.getUV( point, this.a, this.b, this.c, uv1, uv2, uv3, target );\n\n\t},\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t},\n\n\tisFrontFacing: function ( direction ) {\n\n\t\treturn Triangle.isFrontFacing( this.a, this.b, this.c, direction );\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\treturn box.intersectsTriangle( this );\n\n\t},\n\n\tclosestPointToPoint: function () {\n\n\t\tvar vab = new Vector3();\n\t\tvar vac = new Vector3();\n\t\tvar vbc = new Vector3();\n\t\tvar vap = new Vector3();\n\t\tvar vbp = new Vector3();\n\t\tvar vcp = new Vector3();\n\n\t\treturn function closestPointToPoint( p, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Triangle: .closestPointToPoint() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tvar a = this.a, b = this.b, c = this.c;\n\t\t\tvar v, w;\n\n\t\t\t// algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n\t\t\t// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n\t\t\t// under the accompanying license; see chapter 5.1.5 for detailed explanation.\n\t\t\t// basically, we're distinguishing which of the voronoi regions of the triangle\n\t\t\t// the point lies in with the minimum amount of redundant computation.\n\n\t\t\tvab.subVectors( b, a );\n\t\t\tvac.subVectors( c, a );\n\t\t\tvap.subVectors( p, a );\n\t\t\tvar d1 = vab.dot( vap );\n\t\t\tvar d2 = vac.dot( vap );\n\t\t\tif ( d1 <= 0 && d2 <= 0 ) {\n\n\t\t\t\t// vertex region of A; barycentric coords (1, 0, 0)\n\t\t\t\treturn target.copy( a );\n\n\t\t\t}\n\n\t\t\tvbp.subVectors( p, b );\n\t\t\tvar d3 = vab.dot( vbp );\n\t\t\tvar d4 = vac.dot( vbp );\n\t\t\tif ( d3 >= 0 && d4 <= d3 ) {\n\n\t\t\t\t// vertex region of B; barycentric coords (0, 1, 0)\n\t\t\t\treturn target.copy( b );\n\n\t\t\t}\n\n\t\t\tvar vc = d1 * d4 - d3 * d2;\n\t\t\tif ( vc <= 0 && d1 >= 0 && d3 <= 0 ) {\n\n\t\t\t\tv = d1 / ( d1 - d3 );\n\t\t\t\t// edge region of AB; barycentric coords (1-v, v, 0)\n\t\t\t\treturn target.copy( a ).addScaledVector( vab, v );\n\n\t\t\t}\n\n\t\t\tvcp.subVectors( p, c );\n\t\t\tvar d5 = vab.dot( vcp );\n\t\t\tvar d6 = vac.dot( vcp );\n\t\t\tif ( d6 >= 0 && d5 <= d6 ) {\n\n\t\t\t\t// vertex region of C; barycentric coords (0, 0, 1)\n\t\t\t\treturn target.copy( c );\n\n\t\t\t}\n\n\t\t\tvar vb = d5 * d2 - d1 * d6;\n\t\t\tif ( vb <= 0 && d2 >= 0 && d6 <= 0 ) {\n\n\t\t\t\tw = d2 / ( d2 - d6 );\n\t\t\t\t// edge region of AC; barycentric coords (1-w, 0, w)\n\t\t\t\treturn target.copy( a ).addScaledVector( vac, w );\n\n\t\t\t}\n\n\t\t\tvar va = d3 * d6 - d5 * d4;\n\t\t\tif ( va <= 0 && ( d4 - d3 ) >= 0 && ( d5 - d6 ) >= 0 ) {\n\n\t\t\t\tvbc.subVectors( c, b );\n\t\t\t\tw = ( d4 - d3 ) / ( ( d4 - d3 ) + ( d5 - d6 ) );\n\t\t\t\t// edge region of BC; barycentric coords (0, 1-w, w)\n\t\t\t\treturn target.copy( b ).addScaledVector( vbc, w ); // edge region of BC\n\n\t\t\t}\n\n\t\t\t// face region\n\t\t\tvar denom = 1 / ( va + vb + vc );\n\t\t\t// u = va * denom\n\t\t\tv = vb * denom;\n\t\t\tw = vc * denom;\n\t\t\treturn target.copy( a ).addScaledVector( vab, v ).addScaledVector( vac, w );\n\n\t\t};\n\n\t}(),\n\n\tequals: function ( triangle ) {\n\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  depthTest: <bool>,\n *  depthWrite: <bool>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>\n * }\n */\n\nfunction MeshBasicMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshBasicMaterial';\n\n\tthis.color = new Color( 0xffffff ); // emissive\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.specularMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.combine = MultiplyOperation;\n\tthis.reflectivity = 1;\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshBasicMaterial.prototype = Object.create( Material.prototype );\nMeshBasicMaterial.prototype.constructor = MeshBasicMaterial;\n\nMeshBasicMaterial.prototype.isMeshBasicMaterial = true;\n\nMeshBasicMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.specularMap = source.specularMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.combine = source.combine;\n\tthis.reflectivity = source.reflectivity;\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author jonobr1 / http://jonobr1.com/\n */\n\nfunction Mesh( geometry, material ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Mesh';\n\n\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\tthis.material = material !== undefined ? material : new MeshBasicMaterial( { color: Math.random() * 0xffffff } );\n\n\tthis.drawMode = TrianglesDrawMode;\n\n\tthis.updateMorphTargets();\n\n}\n\nMesh.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Mesh,\n\n\tisMesh: true,\n\n\tsetDrawMode: function ( value ) {\n\n\t\tthis.drawMode = value;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source );\n\n\t\tthis.drawMode = source.drawMode;\n\n\t\tif ( source.morphTargetInfluences !== undefined ) {\n\n\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\n\n\t\t}\n\n\t\tif ( source.morphTargetDictionary !== undefined ) {\n\n\t\t\tthis.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tupdateMorphTargets: function () {\n\n\t\tvar geometry = this.geometry;\n\t\tvar m, ml, name;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tvar morphAttributes = geometry.morphAttributes;\n\t\t\tvar keys = Object.keys( morphAttributes );\n\n\t\t\tif ( keys.length > 0 ) {\n\n\t\t\t\tvar morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\tfor ( m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\t\tname = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tvar morphTargets = geometry.morphTargets;\n\n\t\t\tif ( morphTargets !== undefined && morphTargets.length > 0 ) {\n\n\t\t\t\tconsole.error( 'THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\traycast: ( function () {\n\n\t\tvar inverseMatrix = new Matrix4();\n\t\tvar ray = new Ray();\n\t\tvar sphere = new Sphere();\n\n\t\tvar vA = new Vector3();\n\t\tvar vB = new Vector3();\n\t\tvar vC = new Vector3();\n\n\t\tvar tempA = new Vector3();\n\t\tvar tempB = new Vector3();\n\t\tvar tempC = new Vector3();\n\n\t\tvar morphA = new Vector3();\n\t\tvar morphB = new Vector3();\n\t\tvar morphC = new Vector3();\n\n\t\tvar uvA = new Vector2();\n\t\tvar uvB = new Vector2();\n\t\tvar uvC = new Vector2();\n\n\t\tvar intersectionPoint = new Vector3();\n\t\tvar intersectionPointWorld = new Vector3();\n\n\t\tfunction checkIntersection( object, material, raycaster, ray, pA, pB, pC, point ) {\n\n\t\t\tvar intersect;\n\n\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t\t\t} else {\n\n\t\t\t\tintersect = ray.intersectTriangle( pA, pB, pC, material.side !== DoubleSide, point );\n\n\t\t\t}\n\n\t\t\tif ( intersect === null ) return null;\n\n\t\t\tintersectionPointWorld.copy( point );\n\t\t\tintersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );\n\n\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\n\n\t\t\treturn {\n\t\t\t\tdistance: distance,\n\t\t\t\tpoint: intersectionPointWorld.clone(),\n\t\t\t\tobject: object\n\t\t\t};\n\n\t\t}\n\n\t\tfunction checkBufferGeometryIntersection( object, material, raycaster, ray, position, morphPosition, uv, a, b, c ) {\n\n\t\t\tvA.fromBufferAttribute( position, a );\n\t\t\tvB.fromBufferAttribute( position, b );\n\t\t\tvC.fromBufferAttribute( position, c );\n\n\t\t\tvar morphInfluences = object.morphTargetInfluences;\n\n\t\t\tif ( material.morphTargets && morphPosition && morphInfluences ) {\n\n\t\t\t\tmorphA.set( 0, 0, 0 );\n\t\t\t\tmorphB.set( 0, 0, 0 );\n\t\t\t\tmorphC.set( 0, 0, 0 );\n\n\t\t\t\tfor ( var i = 0, il = morphPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar influence = morphInfluences[ i ];\n\t\t\t\t\tvar morphAttribute = morphPosition[ i ];\n\n\t\t\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t\t\ttempA.fromBufferAttribute( morphAttribute, a );\n\t\t\t\t\ttempB.fromBufferAttribute( morphAttribute, b );\n\t\t\t\t\ttempC.fromBufferAttribute( morphAttribute, c );\n\n\t\t\t\t\tmorphA.addScaledVector( tempA.sub( vA ), influence );\n\t\t\t\t\tmorphB.addScaledVector( tempB.sub( vB ), influence );\n\t\t\t\t\tmorphC.addScaledVector( tempC.sub( vC ), influence );\n\n\t\t\t\t}\n\n\t\t\t\tvA.add( morphA );\n\t\t\t\tvB.add( morphB );\n\t\t\t\tvC.add( morphC );\n\n\t\t\t}\n\n\t\t\tvar intersection = checkIntersection( object, material, raycaster, ray, vA, vB, vC, intersectionPoint );\n\n\t\t\tif ( intersection ) {\n\n\t\t\t\tif ( uv ) {\n\n\t\t\t\t\tuvA.fromBufferAttribute( uv, a );\n\t\t\t\t\tuvB.fromBufferAttribute( uv, b );\n\t\t\t\t\tuvC.fromBufferAttribute( uv, c );\n\n\t\t\t\t\tintersection.uv = Triangle.getUV( intersectionPoint, vA, vB, vC, uvA, uvB, uvC, new Vector2() );\n\n\t\t\t\t}\n\n\t\t\t\tvar face = new Face3( a, b, c );\n\t\t\t\tTriangle.getNormal( vA, vB, vC, face.normal );\n\n\t\t\t\tintersection.face = face;\n\n\t\t\t}\n\n\t\t\treturn intersection;\n\n\t\t}\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar material = this.material;\n\t\t\tvar matrixWorld = this.matrixWorld;\n\n\t\t\tif ( material === undefined ) return;\n\n\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\tsphere.applyMatrix4( matrixWorld );\n\n\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n\t\t\t//\n\n\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t\t// Check boundingBox before continuing\n\n\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\tif ( ray.intersectsBox( geometry.boundingBox ) === false ) return;\n\n\t\t\t}\n\n\t\t\tvar intersection;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tvar a, b, c;\n\t\t\t\tvar index = geometry.index;\n\t\t\t\tvar position = geometry.attributes.position;\n\t\t\t\tvar morphPosition = geometry.morphAttributes.position;\n\t\t\t\tvar uv = geometry.attributes.uv;\n\t\t\t\tvar groups = geometry.groups;\n\t\t\t\tvar drawRange = geometry.drawRange;\n\t\t\t\tvar i, j, il, jl;\n\t\t\t\tvar group, groupMaterial;\n\t\t\t\tvar start, end;\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\t// indexed buffer geometry\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tfor ( i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\tgroup = groups[ i ];\n\t\t\t\t\t\t\tgroupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\tstart = Math.max( group.start, drawRange.start );\n\t\t\t\t\t\t\tend = Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\t\tfor ( j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\t\t\ta = index.getX( j );\n\t\t\t\t\t\t\t\tb = index.getX( j + 1 );\n\t\t\t\t\t\t\t\tc = index.getX( j + 2 );\n\n\t\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, ray, position, morphPosition, uv, a, b, c );\n\n\t\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstart = Math.max( 0, drawRange.start );\n\t\t\t\t\t\tend = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\tfor ( i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\t\t\ta = index.getX( i );\n\t\t\t\t\t\t\tb = index.getX( i + 1 );\n\t\t\t\t\t\t\tc = index.getX( i + 2 );\n\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, ray, position, morphPosition, uv, a, b, c );\n\n\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( position !== undefined ) {\n\n\t\t\t\t\t// non-indexed buffer geometry\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tfor ( i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\tgroup = groups[ i ];\n\t\t\t\t\t\t\tgroupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\tstart = Math.max( group.start, drawRange.start );\n\t\t\t\t\t\t\tend = Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\t\tfor ( j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\t\t\ta = j;\n\t\t\t\t\t\t\t\tb = j + 1;\n\t\t\t\t\t\t\t\tc = j + 2;\n\n\t\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, ray, position, morphPosition, uv, a, b, c );\n\n\t\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstart = Math.max( 0, drawRange.start );\n\t\t\t\t\t\tend = Math.min( position.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\tfor ( i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\t\t\ta = i;\n\t\t\t\t\t\t\tb = i + 1;\n\t\t\t\t\t\t\tc = i + 2;\n\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, ray, position, morphPosition, uv, a, b, c );\n\n\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tvar fvA, fvB, fvC;\n\t\t\t\tvar isMultiMaterial = Array.isArray( material );\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar faces = geometry.faces;\n\t\t\t\tvar uvs;\n\n\t\t\t\tvar faceVertexUvs = geometry.faceVertexUvs[ 0 ];\n\t\t\t\tif ( faceVertexUvs.length > 0 ) uvs = faceVertexUvs;\n\n\t\t\t\tfor ( var f = 0, fl = faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\tvar face = faces[ f ];\n\t\t\t\t\tvar faceMaterial = isMultiMaterial ? material[ face.materialIndex ] : material;\n\n\t\t\t\t\tif ( faceMaterial === undefined ) continue;\n\n\t\t\t\t\tfvA = vertices[ face.a ];\n\t\t\t\t\tfvB = vertices[ face.b ];\n\t\t\t\t\tfvC = vertices[ face.c ];\n\n\t\t\t\t\tintersection = checkIntersection( this, faceMaterial, raycaster, ray, fvA, fvB, fvC, intersectionPoint );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tif ( uvs && uvs[ f ] ) {\n\n\t\t\t\t\t\t\tvar uvs_f = uvs[ f ];\n\t\t\t\t\t\t\tuvA.copy( uvs_f[ 0 ] );\n\t\t\t\t\t\t\tuvB.copy( uvs_f[ 1 ] );\n\t\t\t\t\t\t\tuvC.copy( uvs_f[ 2 ] );\n\n\t\t\t\t\t\t\tintersection.uv = Triangle.getUV( intersectionPoint, fvA, fvB, fvC, uvA, uvB, uvC, new Vector2() );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tintersection.face = face;\n\t\t\t\t\t\tintersection.faceIndex = f;\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}() ),\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLBackground( renderer, state, objects, premultipliedAlpha ) {\n\n\tvar clearColor = new Color( 0x000000 );\n\tvar clearAlpha = 0;\n\n\tvar planeMesh;\n\tvar boxMesh;\n\t// Store the current background texture and its `version`\n\t// so we can recompile the material accordingly.\n\tvar currentBackground = null;\n\tvar currentBackgroundVersion = 0;\n\n\tfunction render( renderList, scene, camera, forceClear ) {\n\n\t\tvar background = scene.background;\n\n\t\t// Ignore background in AR\n\t\t// TODO: Reconsider this.\n\n\t\tvar vr = renderer.vr;\n\t\tvar session = vr.getSession && vr.getSession();\n\n\t\tif ( session && session.environmentBlendMode === 'additive' ) {\n\n\t\t\tbackground = null;\n\n\t\t}\n\n\t\tif ( background === null ) {\n\n\t\t\tsetClear( clearColor, clearAlpha );\n\t\t\tcurrentBackground = null;\n\t\t\tcurrentBackgroundVersion = 0;\n\n\t\t} else if ( background && background.isColor ) {\n\n\t\t\tsetClear( background, 1 );\n\t\t\tforceClear = true;\n\t\t\tcurrentBackground = null;\n\t\t\tcurrentBackgroundVersion = 0;\n\n\t\t}\n\n\t\tif ( renderer.autoClear || forceClear ) {\n\n\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\n\t\t}\n\n\t\tif ( background && ( background.isCubeTexture || background.isWebGLRenderTargetCube ) ) {\n\n\t\t\tif ( boxMesh === undefined ) {\n\n\t\t\t\tboxMesh = new Mesh(\n\t\t\t\t\tnew BoxBufferGeometry( 1, 1, 1 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\ttype: 'BackgroundCubeMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.cube.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.cube.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.cube.fragmentShader,\n\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tboxMesh.geometry.removeAttribute( 'normal' );\n\t\t\t\tboxMesh.geometry.removeAttribute( 'uv' );\n\n\t\t\t\tboxMesh.onBeforeRender = function ( renderer, scene, camera ) {\n\n\t\t\t\t\tthis.matrixWorld.copyPosition( camera.matrixWorld );\n\n\t\t\t\t};\n\n\t\t\t\t// enable code injection for non-built-in material\n\t\t\t\tObject.defineProperty( boxMesh.material, 'map', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.tCube.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( boxMesh );\n\n\t\t\t}\n\n\t\t\tvar texture = background.isWebGLRenderTargetCube ? background.texture : background;\n\t\t\tboxMesh.material.uniforms.tCube.value = texture;\n\t\t\tboxMesh.material.uniforms.tFlip.value = ( background.isWebGLRenderTargetCube ) ? 1 : - 1;\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t     currentBackgroundVersion !== texture.version ) {\n\n\t\t\t\tboxMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = texture.version;\n\n\t\t\t}\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( boxMesh, boxMesh.geometry, boxMesh.material, 0, 0, null );\n\n\t\t} else if ( background && background.isTexture ) {\n\n\t\t\tif ( planeMesh === undefined ) {\n\n\t\t\t\tplaneMesh = new Mesh(\n\t\t\t\t\tnew PlaneBufferGeometry( 2, 2 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\ttype: 'BackgroundMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.background.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.background.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.background.fragmentShader,\n\t\t\t\t\t\tside: FrontSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tplaneMesh.geometry.removeAttribute( 'normal' );\n\n\t\t\t\t// enable code injection for non-built-in material\n\t\t\t\tObject.defineProperty( planeMesh.material, 'map', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.t2D.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( planeMesh );\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.t2D.value = background;\n\n\t\t\tif ( background.matrixAutoUpdate === true ) {\n\n\t\t\t\tbackground.updateMatrix();\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.uvTransform.value.copy( background.matrix );\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\t   currentBackgroundVersion !== background.version ) {\n\n\t\t\t\tplaneMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\n\t\t\t}\n\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( planeMesh, planeMesh.geometry, planeMesh.material, 0, 0, null );\n\n\t\t}\n\n\t}\n\n\tfunction setClear( color, alpha ) {\n\n\t\tstate.buffers.color.setClear( color.r, color.g, color.b, alpha, premultipliedAlpha );\n\n\t}\n\n\treturn {\n\n\t\tgetClearColor: function () {\n\n\t\t\treturn clearColor;\n\n\t\t},\n\t\tsetClearColor: function ( color, alpha ) {\n\n\t\t\tclearColor.set( color );\n\t\t\tclearAlpha = alpha !== undefined ? alpha : 1;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\tgetClearAlpha: function () {\n\n\t\t\treturn clearAlpha;\n\n\t\t},\n\t\tsetClearAlpha: function ( alpha ) {\n\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\trender: render\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tvar mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawArrays( mode, start, count );\n\n\t\tinfo.update( count, mode );\n\n\t}\n\n\tfunction renderInstances( geometry, start, count ) {\n\n\t\tvar extension;\n\n\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\textension = gl;\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ capabilities.isWebGL2 ? 'drawArraysInstanced' : 'drawArraysInstancedANGLE' ]( mode, start, count, geometry.maxInstancedCount );\n\n\t\tinfo.update( count, mode, geometry.maxInstancedCount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLCapabilities( gl, extensions, parameters ) {\n\n\tvar maxAnisotropy;\n\n\tfunction getMaxAnisotropy() {\n\n\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\n\t\tvar extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\tif ( extension !== null ) {\n\n\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t} else {\n\n\t\t\tmaxAnisotropy = 0;\n\n\t\t}\n\n\t\treturn maxAnisotropy;\n\n\t}\n\n\tfunction getMaxPrecision( precision ) {\n\n\t\tif ( precision === 'highp' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( 35633, 36338 ).precision > 0 &&\n\t\t\t     gl.getShaderPrecisionFormat( 35632, 36338 ).precision > 0 ) {\n\n\t\t\t\treturn 'highp';\n\n\t\t\t}\n\n\t\t\tprecision = 'mediump';\n\n\t\t}\n\n\t\tif ( precision === 'mediump' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( 35633, 36337 ).precision > 0 &&\n\t\t\t     gl.getShaderPrecisionFormat( 35632, 36337 ).precision > 0 ) {\n\n\t\t\t\treturn 'mediump';\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn 'lowp';\n\n\t}\n\n\tvar isWebGL2 = typeof WebGL2RenderingContext !== 'undefined' && gl instanceof WebGL2RenderingContext;\n\n\tvar precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\tvar maxPrecision = getMaxPrecision( precision );\n\n\tif ( maxPrecision !== precision ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\tprecision = maxPrecision;\n\n\t}\n\n\tvar logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n\n\tvar maxTextures = gl.getParameter( 34930 );\n\tvar maxVertexTextures = gl.getParameter( 35660 );\n\tvar maxTextureSize = gl.getParameter( 3379 );\n\tvar maxCubemapSize = gl.getParameter( 34076 );\n\n\tvar maxAttributes = gl.getParameter( 34921 );\n\tvar maxVertexUniforms = gl.getParameter( 36347 );\n\tvar maxVaryings = gl.getParameter( 36348 );\n\tvar maxFragmentUniforms = gl.getParameter( 36349 );\n\n\tvar vertexTextures = maxVertexTextures > 0;\n\tvar floatFragmentTextures = isWebGL2 || !! extensions.get( 'OES_texture_float' );\n\tvar floatVertexTextures = vertexTextures && floatFragmentTextures;\n\n\tvar maxSamples = isWebGL2 ? gl.getParameter( 36183 ) : 0;\n\n\treturn {\n\n\t\tisWebGL2: isWebGL2,\n\n\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\tprecision: precision,\n\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\tmaxTextures: maxTextures,\n\t\tmaxVertexTextures: maxVertexTextures,\n\t\tmaxTextureSize: maxTextureSize,\n\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\tmaxAttributes: maxAttributes,\n\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\tmaxVaryings: maxVaryings,\n\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\tvertexTextures: vertexTextures,\n\t\tfloatFragmentTextures: floatFragmentTextures,\n\t\tfloatVertexTextures: floatVertexTextures,\n\n\t\tmaxSamples: maxSamples\n\n\t};\n\n}\n\n/**\n * @author tschw\n */\n\nfunction WebGLClipping() {\n\n\tvar scope = this,\n\n\t\tglobalState = null,\n\t\tnumGlobalPlanes = 0,\n\t\tlocalClippingEnabled = false,\n\t\trenderingShadows = false,\n\n\t\tplane = new Plane(),\n\t\tviewNormalMatrix = new Matrix3(),\n\n\t\tuniform = { value: null, needsUpdate: false };\n\n\tthis.uniform = uniform;\n\tthis.numPlanes = 0;\n\tthis.numIntersection = 0;\n\n\tthis.init = function ( planes, enableLocalClipping, camera ) {\n\n\t\tvar enabled =\n\t\t\tplanes.length !== 0 ||\n\t\t\tenableLocalClipping ||\n\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t// run another frame in order to reset the state:\n\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\tlocalClippingEnabled;\n\n\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\tglobalState = projectPlanes( planes, camera, 0 );\n\t\tnumGlobalPlanes = planes.length;\n\n\t\treturn enabled;\n\n\t};\n\n\tthis.beginShadows = function () {\n\n\t\trenderingShadows = true;\n\t\tprojectPlanes( null );\n\n\t};\n\n\tthis.endShadows = function () {\n\n\t\trenderingShadows = false;\n\t\tresetGlobalState();\n\n\t};\n\n\tthis.setState = function ( planes, clipIntersection, clipShadows, camera, cache, fromCache ) {\n\n\t\tif ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {\n\n\t\t\t// there's no local clipping\n\n\t\t\tif ( renderingShadows ) {\n\n\t\t\t\t// there's no global clipping\n\n\t\t\t\tprojectPlanes( null );\n\n\t\t\t} else {\n\n\t\t\t\tresetGlobalState();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tvar nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\tlGlobal = nGlobal * 4,\n\n\t\t\t\tdstArray = cache.clippingState || null;\n\n\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, fromCache );\n\n\t\t\tfor ( var i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t}\n\n\t\t\tcache.clippingState = dstArray;\n\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\tthis.numPlanes += nGlobal;\n\n\t\t}\n\n\n\t};\n\n\tfunction resetGlobalState() {\n\n\t\tif ( uniform.value !== globalState ) {\n\n\t\t\tuniform.value = globalState;\n\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t}\n\n\t\tscope.numPlanes = numGlobalPlanes;\n\t\tscope.numIntersection = 0;\n\n\t}\n\n\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\tvar nPlanes = planes !== null ? planes.length : 0,\n\t\t\tdstArray = null;\n\n\t\tif ( nPlanes !== 0 ) {\n\n\t\t\tdstArray = uniform.value;\n\n\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\tvar flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\tplane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tuniform.value = dstArray;\n\t\t\tuniform.needsUpdate = true;\n\n\t\t}\n\n\t\tscope.numPlanes = nPlanes;\n\n\t\treturn dstArray;\n\n\t}\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLExtensions( gl ) {\n\n\tvar extensions = {};\n\n\treturn {\n\n\t\tget: function ( name ) {\n\n\t\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\t\treturn extensions[ name ];\n\n\t\t\t}\n\n\t\t\tvar extension;\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\textension = gl.getExtension( name );\n\n\t\t\t}\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t\t}\n\n\t\t\textensions[ name ] = extension;\n\n\t\t\treturn extension;\n\n\t\t}\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLGeometries( gl, attributes, info ) {\n\n\tvar geometries = {};\n\tvar wireframeAttributes = {};\n\n\tfunction onGeometryDispose( event ) {\n\n\t\tvar geometry = event.target;\n\t\tvar buffergeometry = geometries[ geometry.id ];\n\n\t\tif ( buffergeometry.index !== null ) {\n\n\t\t\tattributes.remove( buffergeometry.index );\n\n\t\t}\n\n\t\tfor ( var name in buffergeometry.attributes ) {\n\n\t\t\tattributes.remove( buffergeometry.attributes[ name ] );\n\n\t\t}\n\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\tdelete geometries[ geometry.id ];\n\n\t\tvar attribute = wireframeAttributes[ buffergeometry.id ];\n\n\t\tif ( attribute ) {\n\n\t\t\tattributes.remove( attribute );\n\t\t\tdelete wireframeAttributes[ buffergeometry.id ];\n\n\t\t}\n\n\t\t//\n\n\t\tinfo.memory.geometries --;\n\n\t}\n\n\tfunction get( object, geometry ) {\n\n\t\tvar buffergeometry = geometries[ geometry.id ];\n\n\t\tif ( buffergeometry ) return buffergeometry;\n\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tbuffergeometry = geometry;\n\n\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\tif ( geometry._bufferGeometry === undefined ) {\n\n\t\t\t\tgeometry._bufferGeometry = new BufferGeometry().setFromObject( object );\n\n\t\t\t}\n\n\t\t\tbuffergeometry = geometry._bufferGeometry;\n\n\t\t}\n\n\t\tgeometries[ geometry.id ] = buffergeometry;\n\n\t\tinfo.memory.geometries ++;\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction update( geometry ) {\n\n\t\tvar index = geometry.index;\n\t\tvar geometryAttributes = geometry.attributes;\n\n\t\tif ( index !== null ) {\n\n\t\t\tattributes.update( index, 34963 );\n\n\t\t}\n\n\t\tfor ( var name in geometryAttributes ) {\n\n\t\t\tattributes.update( geometryAttributes[ name ], 34962 );\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tvar morphAttributes = geometry.morphAttributes;\n\n\t\tfor ( var name in morphAttributes ) {\n\n\t\t\tvar array = morphAttributes[ name ];\n\n\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.update( array[ i ], 34962 );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction getWireframeAttribute( geometry ) {\n\n\t\tvar attribute = wireframeAttributes[ geometry.id ];\n\n\t\tif ( attribute ) return attribute;\n\n\t\tvar indices = [];\n\n\t\tvar geometryIndex = geometry.index;\n\t\tvar geometryAttributes = geometry.attributes;\n\n\t\t// console.time( 'wireframe' );\n\n\t\tif ( geometryIndex !== null ) {\n\n\t\t\tvar array = geometryIndex.array;\n\n\t\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tvar a = array[ i + 0 ];\n\t\t\t\tvar b = array[ i + 1 ];\n\t\t\t\tvar c = array[ i + 2 ];\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tvar array = geometryAttributes.position.array;\n\n\t\t\tfor ( var i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n\t\t\t\tvar a = i + 0;\n\t\t\t\tvar b = i + 1;\n\t\t\t\tvar c = i + 2;\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// console.timeEnd( 'wireframe' );\n\n\t\tattribute = new ( arrayMax( indices ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\n\n\t\tattributes.update( attribute, 34963 );\n\n\t\twireframeAttributes[ geometry.id ] = attribute;\n\n\t\treturn attribute;\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tupdate: update,\n\n\t\tgetWireframeAttribute: getWireframeAttribute\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLIndexedBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tvar mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tvar type, bytesPerElement;\n\n\tfunction setIndex( value ) {\n\n\t\ttype = value.type;\n\t\tbytesPerElement = value.bytesPerElement;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\n\n\t\tinfo.update( count, mode );\n\n\t}\n\n\tfunction renderInstances( geometry, start, count ) {\n\n\t\tvar extension;\n\n\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\textension = gl;\n\n\t\t} else {\n\n\t\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ capabilities.isWebGL2 ? 'drawElementsInstanced' : 'drawElementsInstancedANGLE' ]( mode, count, type, start * bytesPerElement, geometry.maxInstancedCount );\n\n\t\tinfo.update( count, mode, geometry.maxInstancedCount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.setIndex = setIndex;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction WebGLInfo( gl ) {\n\n\tvar memory = {\n\t\tgeometries: 0,\n\t\ttextures: 0\n\t};\n\n\tvar render = {\n\t\tframe: 0,\n\t\tcalls: 0,\n\t\ttriangles: 0,\n\t\tpoints: 0,\n\t\tlines: 0\n\t};\n\n\tfunction update( count, mode, instanceCount ) {\n\n\t\tinstanceCount = instanceCount || 1;\n\n\t\trender.calls ++;\n\n\t\tswitch ( mode ) {\n\n\t\t\tcase 4:\n\t\t\t\trender.triangles += instanceCount * ( count / 3 );\n\t\t\t\tbreak;\n\n\t\t\tcase 5:\n\t\t\tcase 6:\n\t\t\t\trender.triangles += instanceCount * ( count - 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase 1:\n\t\t\t\trender.lines += instanceCount * ( count / 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase 3:\n\t\t\t\trender.lines += instanceCount * ( count - 1 );\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\n\t\t\t\trender.lines += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tcase 0:\n\t\t\t\trender.points += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.error( 'THREE.WebGLInfo: Unknown draw mode:', mode );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\trender.frame ++;\n\t\trender.calls = 0;\n\t\trender.triangles = 0;\n\t\trender.points = 0;\n\t\trender.lines = 0;\n\n\t}\n\n\treturn {\n\t\tmemory: memory,\n\t\trender: render,\n\t\tprograms: null,\n\t\tautoReset: true,\n\t\treset: reset,\n\t\tupdate: update\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction absNumericalSort( a, b ) {\n\n\treturn Math.abs( b[ 1 ] ) - Math.abs( a[ 1 ] );\n\n}\n\nfunction WebGLMorphtargets( gl ) {\n\n\tvar influencesList = {};\n\tvar morphInfluences = new Float32Array( 8 );\n\n\tfunction update( object, geometry, material, program ) {\n\n\t\tvar objectInfluences = object.morphTargetInfluences;\n\n\t\tvar length = objectInfluences.length;\n\n\t\tvar influences = influencesList[ geometry.id ];\n\n\t\tif ( influences === undefined ) {\n\n\t\t\t// initialise list\n\n\t\t\tinfluences = [];\n\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\t\tinfluences[ i ] = [ i, 0 ];\n\n\t\t\t}\n\n\t\t\tinfluencesList[ geometry.id ] = influences;\n\n\t\t}\n\n\t\tvar morphTargets = material.morphTargets && geometry.morphAttributes.position;\n\t\tvar morphNormals = material.morphNormals && geometry.morphAttributes.normal;\n\n\t\t// Remove current morphAttributes\n\n\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\tvar influence = influences[ i ];\n\n\t\t\tif ( influence[ 1 ] !== 0 ) {\n\n\t\t\t\tif ( morphTargets ) geometry.removeAttribute( 'morphTarget' + i );\n\t\t\t\tif ( morphNormals ) geometry.removeAttribute( 'morphNormal' + i );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Collect influences\n\n\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\tvar influence = influences[ i ];\n\n\t\t\tinfluence[ 0 ] = i;\n\t\t\tinfluence[ 1 ] = objectInfluences[ i ];\n\n\t\t}\n\n\t\tinfluences.sort( absNumericalSort );\n\n\t\t// Add morphAttributes\n\n\t\tfor ( var i = 0; i < 8; i ++ ) {\n\n\t\t\tvar influence = influences[ i ];\n\n\t\t\tif ( influence ) {\n\n\t\t\t\tvar index = influence[ 0 ];\n\t\t\t\tvar value = influence[ 1 ];\n\n\t\t\t\tif ( value ) {\n\n\t\t\t\t\tif ( morphTargets ) geometry.addAttribute( 'morphTarget' + i, morphTargets[ index ] );\n\t\t\t\t\tif ( morphNormals ) geometry.addAttribute( 'morphNormal' + i, morphNormals[ index ] );\n\n\t\t\t\t\tmorphInfluences[ i ] = value;\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tmorphInfluences[ i ] = 0;\n\n\t\t}\n\n\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', morphInfluences );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLObjects( geometries, info ) {\n\n\tvar updateList = {};\n\n\tfunction update( object ) {\n\n\t\tvar frame = info.render.frame;\n\n\t\tvar geometry = object.geometry;\n\t\tvar buffergeometry = geometries.get( object, geometry );\n\n\t\t// Update once per frame\n\n\t\tif ( updateList[ buffergeometry.id ] !== frame ) {\n\n\t\t\tif ( geometry.isGeometry ) {\n\n\t\t\t\tbuffergeometry.updateFromObject( object );\n\n\t\t\t}\n\n\t\t\tgeometries.update( buffergeometry );\n\n\t\t\tupdateList[ buffergeometry.id ] = frame;\n\n\t\t}\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tupdateList = {};\n\n\t}\n\n\treturn {\n\n\t\tupdate: update,\n\t\tdispose: dispose\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction CubeTexture( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\timages = images !== undefined ? images : [];\n\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\tformat = format !== undefined ? format : RGBFormat;\n\n\tTexture.call( this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\tthis.flipY = false;\n\n}\n\nCubeTexture.prototype = Object.create( Texture.prototype );\nCubeTexture.prototype.constructor = CubeTexture;\n\nCubeTexture.prototype.isCubeTexture = true;\n\nObject.defineProperty( CubeTexture.prototype, 'images', {\n\n\tget: function () {\n\n\t\treturn this.image;\n\n\t},\n\n\tset: function ( value ) {\n\n\t\tthis.image = value;\n\n\t}\n\n} );\n\n/**\n * @author Takahiro https://github.com/takahirox\n */\n\nfunction DataTexture2DArray( data, width, height, depth ) {\n\n\tTexture.call( this, null );\n\n\tthis.image = { data: data, width: width, height: height, depth: depth };\n\n\tthis.magFilter = NearestFilter;\n\tthis.minFilter = NearestFilter;\n\n\tthis.wrapR = ClampToEdgeWrapping;\n\n\tthis.generateMipmaps = false;\n\tthis.flipY = false;\n\n}\n\nDataTexture2DArray.prototype = Object.create( Texture.prototype );\nDataTexture2DArray.prototype.constructor = DataTexture2DArray;\nDataTexture2DArray.prototype.isDataTexture2DArray = true;\n\n/**\n * @author Artur Trzesiok\n */\n\nfunction DataTexture3D( data, width, height, depth ) {\n\n\t// We're going to add .setXXX() methods for setting properties later.\n\t// Users can still set in DataTexture3D directly.\n\t//\n\t//\tvar texture = new THREE.DataTexture3D( data, width, height, depth );\n\t// \ttexture.anisotropy = 16;\n\t//\n\t// See #14839\n\n\tTexture.call( this, null );\n\n\tthis.image = { data: data, width: width, height: height, depth: depth };\n\n\tthis.magFilter = NearestFilter;\n\tthis.minFilter = NearestFilter;\n\n\tthis.wrapR = ClampToEdgeWrapping;\n\n\tthis.generateMipmaps = false;\n\tthis.flipY = false;\n\n}\n\nDataTexture3D.prototype = Object.create( Texture.prototype );\nDataTexture3D.prototype.constructor = DataTexture3D;\nDataTexture3D.prototype.isDataTexture3D = true;\n\n/**\n * @author tschw\n * @author Mugen87 / https://github.com/Mugen87\n * @author mrdoob / http://mrdoob.com/\n *\n * Uniforms of a program.\n * Those form a tree structure with a special top-level container for the root,\n * which you get by calling 'new WebGLUniforms( gl, program )'.\n *\n *\n * Properties of inner nodes including the top-level container:\n *\n * .seq - array of nested uniforms\n * .map - nested uniforms by name\n *\n *\n * Methods of all nodes except the top-level container:\n *\n * .setValue( gl, value, [textures] )\n *\n * \t\tuploads a uniform value(s)\n *  \tthe 'textures' parameter is needed for sampler uniforms\n *\n *\n * Static methods of the top-level container (textures factorizations):\n *\n * .upload( gl, seq, values, textures )\n *\n * \t\tsets uniforms in 'seq' to 'values[id].value'\n *\n * .seqWithValue( seq, values ) : filteredSeq\n *\n * \t\tfilters 'seq' entries with corresponding entry in values\n *\n *\n * Methods of the top-level container (textures factorizations):\n *\n * .setValue( gl, name, value, textures )\n *\n * \t\tsets uniform with  name 'name' to 'value'\n *\n * .setOptional( gl, obj, prop )\n *\n * \t\tlike .set for an optional property of the object\n *\n */\n\nvar emptyTexture = new Texture();\nvar emptyTexture2dArray = new DataTexture2DArray();\nvar emptyTexture3d = new DataTexture3D();\nvar emptyCubeTexture = new CubeTexture();\n\n// --- Utilities ---\n\n// Array Caches (provide typed arrays for temporary by size)\n\nvar arrayCacheF32 = [];\nvar arrayCacheI32 = [];\n\n// Float32Array caches used for uploading Matrix uniforms\n\nvar mat4array = new Float32Array( 16 );\nvar mat3array = new Float32Array( 9 );\nvar mat2array = new Float32Array( 4 );\n\n// Flattening for arrays of vectors and matrices\n\nfunction flatten( array, nBlocks, blockSize ) {\n\n\tvar firstElem = array[ 0 ];\n\n\tif ( firstElem <= 0 || firstElem > 0 ) return array;\n\t// unoptimized: ! isNaN( firstElem )\n\t// see http://jacksondunstan.com/articles/983\n\n\tvar n = nBlocks * blockSize,\n\t\tr = arrayCacheF32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Float32Array( n );\n\t\tarrayCacheF32[ n ] = r;\n\n\t}\n\n\tif ( nBlocks !== 0 ) {\n\n\t\tfirstElem.toArray( r, 0 );\n\n\t\tfor ( var i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\toffset += blockSize;\n\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t}\n\n\t}\n\n\treturn r;\n\n}\n\nfunction arraysEqual( a, b ) {\n\n\tif ( a.length !== b.length ) return false;\n\n\tfor ( var i = 0, l = a.length; i < l; i ++ ) {\n\n\t\tif ( a[ i ] !== b[ i ] ) return false;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction copyArray( a, b ) {\n\n\tfor ( var i = 0, l = b.length; i < l; i ++ ) {\n\n\t\ta[ i ] = b[ i ];\n\n\t}\n\n}\n\n// Texture unit allocation\n\nfunction allocTexUnits( textures, n ) {\n\n\tvar r = arrayCacheI32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Int32Array( n );\n\t\tarrayCacheI32[ n ] = r;\n\n\t}\n\n\tfor ( var i = 0; i !== n; ++ i )\n\t\tr[ i ] = textures.allocateTextureUnit();\n\n\treturn r;\n\n}\n\n// --- Setters ---\n\n// Note: Defining these methods externally, because they come in a bunch\n// and this way their names minify.\n\n// Single scalar\n\nfunction setValueV1f( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1f( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single float vector (from flat array or THREE.VectorN)\n\nfunction setValueV2f( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2f( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3f( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else if ( v.r !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) {\n\n\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\n\t\t\tcache[ 0 ] = v.r;\n\t\t\tcache[ 1 ] = v.g;\n\t\t\tcache[ 2 ] = v.b;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4f( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single matrix (from flat array or MatrixN)\n\nfunction setValueM2( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix2fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat2array.set( elements );\n\n\t\tgl.uniformMatrix2fv( this.addr, false, mat2array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM3( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix3fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat3array.set( elements );\n\n\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM4( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix4fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat4array.set( elements );\n\n\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\n// Single texture (2D / Cube)\n\nfunction setValueT1( gl, v, textures ) {\n\n\tvar cache = this.cache;\n\tvar unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.safeSetTexture2D( v || emptyTexture, unit );\n\n}\n\nfunction setValueT2DArray1( gl, v, textures ) {\n\n\tvar cache = this.cache;\n\tvar unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture2DArray( v || emptyTexture2dArray, unit );\n\n}\n\nfunction setValueT3D1( gl, v, textures ) {\n\n\tvar cache = this.cache;\n\tvar unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture3D( v || emptyTexture3d, unit );\n\n}\n\nfunction setValueT6( gl, v, textures ) {\n\n\tvar cache = this.cache;\n\tvar unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.safeSetTextureCube( v || emptyCubeTexture, unit );\n\n}\n\n// Integer / Boolean vectors or arrays thereof (always flat arrays)\n\nfunction setValueV1i( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1i( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\nfunction setValueV2i( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform2iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValueV3i( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform3iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValueV4i( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform4iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\n// Helper to pick the right setter for the singular case\n\nfunction getSingularSetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1f; // FLOAT\n\t\tcase 0x8b50: return setValueV2f; // _VEC2\n\t\tcase 0x8b51: return setValueV3f; // _VEC3\n\t\tcase 0x8b52: return setValueV4f; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2; // _MAT2\n\t\tcase 0x8b5b: return setValueM3; // _MAT3\n\t\tcase 0x8b5c: return setValueM4; // _MAT4\n\n\t\tcase 0x8b5e: case 0x8d66: return setValueT1; // SAMPLER_2D, SAMPLER_EXTERNAL_OES\n\t\tcase 0x8b5f: return setValueT3D1; // SAMPLER_3D\n\t\tcase 0x8b60: return setValueT6; // SAMPLER_CUBE\n\t\tcase 0x8DC1: return setValueT2DArray1; // SAMPLER_2D_ARRAY\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1i; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2i; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3i; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4i; // _VEC4\n\n\t}\n\n}\n\n// Array of scalars\nfunction setValueV1fArray( gl, v ) {\n\n\tgl.uniform1fv( this.addr, v );\n\n}\n\n// Integer / Boolean vectors or arrays thereof (always flat arrays)\nfunction setValueV1iArray( gl, v ) {\n\n\tgl.uniform1iv( this.addr, v );\n\n}\n\nfunction setValueV2iArray( gl, v ) {\n\n\tgl.uniform2iv( this.addr, v );\n\n}\n\nfunction setValueV3iArray( gl, v ) {\n\n\tgl.uniform3iv( this.addr, v );\n\n}\n\nfunction setValueV4iArray( gl, v ) {\n\n\tgl.uniform4iv( this.addr, v );\n\n}\n\n\n// Array of vectors (flat or from THREE classes)\n\nfunction setValueV2fArray( gl, v ) {\n\n\tvar data = flatten( v, this.size, 2 );\n\n\tgl.uniform2fv( this.addr, data );\n\n}\n\nfunction setValueV3fArray( gl, v ) {\n\n\tvar data = flatten( v, this.size, 3 );\n\n\tgl.uniform3fv( this.addr, data );\n\n}\n\nfunction setValueV4fArray( gl, v ) {\n\n\tvar data = flatten( v, this.size, 4 );\n\n\tgl.uniform4fv( this.addr, data );\n\n}\n\n// Array of matrices (flat or from THREE clases)\n\nfunction setValueM2Array( gl, v ) {\n\n\tvar data = flatten( v, this.size, 4 );\n\n\tgl.uniformMatrix2fv( this.addr, false, data );\n\n}\n\nfunction setValueM3Array( gl, v ) {\n\n\tvar data = flatten( v, this.size, 9 );\n\n\tgl.uniformMatrix3fv( this.addr, false, data );\n\n}\n\nfunction setValueM4Array( gl, v ) {\n\n\tvar data = flatten( v, this.size, 16 );\n\n\tgl.uniformMatrix4fv( this.addr, false, data );\n\n}\n\n// Array of textures (2D / Cube)\n\nfunction setValueT1Array( gl, v, textures ) {\n\n\tvar n = v.length;\n\n\tvar units = allocTexUnits( textures, n );\n\n\tgl.uniform1iv( this.addr, units );\n\n\tfor ( var i = 0; i !== n; ++ i ) {\n\n\t\ttextures.safeSetTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT6Array( gl, v, textures ) {\n\n\tvar n = v.length;\n\n\tvar units = allocTexUnits( textures, n );\n\n\tgl.uniform1iv( this.addr, units );\n\n\tfor ( var i = 0; i !== n; ++ i ) {\n\n\t\ttextures.safeSetTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t}\n\n}\n\n// Helper to pick the right setter for a pure (bottom-level) array\n\nfunction getPureArraySetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1fArray; // FLOAT\n\t\tcase 0x8b50: return setValueV2fArray; // _VEC2\n\t\tcase 0x8b51: return setValueV3fArray; // _VEC3\n\t\tcase 0x8b52: return setValueV4fArray; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2Array; // _MAT2\n\t\tcase 0x8b5b: return setValueM3Array; // _MAT3\n\t\tcase 0x8b5c: return setValueM4Array; // _MAT4\n\n\t\tcase 0x8b5e: return setValueT1Array; // SAMPLER_2D\n\t\tcase 0x8b60: return setValueT6Array; // SAMPLER_CUBE\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1iArray; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2iArray; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3iArray; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4iArray; // _VEC4\n\n\t}\n\n}\n\n// --- Uniform Classes ---\n\nfunction SingleUniform( id, activeInfo, addr ) {\n\n\tthis.id = id;\n\tthis.addr = addr;\n\tthis.cache = [];\n\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t// this.path = activeInfo.name; // DEBUG\n\n}\n\nfunction PureArrayUniform( id, activeInfo, addr ) {\n\n\tthis.id = id;\n\tthis.addr = addr;\n\tthis.cache = [];\n\tthis.size = activeInfo.size;\n\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t// this.path = activeInfo.name; // DEBUG\n\n}\n\nPureArrayUniform.prototype.updateCache = function ( data ) {\n\n\tvar cache = this.cache;\n\n\tif ( data instanceof Float32Array && cache.length !== data.length ) {\n\n\t\tthis.cache = new Float32Array( data.length );\n\n\t}\n\n\tcopyArray( cache, data );\n\n};\n\nfunction StructuredUniform( id ) {\n\n\tthis.id = id;\n\n\tthis.seq = [];\n\tthis.map = {};\n\n}\n\nStructuredUniform.prototype.setValue = function ( gl, value, textures ) {\n\n\tvar seq = this.seq;\n\n\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tvar u = seq[ i ];\n\t\tu.setValue( gl, value[ u.id ], textures );\n\n\t}\n\n};\n\n// --- Top-level ---\n\n// Parser - builds up the property tree from the path strings\n\nvar RePathPart = /([\\w\\d_]+)(\\])?(\\[|\\.)?/g;\n\n// extracts\n// \t- the identifier (member name or array index)\n//  - followed by an optional right bracket (found when array index)\n//  - followed by an optional left bracket or dot (type of subscript)\n//\n// Note: These portions can be read in a non-overlapping fashion and\n// allow straightforward parsing of the hierarchy that WebGL encodes\n// in the uniform names.\n\nfunction addUniform( container, uniformObject ) {\n\n\tcontainer.seq.push( uniformObject );\n\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n}\n\nfunction parseUniform( activeInfo, addr, container ) {\n\n\tvar path = activeInfo.name,\n\t\tpathLength = path.length;\n\n\t// reset RegExp object, because of the early exit of a previous run\n\tRePathPart.lastIndex = 0;\n\n\twhile ( true ) {\n\n\t\tvar match = RePathPart.exec( path ),\n\t\t\tmatchEnd = RePathPart.lastIndex,\n\n\t\t\tid = match[ 1 ],\n\t\t\tidIsIndex = match[ 2 ] === ']',\n\t\t\tsubscript = match[ 3 ];\n\n\t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\n\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\n\n\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\tbreak;\n\n\t\t} else {\n\n\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\tvar map = container.map, next = map[ id ];\n\n\t\t\tif ( next === undefined ) {\n\n\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\taddUniform( container, next );\n\n\t\t\t}\n\n\t\t\tcontainer = next;\n\n\t\t}\n\n\t}\n\n}\n\n// Root Container\n\nfunction WebGLUniforms( gl, program ) {\n\n\tthis.seq = [];\n\tthis.map = {};\n\n\tvar n = gl.getProgramParameter( program, 35718 );\n\n\tfor ( var i = 0; i < n; ++ i ) {\n\n\t\tvar info = gl.getActiveUniform( program, i ),\n\t\t\taddr = gl.getUniformLocation( program, info.name );\n\n\t\tparseUniform( info, addr, this );\n\n\t}\n\n}\n\nWebGLUniforms.prototype.setValue = function ( gl, name, value, textures ) {\n\n\tvar u = this.map[ name ];\n\n\tif ( u !== undefined ) u.setValue( gl, value, textures );\n\n};\n\nWebGLUniforms.prototype.setOptional = function ( gl, object, name ) {\n\n\tvar v = object[ name ];\n\n\tif ( v !== undefined ) this.setValue( gl, name, v );\n\n};\n\n\n// Static interface\n\nWebGLUniforms.upload = function ( gl, seq, values, textures ) {\n\n\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tvar u = seq[ i ],\n\t\t\tv = values[ u.id ];\n\n\t\tif ( v.needsUpdate !== false ) {\n\n\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\tu.setValue( gl, v.value, textures );\n\n\t\t}\n\n\t}\n\n};\n\nWebGLUniforms.seqWithValue = function ( seq, values ) {\n\n\tvar r = [];\n\n\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tvar u = seq[ i ];\n\t\tif ( u.id in values ) r.push( u );\n\n\t}\n\n\treturn r;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction addLineNumbers( string ) {\n\n\tvar lines = string.split( '\\n' );\n\n\tfor ( var i = 0; i < lines.length; i ++ ) {\n\n\t\tlines[ i ] = ( i + 1 ) + ': ' + lines[ i ];\n\n\t}\n\n\treturn lines.join( '\\n' );\n\n}\n\nfunction WebGLShader( gl, type, string, debug ) {\n\n\tvar shader = gl.createShader( type );\n\n\tgl.shaderSource( shader, string );\n\tgl.compileShader( shader );\n\n\tif ( debug === true ) {\n\n\t\tif ( gl.getShaderParameter( shader, 35713 ) === false ) {\n\n\t\t\tconsole.error( 'THREE.WebGLShader: Shader couldn\\'t compile.' );\n\n\t\t}\n\n\t\tif ( gl.getShaderInfoLog( shader ) !== '' ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLShader: gl.getShaderInfoLog()', type === 35633 ? 'vertex' : 'fragment', gl.getShaderInfoLog( shader ), addLineNumbers( string ) );\n\n\t\t}\n\n\t}\n\n\t// --enable-privileged-webgl-extension\n\t// console.log( type, gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\treturn shader;\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar programIdCount = 0;\n\nfunction getEncodingComponents( encoding ) {\n\n\tswitch ( encoding ) {\n\n\t\tcase LinearEncoding:\n\t\t\treturn [ 'Linear', '( value )' ];\n\t\tcase sRGBEncoding:\n\t\t\treturn [ 'sRGB', '( value )' ];\n\t\tcase RGBEEncoding:\n\t\t\treturn [ 'RGBE', '( value )' ];\n\t\tcase RGBM7Encoding:\n\t\t\treturn [ 'RGBM', '( value, 7.0 )' ];\n\t\tcase RGBM16Encoding:\n\t\t\treturn [ 'RGBM', '( value, 16.0 )' ];\n\t\tcase RGBDEncoding:\n\t\t\treturn [ 'RGBD', '( value, 256.0 )' ];\n\t\tcase GammaEncoding:\n\t\t\treturn [ 'Gamma', '( value, float( GAMMA_FACTOR ) )' ];\n\t\tdefault:\n\t\t\tthrow new Error( 'unsupported encoding: ' + encoding );\n\n\t}\n\n}\n\nfunction getTexelDecodingFunction( functionName, encoding ) {\n\n\tvar components = getEncodingComponents( encoding );\n\treturn 'vec4 ' + functionName + '( vec4 value ) { return ' + components[ 0 ] + 'ToLinear' + components[ 1 ] + '; }';\n\n}\n\nfunction getTexelEncodingFunction( functionName, encoding ) {\n\n\tvar components = getEncodingComponents( encoding );\n\treturn 'vec4 ' + functionName + '( vec4 value ) { return LinearTo' + components[ 0 ] + components[ 1 ] + '; }';\n\n}\n\nfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\tvar toneMappingName;\n\n\tswitch ( toneMapping ) {\n\n\t\tcase LinearToneMapping:\n\t\t\ttoneMappingName = 'Linear';\n\t\t\tbreak;\n\n\t\tcase ReinhardToneMapping:\n\t\t\ttoneMappingName = 'Reinhard';\n\t\t\tbreak;\n\n\t\tcase Uncharted2ToneMapping:\n\t\t\ttoneMappingName = 'Uncharted2';\n\t\t\tbreak;\n\n\t\tcase CineonToneMapping:\n\t\t\ttoneMappingName = 'OptimizedCineon';\n\t\t\tbreak;\n\n\t\tcase ACESFilmicToneMapping:\n\t\t\ttoneMappingName = 'ACESFilmic';\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tthrow new Error( 'unsupported toneMapping: ' + toneMapping );\n\n\t}\n\n\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n\n}\n\nfunction generateExtensions( extensions, parameters, rendererExtensions ) {\n\n\textensions = extensions || {};\n\n\tvar chunks = [\n\t\t( extensions.derivatives || parameters.envMapCubeUV || parameters.bumpMap || ( parameters.normalMap && ! parameters.objectSpaceNormalMap ) || parameters.flatShading ) ? '#extension GL_OES_standard_derivatives : enable' : '',\n\t\t( extensions.fragDepth || parameters.logarithmicDepthBuffer ) && rendererExtensions.get( 'EXT_frag_depth' ) ? '#extension GL_EXT_frag_depth : enable' : '',\n\t\t( extensions.drawBuffers ) && rendererExtensions.get( 'WEBGL_draw_buffers' ) ? '#extension GL_EXT_draw_buffers : require' : '',\n\t\t( extensions.shaderTextureLOD || parameters.envMap ) && rendererExtensions.get( 'EXT_shader_texture_lod' ) ? '#extension GL_EXT_shader_texture_lod : enable' : ''\n\t];\n\n\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n}\n\nfunction generateDefines( defines ) {\n\n\tvar chunks = [];\n\n\tfor ( var name in defines ) {\n\n\t\tvar value = defines[ name ];\n\n\t\tif ( value === false ) continue;\n\n\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t}\n\n\treturn chunks.join( '\\n' );\n\n}\n\nfunction fetchAttributeLocations( gl, program ) {\n\n\tvar attributes = {};\n\n\tvar n = gl.getProgramParameter( program, 35721 );\n\n\tfor ( var i = 0; i < n; i ++ ) {\n\n\t\tvar info = gl.getActiveAttrib( program, i );\n\t\tvar name = info.name;\n\n\t\t// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n\t\tattributes[ name ] = gl.getAttribLocation( program, name );\n\n\t}\n\n\treturn attributes;\n\n}\n\nfunction filterEmptyLine( string ) {\n\n\treturn string !== '';\n\n}\n\nfunction replaceLightNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights );\n\n}\n\nfunction replaceClippingPlaneNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\n\t\t.replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\n\n}\n\nfunction parseIncludes( string ) {\n\n\tvar pattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\n\tfunction replace( match, include ) {\n\n\t\tvar replace = ShaderChunk[ include ];\n\n\t\tif ( replace === undefined ) {\n\n\t\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t\t}\n\n\t\treturn parseIncludes( replace );\n\n\t}\n\n\treturn string.replace( pattern, replace );\n\n}\n\nfunction unrollLoops( string ) {\n\n\tvar pattern = /#pragma unroll_loop[\\s]+?for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\n\n\tfunction replace( match, start, end, snippet ) {\n\n\t\tvar unroll = '';\n\n\t\tfor ( var i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\t\tunroll += snippet.replace( /\\[ i \\]/g, '[ ' + i + ' ]' );\n\n\t\t}\n\n\t\treturn unroll;\n\n\t}\n\n\treturn string.replace( pattern, replace );\n\n}\n\nfunction WebGLProgram( renderer, extensions, code, material, shader, parameters, capabilities, textures ) {\n\n\tvar gl = renderer.context;\n\n\tvar defines = material.defines;\n\n\tvar vertexShader = shader.vertexShader;\n\tvar fragmentShader = shader.fragmentShader;\n\n\tvar shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t}\n\n\tvar envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\tvar envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\tvar envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( material.envMap.mapping ) {\n\n\t\t\tcase CubeReflectionMapping:\n\t\t\tcase CubeRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\tbreak;\n\n\t\t\tcase CubeUVReflectionMapping:\n\t\t\tcase CubeUVRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\tbreak;\n\n\t\t\tcase EquirectangularReflectionMapping:\n\t\t\tcase EquirectangularRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_EQUIREC';\n\t\t\t\tbreak;\n\n\t\t\tcase SphericalReflectionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_SPHERE';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tswitch ( material.envMap.mapping ) {\n\n\t\t\tcase CubeRefractionMapping:\n\t\t\tcase EquirectangularRefractionMapping:\n\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tswitch ( material.combine ) {\n\n\t\t\tcase MultiplyOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\tbreak;\n\n\t\t\tcase MixOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\tbreak;\n\n\t\t\tcase AddOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tvar gammaFactorDefine = ( renderer.gammaFactor > 0 ) ? renderer.gammaFactor : 1.0;\n\n\t// console.log( 'building new program ' );\n\n\t//\n\n\tvar customExtensions = capabilities.isWebGL2 ? '' : generateExtensions( material.extensions, parameters, extensions );\n\n\tvar customDefines = generateDefines( defines );\n\n\t//\n\n\tvar program = gl.createProgram();\n\n\tvar prefixVertex, prefixFragment;\n\n\tif ( material.isRawShaderMaterial ) {\n\n\t\tprefixVertex = [\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixVertex.length > 0 ) {\n\n\t\t\tprefixVertex += '\\n';\n\n\t\t}\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixFragment.length > 0 ) {\n\n\t\t\tprefixFragment += '\\n';\n\n\t\t}\n\n\t} else {\n\n\t\tprefixVertex = [\n\n\t\t\t'precision ' + parameters.precision + ' float;',\n\t\t\t'precision ' + parameters.precision + ' int;',\n\n\t\t\t'#define SHADER_NAME ' + shader.name,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\n\n\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t'#define MAX_BONES ' + parameters.maxBones,\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\n\t\t\tparameters.vertexTangents ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\t\t\tparameters.useVertexTexture ? '#define BONE_TEXTURE' : '',\n\n\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\tparameters.logarithmicDepthBuffer && ( capabilities.isWebGL2 || extensions.get( 'EXT_frag_depth' ) ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\n\t\t\t'attribute vec3 position;',\n\t\t\t'attribute vec3 normal;',\n\t\t\t'attribute vec2 uv;',\n\n\t\t\t'#ifdef USE_TANGENT',\n\n\t\t\t'\tattribute vec4 tangent;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_COLOR',\n\n\t\t\t'\tattribute vec3 color;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_MORPHTARGETS',\n\n\t\t\t'\tattribute vec3 morphTarget0;',\n\t\t\t'\tattribute vec3 morphTarget1;',\n\t\t\t'\tattribute vec3 morphTarget2;',\n\t\t\t'\tattribute vec3 morphTarget3;',\n\n\t\t\t'\t#ifdef USE_MORPHNORMALS',\n\n\t\t\t'\t\tattribute vec3 morphNormal0;',\n\t\t\t'\t\tattribute vec3 morphNormal1;',\n\t\t\t'\t\tattribute vec3 morphNormal2;',\n\t\t\t'\t\tattribute vec3 morphNormal3;',\n\n\t\t\t'\t#else',\n\n\t\t\t'\t\tattribute vec3 morphTarget4;',\n\t\t\t'\t\tattribute vec3 morphTarget5;',\n\t\t\t'\t\tattribute vec3 morphTarget6;',\n\t\t\t'\t\tattribute vec3 morphTarget7;',\n\n\t\t\t'\t#endif',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t'#endif',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\n\t\t\t'precision ' + parameters.precision + ' float;',\n\t\t\t'precision ' + parameters.precision + ' int;',\n\n\t\t\t'#define SHADER_NAME ' + shader.name,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest + ( parameters.alphaTest % 1 ? '' : '.0' ) : '', // add '.0' if integer\n\n\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.matcap ? '#define USE_MATCAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\n\t\t\tparameters.vertexTangents ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\n\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\n\n\t\t\tparameters.physicallyCorrectLights ? '#define PHYSICALLY_CORRECT_LIGHTS' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\tparameters.logarithmicDepthBuffer && ( capabilities.isWebGL2 || extensions.get( 'EXT_frag_depth' ) ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\tparameters.envMap && ( capabilities.isWebGL2 || extensions.get( 'EXT_shader_texture_lod' ) ) ? '#define TEXTURE_LOD_EXT' : '',\n\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\n\n\t\t\tparameters.dithering ? '#define DITHERING' : '',\n\n\t\t\t( parameters.outputEncoding || parameters.mapEncoding || parameters.matcapEncoding || parameters.envMapEncoding || parameters.emissiveMapEncoding ) ?\n\t\t\t\tShaderChunk[ 'encodings_pars_fragment' ] : '', // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\tparameters.mapEncoding ? getTexelDecodingFunction( 'mapTexelToLinear', parameters.mapEncoding ) : '',\n\t\t\tparameters.matcapEncoding ? getTexelDecodingFunction( 'matcapTexelToLinear', parameters.matcapEncoding ) : '',\n\t\t\tparameters.envMapEncoding ? getTexelDecodingFunction( 'envMapTexelToLinear', parameters.envMapEncoding ) : '',\n\t\t\tparameters.emissiveMapEncoding ? getTexelDecodingFunction( 'emissiveMapTexelToLinear', parameters.emissiveMapEncoding ) : '',\n\t\t\tparameters.outputEncoding ? getTexelEncodingFunction( 'linearToOutputTexel', parameters.outputEncoding ) : '',\n\n\t\t\tparameters.depthPacking ? '#define DEPTH_PACKING ' + material.depthPacking : '',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tvertexShader = parseIncludes( vertexShader );\n\tvertexShader = replaceLightNums( vertexShader, parameters );\n\tvertexShader = replaceClippingPlaneNums( vertexShader, parameters );\n\n\tfragmentShader = parseIncludes( fragmentShader );\n\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\tfragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\n\n\tvertexShader = unrollLoops( vertexShader );\n\tfragmentShader = unrollLoops( fragmentShader );\n\n\tif ( capabilities.isWebGL2 && ! material.isRawShaderMaterial ) {\n\n\t\tvar isGLSL3ShaderMaterial = false;\n\n\t\tvar versionRegex = /^\\s*#version\\s+300\\s+es\\s*\\n/;\n\n\t\tif ( material.isShaderMaterial &&\n\t\t\tvertexShader.match( versionRegex ) !== null &&\n\t\t\tfragmentShader.match( versionRegex ) !== null ) {\n\n\t\t\tisGLSL3ShaderMaterial = true;\n\n\t\t\tvertexShader = vertexShader.replace( versionRegex, '' );\n\t\t\tfragmentShader = fragmentShader.replace( versionRegex, '' );\n\n\t\t}\n\n\t\t// GLSL 3.0 conversion\n\t\tprefixVertex = [\n\t\t\t'#version 300 es\\n',\n\t\t\t'#define attribute in',\n\t\t\t'#define varying out',\n\t\t\t'#define texture2D texture'\n\t\t].join( '\\n' ) + '\\n' + prefixVertex;\n\n\t\tprefixFragment = [\n\t\t\t'#version 300 es\\n',\n\t\t\t'#define varying in',\n\t\t\tisGLSL3ShaderMaterial ? '' : 'out highp vec4 pc_fragColor;',\n\t\t\tisGLSL3ShaderMaterial ? '' : '#define gl_FragColor pc_fragColor',\n\t\t\t'#define gl_FragDepthEXT gl_FragDepth',\n\t\t\t'#define texture2D texture',\n\t\t\t'#define textureCube texture',\n\t\t\t'#define texture2DProj textureProj',\n\t\t\t'#define texture2DLodEXT textureLod',\n\t\t\t'#define texture2DProjLodEXT textureProjLod',\n\t\t\t'#define textureCubeLodEXT textureLod',\n\t\t\t'#define texture2DGradEXT textureGrad',\n\t\t\t'#define texture2DProjGradEXT textureProjGrad',\n\t\t\t'#define textureCubeGradEXT textureGrad'\n\t\t].join( '\\n' ) + '\\n' + prefixFragment;\n\n\t}\n\n\tvar vertexGlsl = prefixVertex + vertexShader;\n\tvar fragmentGlsl = prefixFragment + fragmentShader;\n\n\t// console.log( '*VERTEX*', vertexGlsl );\n\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\tvar glVertexShader = WebGLShader( gl, 35633, vertexGlsl, renderer.debug.checkShaderErrors );\n\tvar glFragmentShader = WebGLShader( gl, 35632, fragmentGlsl, renderer.debug.checkShaderErrors );\n\n\tgl.attachShader( program, glVertexShader );\n\tgl.attachShader( program, glFragmentShader );\n\n\t// Force a particular attribute to index 0.\n\n\tif ( material.index0AttributeName !== undefined ) {\n\n\t\tgl.bindAttribLocation( program, 0, material.index0AttributeName );\n\n\t} else if ( parameters.morphTargets === true ) {\n\n\t\t// programs with morphTargets displace position out of attribute 0\n\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t}\n\n\tgl.linkProgram( program );\n\n\t// check for link errors\n\tif ( renderer.debug.checkShaderErrors ) {\n\n\t\tvar programLog = gl.getProgramInfoLog( program ).trim();\n\t\tvar vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();\n\t\tvar fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();\n\n\t\tvar runnable = true;\n\t\tvar haveDiagnostics = true;\n\n\t\t// console.log( '**VERTEX**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glVertexShader ) );\n\t\t// console.log( '**FRAGMENT**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glFragmentShader ) );\n\n\t\tif ( gl.getProgramParameter( program, 35714 ) === false ) {\n\n\t\t\trunnable = false;\n\n\t\t\tconsole.error( 'THREE.WebGLProgram: shader error: ', gl.getError(), '35715', gl.getProgramParameter( program, 35715 ), 'gl.getProgramInfoLog', programLog, vertexLog, fragmentLog );\n\n\t\t} else if ( programLog !== '' ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLProgram: gl.getProgramInfoLog()', programLog );\n\n\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\t\thaveDiagnostics = false;\n\n\t\t}\n\n\t\tif ( haveDiagnostics ) {\n\n\t\t\tthis.diagnostics = {\n\n\t\t\t\trunnable: runnable,\n\t\t\t\tmaterial: material,\n\n\t\t\t\tprogramLog: programLog,\n\n\t\t\t\tvertexShader: {\n\n\t\t\t\t\tlog: vertexLog,\n\t\t\t\t\tprefix: prefixVertex\n\n\t\t\t\t},\n\n\t\t\t\tfragmentShader: {\n\n\t\t\t\t\tlog: fragmentLog,\n\t\t\t\t\tprefix: prefixFragment\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t}\n\n\t// clean up\n\n\tgl.deleteShader( glVertexShader );\n\tgl.deleteShader( glFragmentShader );\n\n\t// set up caching for uniform locations\n\n\tvar cachedUniforms;\n\n\tthis.getUniforms = function () {\n\n\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\tcachedUniforms = new WebGLUniforms( gl, program, textures );\n\n\t\t}\n\n\t\treturn cachedUniforms;\n\n\t};\n\n\t// set up caching for attribute locations\n\n\tvar cachedAttributes;\n\n\tthis.getAttributes = function () {\n\n\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t\t}\n\n\t\treturn cachedAttributes;\n\n\t};\n\n\t// free resource\n\n\tthis.destroy = function () {\n\n\t\tgl.deleteProgram( program );\n\t\tthis.program = undefined;\n\n\t};\n\n\t// DEPRECATED\n\n\tObject.defineProperties( this, {\n\n\t\tuniforms: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .uniforms is now .getUniforms().' );\n\t\t\t\treturn this.getUniforms();\n\n\t\t\t}\n\t\t},\n\n\t\tattributes: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .attributes is now .getAttributes().' );\n\t\t\t\treturn this.getAttributes();\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\n\t//\n\n\tthis.name = shader.name;\n\tthis.id = programIdCount ++;\n\tthis.code = code;\n\tthis.usedTimes = 1;\n\tthis.program = program;\n\tthis.vertexShader = glVertexShader;\n\tthis.fragmentShader = glFragmentShader;\n\n\treturn this;\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLPrograms( renderer, extensions, capabilities, textures ) {\n\n\tvar programs = [];\n\n\tvar shaderIDs = {\n\t\tMeshDepthMaterial: 'depth',\n\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\tMeshNormalMaterial: 'normal',\n\t\tMeshBasicMaterial: 'basic',\n\t\tMeshLambertMaterial: 'lambert',\n\t\tMeshPhongMaterial: 'phong',\n\t\tMeshToonMaterial: 'phong',\n\t\tMeshStandardMaterial: 'physical',\n\t\tMeshPhysicalMaterial: 'physical',\n\t\tMeshMatcapMaterial: 'matcap',\n\t\tLineBasicMaterial: 'basic',\n\t\tLineDashedMaterial: 'dashed',\n\t\tPointsMaterial: 'points',\n\t\tShadowMaterial: 'shadow',\n\t\tSpriteMaterial: 'sprite'\n\t};\n\n\tvar parameterNames = [\n\t\t\"precision\", \"supportsVertexTextures\", \"map\", \"mapEncoding\", \"matcap\", \"matcapEncoding\", \"envMap\", \"envMapMode\", \"envMapEncoding\",\n\t\t\"lightMap\", \"aoMap\", \"emissiveMap\", \"emissiveMapEncoding\", \"bumpMap\", \"normalMap\", \"objectSpaceNormalMap\", \"displacementMap\", \"specularMap\",\n\t\t\"roughnessMap\", \"metalnessMap\", \"gradientMap\",\n\t\t\"alphaMap\", \"combine\", \"vertexColors\", \"vertexTangents\", \"fog\", \"useFog\", \"fogExp\",\n\t\t\"flatShading\", \"sizeAttenuation\", \"logarithmicDepthBuffer\", \"skinning\",\n\t\t\"maxBones\", \"useVertexTexture\", \"morphTargets\", \"morphNormals\",\n\t\t\"maxMorphTargets\", \"maxMorphNormals\", \"premultipliedAlpha\",\n\t\t\"numDirLights\", \"numPointLights\", \"numSpotLights\", \"numHemiLights\", \"numRectAreaLights\",\n\t\t\"shadowMapEnabled\", \"shadowMapType\", \"toneMapping\", 'physicallyCorrectLights',\n\t\t\"alphaTest\", \"doubleSided\", \"flipSided\", \"numClippingPlanes\", \"numClipIntersection\", \"depthPacking\", \"dithering\"\n\t];\n\n\n\tfunction allocateBones( object ) {\n\n\t\tvar skeleton = object.skeleton;\n\t\tvar bones = skeleton.bones;\n\n\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\treturn 1024;\n\n\t\t} else {\n\n\t\t\t// default for when object is not specified\n\t\t\t// ( for example when prebuilding shader to be used with multiple objects )\n\t\t\t//\n\t\t\t//  - leave some extra space for other uniforms\n\t\t\t//  - limit here is ANGLE's 254 max uniform vectors\n\t\t\t//    (up to 54 should be safe)\n\n\t\t\tvar nVertexUniforms = capabilities.maxVertexUniforms;\n\t\t\tvar nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );\n\n\t\t\tvar maxBones = Math.min( nVertexMatrices, bones.length );\n\n\t\t\tif ( maxBones < bones.length ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Skeleton has ' + bones.length + ' bones. This GPU supports ' + maxBones + '.' );\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\treturn maxBones;\n\n\t\t}\n\n\t}\n\n\tfunction getTextureEncodingFromMap( map, gammaOverrideLinear ) {\n\n\t\tvar encoding;\n\n\t\tif ( ! map ) {\n\n\t\t\tencoding = LinearEncoding;\n\n\t\t} else if ( map.isTexture ) {\n\n\t\t\tencoding = map.encoding;\n\n\t\t} else if ( map.isWebGLRenderTarget ) {\n\n\t\t\tconsole.warn( \"THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead.\" );\n\t\t\tencoding = map.texture.encoding;\n\n\t\t}\n\n\t\t// add backwards compatibility for WebGLRenderer.gammaInput/gammaOutput parameter, should probably be removed at some point.\n\t\tif ( encoding === LinearEncoding && gammaOverrideLinear ) {\n\n\t\t\tencoding = GammaEncoding;\n\n\t\t}\n\n\t\treturn encoding;\n\n\t}\n\n\tthis.getParameters = function ( material, lights, shadows, fog, nClipPlanes, nClipIntersection, object ) {\n\n\t\tvar shaderID = shaderIDs[ material.type ];\n\n\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t// (not to blow over maxLights budget)\n\n\t\tvar maxBones = object.isSkinnedMesh ? allocateBones( object ) : 0;\n\t\tvar precision = capabilities.precision;\n\n\t\tif ( material.precision !== null ) {\n\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar currentRenderTarget = renderer.getRenderTarget();\n\n\t\tvar parameters = {\n\n\t\t\tshaderID: shaderID,\n\n\t\t\tprecision: precision,\n\t\t\tsupportsVertexTextures: capabilities.vertexTextures,\n\t\t\toutputEncoding: getTextureEncodingFromMap( ( ! currentRenderTarget ) ? null : currentRenderTarget.texture, renderer.gammaOutput ),\n\t\t\tmap: !! material.map,\n\t\t\tmapEncoding: getTextureEncodingFromMap( material.map, renderer.gammaInput ),\n\t\t\tmatcap: !! material.matcap,\n\t\t\tmatcapEncoding: getTextureEncodingFromMap( material.matcap, renderer.gammaInput ),\n\t\t\tenvMap: !! material.envMap,\n\t\t\tenvMapMode: material.envMap && material.envMap.mapping,\n\t\t\tenvMapEncoding: getTextureEncodingFromMap( material.envMap, renderer.gammaInput ),\n\t\t\tenvMapCubeUV: ( !! material.envMap ) && ( ( material.envMap.mapping === CubeUVReflectionMapping ) || ( material.envMap.mapping === CubeUVRefractionMapping ) ),\n\t\t\tlightMap: !! material.lightMap,\n\t\t\taoMap: !! material.aoMap,\n\t\t\temissiveMap: !! material.emissiveMap,\n\t\t\temissiveMapEncoding: getTextureEncodingFromMap( material.emissiveMap, renderer.gammaInput ),\n\t\t\tbumpMap: !! material.bumpMap,\n\t\t\tnormalMap: !! material.normalMap,\n\t\t\tobjectSpaceNormalMap: material.normalMapType === ObjectSpaceNormalMap,\n\t\t\tdisplacementMap: !! material.displacementMap,\n\t\t\troughnessMap: !! material.roughnessMap,\n\t\t\tmetalnessMap: !! material.metalnessMap,\n\t\t\tspecularMap: !! material.specularMap,\n\t\t\talphaMap: !! material.alphaMap,\n\n\t\t\tgradientMap: !! material.gradientMap,\n\n\t\t\tcombine: material.combine,\n\n\t\t\tvertexTangents: ( material.normalMap && material.vertexTangents ),\n\t\t\tvertexColors: material.vertexColors,\n\n\t\t\tfog: !! fog,\n\t\t\tuseFog: material.fog,\n\t\t\tfogExp: ( fog && fog.isFogExp2 ),\n\n\t\t\tflatShading: material.flatShading,\n\n\t\t\tsizeAttenuation: material.sizeAttenuation,\n\t\t\tlogarithmicDepthBuffer: capabilities.logarithmicDepthBuffer,\n\n\t\t\tskinning: material.skinning && maxBones > 0,\n\t\t\tmaxBones: maxBones,\n\t\t\tuseVertexTexture: capabilities.floatVertexTextures,\n\n\t\t\tmorphTargets: material.morphTargets,\n\t\t\tmorphNormals: material.morphNormals,\n\t\t\tmaxMorphTargets: renderer.maxMorphTargets,\n\t\t\tmaxMorphNormals: renderer.maxMorphNormals,\n\n\t\t\tnumDirLights: lights.directional.length,\n\t\t\tnumPointLights: lights.point.length,\n\t\t\tnumSpotLights: lights.spot.length,\n\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\tnumClippingPlanes: nClipPlanes,\n\t\t\tnumClipIntersection: nClipIntersection,\n\n\t\t\tdithering: material.dithering,\n\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && object.receiveShadow && shadows.length > 0,\n\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\ttoneMapping: renderer.toneMapping,\n\t\t\tphysicallyCorrectLights: renderer.physicallyCorrectLights,\n\n\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\talphaTest: material.alphaTest,\n\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\tflipSided: material.side === BackSide,\n\n\t\t\tdepthPacking: ( material.depthPacking !== undefined ) ? material.depthPacking : false\n\n\t\t};\n\n\t\treturn parameters;\n\n\t};\n\n\tthis.getProgramCode = function ( material, parameters ) {\n\n\t\tvar array = [];\n\n\t\tif ( parameters.shaderID ) {\n\n\t\t\tarray.push( parameters.shaderID );\n\n\t\t} else {\n\n\t\t\tarray.push( material.fragmentShader );\n\t\t\tarray.push( material.vertexShader );\n\n\t\t}\n\n\t\tif ( material.defines !== undefined ) {\n\n\t\t\tfor ( var name in material.defines ) {\n\n\t\t\t\tarray.push( name );\n\t\t\t\tarray.push( material.defines[ name ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( var i = 0; i < parameterNames.length; i ++ ) {\n\n\t\t\tarray.push( parameters[ parameterNames[ i ] ] );\n\n\t\t}\n\n\t\tarray.push( material.onBeforeCompile.toString() );\n\n\t\tarray.push( renderer.gammaOutput );\n\n\t\tarray.push( renderer.gammaFactor );\n\n\t\treturn array.join();\n\n\t};\n\n\tthis.acquireProgram = function ( material, shader, parameters, code ) {\n\n\t\tvar program;\n\n\t\t// Check if code has been already compiled\n\t\tfor ( var p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\tvar programInfo = programs[ p ];\n\n\t\t\tif ( programInfo.code === code ) {\n\n\t\t\t\tprogram = programInfo;\n\t\t\t\t++ program.usedTimes;\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( program === undefined ) {\n\n\t\t\tprogram = new WebGLProgram( renderer, extensions, code, material, shader, parameters, capabilities, textures );\n\t\t\tprograms.push( program );\n\n\t\t}\n\n\t\treturn program;\n\n\t};\n\n\tthis.releaseProgram = function ( program ) {\n\n\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t// Remove from unordered set\n\t\t\tvar i = programs.indexOf( program );\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\tprograms.pop();\n\n\t\t\t// Free WebGL resources\n\t\t\tprogram.destroy();\n\n\t\t}\n\n\t};\n\n\t// Exposed for resource monitoring & error feedback via renderer.info:\n\tthis.programs = programs;\n\n}\n\n/**\n * @author fordacious / fordacious.github.io\n */\n\nfunction WebGLProperties() {\n\n\tvar properties = new WeakMap();\n\n\tfunction get( object ) {\n\n\t\tvar map = properties.get( object );\n\n\t\tif ( map === undefined ) {\n\n\t\t\tmap = {};\n\t\t\tproperties.set( object, map );\n\n\t\t}\n\n\t\treturn map;\n\n\t}\n\n\tfunction remove( object ) {\n\n\t\tproperties.delete( object );\n\n\t}\n\n\tfunction update( object, key, value ) {\n\n\t\tproperties.get( object )[ key ] = value;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tproperties = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update,\n\t\tdispose: dispose\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction painterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.program !== b.program ) {\n\n\t\treturn a.program.id - b.program.id;\n\n\t} else if ( a.material.id !== b.material.id ) {\n\n\t\treturn a.material.id - b.material.id;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn a.z - b.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\nfunction reversePainterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn b.z - a.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\n\nfunction WebGLRenderList() {\n\n\tvar renderItems = [];\n\tvar renderItemsIndex = 0;\n\n\tvar opaque = [];\n\tvar transparent = [];\n\n\tvar defaultProgram = { id: - 1 };\n\n\tfunction init() {\n\n\t\trenderItemsIndex = 0;\n\n\t\topaque.length = 0;\n\t\ttransparent.length = 0;\n\n\t}\n\n\tfunction getNextRenderItem( object, geometry, material, groupOrder, z, group ) {\n\n\t\tvar renderItem = renderItems[ renderItemsIndex ];\n\n\t\tif ( renderItem === undefined ) {\n\n\t\t\trenderItem = {\n\t\t\t\tid: object.id,\n\t\t\t\tobject: object,\n\t\t\t\tgeometry: geometry,\n\t\t\t\tmaterial: material,\n\t\t\t\tprogram: material.program || defaultProgram,\n\t\t\t\tgroupOrder: groupOrder,\n\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\tz: z,\n\t\t\t\tgroup: group\n\t\t\t};\n\n\t\t\trenderItems[ renderItemsIndex ] = renderItem;\n\n\t\t} else {\n\n\t\t\trenderItem.id = object.id;\n\t\t\trenderItem.object = object;\n\t\t\trenderItem.geometry = geometry;\n\t\t\trenderItem.material = material;\n\t\t\trenderItem.program = material.program || defaultProgram;\n\t\t\trenderItem.groupOrder = groupOrder;\n\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\trenderItem.z = z;\n\t\t\trenderItem.group = group;\n\n\t\t}\n\n\t\trenderItemsIndex ++;\n\n\t\treturn renderItem;\n\n\t}\n\n\tfunction push( object, geometry, material, groupOrder, z, group ) {\n\n\t\tvar renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\t( material.transparent === true ? transparent : opaque ).push( renderItem );\n\n\t}\n\n\tfunction unshift( object, geometry, material, groupOrder, z, group ) {\n\n\t\tvar renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\t( material.transparent === true ? transparent : opaque ).unshift( renderItem );\n\n\t}\n\n\tfunction sort() {\n\n\t\tif ( opaque.length > 1 ) opaque.sort( painterSortStable );\n\t\tif ( transparent.length > 1 ) transparent.sort( reversePainterSortStable );\n\n\t}\n\n\treturn {\n\t\topaque: opaque,\n\t\ttransparent: transparent,\n\n\t\tinit: init,\n\t\tpush: push,\n\t\tunshift: unshift,\n\n\t\tsort: sort\n\t};\n\n}\n\nfunction WebGLRenderLists() {\n\n\tvar lists = {};\n\n\tfunction onSceneDispose( event ) {\n\n\t\tvar scene = event.target;\n\n\t\tscene.removeEventListener( 'dispose', onSceneDispose );\n\n\t\tdelete lists[ scene.id ];\n\n\t}\n\n\tfunction get( scene, camera ) {\n\n\t\tvar cameras = lists[ scene.id ];\n\t\tvar list;\n\t\tif ( cameras === undefined ) {\n\n\t\t\tlist = new WebGLRenderList();\n\t\t\tlists[ scene.id ] = {};\n\t\t\tlists[ scene.id ][ camera.id ] = list;\n\n\t\t\tscene.addEventListener( 'dispose', onSceneDispose );\n\n\t\t} else {\n\n\t\t\tlist = cameras[ camera.id ];\n\t\t\tif ( list === undefined ) {\n\n\t\t\t\tlist = new WebGLRenderList();\n\t\t\t\tcameras[ camera.id ] = list;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn list;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tlists = {};\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction UniformsCache() {\n\n\tvar lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tvar uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\n\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\tdecay: 0,\n\n\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tdecay: 0,\n\n\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\nvar three_module_count = 0;\n\nfunction WebGLLights() {\n\n\tvar cache = new UniformsCache();\n\n\tvar state = {\n\n\t\tid: three_module_count ++,\n\n\t\thash: {\n\t\t\tstateID: - 1,\n\t\t\tdirectionalLength: - 1,\n\t\t\tpointLength: - 1,\n\t\t\tspotLength: - 1,\n\t\t\trectAreaLength: - 1,\n\t\t\themiLength: - 1,\n\t\t\tshadowsLength: - 1\n\t\t},\n\n\t\tambient: [ 0, 0, 0 ],\n\t\tprobe: [],\n\t\tdirectional: [],\n\t\tdirectionalShadowMap: [],\n\t\tdirectionalShadowMatrix: [],\n\t\tspot: [],\n\t\tspotShadowMap: [],\n\t\tspotShadowMatrix: [],\n\t\trectArea: [],\n\t\tpoint: [],\n\t\tpointShadowMap: [],\n\t\tpointShadowMatrix: [],\n\t\themi: []\n\n\t};\n\n\tfor ( var i = 0; i < 9; i ++ ) state.probe.push( new Vector3() );\n\n\tvar vector3 = new Vector3();\n\tvar matrix4 = new Matrix4();\n\tvar matrix42 = new Matrix4();\n\n\tfunction setup( lights, shadows, camera ) {\n\n\t\tvar r = 0, g = 0, b = 0;\n\n\t\tfor ( var i = 0; i < 9; i ++ ) state.probe[ i ].set( 0, 0, 0 );\n\n\t\tvar directionalLength = 0;\n\t\tvar pointLength = 0;\n\t\tvar spotLength = 0;\n\t\tvar rectAreaLength = 0;\n\t\tvar hemiLength = 0;\n\n\t\tvar viewMatrix = camera.matrixWorldInverse;\n\n\t\tfor ( var i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tvar light = lights[ i ];\n\n\t\t\tvar color = light.color;\n\t\t\tvar intensity = light.intensity;\n\t\t\tvar distance = light.distance;\n\n\t\t\tvar shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\tr += color.r * intensity;\n\t\t\t\tg += color.g * intensity;\n\t\t\t\tb += color.b * intensity;\n\n\t\t\t} else if ( light.isLightProbe ) {\n\n\t\t\t\tfor ( var j = 0; j < 9; j ++ ) {\n\n\t\t\t\t\tstate.probe[ j ].addScaledVector( light.sh.coefficients[ j ], intensity );\n\n\t\t\t\t}\n\n\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\t\tuniforms.shadowBias = shadow.bias;\n\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t}\n\n\t\t\t\tstate.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\tstate.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\t\t\t\tstate.directional[ directionalLength ] = uniforms;\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\t\t\t\tuniforms.distance = distance;\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\t\tuniforms.shadowBias = shadow.bias;\n\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t}\n\n\t\t\t\tstate.spotShadowMap[ spotLength ] = shadowMap;\n\t\t\t\tstate.spotShadowMatrix[ spotLength ] = light.shadow.matrix;\n\t\t\t\tstate.spot[ spotLength ] = uniforms;\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\t// (a) intensity is the total visible light emitted\n\t\t\t\t//uniforms.color.copy( color ).multiplyScalar( intensity / ( light.width * light.height * Math.PI ) );\n\n\t\t\t\t// (b) intensity is the brightness of the light\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t// extract local rotation of light to derive width/height half vectors\n\t\t\t\tmatrix42.identity();\n\t\t\t\tmatrix4.copy( light.matrixWorld );\n\t\t\t\tmatrix4.premultiply( viewMatrix );\n\t\t\t\tmatrix42.extractRotation( matrix4 );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tuniforms.halfWidth.applyMatrix4( matrix42 );\n\t\t\t\tuniforms.halfHeight.applyMatrix4( matrix42 );\n\n\t\t\t\t// TODO (abelnation): RectAreaLight distance?\n\t\t\t\t// uniforms.distance = distance;\n\n\t\t\t\tstate.rectArea[ rectAreaLength ] = uniforms;\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\t\tuniforms.shadowBias = shadow.bias;\n\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\tuniforms.shadowCameraNear = shadow.camera.near;\n\t\t\t\t\tuniforms.shadowCameraFar = shadow.camera.far;\n\n\t\t\t\t}\n\n\t\t\t\tstate.pointShadowMap[ pointLength ] = shadowMap;\n\t\t\t\tstate.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\n\t\t\t\tstate.point[ pointLength ] = uniforms;\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\t\t\t\tuniforms.direction.normalize();\n\n\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity );\n\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity );\n\n\t\t\t\tstate.hemi[ hemiLength ] = uniforms;\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.ambient[ 0 ] = r;\n\t\tstate.ambient[ 1 ] = g;\n\t\tstate.ambient[ 2 ] = b;\n\n\t\tstate.directional.length = directionalLength;\n\t\tstate.spot.length = spotLength;\n\t\tstate.rectArea.length = rectAreaLength;\n\t\tstate.point.length = pointLength;\n\t\tstate.hemi.length = hemiLength;\n\n\t\tstate.hash.stateID = state.id;\n\t\tstate.hash.directionalLength = directionalLength;\n\t\tstate.hash.pointLength = pointLength;\n\t\tstate.hash.spotLength = spotLength;\n\t\tstate.hash.rectAreaLength = rectAreaLength;\n\t\tstate.hash.hemiLength = hemiLength;\n\t\tstate.hash.shadowsLength = shadows.length;\n\n\t}\n\n\treturn {\n\t\tsetup: setup,\n\t\tstate: state\n\t};\n\n}\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction WebGLRenderState() {\n\n\tvar lights = new WebGLLights();\n\n\tvar lightsArray = [];\n\tvar shadowsArray = [];\n\n\tfunction init() {\n\n\t\tlightsArray.length = 0;\n\t\tshadowsArray.length = 0;\n\n\t}\n\n\tfunction pushLight( light ) {\n\n\t\tlightsArray.push( light );\n\n\t}\n\n\tfunction pushShadow( shadowLight ) {\n\n\t\tshadowsArray.push( shadowLight );\n\n\t}\n\n\tfunction setupLights( camera ) {\n\n\t\tlights.setup( lightsArray, shadowsArray, camera );\n\n\t}\n\n\tvar state = {\n\t\tlightsArray: lightsArray,\n\t\tshadowsArray: shadowsArray,\n\n\t\tlights: lights\n\t};\n\n\treturn {\n\t\tinit: init,\n\t\tstate: state,\n\t\tsetupLights: setupLights,\n\n\t\tpushLight: pushLight,\n\t\tpushShadow: pushShadow\n\t};\n\n}\n\nfunction WebGLRenderStates() {\n\n\tvar renderStates = {};\n\n\tfunction onSceneDispose( event ) {\n\n\t\tvar scene = event.target;\n\n\t\tscene.removeEventListener( 'dispose', onSceneDispose );\n\n\t\tdelete renderStates[ scene.id ];\n\n\t}\n\n\tfunction get( scene, camera ) {\n\n\t\tvar renderState;\n\n\t\tif ( renderStates[ scene.id ] === undefined ) {\n\n\t\t\trenderState = new WebGLRenderState();\n\t\t\trenderStates[ scene.id ] = {};\n\t\t\trenderStates[ scene.id ][ camera.id ] = renderState;\n\n\t\t\tscene.addEventListener( 'dispose', onSceneDispose );\n\n\t\t} else {\n\n\t\t\tif ( renderStates[ scene.id ][ camera.id ] === undefined ) {\n\n\t\t\t\trenderState = new WebGLRenderState();\n\t\t\t\trenderStates[ scene.id ][ camera.id ] = renderState;\n\n\t\t\t} else {\n\n\t\t\t\trenderState = renderStates[ scene.id ][ camera.id ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn renderState;\n\n\t}\n\n\tfunction dispose() {\n\n\t\trenderStates = {};\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author bhouston / https://clara.io\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n * }\n */\n\nfunction MeshDepthMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshDepthMaterial';\n\n\tthis.depthPacking = BasicDepthPacking;\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\n\tthis.map = null;\n\n\tthis.alphaMap = null;\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\n\tthis.fog = false;\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshDepthMaterial.prototype = Object.create( Material.prototype );\nMeshDepthMaterial.prototype.constructor = MeshDepthMaterial;\n\nMeshDepthMaterial.prototype.isMeshDepthMaterial = true;\n\nMeshDepthMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.depthPacking = source.depthPacking;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\n\tthis.map = source.map;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\treturn this;\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *\n *  referencePosition: <float>,\n *  nearDistance: <float>,\n *  farDistance: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>\n *\n * }\n */\n\nfunction MeshDistanceMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshDistanceMaterial';\n\n\tthis.referencePosition = new Vector3();\n\tthis.nearDistance = 1;\n\tthis.farDistance = 1000;\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\n\tthis.map = null;\n\n\tthis.alphaMap = null;\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.fog = false;\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshDistanceMaterial.prototype = Object.create( Material.prototype );\nMeshDistanceMaterial.prototype.constructor = MeshDistanceMaterial;\n\nMeshDistanceMaterial.prototype.isMeshDistanceMaterial = true;\n\nMeshDistanceMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.referencePosition.copy( source.referencePosition );\n\tthis.nearDistance = source.nearDistance;\n\tthis.farDistance = source.farDistance;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\n\tthis.map = source.map;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\treturn this;\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLShadowMap( _renderer, _objects, maxTextureSize ) {\n\n\tvar _frustum = new Frustum(),\n\t\t_projScreenMatrix = new Matrix4(),\n\n\t\t_shadowMapSize = new Vector2(),\n\t\t_maxShadowMapSize = new Vector2( maxTextureSize, maxTextureSize ),\n\n\t\t_lookTarget = new Vector3(),\n\t\t_lightPositionWorld = new Vector3(),\n\n\t\t_MorphingFlag = 1,\n\t\t_SkinningFlag = 2,\n\n\t\t_NumberOfMaterialVariants = ( _MorphingFlag | _SkinningFlag ) + 1,\n\n\t\t_depthMaterials = new Array( _NumberOfMaterialVariants ),\n\t\t_distanceMaterials = new Array( _NumberOfMaterialVariants ),\n\n\t\t_materialCache = {};\n\n\tvar shadowSide = { 0: BackSide, 1: FrontSide, 2: DoubleSide };\n\n\tvar cubeDirections = [\n\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n\t];\n\n\tvar cubeUps = [\n\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n\t];\n\n\tvar cube2DViewPorts = [\n\t\tnew Vector4(), new Vector4(), new Vector4(),\n\t\tnew Vector4(), new Vector4(), new Vector4()\n\t];\n\n\t// init\n\n\tfor ( var i = 0; i !== _NumberOfMaterialVariants; ++ i ) {\n\n\t\tvar useMorphing = ( i & _MorphingFlag ) !== 0;\n\t\tvar useSkinning = ( i & _SkinningFlag ) !== 0;\n\n\t\tvar depthMaterial = new MeshDepthMaterial( {\n\n\t\t\tdepthPacking: RGBADepthPacking,\n\n\t\t\tmorphTargets: useMorphing,\n\t\t\tskinning: useSkinning\n\n\t\t} );\n\n\t\t_depthMaterials[ i ] = depthMaterial;\n\n\t\t//\n\n\t\tvar distanceMaterial = new MeshDistanceMaterial( {\n\n\t\t\tmorphTargets: useMorphing,\n\t\t\tskinning: useSkinning\n\n\t\t} );\n\n\t\t_distanceMaterials[ i ] = distanceMaterial;\n\n\t}\n\n\t//\n\n\tvar scope = this;\n\n\tthis.enabled = false;\n\n\tthis.autoUpdate = true;\n\tthis.needsUpdate = false;\n\n\tthis.type = PCFShadowMap;\n\n\tthis.render = function ( lights, scene, camera ) {\n\n\t\tif ( scope.enabled === false ) return;\n\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n\n\t\tif ( lights.length === 0 ) return;\n\n\t\tvar currentRenderTarget = _renderer.getRenderTarget();\n\t\tvar activeCubeFace = _renderer.getActiveCubeFace();\n\t\tvar activeMipMapLevel = _renderer.getActiveMipMapLevel();\n\n\t\tvar _state = _renderer.state;\n\n\t\t// Set GL state for depth map.\n\t\t_state.setBlending( NoBlending );\n\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\n\t\t_state.buffers.depth.setTest( true );\n\t\t_state.setScissorTest( false );\n\n\t\t// render depth map\n\n\t\tvar faceCount;\n\n\t\tfor ( var i = 0, il = lights.length; i < il; i ++ ) {\n\n\t\t\tvar light = lights[ i ];\n\t\t\tvar shadow = light.shadow;\n\t\t\tvar isPointLight = light && light.isPointLight;\n\n\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tvar shadowCamera = shadow.camera;\n\n\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\t\t\t_shadowMapSize.min( _maxShadowMapSize );\n\n\t\t\tif ( isPointLight ) {\n\n\t\t\t\tvar vpWidth = _shadowMapSize.x;\n\t\t\t\tvar vpHeight = _shadowMapSize.y;\n\n\t\t\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t\t\t// following orientation:\n\t\t\t\t//\n\t\t\t\t//  xzXZ\n\t\t\t\t//   y Y\n\t\t\t\t//\n\t\t\t\t// X - Positive x direction\n\t\t\t\t// x - Negative x direction\n\t\t\t\t// Y - Positive y direction\n\t\t\t\t// y - Negative y direction\n\t\t\t\t// Z - Positive z direction\n\t\t\t\t// z - Negative z direction\n\n\t\t\t\t// positive X\n\t\t\t\tcube2DViewPorts[ 0 ].set( vpWidth * 2, vpHeight, vpWidth, vpHeight );\n\t\t\t\t// negative X\n\t\t\t\tcube2DViewPorts[ 1 ].set( 0, vpHeight, vpWidth, vpHeight );\n\t\t\t\t// positive Z\n\t\t\t\tcube2DViewPorts[ 2 ].set( vpWidth * 3, vpHeight, vpWidth, vpHeight );\n\t\t\t\t// negative Z\n\t\t\t\tcube2DViewPorts[ 3 ].set( vpWidth, vpHeight, vpWidth, vpHeight );\n\t\t\t\t// positive Y\n\t\t\t\tcube2DViewPorts[ 4 ].set( vpWidth * 3, 0, vpWidth, vpHeight );\n\t\t\t\t// negative Y\n\t\t\t\tcube2DViewPorts[ 5 ].set( vpWidth, 0, vpWidth, vpHeight );\n\n\t\t\t\t_shadowMapSize.x *= 4.0;\n\t\t\t\t_shadowMapSize.y *= 2.0;\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null ) {\n\n\t\t\t\tvar pars = { minFilter: NearestFilter, magFilter: NearestFilter, format: RGBAFormat };\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\tshadow.map.texture.name = light.name + \".shadowMap\";\n\n\t\t\t\tshadowCamera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\tif ( shadow.isSpotLightShadow ) {\n\n\t\t\t\tshadow.update( light );\n\n\t\t\t}\n\n\t\t\tvar shadowMap = shadow.map;\n\t\t\tvar shadowMatrix = shadow.matrix;\n\n\t\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\t\tshadowCamera.position.copy( _lightPositionWorld );\n\n\t\t\tif ( isPointLight ) {\n\n\t\t\t\tfaceCount = 6;\n\n\t\t\t\t// for point lights we set the shadow matrix to be a translation-only matrix\n\t\t\t\t// equal to inverse of the light's position\n\n\t\t\t\tshadowMatrix.makeTranslation( - _lightPositionWorld.x, - _lightPositionWorld.y, - _lightPositionWorld.z );\n\n\t\t\t} else {\n\n\t\t\t\tfaceCount = 1;\n\n\t\t\t\t_lookTarget.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tshadowCamera.lookAt( _lookTarget );\n\t\t\t\tshadowCamera.updateMatrixWorld();\n\n\t\t\t\t// compute shadow matrix\n\n\t\t\t\tshadowMatrix.set(\n\t\t\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t\t\t);\n\n\t\t\t\tshadowMatrix.multiply( shadowCamera.projectionMatrix );\n\t\t\t\tshadowMatrix.multiply( shadowCamera.matrixWorldInverse );\n\n\t\t\t}\n\n\t\t\t_renderer.setRenderTarget( shadowMap );\n\t\t\t_renderer.clear();\n\n\t\t\t// render shadow map for each cube face (if omni-directional) or\n\t\t\t// run a single pass if not\n\n\t\t\tfor ( var face = 0; face < faceCount; face ++ ) {\n\n\t\t\t\tif ( isPointLight ) {\n\n\t\t\t\t\t_lookTarget.copy( shadowCamera.position );\n\t\t\t\t\t_lookTarget.add( cubeDirections[ face ] );\n\t\t\t\t\tshadowCamera.up.copy( cubeUps[ face ] );\n\t\t\t\t\tshadowCamera.lookAt( _lookTarget );\n\t\t\t\t\tshadowCamera.updateMatrixWorld();\n\n\t\t\t\t\tvar vpDimensions = cube2DViewPorts[ face ];\n\t\t\t\t\t_state.viewport( vpDimensions );\n\n\t\t\t\t}\n\n\t\t\t\t// update camera matrices and frustum\n\n\t\t\t\t_projScreenMatrix.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\t\t\t_frustum.setFromMatrix( _projScreenMatrix );\n\n\t\t\t\t// set object matrices & frustum culling\n\n\t\t\t\trenderObject( scene, camera, shadowCamera, isPointLight );\n\n\t\t\t}\n\n\t\t}\n\n\t\tscope.needsUpdate = false;\n\n\t\t_renderer.setRenderTarget( currentRenderTarget, activeCubeFace, activeMipMapLevel );\n\n\t};\n\n\tfunction getDepthMaterial( object, material, isPointLight, lightPositionWorld, shadowCameraNear, shadowCameraFar ) {\n\n\t\tvar geometry = object.geometry;\n\n\t\tvar result = null;\n\n\t\tvar materialVariants = _depthMaterials;\n\t\tvar customMaterial = object.customDepthMaterial;\n\n\t\tif ( isPointLight ) {\n\n\t\t\tmaterialVariants = _distanceMaterials;\n\t\t\tcustomMaterial = object.customDistanceMaterial;\n\n\t\t}\n\n\t\tif ( ! customMaterial ) {\n\n\t\t\tvar useMorphing = false;\n\n\t\t\tif ( material.morphTargets ) {\n\n\t\t\t\tif ( geometry && geometry.isBufferGeometry ) {\n\n\t\t\t\t\tuseMorphing = geometry.morphAttributes && geometry.morphAttributes.position && geometry.morphAttributes.position.length > 0;\n\n\t\t\t\t} else if ( geometry && geometry.isGeometry ) {\n\n\t\t\t\t\tuseMorphing = geometry.morphTargets && geometry.morphTargets.length > 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( object.isSkinnedMesh && material.skinning === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:', object );\n\n\t\t\t}\n\n\t\t\tvar useSkinning = object.isSkinnedMesh && material.skinning;\n\n\t\t\tvar variantIndex = 0;\n\n\t\t\tif ( useMorphing ) variantIndex |= _MorphingFlag;\n\t\t\tif ( useSkinning ) variantIndex |= _SkinningFlag;\n\n\t\t\tresult = materialVariants[ variantIndex ];\n\n\t\t} else {\n\n\t\t\tresult = customMaterial;\n\n\t\t}\n\n\t\tif ( _renderer.localClippingEnabled &&\n\t\t\t\tmaterial.clipShadows === true &&\n\t\t\t\tmaterial.clippingPlanes.length !== 0 ) {\n\n\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t// appropriate state\n\n\t\t\tvar keyA = result.uuid, keyB = material.uuid;\n\n\t\t\tvar materialsForVariant = _materialCache[ keyA ];\n\n\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t}\n\n\t\t\tvar cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\n\t\t\t}\n\n\t\t\tresult = cachedMaterial;\n\n\t\t}\n\n\t\tresult.visible = material.visible;\n\t\tresult.wireframe = material.wireframe;\n\n\t\tresult.side = ( material.shadowSide != null ) ? material.shadowSide : shadowSide[ material.side ];\n\n\t\tresult.clipShadows = material.clipShadows;\n\t\tresult.clippingPlanes = material.clippingPlanes;\n\t\tresult.clipIntersection = material.clipIntersection;\n\n\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\tresult.linewidth = material.linewidth;\n\n\t\tif ( isPointLight && result.isMeshDistanceMaterial ) {\n\n\t\t\tresult.referencePosition.copy( lightPositionWorld );\n\t\t\tresult.nearDistance = shadowCameraNear;\n\t\t\tresult.farDistance = shadowCameraFar;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tfunction renderObject( object, camera, shadowCamera, isPointLight ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tvar visible = object.layers.test( camera.layers );\n\n\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n\n\t\t\tif ( object.castShadow && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\n\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\n\t\t\t\tvar geometry = _objects.update( object );\n\t\t\t\tvar material = object.material;\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tvar groups = geometry.groups;\n\n\t\t\t\t\tfor ( var k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tvar group = groups[ k ];\n\t\t\t\t\t\tvar groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, groupMaterial, isPointLight, _lightPositionWorld, shadowCamera.near, shadowCamera.far );\n\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, material, isPointLight, _lightPositionWorld, shadowCamera.near, shadowCamera.far );\n\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar children = object.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\trenderObject( children[ i ], camera, shadowCamera, isPointLight );\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLState( gl, extensions, utils, capabilities ) {\n\n\tfunction ColorBuffer() {\n\n\t\tvar locked = false;\n\n\t\tvar color = new Vector4();\n\t\tvar currentColorMask = null;\n\t\tvar currentColorClear = new Vector4( 0, 0, 0, 0 );\n\n\t\treturn {\n\n\t\t\tsetMask: function ( colorMask ) {\n\n\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\n\n\t\t\t\tif ( premultipliedAlpha === true ) {\n\n\t\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t\t}\n\n\t\t\t\tcolor.set( r, g, b, a );\n\n\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentColorMask = null;\n\t\t\t\tcurrentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction DepthBuffer() {\n\n\t\tvar locked = false;\n\n\t\tvar currentDepthMask = null;\n\t\tvar currentDepthFunc = null;\n\t\tvar currentDepthClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( depthTest ) {\n\n\t\t\t\tif ( depthTest ) {\n\n\t\t\t\t\tenable( 2929 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( 2929 );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( depthMask ) {\n\n\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( depthFunc ) {\n\n\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\t\tif ( depthFunc ) {\n\n\t\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 512 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 519 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase LessDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 513 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 515 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 514 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 518 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 516 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 517 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 515 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tgl.depthFunc( 515 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( depth ) {\n\n\t\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentDepthMask = null;\n\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\tcurrentDepthClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction StencilBuffer() {\n\n\t\tvar locked = false;\n\n\t\tvar currentStencilMask = null;\n\t\tvar currentStencilFunc = null;\n\t\tvar currentStencilRef = null;\n\t\tvar currentStencilFuncMask = null;\n\t\tvar currentStencilFail = null;\n\t\tvar currentStencilZFail = null;\n\t\tvar currentStencilZPass = null;\n\t\tvar currentStencilClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( stencilTest ) {\n\n\t\t\t\tif ( stencilTest ) {\n\n\t\t\t\t\tenable( 2960 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( 2960 );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( stencilMask ) {\n\n\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t     currentStencilRef \t!== stencilRef \t||\n\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\t\tif ( currentStencilFail\t !== stencilFail \t||\n\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( stencil ) {\n\n\t\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentStencilMask = null;\n\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\tcurrentStencilRef = null;\n\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\tcurrentStencilFail = null;\n\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\tcurrentStencilClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t//\n\n\tvar colorBuffer = new ColorBuffer();\n\tvar depthBuffer = new DepthBuffer();\n\tvar stencilBuffer = new StencilBuffer();\n\n\tvar maxVertexAttributes = gl.getParameter( 34921 );\n\tvar newAttributes = new Uint8Array( maxVertexAttributes );\n\tvar enabledAttributes = new Uint8Array( maxVertexAttributes );\n\tvar attributeDivisors = new Uint8Array( maxVertexAttributes );\n\n\tvar enabledCapabilities = {};\n\n\tvar compressedTextureFormats = null;\n\n\tvar currentProgram = null;\n\n\tvar currentBlendingEnabled = null;\n\tvar currentBlending = null;\n\tvar currentBlendEquation = null;\n\tvar currentBlendSrc = null;\n\tvar currentBlendDst = null;\n\tvar currentBlendEquationAlpha = null;\n\tvar currentBlendSrcAlpha = null;\n\tvar currentBlendDstAlpha = null;\n\tvar currentPremultipledAlpha = false;\n\n\tvar currentFlipSided = null;\n\tvar currentCullFace = null;\n\n\tvar currentLineWidth = null;\n\n\tvar currentPolygonOffsetFactor = null;\n\tvar currentPolygonOffsetUnits = null;\n\n\tvar maxTextures = gl.getParameter( 35661 );\n\n\tvar lineWidthAvailable = false;\n\tvar version = 0;\n\tvar glVersion = gl.getParameter( 7938 );\n\n\tif ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^WebGL\\ ([0-9])/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 1.0 );\n\n\t} else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^OpenGL\\ ES\\ ([0-9])/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 2.0 );\n\n\t}\n\n\tvar currentTextureSlot = null;\n\tvar currentBoundTextures = {};\n\n\tvar currentScissor = new Vector4();\n\tvar currentViewport = new Vector4();\n\n\tfunction createTexture( type, target, count ) {\n\n\t\tvar data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\tvar texture = gl.createTexture();\n\n\t\tgl.bindTexture( type, texture );\n\t\tgl.texParameteri( type, 10241, 9728 );\n\t\tgl.texParameteri( type, 10240, 9728 );\n\n\t\tfor ( var i = 0; i < count; i ++ ) {\n\n\t\t\tgl.texImage2D( target + i, 0, 6408, 1, 1, 0, 6408, 5121, data );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tvar emptyTextures = {};\n\temptyTextures[ 3553 ] = createTexture( 3553, 3553, 1 );\n\temptyTextures[ 34067 ] = createTexture( 34067, 34069, 6 );\n\n\t// init\n\n\tcolorBuffer.setClear( 0, 0, 0, 1 );\n\tdepthBuffer.setClear( 1 );\n\tstencilBuffer.setClear( 0 );\n\n\tenable( 2929 );\n\tdepthBuffer.setFunc( LessEqualDepth );\n\n\tsetFlipSided( false );\n\tsetCullFace( CullFaceBack );\n\tenable( 2884 );\n\n\tsetBlending( NoBlending );\n\n\t//\n\n\tfunction initAttributes() {\n\n\t\tfor ( var i = 0, l = newAttributes.length; i < l; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\tfunction enableAttribute( attribute ) {\n\n\t\tenableAttributeAndDivisor( attribute, 0 );\n\n\t}\n\n\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\n\n\t\tnewAttributes[ attribute ] = 1;\n\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t}\n\n\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\tvar extension = capabilities.isWebGL2 ? gl : extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\textension[ capabilities.isWebGL2 ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE' ]( attribute, meshPerAttribute );\n\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t}\n\n\t}\n\n\tfunction disableUnusedAttributes() {\n\n\t\tfor ( var i = 0, l = enabledAttributes.length; i !== l; ++ i ) {\n\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction enable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== true ) {\n\n\t\t\tgl.enable( id );\n\t\t\tenabledCapabilities[ id ] = true;\n\n\t\t}\n\n\t}\n\n\tfunction disable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== false ) {\n\n\t\t\tgl.disable( id );\n\t\t\tenabledCapabilities[ id ] = false;\n\n\t\t}\n\n\t}\n\n\tfunction getCompressedTextureFormats() {\n\n\t\tif ( compressedTextureFormats === null ) {\n\n\t\t\tcompressedTextureFormats = [];\n\n\t\t\tif ( extensions.get( 'WEBGL_compressed_texture_pvrtc' ) ||\n\t\t\t     extensions.get( 'WEBGL_compressed_texture_s3tc' ) ||\n\t\t\t     extensions.get( 'WEBGL_compressed_texture_etc1' ) ||\n\t\t\t     extensions.get( 'WEBGL_compressed_texture_astc' ) ) {\n\n\t\t\t\tvar formats = gl.getParameter( 34467 );\n\n\t\t\t\tfor ( var i = 0; i < formats.length; i ++ ) {\n\n\t\t\t\t\tcompressedTextureFormats.push( formats[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn compressedTextureFormats;\n\n\t}\n\n\tfunction useProgram( program ) {\n\n\t\tif ( currentProgram !== program ) {\n\n\t\t\tgl.useProgram( program );\n\n\t\t\tcurrentProgram = program;\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {\n\n\t\tif ( blending === NoBlending ) {\n\n\t\t\tif ( currentBlendingEnabled ) {\n\n\t\t\t\tdisable( 3042 );\n\t\t\t\tcurrentBlendingEnabled = false;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( ! currentBlendingEnabled ) {\n\n\t\t\tenable( 3042 );\n\t\t\tcurrentBlendingEnabled = true;\n\n\t\t}\n\n\t\tif ( blending !== CustomBlending ) {\n\n\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n\t\t\t\tif ( currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation ) {\n\n\t\t\t\t\tgl.blendEquation( 32774 );\n\n\t\t\t\t\tcurrentBlendEquation = AddEquation;\n\t\t\t\t\tcurrentBlendEquationAlpha = AddEquation;\n\n\t\t\t\t}\n\n\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 1, 771, 1, 771 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 1, 1 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 0, 0, 769, 771 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 0, 768, 0, 770 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 770, 771, 1, 771 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 770, 1 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 0, 769 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 0, 768 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tcurrentBlendSrc = null;\n\t\t\t\tcurrentBlendDst = null;\n\t\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\t\tcurrentBlendDstAlpha = null;\n\n\t\t\t\tcurrentBlending = blending;\n\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// custom blending\n\n\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\tgl.blendEquationSeparate( utils.convert( blendEquation ), utils.convert( blendEquationAlpha ) );\n\n\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t}\n\n\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\tgl.blendFuncSeparate( utils.convert( blendSrc ), utils.convert( blendDst ), utils.convert( blendSrcAlpha ), utils.convert( blendDstAlpha ) );\n\n\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\tcurrentBlendDst = blendDst;\n\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t}\n\n\t\tcurrentBlending = blending;\n\t\tcurrentPremultipledAlpha = null;\n\n\t}\n\n\tfunction setMaterial( material, frontFaceCW ) {\n\n\t\tmaterial.side === DoubleSide\n\t\t\t? disable( 2884 )\n\t\t\t: enable( 2884 );\n\n\t\tvar flipSided = ( material.side === BackSide );\n\t\tif ( frontFaceCW ) flipSided = ! flipSided;\n\n\t\tsetFlipSided( flipSided );\n\n\t\t( material.blending === NormalBlending && material.transparent === false )\n\t\t\t? setBlending( NoBlending )\n\t\t\t: setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha );\n\n\t\tdepthBuffer.setFunc( material.depthFunc );\n\t\tdepthBuffer.setTest( material.depthTest );\n\t\tdepthBuffer.setMask( material.depthWrite );\n\t\tcolorBuffer.setMask( material.colorWrite );\n\n\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t}\n\n\t//\n\n\tfunction setFlipSided( flipSided ) {\n\n\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\tif ( flipSided ) {\n\n\t\t\t\tgl.frontFace( 2304 );\n\n\t\t\t} else {\n\n\t\t\t\tgl.frontFace( 2305 );\n\n\t\t\t}\n\n\t\t\tcurrentFlipSided = flipSided;\n\n\t\t}\n\n\t}\n\n\tfunction setCullFace( cullFace ) {\n\n\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\tenable( 2884 );\n\n\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\tgl.cullFace( 1029 );\n\n\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\tgl.cullFace( 1028 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.cullFace( 1032 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( 2884 );\n\n\t\t}\n\n\t\tcurrentCullFace = cullFace;\n\n\t}\n\n\tfunction setLineWidth( width ) {\n\n\t\tif ( width !== currentLineWidth ) {\n\n\t\t\tif ( lineWidthAvailable ) gl.lineWidth( width );\n\n\t\t\tcurrentLineWidth = width;\n\n\t\t}\n\n\t}\n\n\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n\t\tif ( polygonOffset ) {\n\n\t\t\tenable( 32823 );\n\n\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( 32823 );\n\n\t\t}\n\n\t}\n\n\tfunction setScissorTest( scissorTest ) {\n\n\t\tif ( scissorTest ) {\n\n\t\t\tenable( 3089 );\n\n\t\t} else {\n\n\t\t\tdisable( 3089 );\n\n\t\t}\n\n\t}\n\n\t// texture\n\n\tfunction activeTexture( webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) webglSlot = 33984 + maxTextures - 1;\n\n\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\tgl.activeTexture( webglSlot );\n\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t}\n\n\t}\n\n\tfunction bindTexture( webglType, webglTexture ) {\n\n\t\tif ( currentTextureSlot === null ) {\n\n\t\t\tactiveTexture();\n\n\t\t}\n\n\t\tvar boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture === undefined ) {\n\n\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\tcurrentBoundTextures[ currentTextureSlot ] = boundTexture;\n\n\t\t}\n\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\tboundTexture.type = webglType;\n\t\t\tboundTexture.texture = webglTexture;\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction scissor( scissor ) {\n\n\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\tcurrentScissor.copy( scissor );\n\n\t\t}\n\n\t}\n\n\tfunction viewport( viewport ) {\n\n\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\tcurrentViewport.copy( viewport );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction reset() {\n\n\t\tfor ( var i = 0; i < enabledAttributes.length; i ++ ) {\n\n\t\t\tif ( enabledAttributes[ i ] === 1 ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tenabledCapabilities = {};\n\n\t\tcompressedTextureFormats = null;\n\n\t\tcurrentTextureSlot = null;\n\t\tcurrentBoundTextures = {};\n\n\t\tcurrentProgram = null;\n\n\t\tcurrentBlending = null;\n\n\t\tcurrentFlipSided = null;\n\t\tcurrentCullFace = null;\n\n\t\tcolorBuffer.reset();\n\t\tdepthBuffer.reset();\n\t\tstencilBuffer.reset();\n\n\t}\n\n\treturn {\n\n\t\tbuffers: {\n\t\t\tcolor: colorBuffer,\n\t\t\tdepth: depthBuffer,\n\t\t\tstencil: stencilBuffer\n\t\t},\n\n\t\tinitAttributes: initAttributes,\n\t\tenableAttribute: enableAttribute,\n\t\tenableAttributeAndDivisor: enableAttributeAndDivisor,\n\t\tdisableUnusedAttributes: disableUnusedAttributes,\n\t\tenable: enable,\n\t\tdisable: disable,\n\t\tgetCompressedTextureFormats: getCompressedTextureFormats,\n\n\t\tuseProgram: useProgram,\n\n\t\tsetBlending: setBlending,\n\t\tsetMaterial: setMaterial,\n\n\t\tsetFlipSided: setFlipSided,\n\t\tsetCullFace: setCullFace,\n\n\t\tsetLineWidth: setLineWidth,\n\t\tsetPolygonOffset: setPolygonOffset,\n\n\t\tsetScissorTest: setScissorTest,\n\n\t\tactiveTexture: activeTexture,\n\t\tbindTexture: bindTexture,\n\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\ttexImage2D: texImage2D,\n\t\ttexImage3D: texImage3D,\n\n\t\tscissor: scissor,\n\t\tviewport: viewport,\n\n\t\treset: reset\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ) {\n\n\tvar _videoTextures = {};\n\tvar _canvas;\n\n\t//\n\n\tvar useOffscreenCanvas = typeof OffscreenCanvas !== 'undefined';\n\n\tfunction createCanvas( width, height ) {\n\n\t\t// Use OffscreenCanvas when available. Specially needed in web workers\n\n\t\treturn useOffscreenCanvas ?\n\t\t\tnew OffscreenCanvas( width, height ) :\n\t\t\tdocument.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\n\t}\n\n\tfunction resizeImage( image, needsPowerOfTwo, needsNewCanvas, maxSize ) {\n\n\t\tvar scale = 1;\n\n\t\t// handle case if texture exceeds max size\n\n\t\tif ( image.width > maxSize || image.height > maxSize ) {\n\n\t\t\tscale = maxSize / Math.max( image.width, image.height );\n\n\t\t}\n\n\t\t// only perform resize if necessary\n\n\t\tif ( scale < 1 || needsPowerOfTwo === true ) {\n\n\t\t\t// only perform resize for certain image types\n\n\t\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\t\tvar floor = needsPowerOfTwo ? _Math.floorPowerOfTwo : Math.floor;\n\n\t\t\t\tvar width = floor( scale * image.width );\n\t\t\t\tvar height = floor( scale * image.height );\n\n\t\t\t\tif ( _canvas === undefined ) _canvas = createCanvas( width, height );\n\n\t\t\t\t// cube textures can't reuse the same canvas\n\n\t\t\t\tvar canvas = needsNewCanvas ? createCanvas( width, height ) : _canvas;\n\n\t\t\t\tcanvas.width = width;\n\t\t\t\tcanvas.height = height;\n\n\t\t\t\tvar context = canvas.getContext( '2d' );\n\t\t\t\tcontext.drawImage( image, 0, 0, width, height );\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture has been resized from (' + image.width + 'x' + image.height + ') to (' + width + 'x' + height + ').' );\n\n\t\t\t\treturn canvas;\n\n\t\t\t} else {\n\n\t\t\t\tif ( 'data' in image ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Image in DataTexture is too big (' + image.width + 'x' + image.height + ').' );\n\n\t\t\t\t}\n\n\t\t\t\treturn image;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction isPowerOfTwo( image ) {\n\n\t\treturn _Math.isPowerOfTwo( image.width ) && _Math.isPowerOfTwo( image.height );\n\n\t}\n\n\tfunction textureNeedsPowerOfTwo( texture ) {\n\n\t\tif ( capabilities.isWebGL2 ) return false;\n\n\t\treturn ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) ||\n\t\t\t( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter );\n\n\t}\n\n\tfunction textureNeedsGenerateMipmaps( texture, supportsMips ) {\n\n\t\treturn texture.generateMipmaps && supportsMips &&\n\t\t\ttexture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\n\t}\n\n\tfunction generateMipmap( target, texture, width, height ) {\n\n\t\t_gl.generateMipmap( target );\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\t// Note: Math.log( x ) * Math.LOG2E used instead of Math.log2( x ) which is not supported by IE11\n\t\ttextureProperties.__maxMipLevel = Math.log( Math.max( width, height ) ) * Math.LOG2E;\n\n\t}\n\n\tfunction getInternalFormat( glFormat, glType ) {\n\n\t\tif ( ! capabilities.isWebGL2 ) return glFormat;\n\n\t\tvar internalFormat = glFormat;\n\n\t\tif ( glFormat === 6403 ) {\n\n\t\t\tif ( glType === 5126 ) internalFormat = 33326;\n\t\t\tif ( glType === 5131 ) internalFormat = 33325;\n\t\t\tif ( glType === 5121 ) internalFormat = 33321;\n\n\t\t}\n\n\t\tif ( glFormat === 6407 ) {\n\n\t\t\tif ( glType === 5126 ) internalFormat = 34837;\n\t\t\tif ( glType === 5131 ) internalFormat = 34843;\n\t\t\tif ( glType === 5121 ) internalFormat = 32849;\n\n\t\t}\n\n\t\tif ( glFormat === 6408 ) {\n\n\t\t\tif ( glType === 5126 ) internalFormat = 34836;\n\t\t\tif ( glType === 5131 ) internalFormat = 34842;\n\t\t\tif ( glType === 5121 ) internalFormat = 32856;\n\n\t\t}\n\n\t\tif ( internalFormat === 33325 || internalFormat === 33326 ||\n\t\t\tinternalFormat === 34842 || internalFormat === 34836 ) {\n\n\t\t\textensions.get( 'EXT_color_buffer_float' );\n\n\t\t} else if ( internalFormat === 34843 || internalFormat === 34837 ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Floating point textures with RGB format not supported. Please use RGBA instead.' );\n\n\t\t}\n\n\t\treturn internalFormat;\n\n\t}\n\n\t// Fallback filters for non-power-of-2 textures\n\n\tfunction filterFallback( f ) {\n\n\t\tif ( f === NearestFilter || f === NearestMipMapNearestFilter || f === NearestMipMapLinearFilter ) {\n\n\t\t\treturn 9728;\n\n\t\t}\n\n\t\treturn 9729;\n\n\t}\n\n\t//\n\n\tfunction onTextureDispose( event ) {\n\n\t\tvar texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tdeallocateTexture( texture );\n\n\t\tif ( texture.isVideoTexture ) {\n\n\t\t\tdelete _videoTextures[ texture.id ];\n\n\t\t}\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\tfunction onRenderTargetDispose( event ) {\n\n\t\tvar renderTarget = event.target;\n\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tdeallocateRenderTarget( renderTarget );\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\t//\n\n\tfunction deallocateTexture( texture ) {\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\tif ( textureProperties.__webglInit === undefined ) return;\n\n\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\tproperties.remove( texture );\n\n\t}\n\n\tfunction deallocateRenderTarget( renderTarget ) {\n\n\t\tvar renderTargetProperties = properties.get( renderTarget );\n\t\tvar textureProperties = properties.get( renderTarget.texture );\n\n\t\tif ( ! renderTarget ) return;\n\n\t\tif ( textureProperties.__webglTexture !== undefined ) {\n\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t}\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\trenderTarget.depthTexture.dispose();\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLRenderTargetCube ) {\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n\n\t\t}\n\n\t\tproperties.remove( renderTarget.texture );\n\t\tproperties.remove( renderTarget );\n\n\t}\n\n\t//\n\n\tvar textureUnits = 0;\n\n\tfunction resetTextureUnits() {\n\n\t\ttextureUnits = 0;\n\n\t}\n\n\tfunction allocateTextureUnit() {\n\n\t\tvar textureUnit = textureUnits;\n\n\t\tif ( textureUnit >= capabilities.maxTextures ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLTextures: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures );\n\n\t\t}\n\n\t\ttextureUnits += 1;\n\n\t\treturn textureUnit;\n\n\t}\n\n\t//\n\n\tfunction setTexture2D( texture, slot ) {\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\tif ( texture.isVideoTexture ) updateVideoTexture( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tvar image = texture.image;\n\n\t\t\tif ( image === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is undefined' );\n\n\t\t\t} else if ( image.complete === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete' );\n\n\t\t\t} else {\n\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 3553, textureProperties.__webglTexture );\n\n\t}\n\n\tfunction setTexture2DArray( texture, slot ) {\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 35866, textureProperties.__webglTexture );\n\n\t}\n\n\tfunction setTexture3D( texture, slot ) {\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 32879, textureProperties.__webglTexture );\n\n\t}\n\n\tfunction setTextureCube( texture, slot ) {\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\tif ( texture.image.length === 6 ) {\n\n\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\t\tinitTexture( textureProperties, texture );\n\n\t\t\t\tstate.activeTexture( 33984 + slot );\n\t\t\t\tstate.bindTexture( 34067, textureProperties.__webglTexture );\n\n\t\t\t\t_gl.pixelStorei( 37440, texture.flipY );\n\n\t\t\t\tvar isCompressed = ( texture && texture.isCompressedTexture );\n\t\t\t\tvar isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\n\n\t\t\t\tvar cubeImage = [];\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\t\t\tcubeImage[ i ] = resizeImage( texture.image[ i ], false, true, capabilities.maxCubemapSize );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar image = cubeImage[ 0 ],\n\t\t\t\t\tsupportsMips = isPowerOfTwo( image ) || capabilities.isWebGL2,\n\t\t\t\t\tglFormat = utils.convert( texture.format ),\n\t\t\t\t\tglType = utils.convert( texture.type ),\n\t\t\t\t\tglInternalFormat = getInternalFormat( glFormat, glType );\n\n\t\t\t\tsetTextureParameters( 34067, texture, supportsMips );\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( ! isCompressed ) {\n\n\t\t\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, 0, glInternalFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, 0, glInternalFormat, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvar mipmap, mipmaps = cubeImage[ i ].mipmaps;\n\n\t\t\t\t\t\tfor ( var j = 0, jl = mipmaps.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tmipmap = mipmaps[ j ];\n\n\t\t\t\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\n\t\t\t\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( 34069 + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! isCompressed ) {\n\n\t\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t\t}\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\t\t// We assume images for cube map have the same size.\n\t\t\t\t\tgenerateMipmap( 34067, texture, image.width, image.height );\n\n\t\t\t\t}\n\n\t\t\t\ttextureProperties.__version = texture.version;\n\n\t\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t\t} else {\n\n\t\t\t\tstate.activeTexture( 33984 + slot );\n\t\t\t\tstate.bindTexture( 34067, textureProperties.__webglTexture );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction setTextureCubeDynamic( texture, slot ) {\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 34067, properties.get( texture ).__webglTexture );\n\n\t}\n\n\tfunction setTextureParameters( textureType, texture, supportsMips ) {\n\n\t\tvar extension;\n\n\t\tif ( supportsMips ) {\n\n\t\t\t_gl.texParameteri( textureType, 10242, utils.convert( texture.wrapS ) );\n\t\t\t_gl.texParameteri( textureType, 10243, utils.convert( texture.wrapT ) );\n\n\t\t\tif ( textureType === 32879 || textureType === 35866 ) {\n\n\t\t\t\t_gl.texParameteri( textureType, 32882, utils.convert( texture.wrapR ) );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, 10240, utils.convert( texture.magFilter ) );\n\t\t\t_gl.texParameteri( textureType, 10241, utils.convert( texture.minFilter ) );\n\n\t\t} else {\n\n\t\t\t_gl.texParameteri( textureType, 10242, 33071 );\n\t\t\t_gl.texParameteri( textureType, 10243, 33071 );\n\n\t\t\tif ( textureType === 32879 || textureType === 35866 ) {\n\n\t\t\t\t_gl.texParameteri( textureType, 32882, 33071 );\n\n\t\t\t}\n\n\t\t\tif ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.' );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, 10240, filterFallback( texture.magFilter ) );\n\t\t\t_gl.texParameteri( textureType, 10241, filterFallback( texture.minFilter ) );\n\n\t\t\tif ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\textension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\tif ( extension ) {\n\n\t\t\tif ( texture.type === FloatType && extensions.get( 'OES_texture_float_linear' ) === null ) return;\n\t\t\tif ( texture.type === HalfFloatType && ( capabilities.isWebGL2 || extensions.get( 'OES_texture_half_float_linear' ) ) === null ) return;\n\n\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction initTexture( textureProperties, texture ) {\n\n\t\tif ( textureProperties.__webglInit === undefined ) {\n\n\t\t\ttextureProperties.__webglInit = true;\n\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\tinfo.memory.textures ++;\n\n\t\t}\n\n\t}\n\n\tfunction uploadTexture( textureProperties, texture, slot ) {\n\n\t\tvar textureType = 3553;\n\n\t\tif ( texture.isDataTexture2DArray ) textureType = 35866;\n\t\tif ( texture.isDataTexture3D ) textureType = 32879;\n\n\t\tinitTexture( textureProperties, texture );\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( textureType, textureProperties.__webglTexture );\n\n\t\t_gl.pixelStorei( 37440, texture.flipY );\n\t\t_gl.pixelStorei( 37441, texture.premultiplyAlpha );\n\t\t_gl.pixelStorei( 3317, texture.unpackAlignment );\n\n\t\tvar needsPowerOfTwo = textureNeedsPowerOfTwo( texture ) && isPowerOfTwo( texture.image ) === false;\n\t\tvar image = resizeImage( texture.image, needsPowerOfTwo, false, capabilities.maxTextureSize );\n\n\t\tvar supportsMips = isPowerOfTwo( image ) || capabilities.isWebGL2,\n\t\t\tglFormat = utils.convert( texture.format ),\n\t\t\tglType = utils.convert( texture.type ),\n\t\t\tglInternalFormat = getInternalFormat( glFormat, glType );\n\n\t\tsetTextureParameters( textureType, texture, supportsMips );\n\n\t\tvar mipmap, mipmaps = texture.mipmaps;\n\n\t\tif ( texture.isDepthTexture ) {\n\n\t\t\t// populate depth texture with dummy data\n\n\t\t\tglInternalFormat = 6402;\n\n\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\tif ( ! capabilities.isWebGL2 ) throw new Error( 'Float Depth Texture only supported in WebGL2.0' );\n\t\t\t\tglInternalFormat = 36012;\n\n\t\t\t} else if ( capabilities.isWebGL2 ) {\n\n\t\t\t\t// WebGL 2.0 requires signed internalformat for glTexImage2D\n\t\t\t\tglInternalFormat = 33189;\n\n\t\t\t}\n\n\t\t\tif ( texture.format === DepthFormat && glInternalFormat === 6402 ) {\n\n\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\tif ( texture.type !== UnsignedShortType && texture.type !== UnsignedIntType ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.' );\n\n\t\t\t\t\ttexture.type = UnsignedShortType;\n\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Depth stencil textures need the DEPTH_STENCIL internal format\n\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\tif ( texture.format === DepthStencilFormat ) {\n\n\t\t\t\tglInternalFormat = 34041;\n\n\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\tif ( texture.type !== UnsignedInt248Type ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.' );\n\n\t\t\t\t\ttexture.type = UnsignedInt248Type;\n\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t} else if ( texture.isDataTexture ) {\n\n\t\t\t// use manually created mipmaps if available\n\t\t\t// if there are no manual mipmaps\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t}\n\n\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t}\n\n\t\t} else if ( texture.isCompressedTexture ) {\n\n\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\n\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\n\n\t\t\t\t\t\tstate.compressedTexImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t} else if ( texture.isDataTexture2DArray ) {\n\n\t\t\tstate.texImage3D( 35866, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t} else if ( texture.isDataTexture3D ) {\n\n\t\t\tstate.texImage3D( 32879, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t} else {\n\n\t\t\t// regular Texture (image, video, canvas)\n\n\t\t\t// use manually created mipmaps if available\n\t\t\t// if there are no manual mipmaps\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, glFormat, glType, mipmap );\n\n\t\t\t\t}\n\n\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, glFormat, glType, image );\n\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\tgenerateMipmap( 3553, texture, image.width, image.height );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t}\n\n\t// Render targets\n\n\t// Setup storage for target texture and bind it to correct framebuffer\n\tfunction setupFrameBufferTexture( framebuffer, renderTarget, attachment, textureTarget ) {\n\n\t\tvar glFormat = utils.convert( renderTarget.texture.format );\n\t\tvar glType = utils.convert( renderTarget.texture.type );\n\t\tvar glInternalFormat = getInternalFormat( glFormat, glType );\n\t\tstate.texImage2D( textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\n\t\t_gl.bindFramebuffer( 36160, framebuffer );\n\t\t_gl.framebufferTexture2D( 36160, attachment, textureTarget, properties.get( renderTarget.texture ).__webglTexture, 0 );\n\t\t_gl.bindFramebuffer( 36160, null );\n\n\t}\n\n\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\tfunction setupRenderBufferStorage( renderbuffer, renderTarget, isMultisample ) {\n\n\t\t_gl.bindRenderbuffer( 36161, renderbuffer );\n\n\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\n\n\t\t\tif ( isMultisample ) {\n\n\t\t\t\tvar samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, 33189, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( 36161, 33189, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\t_gl.framebufferRenderbuffer( 36160, 36096, 36161, renderbuffer );\n\n\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n\n\t\t\tif ( isMultisample ) {\n\n\t\t\t\tvar samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, 34041, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( 36161, 34041, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\n\t\t\t_gl.framebufferRenderbuffer( 36160, 33306, 36161, renderbuffer );\n\n\t\t} else {\n\n\t\t\tvar glFormat = utils.convert( renderTarget.texture.format );\n\t\t\tvar glType = utils.convert( renderTarget.texture.type );\n\t\t\tvar glInternalFormat = getInternalFormat( glFormat, glType );\n\n\t\t\tif ( isMultisample ) {\n\n\t\t\t\tvar samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( 36161, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.bindRenderbuffer( 36161, null );\n\n\t}\n\n\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\tfunction setupDepthTexture( framebuffer, renderTarget ) {\n\n\t\tvar isCube = ( renderTarget && renderTarget.isWebGLRenderTargetCube );\n\t\tif ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' );\n\n\t\t_gl.bindFramebuffer( 36160, framebuffer );\n\n\t\tif ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\n\n\t\t\tthrow new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\n\n\t\t}\n\n\t\t// upload an empty depth texture with framebuffer size\n\t\tif ( ! properties.get( renderTarget.depthTexture ).__webglTexture ||\n\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\n\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\n\t\t}\n\n\t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\n\t\tvar webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\n\n\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\n\n\t\t\t_gl.framebufferTexture2D( 36160, 36096, 3553, webglDepthTexture, 0 );\n\n\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n\n\t\t\t_gl.framebufferTexture2D( 36160, 33306, 3553, webglDepthTexture, 0 );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Unknown depthTexture format' );\n\n\t\t}\n\n\t}\n\n\t// Setup GL resources for a non-texture depth buffer\n\tfunction setupDepthRenderbuffer( renderTarget ) {\n\n\t\tvar renderTargetProperties = properties.get( renderTarget );\n\n\t\tvar isCube = ( renderTarget.isWebGLRenderTargetCube === true );\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\tif ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' );\n\n\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n\t\t} else {\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\t_gl.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_gl.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer );\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.bindFramebuffer( 36160, null );\n\n\t}\n\n\t// Set up GL resources for the render target\n\tfunction setupRenderTarget( renderTarget ) {\n\n\t\tvar renderTargetProperties = properties.get( renderTarget );\n\t\tvar textureProperties = properties.get( renderTarget.texture );\n\n\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\tinfo.memory.textures ++;\n\n\t\tvar isCube = ( renderTarget.isWebGLRenderTargetCube === true );\n\t\tvar isMultisample = ( renderTarget.isWebGLMultisampleRenderTarget === true );\n\t\tvar supportsMips = isPowerOfTwo( renderTarget ) || capabilities.isWebGL2;\n\n\t\t// Setup framebuffer\n\n\t\tif ( isCube ) {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t\tif ( isMultisample ) {\n\n\t\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\t\trenderTargetProperties.__webglMultisampledFramebuffer = _gl.createFramebuffer();\n\t\t\t\t\trenderTargetProperties.__webglColorRenderbuffer = _gl.createRenderbuffer();\n\n\t\t\t\t\t_gl.bindRenderbuffer( 36161, renderTargetProperties.__webglColorRenderbuffer );\n\t\t\t\t\tvar glFormat = utils.convert( renderTarget.texture.format );\n\t\t\t\t\tvar glType = utils.convert( renderTarget.texture.type );\n\t\t\t\t\tvar glInternalFormat = getInternalFormat( glFormat, glType );\n\t\t\t\t\tvar samples = getRenderTargetSamples( renderTarget );\n\t\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t\t_gl.bindFramebuffer( 36160, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t_gl.framebufferRenderbuffer( 36160, 36064, 36161, renderTargetProperties.__webglColorRenderbuffer );\n\t\t\t\t\t_gl.bindRenderbuffer( 36161, null );\n\n\t\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\t\trenderTargetProperties.__webglDepthRenderbuffer = _gl.createRenderbuffer();\n\t\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthRenderbuffer, renderTarget, true );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_gl.bindFramebuffer( 36160, null );\n\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Setup color buffer\n\n\t\tif ( isCube ) {\n\n\t\t\tstate.bindTexture( 34067, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( 34067, renderTarget.texture, supportsMips );\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, 36064, 34069 + i );\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( renderTarget.texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( 34067, renderTarget.texture, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( 34067, null );\n\n\t\t} else {\n\n\t\t\tstate.bindTexture( 3553, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( 3553, renderTarget.texture, supportsMips );\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, 36064, 3553 );\n\n\t\t\tif ( textureNeedsGenerateMipmaps( renderTarget.texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( 3553, renderTarget.texture, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( 3553, null );\n\n\t\t}\n\n\t\t// Setup depth and stencil buffers\n\n\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\tfunction updateRenderTargetMipmap( renderTarget ) {\n\n\t\tvar texture = renderTarget.texture;\n\t\tvar supportsMips = isPowerOfTwo( renderTarget ) || capabilities.isWebGL2;\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\tvar target = renderTarget.isWebGLRenderTargetCube ? 34067 : 3553;\n\t\t\tvar webglTexture = properties.get( texture ).__webglTexture;\n\n\t\t\tstate.bindTexture( target, webglTexture );\n\t\t\tgenerateMipmap( target, texture, renderTarget.width, renderTarget.height );\n\t\t\tstate.bindTexture( target, null );\n\n\t\t}\n\n\t}\n\n\tfunction updateMultisampleRenderTarget( renderTarget ) {\n\n\t\tif ( renderTarget.isWebGLMultisampleRenderTarget ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\tvar renderTargetProperties = properties.get( renderTarget );\n\n\t\t\t\t_gl.bindFramebuffer( 36008, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t_gl.bindFramebuffer( 36009, renderTargetProperties.__webglFramebuffer );\n\n\t\t\t\tvar width = renderTarget.width;\n\t\t\t\tvar height = renderTarget.height;\n\t\t\t\tvar mask = 16384;\n\n\t\t\t\tif ( renderTarget.depthBuffer ) mask |= 256;\n\t\t\t\tif ( renderTarget.stencilBuffer ) mask |= 1024;\n\n\t\t\t\t_gl.blitFramebuffer( 0, 0, width, height, 0, 0, width, height, mask, 9728 );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.' );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction getRenderTargetSamples( renderTarget ) {\n\n\t\treturn ( capabilities.isWebGL2 && renderTarget.isWebGLMultisampleRenderTarget ) ?\n\t\t\tMath.min( capabilities.maxSamples, renderTarget.samples ) : 0;\n\n\t}\n\n\tfunction updateVideoTexture( texture ) {\n\n\t\tvar id = texture.id;\n\t\tvar frame = info.render.frame;\n\n\t\t// Check the last frame we updated the VideoTexture\n\n\t\tif ( _videoTextures[ id ] !== frame ) {\n\n\t\t\t_videoTextures[ id ] = frame;\n\t\t\ttexture.update();\n\n\t\t}\n\n\t}\n\n\t// backwards compatibility\n\n\tvar warnedTexture2D = false;\n\tvar warnedTextureCube = false;\n\n\tfunction safeSetTexture2D( texture, slot ) {\n\n\t\tif ( texture && texture.isWebGLRenderTarget ) {\n\n\t\t\tif ( warnedTexture2D === false ) {\n\n\t\t\t\tconsole.warn( \"THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead.\" );\n\t\t\t\twarnedTexture2D = true;\n\n\t\t\t}\n\n\t\t\ttexture = texture.texture;\n\n\t\t}\n\n\t\tsetTexture2D( texture, slot );\n\n\t}\n\n\tfunction safeSetTextureCube( texture, slot ) {\n\n\t\tif ( texture && texture.isWebGLRenderTargetCube ) {\n\n\t\t\tif ( warnedTextureCube === false ) {\n\n\t\t\t\tconsole.warn( \"THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead.\" );\n\t\t\t\twarnedTextureCube = true;\n\n\t\t\t}\n\n\t\t\ttexture = texture.texture;\n\n\t\t}\n\n\t\t// currently relying on the fact that WebGLRenderTargetCube.texture is a Texture and NOT a CubeTexture\n\t\t// TODO: unify these code paths\n\t\tif ( ( texture && texture.isCubeTexture ) ||\n\t\t\t( Array.isArray( texture.image ) && texture.image.length === 6 ) ) {\n\n\t\t\t// CompressedTexture can have Array in image :/\n\n\t\t\t// this function alone should take care of cube textures\n\t\t\tsetTextureCube( texture, slot );\n\n\t\t} else {\n\n\t\t\t// assumed: texture property of THREE.WebGLRenderTargetCube\n\t\t\tsetTextureCubeDynamic( texture, slot );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tthis.allocateTextureUnit = allocateTextureUnit;\n\tthis.resetTextureUnits = resetTextureUnits;\n\n\tthis.setTexture2D = setTexture2D;\n\tthis.setTexture2DArray = setTexture2DArray;\n\tthis.setTexture3D = setTexture3D;\n\tthis.setTextureCube = setTextureCube;\n\tthis.setTextureCubeDynamic = setTextureCubeDynamic;\n\tthis.setupRenderTarget = setupRenderTarget;\n\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\tthis.updateMultisampleRenderTarget = updateMultisampleRenderTarget;\n\n\tthis.safeSetTexture2D = safeSetTexture2D;\n\tthis.safeSetTextureCube = safeSetTextureCube;\n\n}\n\n/**\n * @author thespite / http://www.twitter.com/thespite\n */\n\nfunction WebGLUtils( gl, extensions, capabilities ) {\n\n\tfunction convert( p ) {\n\n\t\tvar extension;\n\n\t\tif ( p === RepeatWrapping ) return 10497;\n\t\tif ( p === ClampToEdgeWrapping ) return 33071;\n\t\tif ( p === MirroredRepeatWrapping ) return 33648;\n\n\t\tif ( p === NearestFilter ) return 9728;\n\t\tif ( p === NearestMipMapNearestFilter ) return 9984;\n\t\tif ( p === NearestMipMapLinearFilter ) return 9986;\n\n\t\tif ( p === LinearFilter ) return 9729;\n\t\tif ( p === LinearMipMapNearestFilter ) return 9985;\n\t\tif ( p === LinearMipMapLinearFilter ) return 9987;\n\n\t\tif ( p === UnsignedByteType ) return 5121;\n\t\tif ( p === UnsignedShort4444Type ) return 32819;\n\t\tif ( p === UnsignedShort5551Type ) return 32820;\n\t\tif ( p === UnsignedShort565Type ) return 33635;\n\n\t\tif ( p === ByteType ) return 5120;\n\t\tif ( p === ShortType ) return 5122;\n\t\tif ( p === UnsignedShortType ) return 5123;\n\t\tif ( p === IntType ) return 5124;\n\t\tif ( p === UnsignedIntType ) return 5125;\n\t\tif ( p === FloatType ) return 5126;\n\n\t\tif ( p === HalfFloatType ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) return 5131;\n\n\t\t\textension = extensions.get( 'OES_texture_half_float' );\n\n\t\t\tif ( extension !== null ) return extension.HALF_FLOAT_OES;\n\n\t\t}\n\n\t\tif ( p === AlphaFormat ) return 6406;\n\t\tif ( p === RGBFormat ) return 6407;\n\t\tif ( p === RGBAFormat ) return 6408;\n\t\tif ( p === LuminanceFormat ) return 6409;\n\t\tif ( p === LuminanceAlphaFormat ) return 6410;\n\t\tif ( p === DepthFormat ) return 6402;\n\t\tif ( p === DepthStencilFormat ) return 34041;\n\t\tif ( p === RedFormat ) return 6403;\n\n\t\tif ( p === AddEquation ) return 32774;\n\t\tif ( p === SubtractEquation ) return 32778;\n\t\tif ( p === ReverseSubtractEquation ) return 32779;\n\n\t\tif ( p === ZeroFactor ) return 0;\n\t\tif ( p === OneFactor ) return 1;\n\t\tif ( p === SrcColorFactor ) return 768;\n\t\tif ( p === OneMinusSrcColorFactor ) return 769;\n\t\tif ( p === SrcAlphaFactor ) return 770;\n\t\tif ( p === OneMinusSrcAlphaFactor ) return 771;\n\t\tif ( p === DstAlphaFactor ) return 772;\n\t\tif ( p === OneMinusDstAlphaFactor ) return 773;\n\n\t\tif ( p === DstColorFactor ) return 774;\n\t\tif ( p === OneMinusDstColorFactor ) return 775;\n\t\tif ( p === SrcAlphaSaturateFactor ) return 776;\n\n\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format ||\n\t\t\tp === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format ||\n\t\t\tp === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGB_ETC1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\n\n\t\t\tif ( extension !== null ) return extension.COMPRESSED_RGB_ETC1_WEBGL;\n\n\t\t}\n\n\t\tif ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\n\t\t\tp === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\n\t\t\tp === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\n\t\t\tp === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\n\t\t\tp === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_astc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn p;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === MinEquation || p === MaxEquation ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\tif ( p === MinEquation ) return 32775;\n\t\t\t\tif ( p === MaxEquation ) return 32776;\n\n\t\t\t}\n\n\t\t\textension = extensions.get( 'EXT_blend_minmax' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === MinEquation ) return extension.MIN_EXT;\n\t\t\t\tif ( p === MaxEquation ) return extension.MAX_EXT;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === UnsignedInt248Type ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) return 34042;\n\n\t\t\textension = extensions.get( 'WEBGL_depth_texture' );\n\n\t\t\tif ( extension !== null ) return extension.UNSIGNED_INT_24_8_WEBGL;\n\n\t\t}\n\n\t\treturn 0;\n\n\t}\n\n\treturn { convert: convert };\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Group() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Group';\n\n}\n\nGroup.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Group,\n\n\tisGroup: true\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n * @author WestLangley / http://github.com/WestLangley\n*/\n\nfunction Camera() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Camera';\n\n\tthis.matrixWorldInverse = new Matrix4();\n\n\tthis.projectionMatrix = new Matrix4();\n\tthis.projectionMatrixInverse = new Matrix4();\n\n}\n\nCamera.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Camera,\n\n\tisCamera: true,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tObject3D.prototype.copy.call( this, source, recursive );\n\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\t\tthis.projectionMatrixInverse.copy( source.projectionMatrixInverse );\n\n\t\treturn this;\n\n\t},\n\n\tgetWorldDirection: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Camera: .getWorldDirection() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tthis.updateMatrixWorld( true );\n\n\t\tvar e = this.matrixWorld.elements;\n\n\t\treturn target.set( - e[ 8 ], - e[ 9 ], - e[ 10 ] ).normalize();\n\n\t},\n\n\tupdateMatrixWorld: function ( force ) {\n\n\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\tthis.matrixWorldInverse.getInverse( this.matrixWorld );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author greggman / http://games.greggman.com/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author tschw\n */\n\nfunction PerspectiveCamera( fov, aspect, near, far ) {\n\n\tCamera.call( this );\n\n\tthis.type = 'PerspectiveCamera';\n\n\tthis.fov = fov !== undefined ? fov : 50;\n\tthis.zoom = 1;\n\n\tthis.near = near !== undefined ? near : 0.1;\n\tthis.far = far !== undefined ? far : 2000;\n\tthis.focus = 10;\n\n\tthis.aspect = aspect !== undefined ? aspect : 1;\n\tthis.view = null;\n\n\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\tthis.updateProjectionMatrix();\n\n}\n\nPerspectiveCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\n\n\tconstructor: PerspectiveCamera,\n\n\tisPerspectiveCamera: true,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tCamera.prototype.copy.call( this, source, recursive );\n\n\t\tthis.fov = source.fov;\n\t\tthis.zoom = source.zoom;\n\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\t\tthis.focus = source.focus;\n\n\t\tthis.aspect = source.aspect;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\tthis.filmGauge = source.filmGauge;\n\t\tthis.filmOffset = source.filmOffset;\n\n\t\treturn this;\n\n\t},\n\n\t/**\n\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t *\n\t * The default film gauge is 35, so that the focal length can be specified for\n\t * a 35mm (full frame) camera.\n\t *\n\t * Values for focal length and film gauge must have the same unit.\n\t */\n\tsetFocalLength: function ( focalLength ) {\n\n\t\t// see http://www.bobatkins.com/photography/technical/field_of_view.html\n\t\tvar vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\tthis.fov = _Math.RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\t/**\n\t * Calculates the focal length from the current .fov and .filmGauge.\n\t */\n\tgetFocalLength: function () {\n\n\t\tvar vExtentSlope = Math.tan( _Math.DEG2RAD * 0.5 * this.fov );\n\n\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t},\n\n\tgetEffectiveFOV: function () {\n\n\t\treturn _Math.RAD2DEG * 2 * Math.atan(\n\t\t\tMath.tan( _Math.DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t},\n\n\tgetFilmWidth: function () {\n\n\t\t// film not completely covered in portrait format (aspect < 1)\n\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t},\n\n\tgetFilmHeight: function () {\n\n\t\t// film not completely covered in landscape format (aspect > 1)\n\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t},\n\n\t/**\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t * multi-monitor/multi-machine setups.\n\t *\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t * the monitors are in grid like this\n\t *\n\t *   +---+---+---+\n\t *   | A | B | C |\n\t *   +---+---+---+\n\t *   | D | E | F |\n\t *   +---+---+---+\n\t *\n\t * then for each monitor you would call it like this\n\t *\n\t *   var w = 1920;\n\t *   var h = 1080;\n\t *   var fullWidth = w * 3;\n\t *   var fullHeight = h * 2;\n\t *\n\t *   --A--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t *   --B--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t *   --C--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t *   --D--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t *   --E--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t *   --F--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t *\n\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t */\n\tsetViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tclearViewOffset: function () {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tupdateProjectionMatrix: function () {\n\n\t\tvar near = this.near,\n\t\t\ttop = near * Math.tan( _Math.DEG2RAD * 0.5 * this.fov ) / this.zoom,\n\t\t\theight = 2 * top,\n\t\t\twidth = this.aspect * height,\n\t\t\tleft = - 0.5 * width,\n\t\t\tview = this.view;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tvar fullWidth = view.fullWidth,\n\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\twidth *= view.width / fullWidth;\n\t\t\theight *= view.height / fullHeight;\n\n\t\t}\n\n\t\tvar skew = this.filmOffset;\n\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n\n\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far );\n\n\t\tthis.projectionMatrixInverse.getInverse( this.projectionMatrix );\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.fov = this.fov;\n\t\tdata.object.zoom = this.zoom;\n\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\t\tdata.object.focus = this.focus;\n\n\t\tdata.object.aspect = this.aspect;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\tdata.object.filmGauge = this.filmGauge;\n\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction ArrayCamera( array ) {\n\n\tPerspectiveCamera.call( this );\n\n\tthis.cameras = array || [];\n\n}\n\nArrayCamera.prototype = Object.assign( Object.create( PerspectiveCamera.prototype ), {\n\n\tconstructor: ArrayCamera,\n\n\tisArrayCamera: true\n\n} );\n\n/**\n * @author jsantell / https://www.jsantell.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar cameraLPos = new Vector3();\nvar cameraRPos = new Vector3();\n\n/**\n * Assumes 2 cameras that are parallel and share an X-axis, and that\n * the cameras' projection and world matrices have already been set.\n * And that near and far planes are identical for both cameras.\n * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\n */\nfunction setProjectionFromUnion( camera, cameraL, cameraR ) {\n\n\tcameraLPos.setFromMatrixPosition( cameraL.matrixWorld );\n\tcameraRPos.setFromMatrixPosition( cameraR.matrixWorld );\n\n\tvar ipd = cameraLPos.distanceTo( cameraRPos );\n\n\tvar projL = cameraL.projectionMatrix.elements;\n\tvar projR = cameraR.projectionMatrix.elements;\n\n\t// VR systems will have identical far and near planes, and\n\t// most likely identical top and bottom frustum extents.\n\t// Use the left camera for these values.\n\tvar near = projL[ 14 ] / ( projL[ 10 ] - 1 );\n\tvar far = projL[ 14 ] / ( projL[ 10 ] + 1 );\n\tvar topFov = ( projL[ 9 ] + 1 ) / projL[ 5 ];\n\tvar bottomFov = ( projL[ 9 ] - 1 ) / projL[ 5 ];\n\n\tvar leftFov = ( projL[ 8 ] - 1 ) / projL[ 0 ];\n\tvar rightFov = ( projR[ 8 ] + 1 ) / projR[ 0 ];\n\tvar left = near * leftFov;\n\tvar right = near * rightFov;\n\n\t// Calculate the new camera's position offset from the\n\t// left camera. xOffset should be roughly half `ipd`.\n\tvar zOffset = ipd / ( - leftFov + rightFov );\n\tvar xOffset = zOffset * - leftFov;\n\n\t// TODO: Better way to apply this offset?\n\tcameraL.matrixWorld.decompose( camera.position, camera.quaternion, camera.scale );\n\tcamera.translateX( xOffset );\n\tcamera.translateZ( zOffset );\n\tcamera.matrixWorld.compose( camera.position, camera.quaternion, camera.scale );\n\tcamera.matrixWorldInverse.getInverse( camera.matrixWorld );\n\n\t// Find the union of the frustum values of the cameras and scale\n\t// the values so that the near plane's position does not change in world space,\n\t// although must now be relative to the new union camera.\n\tvar near2 = near + zOffset;\n\tvar far2 = far + zOffset;\n\tvar left2 = left - xOffset;\n\tvar right2 = right + ( ipd - xOffset );\n\tvar top2 = topFov * far / far2 * near2;\n\tvar bottom2 = bottomFov * far / far2 * near2;\n\n\tcamera.projectionMatrix.makePerspective( left2, right2, top2, bottom2, near2, far2 );\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebVRManager( renderer ) {\n\n\tvar renderWidth, renderHeight;\n\tvar scope = this;\n\n\tvar device = null;\n\tvar frameData = null;\n\n\tvar poseTarget = null;\n\n\tvar controllers = [];\n\tvar standingMatrix = new Matrix4();\n\tvar standingMatrixInverse = new Matrix4();\n\n\tvar framebufferScaleFactor = 1.0;\n\n\tvar referenceSpaceType = 'local-floor';\n\n\tif ( typeof window !== 'undefined' && 'VRFrameData' in window ) {\n\n\t\tframeData = new window.VRFrameData();\n\t\twindow.addEventListener( 'vrdisplaypresentchange', onVRDisplayPresentChange, false );\n\n\t}\n\n\tvar matrixWorldInverse = new Matrix4();\n\tvar tempQuaternion = new Quaternion();\n\tvar tempPosition = new Vector3();\n\n\tvar cameraL = new PerspectiveCamera();\n\tcameraL.viewport = new Vector4();\n\tcameraL.layers.enable( 1 );\n\n\tvar cameraR = new PerspectiveCamera();\n\tcameraR.viewport = new Vector4();\n\tcameraR.layers.enable( 2 );\n\n\tvar cameraVR = new ArrayCamera( [ cameraL, cameraR ] );\n\tcameraVR.layers.enable( 1 );\n\tcameraVR.layers.enable( 2 );\n\n\t//\n\n\tfunction isPresenting() {\n\n\t\treturn device !== null && device.isPresenting === true;\n\n\t}\n\n\tvar currentSize = new Vector2(), currentPixelRatio;\n\n\tfunction onVRDisplayPresentChange() {\n\n\t\tif ( isPresenting() ) {\n\n\t\t\tvar eyeParameters = device.getEyeParameters( 'left' );\n\t\t\trenderWidth = 2 * eyeParameters.renderWidth * framebufferScaleFactor;\n\t\t\trenderHeight = eyeParameters.renderHeight * framebufferScaleFactor;\n\n\t\t\tcurrentPixelRatio = renderer.getPixelRatio();\n\t\t\trenderer.getSize( currentSize );\n\n\t\t\trenderer.setDrawingBufferSize( renderWidth, renderHeight, 1 );\n\n\t\t\tcameraL.viewport.set( 0, 0, renderWidth / 2, renderHeight );\n\t\t\tcameraR.viewport.set( renderWidth / 2, 0, renderWidth / 2, renderHeight );\n\n\t\t\tanimation.start();\n\n\t\t} else {\n\n\t\t\tif ( scope.enabled ) {\n\n\t\t\t\trenderer.setDrawingBufferSize( currentSize.width, currentSize.height, currentPixelRatio );\n\n\t\t\t}\n\n\t\t\tanimation.stop();\n\n\t\t}\n\n\t}\n\n\t//\n\n\tvar triggers = [];\n\n\tfunction findGamepad( id ) {\n\n\t\tvar gamepads = navigator.getGamepads && navigator.getGamepads();\n\n\t\tfor ( var i = 0, j = 0, l = gamepads.length; i < l; i ++ ) {\n\n\t\t\tvar gamepad = gamepads[ i ];\n\n\t\t\tif ( gamepad && ( gamepad.id === 'Daydream Controller' ||\n\t\t\t\tgamepad.id === 'Gear VR Controller' || gamepad.id === 'Oculus Go Controller' ||\n\t\t\t\tgamepad.id === 'OpenVR Gamepad' || gamepad.id.startsWith( 'Oculus Touch' ) ||\n\t\t\t\tgamepad.id.startsWith( 'Spatial Controller' ) ) ) {\n\n\t\t\t\tif ( j === id ) return gamepad;\n\n\t\t\t\tj ++;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateControllers() {\n\n\t\tfor ( var i = 0; i < controllers.length; i ++ ) {\n\n\t\t\tvar controller = controllers[ i ];\n\n\t\t\tvar gamepad = findGamepad( i );\n\n\t\t\tif ( gamepad !== undefined && gamepad.pose !== undefined ) {\n\n\t\t\t\tif ( gamepad.pose === null ) return;\n\n\t\t\t\t// Pose\n\n\t\t\t\tvar pose = gamepad.pose;\n\n\t\t\t\tif ( pose.hasPosition === false ) controller.position.set( 0.2, - 0.6, - 0.05 );\n\n\t\t\t\tif ( pose.position !== null ) controller.position.fromArray( pose.position );\n\t\t\t\tif ( pose.orientation !== null ) controller.quaternion.fromArray( pose.orientation );\n\t\t\t\tcontroller.matrix.compose( controller.position, controller.quaternion, controller.scale );\n\t\t\t\tcontroller.matrix.premultiply( standingMatrix );\n\t\t\t\tcontroller.matrix.decompose( controller.position, controller.quaternion, controller.scale );\n\t\t\t\tcontroller.matrixWorldNeedsUpdate = true;\n\t\t\t\tcontroller.visible = true;\n\n\t\t\t\t// Trigger\n\n\t\t\t\tvar buttonId = gamepad.id === 'Daydream Controller' ? 0 : 1;\n\n\t\t\t\tif ( triggers[ i ] === undefined ) triggers[ i ] = false;\n\n\t\t\t\tif ( triggers[ i ] !== gamepad.buttons[ buttonId ].pressed ) {\n\n\t\t\t\t\ttriggers[ i ] = gamepad.buttons[ buttonId ].pressed;\n\n\t\t\t\t\tif ( triggers[ i ] === true ) {\n\n\t\t\t\t\t\tcontroller.dispatchEvent( { type: 'selectstart' } );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tcontroller.dispatchEvent( { type: 'selectend' } );\n\t\t\t\t\t\tcontroller.dispatchEvent( { type: 'select' } );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tcontroller.visible = false;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateViewportFromBounds( viewport, bounds ) {\n\n\t\tif ( bounds !== null && bounds.length === 4 ) {\n\n\t\t\tviewport.set( bounds[ 0 ] * renderWidth, bounds[ 1 ] * renderHeight, bounds[ 2 ] * renderWidth, bounds[ 3 ] * renderHeight );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tthis.enabled = false;\n\n\tthis.getController = function ( id ) {\n\n\t\tvar controller = controllers[ id ];\n\n\t\tif ( controller === undefined ) {\n\n\t\t\tcontroller = new Group();\n\t\t\tcontroller.matrixAutoUpdate = false;\n\t\t\tcontroller.visible = false;\n\n\t\t\tcontrollers[ id ] = controller;\n\n\t\t}\n\n\t\treturn controller;\n\n\t};\n\n\tthis.getDevice = function () {\n\n\t\treturn device;\n\n\t};\n\n\tthis.setDevice = function ( value ) {\n\n\t\tif ( value !== undefined ) device = value;\n\n\t\tanimation.setContext( value );\n\n\t};\n\n\tthis.setFramebufferScaleFactor = function ( value ) {\n\n\t\tframebufferScaleFactor = value;\n\n\t};\n\n\tthis.setReferenceSpaceType = function ( value ) {\n\n\t\treferenceSpaceType = value;\n\n\t};\n\n\tthis.setPoseTarget = function ( object ) {\n\n\t\tif ( object !== undefined ) poseTarget = object;\n\n\t};\n\n\tthis.getCamera = function ( camera ) {\n\n\t\tvar userHeight = referenceSpaceType === 'local-floor' ? 1.6 : 0;\n\n\t\tif ( isPresenting() === false ) {\n\n\t\t\tcamera.position.set( 0, userHeight, 0 );\n\t\t\tcamera.rotation.set( 0, 0, 0 );\n\n\t\t\treturn camera;\n\n\t\t}\n\n\t\tdevice.depthNear = camera.near;\n\t\tdevice.depthFar = camera.far;\n\n\t\tdevice.getFrameData( frameData );\n\n\t\t//\n\n\t\tif ( referenceSpaceType === 'local-floor' ) {\n\n\t\t\tvar stageParameters = device.stageParameters;\n\n\t\t\tif ( stageParameters ) {\n\n\t\t\t\tstandingMatrix.fromArray( stageParameters.sittingToStandingTransform );\n\n\t\t\t} else {\n\n\t\t\t\tstandingMatrix.makeTranslation( 0, userHeight, 0 );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tvar pose = frameData.pose;\n\t\tvar poseObject = poseTarget !== null ? poseTarget : camera;\n\n\t\t// We want to manipulate poseObject by its position and quaternion components since users may rely on them.\n\t\tposeObject.matrix.copy( standingMatrix );\n\t\tposeObject.matrix.decompose( poseObject.position, poseObject.quaternion, poseObject.scale );\n\n\t\tif ( pose.orientation !== null ) {\n\n\t\t\ttempQuaternion.fromArray( pose.orientation );\n\t\t\tposeObject.quaternion.multiply( tempQuaternion );\n\n\t\t}\n\n\t\tif ( pose.position !== null ) {\n\n\t\t\ttempQuaternion.setFromRotationMatrix( standingMatrix );\n\t\t\ttempPosition.fromArray( pose.position );\n\t\t\ttempPosition.applyQuaternion( tempQuaternion );\n\t\t\tposeObject.position.add( tempPosition );\n\n\t\t}\n\n\t\tposeObject.updateMatrixWorld();\n\n\t\t//\n\n\t\tcameraL.near = camera.near;\n\t\tcameraR.near = camera.near;\n\n\t\tcameraL.far = camera.far;\n\t\tcameraR.far = camera.far;\n\n\t\tcameraL.matrixWorldInverse.fromArray( frameData.leftViewMatrix );\n\t\tcameraR.matrixWorldInverse.fromArray( frameData.rightViewMatrix );\n\n\t\t// TODO (mrdoob) Double check this code\n\n\t\tstandingMatrixInverse.getInverse( standingMatrix );\n\n\t\tif ( referenceSpaceType === 'local-floor' ) {\n\n\t\t\tcameraL.matrixWorldInverse.multiply( standingMatrixInverse );\n\t\t\tcameraR.matrixWorldInverse.multiply( standingMatrixInverse );\n\n\t\t}\n\n\t\tvar parent = poseObject.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tmatrixWorldInverse.getInverse( parent.matrixWorld );\n\n\t\t\tcameraL.matrixWorldInverse.multiply( matrixWorldInverse );\n\t\t\tcameraR.matrixWorldInverse.multiply( matrixWorldInverse );\n\n\t\t}\n\n\t\t// envMap and Mirror needs camera.matrixWorld\n\n\t\tcameraL.matrixWorld.getInverse( cameraL.matrixWorldInverse );\n\t\tcameraR.matrixWorld.getInverse( cameraR.matrixWorldInverse );\n\n\t\tcameraL.projectionMatrix.fromArray( frameData.leftProjectionMatrix );\n\t\tcameraR.projectionMatrix.fromArray( frameData.rightProjectionMatrix );\n\n\t\tsetProjectionFromUnion( cameraVR, cameraL, cameraR );\n\n\t\t//\n\n\t\tvar layers = device.getLayers();\n\n\t\tif ( layers.length ) {\n\n\t\t\tvar layer = layers[ 0 ];\n\n\t\t\tupdateViewportFromBounds( cameraL.viewport, layer.leftBounds );\n\t\t\tupdateViewportFromBounds( cameraR.viewport, layer.rightBounds );\n\n\t\t}\n\n\t\tupdateControllers();\n\n\t\treturn cameraVR;\n\n\t};\n\n\tthis.getStandingMatrix = function () {\n\n\t\treturn standingMatrix;\n\n\t};\n\n\tthis.isPresenting = isPresenting;\n\n\t// Animation Loop\n\n\tvar animation = new WebGLAnimation();\n\n\tthis.setAnimationLoop = function ( callback ) {\n\n\t\tanimation.setAnimationLoop( callback );\n\n\t\tif ( isPresenting() ) animation.start();\n\n\t};\n\n\tthis.submitFrame = function () {\n\n\t\tif ( isPresenting() ) device.submitFrame();\n\n\t};\n\n\tthis.dispose = function () {\n\n\t\tif ( typeof window !== 'undefined' ) {\n\n\t\t\twindow.removeEventListener( 'vrdisplaypresentchange', onVRDisplayPresentChange );\n\n\t\t}\n\n\t};\n\n\t// DEPRECATED\n\n\tthis.setFrameOfReferenceType = function () {\n\n\t\tconsole.warn( 'THREE.WebVRManager: setFrameOfReferenceType() has been deprecated.' );\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebXRManager( renderer ) {\n\n\tvar gl = renderer.context;\n\n\tvar session = null;\n\n\tvar referenceSpace = null;\n\tvar referenceSpaceType = 'local-floor';\n\n\tvar pose = null;\n\n\tvar controllers = [];\n\tvar inputSources = [];\n\n\tfunction isPresenting() {\n\n\t\treturn session !== null && referenceSpace !== null;\n\n\t}\n\n\t//\n\n\tvar cameraL = new PerspectiveCamera();\n\tcameraL.layers.enable( 1 );\n\tcameraL.viewport = new Vector4();\n\n\tvar cameraR = new PerspectiveCamera();\n\tcameraR.layers.enable( 2 );\n\tcameraR.viewport = new Vector4();\n\n\tvar cameraVR = new ArrayCamera( [ cameraL, cameraR ] );\n\tcameraVR.layers.enable( 1 );\n\tcameraVR.layers.enable( 2 );\n\n\t//\n\n\tthis.enabled = false;\n\n\tthis.getController = function ( id ) {\n\n\t\tvar controller = controllers[ id ];\n\n\t\tif ( controller === undefined ) {\n\n\t\t\tcontroller = new Group();\n\t\t\tcontroller.matrixAutoUpdate = false;\n\t\t\tcontroller.visible = false;\n\n\t\t\tcontrollers[ id ] = controller;\n\n\t\t}\n\n\t\treturn controller;\n\n\t};\n\n\t//\n\n\tfunction onSessionEvent( event ) {\n\n\t\tfor ( var i = 0; i < controllers.length; i ++ ) {\n\n\t\t\tif ( inputSources[ i ] === event.inputSource ) {\n\n\t\t\t\tcontrollers[ i ].dispatchEvent( { type: event.type } );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction onSessionEnd() {\n\n\t\trenderer.setFramebuffer( null );\n\t\trenderer.setRenderTarget( renderer.getRenderTarget() ); // Hack #15830\n\t\tanimation.stop();\n\n\t}\n\n\tfunction onRequestReferenceSpace( value ) {\n\n\t\treferenceSpace = value;\n\n\t\tanimation.setContext( session );\n\t\tanimation.start();\n\n\t}\n\n\tthis.setFramebufferScaleFactor = function ( value ) {\n\n\t};\n\n\tthis.setReferenceSpaceType = function ( value ) {\n\n\t\treferenceSpaceType = value;\n\n\t};\n\n\tthis.getSession = function () {\n\n\t\treturn session;\n\n\t};\n\n\tthis.setSession = function ( value ) {\n\n\t\tsession = value;\n\n\t\tif ( session !== null ) {\n\n\t\t\tsession.addEventListener( 'select', onSessionEvent );\n\t\t\tsession.addEventListener( 'selectstart', onSessionEvent );\n\t\t\tsession.addEventListener( 'selectend', onSessionEvent );\n\t\t\tsession.addEventListener( 'end', onSessionEnd );\n\n\t\t\tsession.updateRenderState( { baseLayer: new XRWebGLLayer( session, gl ) } );\n\n\t\t\tsession.requestReferenceSpace( referenceSpaceType ).then( onRequestReferenceSpace );\n\n\t\t\t//\n\n\t\t\tinputSources = session.inputSources;\n\n\t\t\tsession.addEventListener( 'inputsourceschange', function () {\n\n\t\t\t\tinputSources = session.inputSources;\n\t\t\t\tconsole.log( inputSources );\n\n\t\t\t\tfor ( var i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\t\tvar controller = controllers[ i ];\n\t\t\t\t\tcontroller.userData.inputSource = inputSources[ i ];\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t}\n\n\t};\n\n\tfunction updateCamera( camera, parent ) {\n\n\t\tif ( parent === null ) {\n\n\t\t\tcamera.matrixWorld.copy( camera.matrix );\n\n\t\t} else {\n\n\t\t\tcamera.matrixWorld.multiplyMatrices( parent.matrixWorld, camera.matrix );\n\n\t\t}\n\n\t\tcamera.matrixWorldInverse.getInverse( camera.matrixWorld );\n\n\t}\n\n\tthis.getCamera = function ( camera ) {\n\n\t\tif ( isPresenting() ) {\n\n\t\t\tvar parent = camera.parent;\n\t\t\tvar cameras = cameraVR.cameras;\n\n\t\t\tupdateCamera( cameraVR, parent );\n\n\t\t\tfor ( var i = 0; i < cameras.length; i ++ ) {\n\n\t\t\t\tupdateCamera( cameras[ i ], parent );\n\n\t\t\t}\n\n\t\t\t// update camera and its children\n\n\t\t\tcamera.matrixWorld.copy( cameraVR.matrixWorld );\n\n\t\t\tvar children = camera.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].updateMatrixWorld( true );\n\n\t\t\t}\n\n\t\t\tsetProjectionFromUnion( cameraVR, cameraL, cameraR );\n\n\t\t\treturn cameraVR;\n\n\t\t}\n\n\t\treturn camera;\n\n\t};\n\n\tthis.isPresenting = isPresenting;\n\n\t// Animation Loop\n\n\tvar onAnimationFrameCallback = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tpose = frame.getViewerPose( referenceSpace );\n\n\t\tif ( pose !== null ) {\n\n\t\t\tvar views = pose.views;\n\t\t\tvar baseLayer = session.renderState.baseLayer;\n\n\t\t\trenderer.setFramebuffer( baseLayer.framebuffer );\n\n\t\t\tfor ( var i = 0; i < views.length; i ++ ) {\n\n\t\t\t\tvar view = views[ i ];\n\t\t\t\tvar viewport = baseLayer.getViewport( view );\n\t\t\t\tvar viewMatrix = view.transform.inverse.matrix;\n\n\t\t\t\tvar camera = cameraVR.cameras[ i ];\n\t\t\t\tcamera.matrix.fromArray( viewMatrix ).getInverse( camera.matrix );\n\t\t\t\tcamera.projectionMatrix.fromArray( view.projectionMatrix );\n\t\t\t\tcamera.viewport.set( viewport.x, viewport.y, viewport.width, viewport.height );\n\n\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\tcameraVR.matrix.copy( camera.matrix );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tfor ( var i = 0; i < controllers.length; i ++ ) {\n\n\t\t\tvar controller = controllers[ i ];\n\n\t\t\tvar inputSource = inputSources[ i ];\n\n\t\t\tif ( inputSource ) {\n\n\t\t\t\tvar inputPose = frame.getPose( inputSource.targetRaySpace, referenceSpace );\n\n\t\t\t\tif ( inputPose !== null ) {\n\n\t\t\t\t\tcontroller.matrix.fromArray( inputPose.transform.matrix );\n\t\t\t\t\tcontroller.matrix.decompose( controller.position, controller.rotation, controller.scale );\n\t\t\t\t\tcontroller.visible = true;\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tcontroller.visible = false;\n\n\t\t}\n\n\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\n\n\t}\n\n\tvar animation = new WebGLAnimation();\n\tanimation.setAnimationLoop( onAnimationFrame );\n\n\tthis.setAnimationLoop = function ( callback ) {\n\n\t\tonAnimationFrameCallback = callback;\n\n\t};\n\n\tthis.dispose = function () {};\n\n\t// DEPRECATED\n\n\tthis.getStandingMatrix = function () {\n\n\t\tconsole.warn( 'THREE.WebXRManager: getStandingMatrix() is no longer needed.' );\n\t\treturn new Matrix4();\n\n\t};\n\n\tthis.getDevice = function () {\n\n\t\tconsole.warn( 'THREE.WebXRManager: getDevice() has been deprecated.' );\n\n\t};\n\n\tthis.setDevice = function () {\n\n\t\tconsole.warn( 'THREE.WebXRManager: setDevice() has been deprecated.' );\n\n\t};\n\n\tthis.setFrameOfReferenceType = function () {\n\n\t\tconsole.warn( 'THREE.WebXRManager: setFrameOfReferenceType() has been deprecated.' );\n\n\t};\n\n\tthis.submitFrame = function () {};\n\n}\n\n/**\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author szimek / https://github.com/szimek/\n * @author tschw\n */\n\nfunction WebGLRenderer( parameters ) {\n\n\tconsole.log( 'THREE.WebGLRenderer', REVISION );\n\n\tparameters = parameters || {};\n\n\tvar _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' ),\n\t\t_context = parameters.context !== undefined ? parameters.context : null,\n\n\t\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false,\n\t\t_depth = parameters.depth !== undefined ? parameters.depth : true,\n\t\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n\t\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n\t\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n\t\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\n\t\t_powerPreference = parameters.powerPreference !== undefined ? parameters.powerPreference : 'default',\n\t\t_failIfMajorPerformanceCaveat = parameters.failIfMajorPerformanceCaveat !== undefined ? parameters.failIfMajorPerformanceCaveat : false;\n\n\tvar currentRenderList = null;\n\tvar currentRenderState = null;\n\n\t// public properties\n\n\tthis.domElement = _canvas;\n\tthis.context = null;\n\n\t// Debug configuration container\n\tthis.debug = {\n\n\t\t/**\n\t\t * Enables error checking and reporting when shader programs are being compiled\n\t\t * @type {boolean}\n\t\t */\n\t\tcheckShaderErrors: true\n\t};\n\n\t// clearing\n\n\tthis.autoClear = true;\n\tthis.autoClearColor = true;\n\tthis.autoClearDepth = true;\n\tthis.autoClearStencil = true;\n\n\t// scene graph\n\n\tthis.sortObjects = true;\n\n\t// user-defined clipping\n\n\tthis.clippingPlanes = [];\n\tthis.localClippingEnabled = false;\n\n\t// physically based shading\n\n\tthis.gammaFactor = 2.0;\t// for backwards compatibility\n\tthis.gammaInput = false;\n\tthis.gammaOutput = false;\n\n\t// physical lights\n\n\tthis.physicallyCorrectLights = false;\n\n\t// tone mapping\n\n\tthis.toneMapping = LinearToneMapping;\n\tthis.toneMappingExposure = 1.0;\n\tthis.toneMappingWhitePoint = 1.0;\n\n\t// morphs\n\n\tthis.maxMorphTargets = 8;\n\tthis.maxMorphNormals = 4;\n\n\t// internal properties\n\n\tvar _this = this,\n\n\t\t_isContextLost = false,\n\n\t\t// internal state cache\n\n\t\t_framebuffer = null,\n\n\t\t_currentActiveCubeFace = 0,\n\t\t_currentActiveMipmapLevel = 0,\n\t\t_currentRenderTarget = null,\n\t\t_currentFramebuffer = null,\n\t\t_currentMaterialId = - 1,\n\n\t\t// geometry and program caching\n\n\t\t_currentGeometryProgram = {\n\t\t\tgeometry: null,\n\t\t\tprogram: null,\n\t\t\twireframe: false\n\t\t},\n\n\t\t_currentCamera = null,\n\t\t_currentArrayCamera = null,\n\n\t\t_currentViewport = new Vector4(),\n\t\t_currentScissor = new Vector4(),\n\t\t_currentScissorTest = null,\n\n\t\t//\n\n\t\t_width = _canvas.width,\n\t\t_height = _canvas.height,\n\n\t\t_pixelRatio = 1,\n\n\t\t_viewport = new Vector4( 0, 0, _width, _height ),\n\t\t_scissor = new Vector4( 0, 0, _width, _height ),\n\t\t_scissorTest = false,\n\n\t\t// frustum\n\n\t\t_frustum = new Frustum(),\n\n\t\t// clipping\n\n\t\t_clipping = new WebGLClipping(),\n\t\t_clippingEnabled = false,\n\t\t_localClippingEnabled = false,\n\n\t\t// camera matrices cache\n\n\t\t_projScreenMatrix = new Matrix4(),\n\n\t\t_vector3 = new Vector3();\n\n\tfunction getTargetPixelRatio() {\n\n\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t}\n\n\t// initialize\n\n\tvar _gl;\n\n\ttry {\n\n\t\tvar contextAttributes = {\n\t\t\talpha: _alpha,\n\t\t\tdepth: _depth,\n\t\t\tstencil: _stencil,\n\t\t\tantialias: _antialias,\n\t\t\tpremultipliedAlpha: _premultipliedAlpha,\n\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer,\n\t\t\tpowerPreference: _powerPreference,\n\t\t\tfailIfMajorPerformanceCaveat: _failIfMajorPerformanceCaveat,\n\t\t\txrCompatible: true\n\t\t};\n\n\t\t// event listeners must be registered before WebGL context is created, see #12753\n\n\t\t_canvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\t\t_canvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\n\n\t\t_gl = _context || _canvas.getContext( 'webgl', contextAttributes ) || _canvas.getContext( 'experimental-webgl', contextAttributes );\n\n\t\tif ( _gl === null ) {\n\n\t\t\tif ( _canvas.getContext( 'webgl' ) !== null ) {\n\n\t\t\t\tthrow new Error( 'Error creating WebGL context with your selected attributes.' );\n\n\t\t\t} else {\n\n\t\t\t\tthrow new Error( 'Error creating WebGL context.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\t\tif ( _gl.getShaderPrecisionFormat === undefined ) {\n\n\t\t\t_gl.getShaderPrecisionFormat = function () {\n\n\t\t\t\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\n\n\t\t\t};\n\n\t\t}\n\n\t} catch ( error ) {\n\n\t\tconsole.error( 'THREE.WebGLRenderer: ' + error.message );\n\t\tthrow error;\n\n\t}\n\n\tvar extensions, capabilities, state, info;\n\tvar properties, textures, attributes, geometries, objects;\n\tvar programCache, renderLists, renderStates;\n\n\tvar background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\n\tvar utils;\n\n\tfunction initGLContext() {\n\n\t\textensions = new WebGLExtensions( _gl );\n\n\t\tcapabilities = new WebGLCapabilities( _gl, extensions, parameters );\n\n\t\tif ( ! capabilities.isWebGL2 ) {\n\n\t\t\textensions.get( 'WEBGL_depth_texture' );\n\t\t\textensions.get( 'OES_texture_float' );\n\t\t\textensions.get( 'OES_texture_half_float' );\n\t\t\textensions.get( 'OES_texture_half_float_linear' );\n\t\t\textensions.get( 'OES_standard_derivatives' );\n\t\t\textensions.get( 'OES_element_index_uint' );\n\t\t\textensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t}\n\n\t\textensions.get( 'OES_texture_float_linear' );\n\n\t\tutils = new WebGLUtils( _gl, extensions, capabilities );\n\n\t\tstate = new WebGLState( _gl, extensions, utils, capabilities );\n\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ) );\n\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ) );\n\n\t\tinfo = new WebGLInfo( _gl );\n\t\tproperties = new WebGLProperties();\n\t\ttextures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info );\n\t\tattributes = new WebGLAttributes( _gl );\n\t\tgeometries = new WebGLGeometries( _gl, attributes, info );\n\t\tobjects = new WebGLObjects( geometries, info );\n\t\tmorphtargets = new WebGLMorphtargets( _gl );\n\t\tprogramCache = new WebGLPrograms( _this, extensions, capabilities, textures );\n\t\trenderLists = new WebGLRenderLists();\n\t\trenderStates = new WebGLRenderStates();\n\n\t\tbackground = new WebGLBackground( _this, state, objects, _premultipliedAlpha );\n\n\t\tbufferRenderer = new WebGLBufferRenderer( _gl, extensions, info, capabilities );\n\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, info, capabilities );\n\n\t\tinfo.programs = programCache.programs;\n\n\t\t_this.context = _gl;\n\t\t_this.capabilities = capabilities;\n\t\t_this.extensions = extensions;\n\t\t_this.properties = properties;\n\t\t_this.renderLists = renderLists;\n\t\t_this.state = state;\n\t\t_this.info = info;\n\n\t}\n\n\tinitGLContext();\n\n\t// vr\n\n\tvar vr = ( typeof navigator !== 'undefined' && 'xr' in navigator && 'supportsSession' in navigator.xr ) ? new WebXRManager( _this ) : new WebVRManager( _this );\n\n\tthis.vr = vr;\n\n\t// shadow map\n\n\tvar shadowMap = new WebGLShadowMap( _this, objects, capabilities.maxTextureSize );\n\n\tthis.shadowMap = shadowMap;\n\n\t// API\n\n\tthis.getContext = function () {\n\n\t\treturn _gl;\n\n\t};\n\n\tthis.getContextAttributes = function () {\n\n\t\treturn _gl.getContextAttributes();\n\n\t};\n\n\tthis.forceContextLoss = function () {\n\n\t\tvar extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.loseContext();\n\n\t};\n\n\tthis.forceContextRestore = function () {\n\n\t\tvar extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.restoreContext();\n\n\t};\n\n\tthis.getPixelRatio = function () {\n\n\t\treturn _pixelRatio;\n\n\t};\n\n\tthis.setPixelRatio = function ( value ) {\n\n\t\tif ( value === undefined ) return;\n\n\t\t_pixelRatio = value;\n\n\t\tthis.setSize( _width, _height, false );\n\n\t};\n\n\tthis.getSize = function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'WebGLRenderer: .getsize() now requires a Vector2 as an argument' );\n\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn target.set( _width, _height );\n\n\t};\n\n\tthis.setSize = function ( width, height, updateStyle ) {\n\n\t\tif ( vr.isPresenting() ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_canvas.width = width * _pixelRatio;\n\t\t_canvas.height = height * _pixelRatio;\n\n\t\tif ( updateStyle !== false ) {\n\n\t\t\t_canvas.style.width = width + 'px';\n\t\t\t_canvas.style.height = height + 'px';\n\n\t\t}\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.getDrawingBufferSize = function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument' );\n\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn target.set( _width * _pixelRatio, _height * _pixelRatio );\n\n\t};\n\n\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_pixelRatio = pixelRatio;\n\n\t\t_canvas.width = width * pixelRatio;\n\t\t_canvas.height = height * pixelRatio;\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.getCurrentViewport = function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument' );\n\n\t\t\ttarget = new Vector4();\n\n\t\t}\n\n\t\treturn target.copy( _currentViewport );\n\n\t};\n\n\tthis.getViewport = function ( target ) {\n\n\t\treturn target.copy( _viewport );\n\n\t};\n\n\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\tif ( x.isVector4 ) {\n\n\t\t\t_viewport.set( x.x, x.y, x.z, x.w );\n\n\t\t} else {\n\n\t\t\t_viewport.set( x, y, width, height );\n\n\t\t}\n\n\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ) );\n\n\t};\n\n\tthis.getScissor = function ( target ) {\n\n\t\treturn target.copy( _scissor );\n\n\t};\n\n\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\tif ( x.isVector4 ) {\n\n\t\t\t_scissor.set( x.x, x.y, x.z, x.w );\n\n\t\t} else {\n\n\t\t\t_scissor.set( x, y, width, height );\n\n\t\t}\n\n\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ) );\n\n\t};\n\n\tthis.getScissorTest = function () {\n\n\t\treturn _scissorTest;\n\n\t};\n\n\tthis.setScissorTest = function ( boolean ) {\n\n\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t};\n\n\t// Clearing\n\n\tthis.getClearColor = function () {\n\n\t\treturn background.getClearColor();\n\n\t};\n\n\tthis.setClearColor = function () {\n\n\t\tbackground.setClearColor.apply( background, arguments );\n\n\t};\n\n\tthis.getClearAlpha = function () {\n\n\t\treturn background.getClearAlpha();\n\n\t};\n\n\tthis.setClearAlpha = function () {\n\n\t\tbackground.setClearAlpha.apply( background, arguments );\n\n\t};\n\n\tthis.clear = function ( color, depth, stencil ) {\n\n\t\tvar bits = 0;\n\n\t\tif ( color === undefined || color ) bits |= 16384;\n\t\tif ( depth === undefined || depth ) bits |= 256;\n\t\tif ( stencil === undefined || stencil ) bits |= 1024;\n\n\t\t_gl.clear( bits );\n\n\t};\n\n\tthis.clearColor = function () {\n\n\t\tthis.clear( true, false, false );\n\n\t};\n\n\tthis.clearDepth = function () {\n\n\t\tthis.clear( false, true, false );\n\n\t};\n\n\tthis.clearStencil = function () {\n\n\t\tthis.clear( false, false, true );\n\n\t};\n\n\t//\n\n\tthis.dispose = function () {\n\n\t\t_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\t\t_canvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\n\n\t\trenderLists.dispose();\n\t\trenderStates.dispose();\n\t\tproperties.dispose();\n\t\tobjects.dispose();\n\n\t\tvr.dispose();\n\n\t\tanimation.stop();\n\n\t};\n\n\t// Events\n\n\tfunction onContextLost( event ) {\n\n\t\tevent.preventDefault();\n\n\t\tconsole.log( 'THREE.WebGLRenderer: Context Lost.' );\n\n\t\t_isContextLost = true;\n\n\t}\n\n\tfunction onContextRestore( /* event */ ) {\n\n\t\tconsole.log( 'THREE.WebGLRenderer: Context Restored.' );\n\n\t\t_isContextLost = false;\n\n\t\tinitGLContext();\n\n\t}\n\n\tfunction onMaterialDispose( event ) {\n\n\t\tvar material = event.target;\n\n\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\tdeallocateMaterial( material );\n\n\t}\n\n\t// Buffer deallocation\n\n\tfunction deallocateMaterial( material ) {\n\n\t\treleaseMaterialProgramReference( material );\n\n\t\tproperties.remove( material );\n\n\t}\n\n\n\tfunction releaseMaterialProgramReference( material ) {\n\n\t\tvar programInfo = properties.get( material ).program;\n\n\t\tmaterial.program = undefined;\n\n\t\tif ( programInfo !== undefined ) {\n\n\t\t\tprogramCache.releaseProgram( programInfo );\n\n\t\t}\n\n\t}\n\n\t// Buffer rendering\n\n\tfunction renderObjectImmediate( object, program ) {\n\n\t\tobject.render( function ( object ) {\n\n\t\t\t_this.renderBufferImmediate( object, program );\n\n\t\t} );\n\n\t}\n\n\tthis.renderBufferImmediate = function ( object, program ) {\n\n\t\tstate.initAttributes();\n\n\t\tvar buffers = properties.get( object );\n\n\t\tif ( object.hasPositions && ! buffers.position ) buffers.position = _gl.createBuffer();\n\t\tif ( object.hasNormals && ! buffers.normal ) buffers.normal = _gl.createBuffer();\n\t\tif ( object.hasUvs && ! buffers.uv ) buffers.uv = _gl.createBuffer();\n\t\tif ( object.hasColors && ! buffers.color ) buffers.color = _gl.createBuffer();\n\n\t\tvar programAttributes = program.getAttributes();\n\n\t\tif ( object.hasPositions ) {\n\n\t\t\t_gl.bindBuffer( 34962, buffers.position );\n\t\t\t_gl.bufferData( 34962, object.positionArray, 35048 );\n\n\t\t\tstate.enableAttribute( programAttributes.position );\n\t\t\t_gl.vertexAttribPointer( programAttributes.position, 3, 5126, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasNormals ) {\n\n\t\t\t_gl.bindBuffer( 34962, buffers.normal );\n\t\t\t_gl.bufferData( 34962, object.normalArray, 35048 );\n\n\t\t\tstate.enableAttribute( programAttributes.normal );\n\t\t\t_gl.vertexAttribPointer( programAttributes.normal, 3, 5126, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasUvs ) {\n\n\t\t\t_gl.bindBuffer( 34962, buffers.uv );\n\t\t\t_gl.bufferData( 34962, object.uvArray, 35048 );\n\n\t\t\tstate.enableAttribute( programAttributes.uv );\n\t\t\t_gl.vertexAttribPointer( programAttributes.uv, 2, 5126, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasColors ) {\n\n\t\t\t_gl.bindBuffer( 34962, buffers.color );\n\t\t\t_gl.bufferData( 34962, object.colorArray, 35048 );\n\n\t\t\tstate.enableAttribute( programAttributes.color );\n\t\t\t_gl.vertexAttribPointer( programAttributes.color, 3, 5126, false, 0, 0 );\n\n\t\t}\n\n\t\tstate.disableUnusedAttributes();\n\n\t\t_gl.drawArrays( 4, 0, object.count );\n\n\t\tobject.count = 0;\n\n\t};\n\n\tthis.renderBufferDirect = function ( camera, fog, geometry, material, object, group ) {\n\n\t\tvar frontFaceCW = ( object.isMesh && object.matrixWorld.determinant() < 0 );\n\n\t\tstate.setMaterial( material, frontFaceCW );\n\n\t\tvar program = setProgram( camera, fog, material, object );\n\n\t\tvar updateBuffers = false;\n\n\t\tif ( _currentGeometryProgram.geometry !== geometry.id ||\n\t\t\t_currentGeometryProgram.program !== program.id ||\n\t\t\t_currentGeometryProgram.wireframe !== ( material.wireframe === true ) ) {\n\n\t\t\t_currentGeometryProgram.geometry = geometry.id;\n\t\t\t_currentGeometryProgram.program = program.id;\n\t\t\t_currentGeometryProgram.wireframe = material.wireframe === true;\n\t\t\tupdateBuffers = true;\n\n\t\t}\n\n\t\tif ( object.morphTargetInfluences ) {\n\n\t\t\tmorphtargets.update( object, geometry, material, program );\n\n\t\t\tupdateBuffers = true;\n\n\t\t}\n\n\t\t//\n\n\t\tvar index = geometry.index;\n\t\tvar position = geometry.attributes.position;\n\t\tvar rangeFactor = 1;\n\n\t\tif ( material.wireframe === true ) {\n\n\t\t\tindex = geometries.getWireframeAttribute( geometry );\n\t\t\trangeFactor = 2;\n\n\t\t}\n\n\t\tvar attribute;\n\t\tvar renderer = bufferRenderer;\n\n\t\tif ( index !== null ) {\n\n\t\t\tattribute = attributes.get( index );\n\n\t\t\trenderer = indexedBufferRenderer;\n\t\t\trenderer.setIndex( attribute );\n\n\t\t}\n\n\t\tif ( updateBuffers ) {\n\n\t\t\tsetupVertexAttributes( material, program, geometry );\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\t_gl.bindBuffer( 34963, attribute.buffer );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tvar dataCount = Infinity;\n\n\t\tif ( index !== null ) {\n\n\t\t\tdataCount = index.count;\n\n\t\t} else if ( position !== undefined ) {\n\n\t\t\tdataCount = position.count;\n\n\t\t}\n\n\t\tvar rangeStart = geometry.drawRange.start * rangeFactor;\n\t\tvar rangeCount = geometry.drawRange.count * rangeFactor;\n\n\t\tvar groupStart = group !== null ? group.start * rangeFactor : 0;\n\t\tvar groupCount = group !== null ? group.count * rangeFactor : Infinity;\n\n\t\tvar drawStart = Math.max( rangeStart, groupStart );\n\t\tvar drawEnd = Math.min( dataCount, rangeStart + rangeCount, groupStart + groupCount ) - 1;\n\n\t\tvar drawCount = Math.max( 0, drawEnd - drawStart + 1 );\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\t//\n\n\t\tif ( object.isMesh ) {\n\n\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\trenderer.setMode( 1 );\n\n\t\t\t} else {\n\n\t\t\t\tswitch ( object.drawMode ) {\n\n\t\t\t\t\tcase TrianglesDrawMode:\n\t\t\t\t\t\trenderer.setMode( 4 );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase TriangleStripDrawMode:\n\t\t\t\t\t\trenderer.setMode( 5 );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase TriangleFanDrawMode:\n\t\t\t\t\t\trenderer.setMode( 6 );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t} else if ( object.isLine ) {\n\n\t\t\tvar lineWidth = material.linewidth;\n\n\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n\n\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\tif ( object.isLineSegments ) {\n\n\t\t\t\trenderer.setMode( 1 );\n\n\t\t\t} else if ( object.isLineLoop ) {\n\n\t\t\t\trenderer.setMode( 2 );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.setMode( 3 );\n\n\t\t\t}\n\n\t\t} else if ( object.isPoints ) {\n\n\t\t\trenderer.setMode( 0 );\n\n\t\t} else if ( object.isSprite ) {\n\n\t\t\trenderer.setMode( 4 );\n\n\t\t}\n\n\t\tif ( geometry && geometry.isInstancedBufferGeometry ) {\n\n\t\t\tif ( geometry.maxInstancedCount > 0 ) {\n\n\t\t\t\trenderer.renderInstances( geometry, drawStart, drawCount );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t}\n\n\t};\n\n\tfunction setupVertexAttributes( material, program, geometry ) {\n\n\t\tif ( geometry && geometry.isInstancedBufferGeometry && ! capabilities.isWebGL2 ) {\n\n\t\t\tif ( extensions.get( 'ANGLE_instanced_arrays' ) === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.initAttributes();\n\n\t\tvar geometryAttributes = geometry.attributes;\n\n\t\tvar programAttributes = program.getAttributes();\n\n\t\tvar materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\tfor ( var name in programAttributes ) {\n\n\t\t\tvar programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute >= 0 ) {\n\n\t\t\t\tvar geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\tvar normalized = geometryAttribute.normalized;\n\t\t\t\t\tvar size = geometryAttribute.itemSize;\n\n\t\t\t\t\tvar attribute = attributes.get( geometryAttribute );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tvar buffer = attribute.buffer;\n\t\t\t\t\tvar type = attribute.type;\n\t\t\t\t\tvar bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tvar data = geometryAttribute.data;\n\t\t\t\t\t\tvar stride = data.stride;\n\t\t\t\t\t\tvar offset = geometryAttribute.offset;\n\n\t\t\t\t\t\tif ( data && data.isInstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute, data.meshPerAttribute );\n\n\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.enableAttribute( programAttribute );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_gl.bindBuffer( 34962, buffer );\n\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, type, normalized, stride * bytesPerElement, offset * bytesPerElement );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute, geometryAttribute.meshPerAttribute );\n\n\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.enableAttribute( programAttribute );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_gl.bindBuffer( 34962, buffer );\n\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, type, normalized, 0, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\tvar value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\t_gl.vertexAttrib2fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\t_gl.vertexAttrib3fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\t_gl.vertexAttrib4fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t_gl.vertexAttrib1fv( programAttribute, value );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.disableUnusedAttributes();\n\n\t}\n\n\t// Compile\n\n\tthis.compile = function ( scene, camera ) {\n\n\t\tcurrentRenderState = renderStates.get( scene, camera );\n\t\tcurrentRenderState.init();\n\n\t\tscene.traverse( function ( object ) {\n\n\t\t\tif ( object.isLight ) {\n\n\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t\tcurrentRenderState.setupLights( camera );\n\n\t\tscene.traverse( function ( object ) {\n\n\t\t\tif ( object.material ) {\n\n\t\t\t\tif ( Array.isArray( object.material ) ) {\n\n\t\t\t\t\tfor ( var i = 0; i < object.material.length; i ++ ) {\n\n\t\t\t\t\t\tinitMaterial( object.material[ i ], scene.fog, object );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tinitMaterial( object.material, scene.fog, object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t};\n\n\t// Animation Loop\n\n\tvar onAnimationFrameCallback = null;\n\n\tfunction onAnimationFrame( time ) {\n\n\t\tif ( vr.isPresenting() ) return;\n\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\n\n\t}\n\n\tvar animation = new WebGLAnimation();\n\tanimation.setAnimationLoop( onAnimationFrame );\n\n\tif ( typeof window !== 'undefined' ) animation.setContext( window );\n\n\tthis.setAnimationLoop = function ( callback ) {\n\n\t\tonAnimationFrameCallback = callback;\n\t\tvr.setAnimationLoop( callback );\n\n\t\tanimation.start();\n\n\t};\n\n\t// Rendering\n\n\tthis.render = function ( scene, camera ) {\n\n\t\tvar renderTarget, forceClear;\n\n\t\tif ( arguments[ 2 ] !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead.' );\n\t\t\trenderTarget = arguments[ 2 ];\n\n\t\t}\n\n\t\tif ( arguments[ 3 ] !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead.' );\n\t\t\tforceClear = arguments[ 3 ];\n\n\t\t}\n\n\t\tif ( ! ( camera && camera.isCamera ) ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( _isContextLost ) return;\n\n\t\t// reset caching for this frame\n\n\t\t_currentGeometryProgram.geometry = null;\n\t\t_currentGeometryProgram.program = null;\n\t\t_currentGeometryProgram.wireframe = false;\n\t\t_currentMaterialId = - 1;\n\t\t_currentCamera = null;\n\n\t\t// update scene graph\n\n\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t// update camera matrices and frustum\n\n\t\tif ( camera.parent === null ) camera.updateMatrixWorld();\n\n\t\tif ( vr.enabled ) {\n\n\t\t\tcamera = vr.getCamera( camera );\n\n\t\t}\n\n\t\t//\n\n\t\tcurrentRenderState = renderStates.get( scene, camera );\n\t\tcurrentRenderState.init();\n\n\t\tscene.onBeforeRender( _this, scene, camera, renderTarget || _currentRenderTarget );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t_frustum.setFromMatrix( _projScreenMatrix );\n\n\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t_clippingEnabled = _clipping.init( this.clippingPlanes, _localClippingEnabled, camera );\n\n\t\tcurrentRenderList = renderLists.get( scene, camera );\n\t\tcurrentRenderList.init();\n\n\t\tprojectObject( scene, camera, 0, _this.sortObjects );\n\n\t\tif ( _this.sortObjects === true ) {\n\n\t\t\tcurrentRenderList.sort();\n\n\t\t}\n\n\t\t//\n\n\t\tif ( _clippingEnabled ) _clipping.beginShadows();\n\n\t\tvar shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\tshadowMap.render( shadowsArray, scene, camera );\n\n\t\tcurrentRenderState.setupLights( camera );\n\n\t\tif ( _clippingEnabled ) _clipping.endShadows();\n\n\t\t//\n\n\t\tif ( this.info.autoReset ) this.info.reset();\n\n\t\tif ( renderTarget !== undefined ) {\n\n\t\t\tthis.setRenderTarget( renderTarget );\n\n\t\t}\n\n\t\t//\n\n\t\tbackground.render( currentRenderList, scene, camera, forceClear );\n\n\t\t// render scene\n\n\t\tvar opaqueObjects = currentRenderList.opaque;\n\t\tvar transparentObjects = currentRenderList.transparent;\n\n\t\tif ( scene.overrideMaterial ) {\n\n\t\t\tvar overrideMaterial = scene.overrideMaterial;\n\n\t\t\tif ( opaqueObjects.length ) renderObjects( opaqueObjects, scene, camera, overrideMaterial );\n\t\t\tif ( transparentObjects.length ) renderObjects( transparentObjects, scene, camera, overrideMaterial );\n\n\t\t} else {\n\n\t\t\t// opaque pass (front-to-back order)\n\n\t\t\tif ( opaqueObjects.length ) renderObjects( opaqueObjects, scene, camera );\n\n\t\t\t// transparent pass (back-to-front order)\n\n\t\t\tif ( transparentObjects.length ) renderObjects( transparentObjects, scene, camera );\n\n\t\t}\n\n\t\t//\n\n\t\tscene.onAfterRender( _this, scene, camera );\n\n\t\t//\n\n\t\tif ( _currentRenderTarget !== null ) {\n\n\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\t\ttextures.updateRenderTargetMipmap( _currentRenderTarget );\n\n\t\t\t// resolve multisample renderbuffers to a single-sample texture if necessary\n\n\t\t\ttextures.updateMultisampleRenderTarget( _currentRenderTarget );\n\n\t\t}\n\n\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\tstate.buffers.depth.setTest( true );\n\t\tstate.buffers.depth.setMask( true );\n\t\tstate.buffers.color.setMask( true );\n\n\t\tstate.setPolygonOffset( false );\n\n\t\tif ( vr.enabled ) {\n\n\t\t\tvr.submitFrame();\n\n\t\t}\n\n\t\t// _gl.finish();\n\n\t\tcurrentRenderList = null;\n\t\tcurrentRenderState = null;\n\n\t};\n\n\tfunction projectObject( object, camera, groupOrder, sortObjects ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tvar visible = object.layers.test( camera.layers );\n\n\t\tif ( visible ) {\n\n\t\t\tif ( object.isGroup ) {\n\n\t\t\t\tgroupOrder = object.renderOrder;\n\n\t\t\t} else if ( object.isLight ) {\n\n\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar geometry = objects.update( object );\n\t\t\t\t\tvar material = object.material;\n\n\t\t\t\t\tif ( material.visible ) {\n\n\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isImmediateRenderObject ) {\n\n\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t}\n\n\t\t\t\tcurrentRenderList.push( object, null, object.material, groupOrder, _vector3.z, null );\n\n\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\t\tobject.skeleton.update();\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar geometry = objects.update( object );\n\t\t\t\t\tvar material = object.material;\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tvar groups = geometry.groups;\n\n\t\t\t\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tvar group = groups[ i ];\n\t\t\t\t\t\t\tvar groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, groupMaterial, groupOrder, _vector3.z, group );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar children = object.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tprojectObject( children[ i ], camera, groupOrder, sortObjects );\n\n\t\t}\n\n\t}\n\n\tfunction renderObjects( renderList, scene, camera, overrideMaterial ) {\n\n\t\tfor ( var i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\tvar renderItem = renderList[ i ];\n\n\t\t\tvar object = renderItem.object;\n\t\t\tvar geometry = renderItem.geometry;\n\t\t\tvar material = overrideMaterial === undefined ? renderItem.material : overrideMaterial;\n\t\t\tvar group = renderItem.group;\n\n\t\t\tif ( camera.isArrayCamera ) {\n\n\t\t\t\t_currentArrayCamera = camera;\n\n\t\t\t\tvar cameras = camera.cameras;\n\n\t\t\t\tfor ( var j = 0, jl = cameras.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar camera2 = cameras[ j ];\n\n\t\t\t\t\tif ( object.layers.test( camera2.layers ) ) {\n\n\t\t\t\t\t\tstate.viewport( _currentViewport.copy( camera2.viewport ) );\n\n\t\t\t\t\t\tcurrentRenderState.setupLights( camera2 );\n\n\t\t\t\t\t\trenderObject( object, scene, camera2, geometry, material, group );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_currentArrayCamera = null;\n\n\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction renderObject( object, scene, camera, geometry, material, group ) {\n\n\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\n\t\tcurrentRenderState = renderStates.get( scene, _currentArrayCamera || camera );\n\n\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\tif ( object.isImmediateRenderObject ) {\n\n\t\t\tstate.setMaterial( material );\n\n\t\t\tvar program = setProgram( camera, scene.fog, material, object );\n\n\t\t\t_currentGeometryProgram.geometry = null;\n\t\t\t_currentGeometryProgram.program = null;\n\t\t\t_currentGeometryProgram.wireframe = false;\n\n\t\t\trenderObjectImmediate( object, program );\n\n\t\t} else {\n\n\t\t\t_this.renderBufferDirect( camera, scene.fog, geometry, material, object, group );\n\n\t\t}\n\n\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\n\t\tcurrentRenderState = renderStates.get( scene, _currentArrayCamera || camera );\n\n\t}\n\n\tfunction initMaterial( material, fog, object ) {\n\n\t\tvar materialProperties = properties.get( material );\n\n\t\tvar lights = currentRenderState.state.lights;\n\t\tvar shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\tvar lightsHash = materialProperties.lightsHash;\n\t\tvar lightsStateHash = lights.state.hash;\n\n\t\tvar parameters = programCache.getParameters(\n\t\t\tmaterial, lights.state, shadowsArray, fog, _clipping.numPlanes, _clipping.numIntersection, object );\n\n\t\tvar code = programCache.getProgramCode( material, parameters );\n\n\t\tvar program = materialProperties.program;\n\t\tvar programChange = true;\n\n\t\tif ( program === undefined ) {\n\n\t\t\t// new material\n\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t} else if ( program.code !== code ) {\n\n\t\t\t// changed glsl or parameters\n\t\t\treleaseMaterialProgramReference( material );\n\n\t\t} else if ( lightsHash.stateID !== lightsStateHash.stateID ||\n\t\t\tlightsHash.directionalLength !== lightsStateHash.directionalLength ||\n\t\t\tlightsHash.pointLength !== lightsStateHash.pointLength ||\n\t\t\tlightsHash.spotLength !== lightsStateHash.spotLength ||\n\t\t\tlightsHash.rectAreaLength !== lightsStateHash.rectAreaLength ||\n\t\t\tlightsHash.hemiLength !== lightsStateHash.hemiLength ||\n\t\t\tlightsHash.shadowsLength !== lightsStateHash.shadowsLength ) {\n\n\t\t\tlightsHash.stateID = lightsStateHash.stateID;\n\t\t\tlightsHash.directionalLength = lightsStateHash.directionalLength;\n\t\t\tlightsHash.pointLength = lightsStateHash.pointLength;\n\t\t\tlightsHash.spotLength = lightsStateHash.spotLength;\n\t\t\tlightsHash.rectAreaLength = lightsStateHash.rectAreaLength;\n\t\t\tlightsHash.hemiLength = lightsStateHash.hemiLength;\n\t\t\tlightsHash.shadowsLength = lightsStateHash.shadowsLength;\n\n\t\t\tprogramChange = false;\n\n\t\t} else if ( parameters.shaderID !== undefined ) {\n\n\t\t\t// same glsl and uniform list\n\t\t\treturn;\n\n\t\t} else {\n\n\t\t\t// only rebuild uniform list\n\t\t\tprogramChange = false;\n\n\t\t}\n\n\t\tif ( programChange ) {\n\n\t\t\tif ( parameters.shaderID ) {\n\n\t\t\t\tvar shader = ShaderLib[ parameters.shaderID ];\n\n\t\t\t\tmaterialProperties.shader = {\n\t\t\t\t\tname: material.type,\n\t\t\t\t\tuniforms: cloneUniforms( shader.uniforms ),\n\t\t\t\t\tvertexShader: shader.vertexShader,\n\t\t\t\t\tfragmentShader: shader.fragmentShader\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tmaterialProperties.shader = {\n\t\t\t\t\tname: material.type,\n\t\t\t\t\tuniforms: material.uniforms,\n\t\t\t\t\tvertexShader: material.vertexShader,\n\t\t\t\t\tfragmentShader: material.fragmentShader\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tmaterial.onBeforeCompile( materialProperties.shader, _this );\n\n\t\t\t// Computing code again as onBeforeCompile may have changed the shaders\n\t\t\tcode = programCache.getProgramCode( material, parameters );\n\n\t\t\tprogram = programCache.acquireProgram( material, materialProperties.shader, parameters, code );\n\n\t\t\tmaterialProperties.program = program;\n\t\t\tmaterial.program = program;\n\n\t\t}\n\n\t\tvar programAttributes = program.getAttributes();\n\n\t\tif ( material.morphTargets ) {\n\n\t\t\tmaterial.numSupportedMorphTargets = 0;\n\n\t\t\tfor ( var i = 0; i < _this.maxMorphTargets; i ++ ) {\n\n\t\t\t\tif ( programAttributes[ 'morphTarget' + i ] >= 0 ) {\n\n\t\t\t\t\tmaterial.numSupportedMorphTargets ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.morphNormals ) {\n\n\t\t\tmaterial.numSupportedMorphNormals = 0;\n\n\t\t\tfor ( var i = 0; i < _this.maxMorphNormals; i ++ ) {\n\n\t\t\t\tif ( programAttributes[ 'morphNormal' + i ] >= 0 ) {\n\n\t\t\t\t\tmaterial.numSupportedMorphNormals ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar uniforms = materialProperties.shader.uniforms;\n\n\t\tif ( ! material.isShaderMaterial &&\n\t\t\t! material.isRawShaderMaterial ||\n\t\t\tmaterial.clipping === true ) {\n\n\t\t\tmaterialProperties.numClippingPlanes = _clipping.numPlanes;\n\t\t\tmaterialProperties.numIntersection = _clipping.numIntersection;\n\t\t\tuniforms.clippingPlanes = _clipping.uniform;\n\n\t\t}\n\n\t\tmaterialProperties.fog = fog;\n\n\t\t// store the light setup it was created for\n\t\tif ( lightsHash === undefined ) {\n\n\t\t\tmaterialProperties.lightsHash = lightsHash = {};\n\n\t\t}\n\n\t\tlightsHash.stateID = lightsStateHash.stateID;\n\t\tlightsHash.directionalLength = lightsStateHash.directionalLength;\n\t\tlightsHash.pointLength = lightsStateHash.pointLength;\n\t\tlightsHash.spotLength = lightsStateHash.spotLength;\n\t\tlightsHash.rectAreaLength = lightsStateHash.rectAreaLength;\n\t\tlightsHash.hemiLength = lightsStateHash.hemiLength;\n\t\tlightsHash.shadowsLength = lightsStateHash.shadowsLength;\n\n\t\tif ( material.lights ) {\n\n\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\tuniforms.lightProbe.value = lights.state.probe;\n\t\t\tuniforms.directionalLights.value = lights.state.directional;\n\t\t\tuniforms.spotLights.value = lights.state.spot;\n\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\tuniforms.pointLights.value = lights.state.point;\n\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\n\n\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\tuniforms.spotShadowMatrix.value = lights.state.spotShadowMatrix;\n\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\n\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\n\n\t\t}\n\n\t\tvar progUniforms = materialProperties.program.getUniforms(),\n\t\t\tuniformsList =\n\t\t\t\tWebGLUniforms.seqWithValue( progUniforms.seq, uniforms );\n\n\t\tmaterialProperties.uniformsList = uniformsList;\n\n\t}\n\n\tfunction setProgram( camera, fog, material, object ) {\n\n\t\ttextures.resetTextureUnits();\n\n\t\tvar materialProperties = properties.get( material );\n\t\tvar lights = currentRenderState.state.lights;\n\n\t\tvar lightsHash = materialProperties.lightsHash;\n\t\tvar lightsStateHash = lights.state.hash;\n\n\t\tif ( _clippingEnabled ) {\n\n\t\t\tif ( _localClippingEnabled || camera !== _currentCamera ) {\n\n\t\t\t\tvar useCache =\n\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t// (#8465, #8379)\n\t\t\t\t_clipping.setState(\n\t\t\t\t\tmaterial.clippingPlanes, material.clipIntersection, material.clipShadows,\n\t\t\t\t\tcamera, materialProperties, useCache );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.needsUpdate === false ) {\n\n\t\t\tif ( materialProperties.program === undefined ) {\n\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t} else if ( material.fog && materialProperties.fog !== fog ) {\n\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t} else if ( material.lights && ( lightsHash.stateID !== lightsStateHash.stateID ||\n\t\t\t\tlightsHash.directionalLength !== lightsStateHash.directionalLength ||\n\t\t\t\tlightsHash.pointLength !== lightsStateHash.pointLength ||\n\t\t\t\tlightsHash.spotLength !== lightsStateHash.spotLength ||\n\t\t\t\tlightsHash.rectAreaLength !== lightsStateHash.rectAreaLength ||\n\t\t\t\tlightsHash.hemiLength !== lightsStateHash.hemiLength ||\n\t\t\t\tlightsHash.shadowsLength !== lightsStateHash.shadowsLength ) ) {\n\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t( materialProperties.numClippingPlanes !== _clipping.numPlanes ||\n\t\t\t\tmaterialProperties.numIntersection !== _clipping.numIntersection ) ) {\n\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.needsUpdate ) {\n\n\t\t\tinitMaterial( material, fog, object );\n\t\t\tmaterial.needsUpdate = false;\n\n\t\t}\n\n\t\tvar refreshProgram = false;\n\t\tvar refreshMaterial = false;\n\t\tvar refreshLights = false;\n\n\t\tvar program = materialProperties.program,\n\t\t\tp_uniforms = program.getUniforms(),\n\t\t\tm_uniforms = materialProperties.shader.uniforms;\n\n\t\tif ( state.useProgram( program.program ) ) {\n\n\t\t\trefreshProgram = true;\n\t\t\trefreshMaterial = true;\n\t\t\trefreshLights = true;\n\n\t\t}\n\n\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t_currentMaterialId = material.id;\n\n\t\t\trefreshMaterial = true;\n\n\t\t}\n\n\t\tif ( refreshProgram || _currentCamera !== camera ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\n\n\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t}\n\n\t\t\tif ( _currentCamera !== camera ) {\n\n\t\t\t\t_currentCamera = camera;\n\n\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t}\n\n\t\t\t// load material specific uniforms\n\t\t\t// (shader material also gets them for the sake of genericity)\n\n\t\t\tif ( material.isShaderMaterial ||\n\t\t\t\tmaterial.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.envMap ) {\n\n\t\t\t\tvar uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\tuCamPos.setValue( _gl,\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.isShaderMaterial ||\n\t\t\t\tmaterial.skinning ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// skinning uniforms must be set even if material didn't change\n\t\t// auto-setting of texture unit for bone texture must go before other textures\n\t\t// not sure why, but otherwise weird things happen\n\n\t\tif ( material.skinning ) {\n\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\tvar skeleton = object.skeleton;\n\n\t\t\tif ( skeleton ) {\n\n\t\t\t\tvar bones = skeleton.bones;\n\n\t\t\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\t\t\tif ( skeleton.boneTexture === undefined ) {\n\n\t\t\t\t\t\t// layout (1 matrix = 4 pixels)\n\t\t\t\t\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t\t\t\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t\t\t\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t\t\t\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t\t\t\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\n\t\t\t\t\t\tvar size = Math.sqrt( bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\t\t\t\t\tsize = _Math.ceilPowerOfTwo( size );\n\t\t\t\t\t\tsize = Math.max( size, 4 );\n\n\t\t\t\t\t\tvar boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\t\t\t\t\tboneMatrices.set( skeleton.boneMatrices ); // copy current values\n\n\t\t\t\t\t\tvar boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\n\t\t\t\t\t\tboneTexture.needsUpdate = true;\n\n\t\t\t\t\t\tskeleton.boneMatrices = boneMatrices;\n\t\t\t\t\t\tskeleton.boneTexture = boneTexture;\n\t\t\t\t\t\tskeleton.boneTextureSize = size;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture, textures );\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTextureSize', skeleton.boneTextureSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tp_uniforms.setOptional( _gl, skeleton, 'boneMatrices' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( refreshMaterial ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\n\t\t\tp_uniforms.setValue( _gl, 'toneMappingWhitePoint', _this.toneMappingWhitePoint );\n\n\t\t\tif ( material.lights ) {\n\n\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t// values\n\t\t\t\t//\n\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t// the GL state when required\n\n\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t}\n\n\t\t\t// refresh uniforms common to several materials\n\n\t\t\tif ( fog && material.fog ) {\n\n\t\t\t\trefreshUniformsFog( m_uniforms, fog );\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshBasicMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshLambertMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsLambert( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshPhongMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t\tif ( material.isMeshToonMaterial ) {\n\n\t\t\t\t\trefreshUniformsToon( m_uniforms, material );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trefreshUniformsPhong( m_uniforms, material );\n\n\t\t\t\t}\n\n\t\t\t} else if ( material.isMeshStandardMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t\tif ( material.isMeshPhysicalMaterial ) {\n\n\t\t\t\t\trefreshUniformsPhysical( m_uniforms, material );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trefreshUniformsStandard( m_uniforms, material );\n\n\t\t\t\t}\n\n\t\t\t} else if ( material.isMeshMatcapMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t\trefreshUniformsMatcap( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshDepthMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsDepth( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshDistanceMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsDistance( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsNormal( m_uniforms, material );\n\n\t\t\t} else if ( material.isLineBasicMaterial ) {\n\n\t\t\t\trefreshUniformsLine( m_uniforms, material );\n\n\t\t\t\tif ( material.isLineDashedMaterial ) {\n\n\t\t\t\t\trefreshUniformsDash( m_uniforms, material );\n\n\t\t\t\t}\n\n\t\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\t\trefreshUniformsPoints( m_uniforms, material );\n\n\t\t\t} else if ( material.isSpriteMaterial ) {\n\n\t\t\t\trefreshUniformsSprites( m_uniforms, material );\n\n\t\t\t} else if ( material.isShadowMaterial ) {\n\n\t\t\t\tm_uniforms.color.value.copy( material.color );\n\t\t\t\tm_uniforms.opacity.value = material.opacity;\n\n\t\t\t}\n\n\t\t\t// RectAreaLight Texture\n\t\t\t// TODO (mrdoob): Find a nicer implementation\n\n\t\t\tif ( m_uniforms.ltc_1 !== undefined ) m_uniforms.ltc_1.value = UniformsLib.LTC_1;\n\t\t\tif ( m_uniforms.ltc_2 !== undefined ) m_uniforms.ltc_2.value = UniformsLib.LTC_2;\n\n\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n\n\t\t}\n\n\t\tif ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) {\n\n\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n\t\t\tmaterial.uniformsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( material.isSpriteMaterial ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'center', object.center );\n\n\t\t}\n\n\t\t// common matrices\n\n\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\n\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\n\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\t\treturn program;\n\n\t}\n\n\t// Uniforms (refresh uniforms objects)\n\n\tfunction refreshUniformsCommon( uniforms, material ) {\n\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.color ) {\n\n\t\t\tuniforms.diffuse.value.copy( material.color );\n\n\t\t}\n\n\t\tif ( material.emissive ) {\n\n\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t}\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\tif ( material.specularMap ) {\n\n\t\t\tuniforms.specularMap.value = material.specularMap;\n\n\t\t}\n\n\t\tif ( material.envMap ) {\n\n\t\t\tuniforms.envMap.value = material.envMap;\n\n\t\t\t// don't flip CubeTexture envMaps, flip everything else:\n\t\t\t//  WebGLRenderTargetCube will be flipped for backwards compatibility\n\t\t\t//  WebGLRenderTargetCube.texture will be flipped because it's a Texture and NOT a CubeTexture\n\t\t\t// this check must be handled differently, or removed entirely, if WebGLRenderTargetCube uses a CubeTexture in the future\n\t\t\tuniforms.flipEnvMap.value = material.envMap.isCubeTexture ? - 1 : 1;\n\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t\tuniforms.maxMipLevel.value = properties.get( material.envMap ).__maxMipLevel;\n\n\t\t}\n\n\t\tif ( material.lightMap ) {\n\n\t\t\tuniforms.lightMap.value = material.lightMap;\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. specular map\n\t\t// 3. normal map\n\t\t// 4. bump map\n\t\t// 5. alpha map\n\t\t// 6. emissive map\n\n\t\tvar uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.specularMap ) {\n\n\t\t\tuvScaleMap = material.specularMap;\n\n\t\t} else if ( material.displacementMap ) {\n\n\t\t\tuvScaleMap = material.displacementMap;\n\n\t\t} else if ( material.normalMap ) {\n\n\t\t\tuvScaleMap = material.normalMap;\n\n\t\t} else if ( material.bumpMap ) {\n\n\t\t\tuvScaleMap = material.bumpMap;\n\n\t\t} else if ( material.roughnessMap ) {\n\n\t\t\tuvScaleMap = material.roughnessMap;\n\n\t\t} else if ( material.metalnessMap ) {\n\n\t\t\tuvScaleMap = material.metalnessMap;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t} else if ( material.emissiveMap ) {\n\n\t\t\tuvScaleMap = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\t// backwards compatibility\n\t\t\tif ( uvScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\tuvScaleMap = uvScaleMap.texture;\n\n\t\t\t}\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLine( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\n\t}\n\n\tfunction refreshUniformsDash( uniforms, material ) {\n\n\t\tuniforms.dashSize.value = material.dashSize;\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\tuniforms.scale.value = material.scale;\n\n\t}\n\n\tfunction refreshUniformsPoints( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.size.value = material.size * _pixelRatio;\n\t\tuniforms.scale.value = _height * 0.5;\n\n\t\tuniforms.map.value = material.map;\n\n\t\tif ( material.map !== null ) {\n\n\t\t\tif ( material.map.matrixAutoUpdate === true ) {\n\n\t\t\t\tmaterial.map.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( material.map.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsSprites( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.rotation.value = material.rotation;\n\t\tuniforms.map.value = material.map;\n\n\t\tif ( material.map !== null ) {\n\n\t\t\tif ( material.map.matrixAutoUpdate === true ) {\n\n\t\t\t\tmaterial.map.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( material.map.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsFog( uniforms, fog ) {\n\n\t\tuniforms.fogColor.value.copy( fog.color );\n\n\t\tif ( fog.isFog ) {\n\n\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLambert( uniforms, material ) {\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhong( uniforms, material ) {\n\n\t\tuniforms.specular.value.copy( material.specular );\n\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsToon( uniforms, material ) {\n\n\t\trefreshUniformsPhong( uniforms, material );\n\n\t\tif ( material.gradientMap ) {\n\n\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsStandard( uniforms, material ) {\n\n\t\tuniforms.roughness.value = material.roughness;\n\t\tuniforms.metalness.value = material.metalness;\n\n\t\tif ( material.roughnessMap ) {\n\n\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t}\n\n\t\tif ( material.metalnessMap ) {\n\n\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t}\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tif ( material.envMap ) {\n\n\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhysical( uniforms, material ) {\n\n\t\trefreshUniformsStandard( uniforms, material );\n\n\t\tuniforms.reflectivity.value = material.reflectivity; // also part of uniforms common\n\n\t\tuniforms.clearCoat.value = material.clearCoat;\n\t\tuniforms.clearCoatRoughness.value = material.clearCoatRoughness;\n\n\t}\n\n\tfunction refreshUniformsMatcap( uniforms, material ) {\n\n\t\tif ( material.matcap ) {\n\n\t\t\tuniforms.matcap.value = material.matcap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDepth( uniforms, material ) {\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDistance( uniforms, material ) {\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tuniforms.referencePosition.value.copy( material.referencePosition );\n\t\tuniforms.nearDistance.value = material.nearDistance;\n\t\tuniforms.farDistance.value = material.farDistance;\n\n\t}\n\n\tfunction refreshUniformsNormal( uniforms, material ) {\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\n\n\t\tuniforms.ambientLightColor.needsUpdate = value;\n\t\tuniforms.lightProbe.needsUpdate = value;\n\n\t\tuniforms.directionalLights.needsUpdate = value;\n\t\tuniforms.pointLights.needsUpdate = value;\n\t\tuniforms.spotLights.needsUpdate = value;\n\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t}\n\n\t//\n\tthis.setFramebuffer = function ( value ) {\n\n\t\tif ( _framebuffer !== value ) _gl.bindFramebuffer( 36160, value );\n\n\t\t_framebuffer = value;\n\n\t};\n\n\tthis.getActiveCubeFace = function () {\n\n\t\treturn _currentActiveCubeFace;\n\n\t};\n\n\tthis.getActiveMipMapLevel = function () {\n\n\t\treturn _currentActiveMipmapLevel;\n\n\t};\n\n\tthis.getRenderTarget = function () {\n\n\t\treturn _currentRenderTarget;\n\n\t};\n\n\tthis.setRenderTarget = function ( renderTarget, activeCubeFace, activeMipMapLevel ) {\n\n\t\t_currentRenderTarget = renderTarget;\n\t\t_currentActiveCubeFace = activeCubeFace;\n\t\t_currentActiveMipmapLevel = activeMipMapLevel;\n\n\t\tif ( renderTarget && properties.get( renderTarget ).__webglFramebuffer === undefined ) {\n\n\t\t\ttextures.setupRenderTarget( renderTarget );\n\n\t\t}\n\n\t\tvar framebuffer = _framebuffer;\n\t\tvar isCube = false;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tvar __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\tif ( renderTarget.isWebGLRenderTargetCube ) {\n\n\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace || 0 ];\n\t\t\t\tisCube = true;\n\n\t\t\t} else if ( renderTarget.isWebGLMultisampleRenderTarget ) {\n\n\t\t\t\tframebuffer = properties.get( renderTarget ).__webglMultisampledFramebuffer;\n\n\t\t\t} else {\n\n\t\t\t\tframebuffer = __webglFramebuffer;\n\n\t\t\t}\n\n\t\t\t_currentViewport.copy( renderTarget.viewport );\n\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t} else {\n\n\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio );\n\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio );\n\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t}\n\n\t\tif ( _currentFramebuffer !== framebuffer ) {\n\n\t\t\t_gl.bindFramebuffer( 36160, framebuffer );\n\t\t\t_currentFramebuffer = framebuffer;\n\n\t\t}\n\n\t\tstate.viewport( _currentViewport );\n\t\tstate.scissor( _currentScissor );\n\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\tif ( isCube ) {\n\n\t\t\tvar textureProperties = properties.get( renderTarget.texture );\n\t\t\t_gl.framebufferTexture2D( 36160, 36064, 34069 + ( activeCubeFace || 0 ), textureProperties.__webglTexture, activeMipMapLevel || 0 );\n\n\t\t}\n\n\t};\n\n\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer, activeCubeFaceIndex ) {\n\n\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\tif ( renderTarget.isWebGLRenderTargetCube && activeCubeFaceIndex !== undefined ) {\n\n\t\t\tframebuffer = framebuffer[ activeCubeFaceIndex ];\n\n\t\t}\n\n\t\tif ( framebuffer ) {\n\n\t\t\tvar restore = false;\n\n\t\t\tif ( framebuffer !== _currentFramebuffer ) {\n\n\t\t\t\t_gl.bindFramebuffer( 36160, framebuffer );\n\n\t\t\t\trestore = true;\n\n\t\t\t}\n\n\t\t\ttry {\n\n\t\t\t\tvar texture = renderTarget.texture;\n\t\t\t\tvar textureFormat = texture.format;\n\t\t\t\tvar textureType = texture.type;\n\n\t\t\t\tif ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== _gl.getParameter( 35739 ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( textureType !== UnsignedByteType && utils.convert( textureType ) !== _gl.getParameter( 35738 ) && // IE11, Edge and Chrome Mac < 52 (#9513)\n\t\t\t\t\t! ( textureType === FloatType && ( capabilities.isWebGL2 || extensions.get( 'OES_texture_float' ) || extensions.get( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox\n\t\t\t\t\t! ( textureType === HalfFloatType && ( capabilities.isWebGL2 ? extensions.get( 'EXT_color_buffer_float' ) : extensions.get( 'EXT_color_buffer_half_float' ) ) ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( _gl.checkFramebufferStatus( 36160 ) === 36053 ) {\n\n\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.' );\n\n\t\t\t\t}\n\n\t\t\t} finally {\n\n\t\t\t\tif ( restore ) {\n\n\t\t\t\t\t_gl.bindFramebuffer( 36160, _currentFramebuffer );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.copyFramebufferToTexture = function ( position, texture, level ) {\n\n\t\tvar width = texture.image.width;\n\t\tvar height = texture.image.height;\n\t\tvar glFormat = utils.convert( texture.format );\n\n\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t_gl.copyTexImage2D( 3553, level || 0, glFormat, position.x, position.y, width, height, 0 );\n\n\t};\n\n\tthis.copyTextureToTexture = function ( position, srcTexture, dstTexture, level ) {\n\n\t\tvar width = srcTexture.image.width;\n\t\tvar height = srcTexture.image.height;\n\t\tvar glFormat = utils.convert( dstTexture.format );\n\t\tvar glType = utils.convert( dstTexture.type );\n\n\t\ttextures.setTexture2D( dstTexture, 0 );\n\n\t\tif ( srcTexture.isDataTexture ) {\n\n\t\t\t_gl.texSubImage2D( 3553, level || 0, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data );\n\n\t\t} else {\n\n\t\t\t_gl.texSubImage2D( 3553, level || 0, position.x, position.y, glFormat, glType, srcTexture.image );\n\n\t\t}\n\n\t};\n\n\t/*\n\tif ( typeof __THREE_DEVTOOLS__ !== undefined ) {\n\t\t__THREE_DEVTOOLS__.dispatchEvent( { type: 'renderer', value: this } );\n\t}\n\t*/\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction FogExp2( color, density ) {\n\n\tthis.name = '';\n\n\tthis.color = new Color( color );\n\tthis.density = ( density !== undefined ) ? density : 0.00025;\n\n}\n\nObject.assign( FogExp2.prototype, {\n\n\tisFogExp2: true,\n\n\tclone: function () {\n\n\t\treturn new FogExp2( this.color, this.density );\n\n\t},\n\n\ttoJSON: function ( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'FogExp2',\n\t\t\tcolor: this.color.getHex(),\n\t\t\tdensity: this.density\n\t\t};\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Fog( color, near, far ) {\n\n\tthis.name = '';\n\n\tthis.color = new Color( color );\n\n\tthis.near = ( near !== undefined ) ? near : 1;\n\tthis.far = ( far !== undefined ) ? far : 1000;\n\n}\n\nObject.assign( Fog.prototype, {\n\n\tisFog: true,\n\n\tclone: function () {\n\n\t\treturn new Fog( this.color, this.near, this.far );\n\n\t},\n\n\ttoJSON: function ( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'Fog',\n\t\t\tcolor: this.color.getHex(),\n\t\t\tnear: this.near,\n\t\t\tfar: this.far\n\t\t};\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Scene() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Scene';\n\n\tthis.background = null;\n\tthis.fog = null;\n\tthis.overrideMaterial = null;\n\n\tthis.autoUpdate = true; // checked by the renderer\n\n\t/*\n\tif ( typeof __THREE_DEVTOOLS__ !== undefined ) {\n\t\t__THREE_DEVTOOLS__.dispatchEvent( { type: 'scene', value: this } );\n\t}\n\t*/\n\n}\n\nScene.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Scene,\n\n\tisScene: true,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tObject3D.prototype.copy.call( this, source, recursive );\n\n\t\tif ( source.background !== null ) this.background = source.background.clone();\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tif ( this.background !== null ) data.object.background = this.background.toJSON( meta );\n\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\n\n\t\treturn data;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InterleavedBuffer( array, stride ) {\n\n\tthis.array = array;\n\tthis.stride = stride;\n\tthis.count = array !== undefined ? array.length / stride : 0;\n\n\tthis.dynamic = false;\n\tthis.updateRange = { offset: 0, count: - 1 };\n\n\tthis.version = 0;\n\n}\n\nObject.defineProperty( InterleavedBuffer.prototype, 'needsUpdate', {\n\n\tset: function ( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n} );\n\nObject.assign( InterleavedBuffer.prototype, {\n\n\tisInterleavedBuffer: true,\n\n\tonUploadCallback: function () {},\n\n\tsetArray: function ( array ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.count = array !== undefined ? array.length / this.stride : 0;\n\t\tthis.array = array;\n\n\t\treturn this;\n\n\t},\n\n\tsetDynamic: function ( value ) {\n\n\t\tthis.dynamic = value;\n\n\t\treturn this;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.count = source.count;\n\t\tthis.stride = source.stride;\n\t\tthis.dynamic = source.dynamic;\n\n\t\treturn this;\n\n\t},\n\n\tcopyAt: function ( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.stride;\n\t\tindex2 *= attribute.stride;\n\n\t\tfor ( var i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tset: function ( value, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tonUpload: function ( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InterleavedBufferAttribute( interleavedBuffer, itemSize, offset, normalized ) {\n\n\tthis.data = interleavedBuffer;\n\tthis.itemSize = itemSize;\n\tthis.offset = offset;\n\n\tthis.normalized = normalized === true;\n\n}\n\nObject.defineProperties( InterleavedBufferAttribute.prototype, {\n\n\tcount: {\n\n\t\tget: function () {\n\n\t\t\treturn this.data.count;\n\n\t\t}\n\n\t},\n\n\tarray: {\n\n\t\tget: function () {\n\n\t\t\treturn this.data.array;\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( InterleavedBufferAttribute.prototype, {\n\n\tisInterleavedBufferAttribute: true,\n\n\tsetX: function ( index, x ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( index, y ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetZ: function ( index, z ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetW: function ( index, w ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\treturn this;\n\n\t},\n\n\tgetX: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset ];\n\n\t},\n\n\tgetY: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t},\n\n\tgetZ: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t},\n\n\tgetW: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t},\n\n\tsetXY: function ( index, x, y ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZ: function ( index, x, y, z ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZW: function ( index, x, y, z, w ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\t\tthis.data.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  map: new THREE.Texture( <Image> ),\n *  rotation: <float>,\n *  sizeAttenuation: <bool>\n * }\n */\n\nfunction SpriteMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'SpriteMaterial';\n\n\tthis.color = new Color( 0xffffff );\n\tthis.map = null;\n\n\tthis.rotation = 0;\n\n\tthis.sizeAttenuation = true;\n\n\tthis.lights = false;\n\tthis.transparent = true;\n\n\tthis.setValues( parameters );\n\n}\n\nSpriteMaterial.prototype = Object.create( Material.prototype );\nSpriteMaterial.prototype.constructor = SpriteMaterial;\nSpriteMaterial.prototype.isSpriteMaterial = true;\n\nSpriteMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\tthis.map = source.map;\n\n\tthis.rotation = source.rotation;\n\n\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\treturn this;\n\n};\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n */\n\nvar three_module_geometry;\n\nfunction Sprite( material ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Sprite';\n\n\tif ( three_module_geometry === undefined ) {\n\n\t\tthree_module_geometry = new BufferGeometry();\n\n\t\tvar float32Array = new Float32Array( [\n\t\t\t- 0.5, - 0.5, 0, 0, 0,\n\t\t\t0.5, - 0.5, 0, 1, 0,\n\t\t\t0.5, 0.5, 0, 1, 1,\n\t\t\t- 0.5, 0.5, 0, 0, 1\n\t\t] );\n\n\t\tvar interleavedBuffer = new InterleavedBuffer( float32Array, 5 );\n\n\t\tthree_module_geometry.setIndex( [ 0, 1, 2,\t0, 2, 3 ] );\n\t\tthree_module_geometry.addAttribute( 'position', new InterleavedBufferAttribute( interleavedBuffer, 3, 0, false ) );\n\t\tthree_module_geometry.addAttribute( 'uv', new InterleavedBufferAttribute( interleavedBuffer, 2, 3, false ) );\n\n\t}\n\n\tthis.geometry = three_module_geometry;\n\tthis.material = ( material !== undefined ) ? material : new SpriteMaterial();\n\n\tthis.center = new Vector2( 0.5, 0.5 );\n\n}\n\nSprite.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Sprite,\n\n\tisSprite: true,\n\n\traycast: ( function () {\n\n\t\tvar intersectPoint = new Vector3();\n\t\tvar worldScale = new Vector3();\n\t\tvar mvPosition = new Vector3();\n\n\t\tvar alignedPosition = new Vector2();\n\t\tvar rotatedPosition = new Vector2();\n\t\tvar viewWorldMatrix = new Matrix4();\n\n\t\tvar vA = new Vector3();\n\t\tvar vB = new Vector3();\n\t\tvar vC = new Vector3();\n\n\t\tvar uvA = new Vector2();\n\t\tvar uvB = new Vector2();\n\t\tvar uvC = new Vector2();\n\n\t\tfunction transformVertex( vertexPosition, mvPosition, center, scale, sin, cos ) {\n\n\t\t\t// compute position in camera space\n\t\t\talignedPosition.subVectors( vertexPosition, center ).addScalar( 0.5 ).multiply( scale );\n\n\t\t\t// to check if rotation is not zero\n\t\t\tif ( sin !== undefined ) {\n\n\t\t\t\trotatedPosition.x = ( cos * alignedPosition.x ) - ( sin * alignedPosition.y );\n\t\t\t\trotatedPosition.y = ( sin * alignedPosition.x ) + ( cos * alignedPosition.y );\n\n\t\t\t} else {\n\n\t\t\t\trotatedPosition.copy( alignedPosition );\n\n\t\t\t}\n\n\n\t\t\tvertexPosition.copy( mvPosition );\n\t\t\tvertexPosition.x += rotatedPosition.x;\n\t\t\tvertexPosition.y += rotatedPosition.y;\n\n\t\t\t// transform to world space\n\t\t\tvertexPosition.applyMatrix4( viewWorldMatrix );\n\n\t\t}\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tworldScale.setFromMatrixScale( this.matrixWorld );\n\t\t\tviewWorldMatrix.getInverse( this.modelViewMatrix ).premultiply( this.matrixWorld );\n\t\t\tmvPosition.setFromMatrixPosition( this.modelViewMatrix );\n\n\t\t\tvar rotation = this.material.rotation;\n\t\t\tvar sin, cos;\n\t\t\tif ( rotation !== 0 ) {\n\n\t\t\t\tcos = Math.cos( rotation );\n\t\t\t\tsin = Math.sin( rotation );\n\n\t\t\t}\n\n\t\t\tvar center = this.center;\n\n\t\t\ttransformVertex( vA.set( - 0.5, - 0.5, 0 ), mvPosition, center, worldScale, sin, cos );\n\t\t\ttransformVertex( vB.set( 0.5, - 0.5, 0 ), mvPosition, center, worldScale, sin, cos );\n\t\t\ttransformVertex( vC.set( 0.5, 0.5, 0 ), mvPosition, center, worldScale, sin, cos );\n\n\t\t\tuvA.set( 0, 0 );\n\t\t\tuvB.set( 1, 0 );\n\t\t\tuvC.set( 1, 1 );\n\n\t\t\t// check first triangle\n\t\t\tvar intersect = raycaster.ray.intersectTriangle( vA, vB, vC, false, intersectPoint );\n\n\t\t\tif ( intersect === null ) {\n\n\t\t\t\t// check second triangle\n\t\t\t\ttransformVertex( vB.set( - 0.5, 0.5, 0 ), mvPosition, center, worldScale, sin, cos );\n\t\t\t\tuvB.set( 0, 1 );\n\n\t\t\t\tintersect = raycaster.ray.intersectTriangle( vA, vC, vB, false, intersectPoint );\n\t\t\t\tif ( intersect === null ) {\n\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\t\tintersects.push( {\n\n\t\t\t\tdistance: distance,\n\t\t\t\tpoint: intersectPoint.clone(),\n\t\t\t\tuv: Triangle.getUV( intersectPoint, vA, vB, vC, uvA, uvB, uvC, new Vector2() ),\n\t\t\t\tface: null,\n\t\t\t\tobject: this\n\n\t\t\t} );\n\n\t\t};\n\n\t}() ),\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.material ).copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source );\n\n\t\tif ( source.center !== undefined ) this.center.copy( source.center );\n\n\t\treturn this;\n\n\t}\n\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LOD() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'LOD';\n\n\tObject.defineProperties( this, {\n\t\tlevels: {\n\t\t\tenumerable: true,\n\t\t\tvalue: []\n\t\t}\n\t} );\n\n}\n\nLOD.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: LOD,\n\n\tisLOD: true,\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source, false );\n\n\t\tvar levels = source.levels;\n\n\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tvar level = levels[ i ];\n\n\t\t\tthis.addLevel( level.object.clone(), level.distance );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\taddLevel: function ( object, distance ) {\n\n\t\tif ( distance === undefined ) distance = 0;\n\n\t\tdistance = Math.abs( distance );\n\n\t\tvar levels = this.levels;\n\n\t\tfor ( var l = 0; l < levels.length; l ++ ) {\n\n\t\t\tif ( distance < levels[ l ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlevels.splice( l, 0, { distance: distance, object: object } );\n\n\t\tthis.add( object );\n\n\t\treturn this;\n\n\t},\n\n\tgetObjectForDistance: function ( distance ) {\n\n\t\tvar levels = this.levels;\n\n\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\tif ( distance < levels[ i ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn levels[ i - 1 ].object;\n\n\t},\n\n\traycast: ( function () {\n\n\t\tvar matrixPosition = new Vector3();\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tvar distance = raycaster.ray.origin.distanceTo( matrixPosition );\n\n\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n\t\t};\n\n\t}() ),\n\n\tupdate: function () {\n\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\n\t\treturn function update( camera ) {\n\n\t\t\tvar levels = this.levels;\n\n\t\t\tif ( levels.length > 1 ) {\n\n\t\t\t\tv1.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t\tv2.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\t\tvar distance = v1.distanceTo( v2 );\n\n\t\t\t\tlevels[ 0 ].object.visible = true;\n\n\t\t\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( distance >= levels[ i ].distance ) {\n\n\t\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\n\t\t\t\t\t\tlevels[ i ].object.visible = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tfor ( ; i < l; i ++ ) {\n\n\t\t\t\t\tlevels[ i ].object.visible = false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.levels = [];\n\n\t\tvar levels = this.levels;\n\n\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tvar level = levels[ i ];\n\n\t\t\tdata.object.levels.push( {\n\t\t\t\tobject: level.object.uuid,\n\t\t\t\tdistance: level.distance\n\t\t\t} );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author ikerr / http://verold.com\n */\n\nfunction SkinnedMesh( geometry, material ) {\n\n\tif ( geometry && geometry.isGeometry ) {\n\n\t\tconsole.error( 'THREE.SkinnedMesh no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t}\n\n\tMesh.call( this, geometry, material );\n\n\tthis.type = 'SkinnedMesh';\n\n\tthis.bindMode = 'attached';\n\tthis.bindMatrix = new Matrix4();\n\tthis.bindMatrixInverse = new Matrix4();\n\n}\n\nSkinnedMesh.prototype = Object.assign( Object.create( Mesh.prototype ), {\n\n\tconstructor: SkinnedMesh,\n\n\tisSkinnedMesh: true,\n\n\tbind: function ( skeleton, bindMatrix ) {\n\n\t\tthis.skeleton = skeleton;\n\n\t\tif ( bindMatrix === undefined ) {\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\tbindMatrix = this.matrixWorld;\n\n\t\t}\n\n\t\tthis.bindMatrix.copy( bindMatrix );\n\t\tthis.bindMatrixInverse.getInverse( bindMatrix );\n\n\t},\n\n\tpose: function () {\n\n\t\tthis.skeleton.pose();\n\n\t},\n\n\tnormalizeSkinWeights: function () {\n\n\t\tvar vector = new Vector4();\n\n\t\tvar skinWeight = this.geometry.attributes.skinWeight;\n\n\t\tfor ( var i = 0, l = skinWeight.count; i < l; i ++ ) {\n\n\t\t\tvector.x = skinWeight.getX( i );\n\t\t\tvector.y = skinWeight.getY( i );\n\t\t\tvector.z = skinWeight.getZ( i );\n\t\t\tvector.w = skinWeight.getW( i );\n\n\t\t\tvar scale = 1.0 / vector.manhattanLength();\n\n\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\tvector.multiplyScalar( scale );\n\n\t\t\t} else {\n\n\t\t\t\tvector.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t}\n\n\t\t\tskinWeight.setXYZW( i, vector.x, vector.y, vector.z, vector.w );\n\n\t\t}\n\n\t},\n\n\tupdateMatrixWorld: function ( force ) {\n\n\t\tMesh.prototype.updateMatrixWorld.call( this, force );\n\n\t\tif ( this.bindMode === 'attached' ) {\n\n\t\t\tthis.bindMatrixInverse.getInverse( this.matrixWorld );\n\n\t\t} else if ( this.bindMode === 'detached' ) {\n\n\t\t\tthis.bindMatrixInverse.getInverse( this.bindMatrix );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author michael guerrero / http://realitymeltdown.com\n * @author ikerr / http://verold.com\n */\n\nfunction Skeleton( bones, boneInverses ) {\n\n\t// copy the bone array\n\n\tbones = bones || [];\n\n\tthis.bones = bones.slice( 0 );\n\tthis.boneMatrices = new Float32Array( this.bones.length * 16 );\n\n\t// use the supplied bone inverses or calculate the inverses\n\n\tif ( boneInverses === undefined ) {\n\n\t\tthis.calculateInverses();\n\n\t} else {\n\n\t\tif ( this.bones.length === boneInverses.length ) {\n\n\t\t\tthis.boneInverses = boneInverses.slice( 0 );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Skeleton boneInverses is the wrong length.' );\n\n\t\t\tthis.boneInverses = [];\n\n\t\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nObject.assign( Skeleton.prototype, {\n\n\tcalculateInverses: function () {\n\n\t\tthis.boneInverses = [];\n\n\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tvar inverse = new Matrix4();\n\n\t\t\tif ( this.bones[ i ] ) {\n\n\t\t\t\tinverse.getInverse( this.bones[ i ].matrixWorld );\n\n\t\t\t}\n\n\t\t\tthis.boneInverses.push( inverse );\n\n\t\t}\n\n\t},\n\n\tpose: function () {\n\n\t\tvar bone, i, il;\n\n\t\t// recover the bind-time world matrices\n\n\t\tfor ( i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tbone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tbone.matrixWorld.getInverse( this.boneInverses[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// compute the local matrices, positions, rotations and scales\n\n\t\tfor ( i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tbone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\tbone.matrix.getInverse( bone.parent.matrixWorld );\n\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tupdate: ( function () {\n\n\t\tvar offsetMatrix = new Matrix4();\n\t\tvar identityMatrix = new Matrix4();\n\n\t\treturn function update() {\n\n\t\t\tvar bones = this.bones;\n\t\t\tvar boneInverses = this.boneInverses;\n\t\t\tvar boneMatrices = this.boneMatrices;\n\t\t\tvar boneTexture = this.boneTexture;\n\n\t\t\t// flatten bone matrices to array\n\n\t\t\tfor ( var i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\t\t// compute the offset between the current and the original transform\n\n\t\t\t\tvar matrix = bones[ i ] ? bones[ i ].matrixWorld : identityMatrix;\n\n\t\t\t\toffsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\n\t\t\t\toffsetMatrix.toArray( boneMatrices, i * 16 );\n\n\t\t\t}\n\n\t\t\tif ( boneTexture !== undefined ) {\n\n\t\t\t\tboneTexture.needsUpdate = true;\n\n\t\t\t}\n\n\t\t};\n\n\t} )(),\n\n\tclone: function () {\n\n\t\treturn new Skeleton( this.bones, this.boneInverses );\n\n\t},\n\n\tgetBoneByName: function ( name ) {\n\n\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tvar bone = this.bones[ i ];\n\n\t\t\tif ( bone.name === name ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author ikerr / http://verold.com\n */\n\nfunction Bone() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Bone';\n\n}\n\nBone.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Bone,\n\n\tisBone: true\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  linewidth: <float>,\n *  linecap: \"round\",\n *  linejoin: \"round\"\n * }\n */\n\nfunction LineBasicMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'LineBasicMaterial';\n\n\tthis.color = new Color( 0xffffff );\n\n\tthis.linewidth = 1;\n\tthis.linecap = 'round';\n\tthis.linejoin = 'round';\n\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nLineBasicMaterial.prototype = Object.create( Material.prototype );\nLineBasicMaterial.prototype.constructor = LineBasicMaterial;\n\nLineBasicMaterial.prototype.isLineBasicMaterial = true;\n\nLineBasicMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.linewidth = source.linewidth;\n\tthis.linecap = source.linecap;\n\tthis.linejoin = source.linejoin;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Line( geometry, material, mode ) {\n\n\tif ( mode === 1 ) {\n\n\t\tconsole.error( 'THREE.Line: parameter THREE.LinePieces no longer supported. Use THREE.LineSegments instead.' );\n\n\t}\n\n\tObject3D.call( this );\n\n\tthis.type = 'Line';\n\n\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\tthis.material = material !== undefined ? material : new LineBasicMaterial( { color: Math.random() * 0xffffff } );\n\n}\n\nLine.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Line,\n\n\tisLine: true,\n\n\tcomputeLineDistances: ( function () {\n\n\t\tvar start = new Vector3();\n\t\tvar end = new Vector3();\n\n\t\treturn function computeLineDistances() {\n\n\t\t\tvar geometry = this.geometry;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\t// we assume non-indexed geometry\n\n\t\t\t\tif ( geometry.index === null ) {\n\n\t\t\t\t\tvar positionAttribute = geometry.attributes.position;\n\t\t\t\t\tvar lineDistances = [ 0 ];\n\n\t\t\t\t\tfor ( var i = 1, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t\t\tstart.fromBufferAttribute( positionAttribute, i - 1 );\n\t\t\t\t\t\tend.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\t\t\tlineDistances[ i ] += start.distanceTo( end );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.addAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar lineDistances = geometry.lineDistances;\n\n\t\t\t\tlineDistances[ 0 ] = 0;\n\n\t\t\t\tfor ( var i = 1, l = vertices.length; i < l; i ++ ) {\n\n\t\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\t\tlineDistances[ i ] += vertices[ i - 1 ].distanceTo( vertices[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}() ),\n\n\traycast: ( function () {\n\n\t\tvar inverseMatrix = new Matrix4();\n\t\tvar ray = new Ray();\n\t\tvar sphere = new Sphere();\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tvar precision = raycaster.linePrecision;\n\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar matrixWorld = this.matrixWorld;\n\n\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\tsphere.applyMatrix4( matrixWorld );\n\t\t\tsphere.radius += precision;\n\n\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n\t\t\t//\n\n\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t\tvar localPrecision = precision / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\t\tvar localPrecisionSq = localPrecision * localPrecision;\n\n\t\t\tvar vStart = new Vector3();\n\t\t\tvar vEnd = new Vector3();\n\t\t\tvar interSegment = new Vector3();\n\t\t\tvar interRay = new Vector3();\n\t\t\tvar step = ( this && this.isLineSegments ) ? 2 : 1;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tvar index = geometry.index;\n\t\t\t\tvar attributes = geometry.attributes;\n\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\tvar indices = index.array;\n\n\t\t\t\t\tfor ( var i = 0, l = indices.length - 1; i < l; i += step ) {\n\n\t\t\t\t\t\tvar a = indices[ i ];\n\t\t\t\t\t\tvar b = indices[ i + 1 ];\n\n\t\t\t\t\t\tvStart.fromArray( positions, a * 3 );\n\t\t\t\t\t\tvEnd.fromArray( positions, b * 3 );\n\n\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\t\tif ( distSq > localPrecisionSq ) continue;\n\n\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( var i = 0, l = positions.length / 3 - 1; i < l; i += step ) {\n\n\t\t\t\t\t\tvStart.fromArray( positions, 3 * i );\n\t\t\t\t\t\tvEnd.fromArray( positions, 3 * i + 3 );\n\n\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\t\tif ( distSq > localPrecisionSq ) continue;\n\n\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar nbVertices = vertices.length;\n\n\t\t\t\tfor ( var i = 0; i < nbVertices - 1; i += step ) {\n\n\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vertices[ i ], vertices[ i + 1 ], interRay, interSegment );\n\n\t\t\t\t\tif ( distSq > localPrecisionSq ) continue;\n\n\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\tface: null,\n\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}() ),\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LineSegments( geometry, material ) {\n\n\tLine.call( this, geometry, material );\n\n\tthis.type = 'LineSegments';\n\n}\n\nLineSegments.prototype = Object.assign( Object.create( Line.prototype ), {\n\n\tconstructor: LineSegments,\n\n\tisLineSegments: true,\n\n\tcomputeLineDistances: ( function () {\n\n\t\tvar start = new Vector3();\n\t\tvar end = new Vector3();\n\n\t\treturn function computeLineDistances() {\n\n\t\t\tvar geometry = this.geometry;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\t// we assume non-indexed geometry\n\n\t\t\t\tif ( geometry.index === null ) {\n\n\t\t\t\t\tvar positionAttribute = geometry.attributes.position;\n\t\t\t\t\tvar lineDistances = [];\n\n\t\t\t\t\tfor ( var i = 0, l = positionAttribute.count; i < l; i += 2 ) {\n\n\t\t\t\t\t\tstart.fromBufferAttribute( positionAttribute, i );\n\t\t\t\t\t\tend.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + start.distanceTo( end );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.addAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar lineDistances = geometry.lineDistances;\n\n\t\t\t\tfor ( var i = 0, l = vertices.length; i < l; i += 2 ) {\n\n\t\t\t\t\tstart.copy( vertices[ i ] );\n\t\t\t\t\tend.copy( vertices[ i + 1 ] );\n\n\t\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + start.distanceTo( end );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}() )\n\n} );\n\n/**\n * @author mgreter / http://github.com/mgreter\n */\n\nfunction LineLoop( geometry, material ) {\n\n\tLine.call( this, geometry, material );\n\n\tthis.type = 'LineLoop';\n\n}\n\nLineLoop.prototype = Object.assign( Object.create( Line.prototype ), {\n\n\tconstructor: LineLoop,\n\n\tisLineLoop: true,\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *  size: <float>,\n *  sizeAttenuation: <bool>\n *\n *  morphTargets: <bool>\n * }\n */\n\nfunction PointsMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'PointsMaterial';\n\n\tthis.color = new Color( 0xffffff );\n\n\tthis.map = null;\n\n\tthis.size = 1;\n\tthis.sizeAttenuation = true;\n\n\tthis.morphTargets = false;\n\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nPointsMaterial.prototype = Object.create( Material.prototype );\nPointsMaterial.prototype.constructor = PointsMaterial;\n\nPointsMaterial.prototype.isPointsMaterial = true;\n\nPointsMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.map = source.map;\n\n\tthis.size = source.size;\n\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\tthis.morphTargets = source.morphTargets;\n\n\treturn this;\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Points( geometry, material ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Points';\n\n\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\tthis.material = material !== undefined ? material : new PointsMaterial( { color: Math.random() * 0xffffff } );\n\n}\n\nPoints.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Points,\n\n\tisPoints: true,\n\n\traycast: ( function () {\n\n\t\tvar inverseMatrix = new Matrix4();\n\t\tvar ray = new Ray();\n\t\tvar sphere = new Sphere();\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tvar object = this;\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar matrixWorld = this.matrixWorld;\n\t\t\tvar threshold = raycaster.params.Points.threshold;\n\n\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\tsphere.applyMatrix4( matrixWorld );\n\t\t\tsphere.radius += threshold;\n\n\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n\t\t\t//\n\n\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t\tvar localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\t\tvar localThresholdSq = localThreshold * localThreshold;\n\t\t\tvar position = new Vector3();\n\t\t\tvar intersectPoint = new Vector3();\n\n\t\t\tfunction testPoint( point, index ) {\n\n\t\t\t\tvar rayPointDistanceSq = ray.distanceSqToPoint( point );\n\n\t\t\t\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n\t\t\t\t\tray.closestPointToPoint( point, intersectPoint );\n\t\t\t\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\t\t\t\tpoint: intersectPoint.clone(),\n\t\t\t\t\t\tindex: index,\n\t\t\t\t\t\tface: null,\n\t\t\t\t\t\tobject: object\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tvar index = geometry.index;\n\t\t\t\tvar attributes = geometry.attributes;\n\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\tvar indices = index.array;\n\n\t\t\t\t\tfor ( var i = 0, il = indices.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar a = indices[ i ];\n\n\t\t\t\t\t\tposition.fromArray( positions, a * 3 );\n\n\t\t\t\t\t\ttestPoint( position, a );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( var i = 0, l = positions.length / 3; i < l; i ++ ) {\n\n\t\t\t\t\t\tposition.fromArray( positions, i * 3 );\n\n\t\t\t\t\t\ttestPoint( position, i );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\n\t\t\t\tfor ( var i = 0, l = vertices.length; i < l; i ++ ) {\n\n\t\t\t\t\ttestPoint( vertices[ i ], i );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}() ),\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction VideoTexture( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\tTexture.call( this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\tthis.format = format !== undefined ? format : RGBFormat;\n\n\tthis.minFilter = minFilter !== undefined ? minFilter : LinearFilter;\n\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\n\tthis.generateMipmaps = false;\n\n}\n\nVideoTexture.prototype = Object.assign( Object.create( Texture.prototype ), {\n\n\tconstructor: VideoTexture,\n\n\tisVideoTexture: true,\n\n\tupdate: function () {\n\n\t\tvar video = this.image;\n\n\t\tif ( video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n\t\t\tthis.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction CompressedTexture( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\tthis.image = { width: width, height: height };\n\tthis.mipmaps = mipmaps;\n\n\t// no flipping for cube textures\n\t// (also flipping doesn't work for compressed textures )\n\n\tthis.flipY = false;\n\n\t// can't generate mipmaps for compressed textures\n\t// mips must be embedded in DDS files\n\n\tthis.generateMipmaps = false;\n\n}\n\nCompressedTexture.prototype = Object.create( Texture.prototype );\nCompressedTexture.prototype.constructor = CompressedTexture;\n\nCompressedTexture.prototype.isCompressedTexture = true;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction CanvasTexture( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\tTexture.call( this, canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\tthis.needsUpdate = true;\n\n}\n\nCanvasTexture.prototype = Object.create( Texture.prototype );\nCanvasTexture.prototype.constructor = CanvasTexture;\nCanvasTexture.prototype.isCanvasTexture = true;\n\n/**\n * @author Matt DesLauriers / @mattdesl\n * @author atix / arthursilber.de\n */\n\nfunction DepthTexture( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) {\n\n\tformat = format !== undefined ? format : DepthFormat;\n\n\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\n\n\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\n\n\t}\n\n\tif ( type === undefined && format === DepthFormat ) type = UnsignedShortType;\n\tif ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;\n\n\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\tthis.image = { width: width, height: height };\n\n\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\tthis.flipY = false;\n\tthis.generateMipmaps\t= false;\n\n}\n\nDepthTexture.prototype = Object.create( Texture.prototype );\nDepthTexture.prototype.constructor = DepthTexture;\nDepthTexture.prototype.isDepthTexture = true;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction WireframeGeometry( geometry ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'WireframeGeometry';\n\n\t// buffer\n\n\tvar vertices = [];\n\n\t// helper variables\n\n\tvar i, j, l, o, ol;\n\tvar edge = [ 0, 0 ], edges = {}, e, edge1, edge2;\n\tvar key, keys = [ 'a', 'b', 'c' ];\n\tvar vertex;\n\n\t// different logic for Geometry and BufferGeometry\n\n\tif ( geometry && geometry.isGeometry ) {\n\n\t\t// create a data structure that contains all edges without duplicates\n\n\t\tvar faces = geometry.faces;\n\n\t\tfor ( i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\tedge1 = face[ keys[ j ] ];\n\t\t\t\tedge2 = face[ keys[ ( j + 1 ) % 3 ] ];\n\t\t\t\tedge[ 0 ] = Math.min( edge1, edge2 ); // sorting prevents duplicates\n\t\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ] };\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate vertices\n\n\t\tfor ( key in edges ) {\n\n\t\t\te = edges[ key ];\n\n\t\t\tvertex = geometry.vertices[ e.index1 ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\tvertex = geometry.vertices[ e.index2 ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t} else if ( geometry && geometry.isBufferGeometry ) {\n\n\t\tvar position, indices, groups;\n\t\tvar group, start, count;\n\t\tvar index1, index2;\n\n\t\tvertex = new Vector3();\n\n\t\tif ( geometry.index !== null ) {\n\n\t\t\t// indexed BufferGeometry\n\n\t\t\tposition = geometry.attributes.position;\n\t\t\tindices = geometry.index;\n\t\t\tgroups = geometry.groups;\n\n\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\tgroups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\n\n\t\t\t}\n\n\t\t\t// create a data structure that contains all eges without duplicates\n\n\t\t\tfor ( o = 0, ol = groups.length; o < ol; ++ o ) {\n\n\t\t\t\tgroup = groups[ o ];\n\n\t\t\t\tstart = group.start;\n\t\t\t\tcount = group.count;\n\n\t\t\t\tfor ( i = start, l = ( start + count ); i < l; i += 3 ) {\n\n\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\tedge1 = indices.getX( i + j );\n\t\t\t\t\t\tedge2 = indices.getX( i + ( j + 1 ) % 3 );\n\t\t\t\t\t\tedge[ 0 ] = Math.min( edge1, edge2 ); // sorting prevents duplicates\n\t\t\t\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\t\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\t\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ] };\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// generate vertices\n\n\t\t\tfor ( key in edges ) {\n\n\t\t\t\te = edges[ key ];\n\n\t\t\t\tvertex.fromBufferAttribute( position, e.index1 );\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\tvertex.fromBufferAttribute( position, e.index2 );\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// non-indexed BufferGeometry\n\n\t\t\tposition = geometry.attributes.position;\n\n\t\t\tfor ( i = 0, l = ( position.count / 3 ); i < l; i ++ ) {\n\n\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\n\t\t\t\t\tindex1 = 3 * i + j;\n\t\t\t\t\tvertex.fromBufferAttribute( position, index1 );\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\tindex2 = 3 * i + ( ( j + 1 ) % 3 );\n\t\t\t\t\tvertex.fromBufferAttribute( position, index2 );\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n}\n\nWireframeGeometry.prototype = Object.create( BufferGeometry.prototype );\nWireframeGeometry.prototype.constructor = WireframeGeometry;\n\n/**\n * @author zz85 / https://github.com/zz85\n * @author Mugen87 / https://github.com/Mugen87\n *\n * Parametric Surfaces Geometry\n * based on the brilliant article by @prideout http://prideout.net/blog/?p=44\n */\n\n// ParametricGeometry\n\nfunction ParametricGeometry( func, slices, stacks ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'ParametricGeometry';\n\n\tthis.parameters = {\n\t\tfunc: func,\n\t\tslices: slices,\n\t\tstacks: stacks\n\t};\n\n\tthis.fromBufferGeometry( new ParametricBufferGeometry( func, slices, stacks ) );\n\tthis.mergeVertices();\n\n}\n\nParametricGeometry.prototype = Object.create( Geometry.prototype );\nParametricGeometry.prototype.constructor = ParametricGeometry;\n\n// ParametricBufferGeometry\n\nfunction ParametricBufferGeometry( func, slices, stacks ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'ParametricBufferGeometry';\n\n\tthis.parameters = {\n\t\tfunc: func,\n\t\tslices: slices,\n\t\tstacks: stacks\n\t};\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\tvar EPS = 0.00001;\n\n\tvar normal = new Vector3();\n\n\tvar p0 = new Vector3(), p1 = new Vector3();\n\tvar pu = new Vector3(), pv = new Vector3();\n\n\tvar i, j;\n\n\tif ( func.length < 3 ) {\n\n\t\tconsole.error( 'THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.' );\n\n\t}\n\n\t// generate vertices, normals and uvs\n\n\tvar sliceCount = slices + 1;\n\n\tfor ( i = 0; i <= stacks; i ++ ) {\n\n\t\tvar v = i / stacks;\n\n\t\tfor ( j = 0; j <= slices; j ++ ) {\n\n\t\t\tvar u = j / slices;\n\n\t\t\t// vertex\n\n\t\t\tfunc( u, v, p0 );\n\t\t\tvertices.push( p0.x, p0.y, p0.z );\n\n\t\t\t// normal\n\n\t\t\t// approximate tangent vectors via finite differences\n\n\t\t\tif ( u - EPS >= 0 ) {\n\n\t\t\t\tfunc( u - EPS, v, p1 );\n\t\t\t\tpu.subVectors( p0, p1 );\n\n\t\t\t} else {\n\n\t\t\t\tfunc( u + EPS, v, p1 );\n\t\t\t\tpu.subVectors( p1, p0 );\n\n\t\t\t}\n\n\t\t\tif ( v - EPS >= 0 ) {\n\n\t\t\t\tfunc( u, v - EPS, p1 );\n\t\t\t\tpv.subVectors( p0, p1 );\n\n\t\t\t} else {\n\n\t\t\t\tfunc( u, v + EPS, p1 );\n\t\t\t\tpv.subVectors( p1, p0 );\n\n\t\t\t}\n\n\t\t\t// cross product of tangent vectors returns surface normal\n\n\t\t\tnormal.crossVectors( pu, pv ).normalize();\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( u, v );\n\n\t\t}\n\n\t}\n\n\t// generate indices\n\n\tfor ( i = 0; i < stacks; i ++ ) {\n\n\t\tfor ( j = 0; j < slices; j ++ ) {\n\n\t\t\tvar a = i * sliceCount + j;\n\t\t\tvar b = i * sliceCount + j + 1;\n\t\t\tvar c = ( i + 1 ) * sliceCount + j + 1;\n\t\t\tvar d = ( i + 1 ) * sliceCount + j;\n\n\t\t\t// faces one and two\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nParametricBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nParametricBufferGeometry.prototype.constructor = ParametricBufferGeometry;\n\n/**\n * @author clockworkgeek / https://github.com/clockworkgeek\n * @author timothypratley / https://github.com/timothypratley\n * @author WestLangley / http://github.com/WestLangley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// PolyhedronGeometry\n\nfunction PolyhedronGeometry( vertices, indices, radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'PolyhedronGeometry';\n\n\tthis.parameters = {\n\t\tvertices: vertices,\n\t\tindices: indices,\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new PolyhedronBufferGeometry( vertices, indices, radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nPolyhedronGeometry.prototype = Object.create( Geometry.prototype );\nPolyhedronGeometry.prototype.constructor = PolyhedronGeometry;\n\n// PolyhedronBufferGeometry\n\nfunction PolyhedronBufferGeometry( vertices, indices, radius, detail ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'PolyhedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tvertices: vertices,\n\t\tindices: indices,\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tradius = radius || 1;\n\tdetail = detail || 0;\n\n\t// default buffer data\n\n\tvar vertexBuffer = [];\n\tvar uvBuffer = [];\n\n\t// the subdivision creates the vertex buffer data\n\n\tsubdivide( detail );\n\n\t// all vertices should lie on a conceptual sphere with a given radius\n\n\tappplyRadius( radius );\n\n\t// finally, create the uv data\n\n\tgenerateUVs();\n\n\t// build non-indexed geometry\n\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\n\n\tif ( detail === 0 ) {\n\n\t\tthis.computeVertexNormals(); // flat normals\n\n\t} else {\n\n\t\tthis.normalizeNormals(); // smooth normals\n\n\t}\n\n\t// helper functions\n\n\tfunction subdivide( detail ) {\n\n\t\tvar a = new Vector3();\n\t\tvar b = new Vector3();\n\t\tvar c = new Vector3();\n\n\t\t// iterate over all faces and apply a subdivison with the given detail value\n\n\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t// get the vertices of the face\n\n\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\n\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\n\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\n\n\t\t\t// perform subdivision\n\n\t\t\tsubdivideFace( a, b, c, detail );\n\n\t\t}\n\n\t}\n\n\tfunction subdivideFace( a, b, c, detail ) {\n\n\t\tvar cols = Math.pow( 2, detail );\n\n\t\t// we use this multidimensional array as a data structure for creating the subdivision\n\n\t\tvar v = [];\n\n\t\tvar i, j;\n\n\t\t// construct all of the vertices for this subdivision\n\n\t\tfor ( i = 0; i <= cols; i ++ ) {\n\n\t\t\tv[ i ] = [];\n\n\t\t\tvar aj = a.clone().lerp( c, i / cols );\n\t\t\tvar bj = b.clone().lerp( c, i / cols );\n\n\t\t\tvar rows = cols - i;\n\n\t\t\tfor ( j = 0; j <= rows; j ++ ) {\n\n\t\t\t\tif ( j === 0 && i === cols ) {\n\n\t\t\t\t\tv[ i ][ j ] = aj;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// construct all of the faces\n\n\t\tfor ( i = 0; i < cols; i ++ ) {\n\n\t\t\tfor ( j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\n\n\t\t\t\tvar k = Math.floor( j / 2 );\n\n\t\t\t\tif ( j % 2 === 0 ) {\n\n\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\t\t\t\t\tpushVertex( v[ i ][ k ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\tpushVertex( v[ i + 1 ][ k + 1 ] );\n\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction appplyRadius( radius ) {\n\n\t\tvar vertex = new Vector3();\n\n\t\t// iterate over the entire buffer and apply the radius to each vertex\n\n\t\tfor ( var i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\tvertex.normalize().multiplyScalar( radius );\n\n\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\n\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\n\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\n\n\t\t}\n\n\t}\n\n\tfunction generateUVs() {\n\n\t\tvar vertex = new Vector3();\n\n\t\tfor ( var i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\tvar u = azimuth( vertex ) / 2 / Math.PI + 0.5;\n\t\t\tvar v = inclination( vertex ) / Math.PI + 0.5;\n\t\t\tuvBuffer.push( u, 1 - v );\n\n\t\t}\n\n\t\tcorrectUVs();\n\n\t\tcorrectSeam();\n\n\t}\n\n\tfunction correctSeam() {\n\n\t\t// handle case when face straddles the seam, see #3269\n\n\t\tfor ( var i = 0; i < uvBuffer.length; i += 6 ) {\n\n\t\t\t// uv data of a single face\n\n\t\t\tvar x0 = uvBuffer[ i + 0 ];\n\t\t\tvar x1 = uvBuffer[ i + 2 ];\n\t\t\tvar x2 = uvBuffer[ i + 4 ];\n\n\t\t\tvar max = Math.max( x0, x1, x2 );\n\t\t\tvar min = Math.min( x0, x1, x2 );\n\n\t\t\t// 0.9 is somewhat arbitrary\n\n\t\t\tif ( max > 0.9 && min < 0.1 ) {\n\n\t\t\t\tif ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\n\t\t\t\tif ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\n\t\t\t\tif ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction pushVertex( vertex ) {\n\n\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\n\n\t}\n\n\tfunction getVertexByIndex( index, vertex ) {\n\n\t\tvar stride = index * 3;\n\n\t\tvertex.x = vertices[ stride + 0 ];\n\t\tvertex.y = vertices[ stride + 1 ];\n\t\tvertex.z = vertices[ stride + 2 ];\n\n\t}\n\n\tfunction correctUVs() {\n\n\t\tvar a = new Vector3();\n\t\tvar b = new Vector3();\n\t\tvar c = new Vector3();\n\n\t\tvar centroid = new Vector3();\n\n\t\tvar uvA = new Vector2();\n\t\tvar uvB = new Vector2();\n\t\tvar uvC = new Vector2();\n\n\t\tfor ( var i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\n\n\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\n\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\n\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\n\n\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\n\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\n\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\n\n\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\n\n\t\t\tvar azi = azimuth( centroid );\n\n\t\t\tcorrectUV( uvA, j + 0, a, azi );\n\t\t\tcorrectUV( uvB, j + 2, b, azi );\n\t\t\tcorrectUV( uvC, j + 4, c, azi );\n\n\t\t}\n\n\t}\n\n\tfunction correctUV( uv, stride, vector, azimuth ) {\n\n\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\n\n\t\t\tuvBuffer[ stride ] = uv.x - 1;\n\n\t\t}\n\n\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\n\n\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\n\n\t\t}\n\n\t}\n\n\t// Angle around the Y axis, counter-clockwise when looking from above.\n\n\tfunction azimuth( vector ) {\n\n\t\treturn Math.atan2( vector.z, - vector.x );\n\n\t}\n\n\n\t// Angle above the XZ plane.\n\n\tfunction inclination( vector ) {\n\n\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n\t}\n\n}\n\nPolyhedronBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nPolyhedronBufferGeometry.prototype.constructor = PolyhedronBufferGeometry;\n\n/**\n * @author timothypratley / https://github.com/timothypratley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// TetrahedronGeometry\n\nfunction TetrahedronGeometry( radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TetrahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new TetrahedronBufferGeometry( radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nTetrahedronGeometry.prototype = Object.create( Geometry.prototype );\nTetrahedronGeometry.prototype.constructor = TetrahedronGeometry;\n\n// TetrahedronBufferGeometry\n\nfunction TetrahedronBufferGeometry( radius, detail ) {\n\n\tvar vertices = [\n\t\t1, 1, 1, \t- 1, - 1, 1, \t- 1, 1, - 1, \t1, - 1, - 1\n\t];\n\n\tvar indices = [\n\t\t2, 1, 0, \t0, 3, 2,\t1, 3, 0,\t2, 3, 1\n\t];\n\n\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'TetrahedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n}\n\nTetrahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\nTetrahedronBufferGeometry.prototype.constructor = TetrahedronBufferGeometry;\n\n/**\n * @author timothypratley / https://github.com/timothypratley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// OctahedronGeometry\n\nfunction OctahedronGeometry( radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'OctahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new OctahedronBufferGeometry( radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nOctahedronGeometry.prototype = Object.create( Geometry.prototype );\nOctahedronGeometry.prototype.constructor = OctahedronGeometry;\n\n// OctahedronBufferGeometry\n\nfunction OctahedronBufferGeometry( radius, detail ) {\n\n\tvar vertices = [\n\t\t1, 0, 0, \t- 1, 0, 0,\t0, 1, 0,\n\t\t0, - 1, 0, \t0, 0, 1,\t0, 0, - 1\n\t];\n\n\tvar indices = [\n\t\t0, 2, 4,\t0, 4, 3,\t0, 3, 5,\n\t\t0, 5, 2,\t1, 2, 5,\t1, 5, 3,\n\t\t1, 3, 4,\t1, 4, 2\n\t];\n\n\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'OctahedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n}\n\nOctahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\nOctahedronBufferGeometry.prototype.constructor = OctahedronBufferGeometry;\n\n/**\n * @author timothypratley / https://github.com/timothypratley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// IcosahedronGeometry\n\nfunction IcosahedronGeometry( radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'IcosahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new IcosahedronBufferGeometry( radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nIcosahedronGeometry.prototype = Object.create( Geometry.prototype );\nIcosahedronGeometry.prototype.constructor = IcosahedronGeometry;\n\n// IcosahedronBufferGeometry\n\nfunction IcosahedronBufferGeometry( radius, detail ) {\n\n\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n\tvar vertices = [\n\t\t- 1, t, 0, \t1, t, 0, \t- 1, - t, 0, \t1, - t, 0,\n\t\t 0, - 1, t, \t0, 1, t,\t0, - 1, - t, \t0, 1, - t,\n\t\t t, 0, - 1, \tt, 0, 1, \t- t, 0, - 1, \t- t, 0, 1\n\t];\n\n\tvar indices = [\n\t\t 0, 11, 5, \t0, 5, 1, \t0, 1, 7, \t0, 7, 10, \t0, 10, 11,\n\t\t 1, 5, 9, \t5, 11, 4,\t11, 10, 2,\t10, 7, 6,\t7, 1, 8,\n\t\t 3, 9, 4, \t3, 4, 2,\t3, 2, 6,\t3, 6, 8,\t3, 8, 9,\n\t\t 4, 9, 5, \t2, 4, 11,\t6, 2, 10,\t8, 6, 7,\t9, 8, 1\n\t];\n\n\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'IcosahedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n}\n\nIcosahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\nIcosahedronBufferGeometry.prototype.constructor = IcosahedronBufferGeometry;\n\n/**\n * @author Abe Pazos / https://hamoid.com\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// DodecahedronGeometry\n\nfunction DodecahedronGeometry( radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'DodecahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new DodecahedronBufferGeometry( radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nDodecahedronGeometry.prototype = Object.create( Geometry.prototype );\nDodecahedronGeometry.prototype.constructor = DodecahedronGeometry;\n\n// DodecahedronBufferGeometry\n\nfunction DodecahedronBufferGeometry( radius, detail ) {\n\n\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\tvar r = 1 / t;\n\n\tvar vertices = [\n\n\t\t// (±1, ±1, ±1)\n\t\t- 1, - 1, - 1,\t- 1, - 1, 1,\n\t\t- 1, 1, - 1, - 1, 1, 1,\n\t\t1, - 1, - 1, 1, - 1, 1,\n\t\t1, 1, - 1, 1, 1, 1,\n\n\t\t// (0, ±1/φ, ±φ)\n\t\t 0, - r, - t, 0, - r, t,\n\t\t 0, r, - t, 0, r, t,\n\n\t\t// (±1/φ, ±φ, 0)\n\t\t- r, - t, 0, - r, t, 0,\n\t\t r, - t, 0, r, t, 0,\n\n\t\t// (±φ, 0, ±1/φ)\n\t\t- t, 0, - r, t, 0, - r,\n\t\t- t, 0, r, t, 0, r\n\t];\n\n\tvar indices = [\n\t\t3, 11, 7, \t3, 7, 15, \t3, 15, 13,\n\t\t7, 19, 17, \t7, 17, 6, \t7, 6, 15,\n\t\t17, 4, 8, \t17, 8, 10, \t17, 10, 6,\n\t\t8, 0, 16, \t8, 16, 2, \t8, 2, 10,\n\t\t0, 12, 1, \t0, 1, 18, \t0, 18, 16,\n\t\t6, 10, 2, \t6, 2, 13, \t6, 13, 15,\n\t\t2, 16, 18, \t2, 18, 3, \t2, 3, 13,\n\t\t18, 1, 9, \t18, 9, 11, \t18, 11, 3,\n\t\t4, 14, 12, \t4, 12, 0, \t4, 0, 8,\n\t\t11, 9, 5, \t11, 5, 19, \t11, 19, 7,\n\t\t19, 5, 14, \t19, 14, 4, \t19, 4, 17,\n\t\t1, 12, 14, \t1, 14, 5, \t1, 5, 9\n\t];\n\n\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'DodecahedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n}\n\nDodecahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\nDodecahedronBufferGeometry.prototype.constructor = DodecahedronBufferGeometry;\n\n/**\n * @author oosmoxiecode / https://github.com/oosmoxiecode\n * @author WestLangley / https://github.com/WestLangley\n * @author zz85 / https://github.com/zz85\n * @author miningold / https://github.com/miningold\n * @author jonobr1 / https://github.com/jonobr1\n * @author Mugen87 / https://github.com/Mugen87\n *\n */\n\n// TubeGeometry\n\nfunction TubeGeometry( path, tubularSegments, radius, radialSegments, closed, taper ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TubeGeometry';\n\n\tthis.parameters = {\n\t\tpath: path,\n\t\ttubularSegments: tubularSegments,\n\t\tradius: radius,\n\t\tradialSegments: radialSegments,\n\t\tclosed: closed\n\t};\n\n\tif ( taper !== undefined ) console.warn( 'THREE.TubeGeometry: taper has been removed.' );\n\n\tvar bufferGeometry = new TubeBufferGeometry( path, tubularSegments, radius, radialSegments, closed );\n\n\t// expose internals\n\n\tthis.tangents = bufferGeometry.tangents;\n\tthis.normals = bufferGeometry.normals;\n\tthis.binormals = bufferGeometry.binormals;\n\n\t// create geometry\n\n\tthis.fromBufferGeometry( bufferGeometry );\n\tthis.mergeVertices();\n\n}\n\nTubeGeometry.prototype = Object.create( Geometry.prototype );\nTubeGeometry.prototype.constructor = TubeGeometry;\n\n// TubeBufferGeometry\n\nfunction TubeBufferGeometry( path, tubularSegments, radius, radialSegments, closed ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'TubeBufferGeometry';\n\n\tthis.parameters = {\n\t\tpath: path,\n\t\ttubularSegments: tubularSegments,\n\t\tradius: radius,\n\t\tradialSegments: radialSegments,\n\t\tclosed: closed\n\t};\n\n\ttubularSegments = tubularSegments || 64;\n\tradius = radius || 1;\n\tradialSegments = radialSegments || 8;\n\tclosed = closed || false;\n\n\tvar frames = path.computeFrenetFrames( tubularSegments, closed );\n\n\t// expose internals\n\n\tthis.tangents = frames.tangents;\n\tthis.normals = frames.normals;\n\tthis.binormals = frames.binormals;\n\n\t// helper variables\n\n\tvar vertex = new Vector3();\n\tvar normal = new Vector3();\n\tvar uv = new Vector2();\n\tvar P = new Vector3();\n\n\tvar i, j;\n\n\t// buffer\n\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\tvar indices = [];\n\n\t// create buffer data\n\n\tgenerateBufferData();\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t// functions\n\n\tfunction generateBufferData() {\n\n\t\tfor ( i = 0; i < tubularSegments; i ++ ) {\n\n\t\t\tgenerateSegment( i );\n\n\t\t}\n\n\t\t// if the geometry is not closed, generate the last row of vertices and normals\n\t\t// at the regular position on the given path\n\t\t//\n\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\n\n\t\t// uvs are generated in a separate function.\n\t\t// this makes it easy compute correct values for closed geometries\n\n\t\tgenerateUVs();\n\n\t\t// finally create faces\n\n\t\tgenerateIndices();\n\n\t}\n\n\tfunction generateSegment( i ) {\n\n\t\t// we use getPointAt to sample evenly distributed points from the given path\n\n\t\tP = path.getPointAt( i / tubularSegments, P );\n\n\t\t// retrieve corresponding normal and binormal\n\n\t\tvar N = frames.normals[ i ];\n\t\tvar B = frames.binormals[ i ];\n\n\t\t// generate normals and vertices for the current segment\n\n\t\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\n\t\t\tvar sin = Math.sin( v );\n\t\t\tvar cos = - Math.cos( v );\n\n\t\t\t// normal\n\n\t\t\tnormal.x = ( cos * N.x + sin * B.x );\n\t\t\tnormal.y = ( cos * N.y + sin * B.y );\n\t\t\tnormal.z = ( cos * N.z + sin * B.z );\n\t\t\tnormal.normalize();\n\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\tvertex.z = P.z + radius * normal.z;\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t}\n\n\tfunction generateIndices() {\n\n\t\tfor ( j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\tfor ( i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\tvar a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\tvar b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\tvar c = ( radialSegments + 1 ) * j + i;\n\t\t\t\tvar d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction generateUVs() {\n\n\t\tfor ( i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\tuv.y = j / radialSegments;\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nTubeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nTubeBufferGeometry.prototype.constructor = TubeBufferGeometry;\n\nTubeBufferGeometry.prototype.toJSON = function () {\n\n\tvar data = BufferGeometry.prototype.toJSON.call( this );\n\n\tdata.path = this.parameters.path.toJSON();\n\n\treturn data;\n\n};\n\n/**\n * @author oosmoxiecode\n * @author Mugen87 / https://github.com/Mugen87\n *\n * based on http://www.blackpawn.com/texts/pqtorus/\n */\n\n// TorusKnotGeometry\n\nfunction TorusKnotGeometry( radius, tube, tubularSegments, radialSegments, p, q, heightScale ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TorusKnotGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\ttubularSegments: tubularSegments,\n\t\tradialSegments: radialSegments,\n\t\tp: p,\n\t\tq: q\n\t};\n\n\tif ( heightScale !== undefined ) console.warn( 'THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead.' );\n\n\tthis.fromBufferGeometry( new TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) );\n\tthis.mergeVertices();\n\n}\n\nTorusKnotGeometry.prototype = Object.create( Geometry.prototype );\nTorusKnotGeometry.prototype.constructor = TorusKnotGeometry;\n\n// TorusKnotBufferGeometry\n\nfunction TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'TorusKnotBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\ttubularSegments: tubularSegments,\n\t\tradialSegments: radialSegments,\n\t\tp: p,\n\t\tq: q\n\t};\n\n\tradius = radius || 1;\n\ttube = tube || 0.4;\n\ttubularSegments = Math.floor( tubularSegments ) || 64;\n\tradialSegments = Math.floor( radialSegments ) || 8;\n\tp = p || 2;\n\tq = q || 3;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar i, j;\n\n\tvar vertex = new Vector3();\n\tvar normal = new Vector3();\n\n\tvar P1 = new Vector3();\n\tvar P2 = new Vector3();\n\n\tvar B = new Vector3();\n\tvar T = new Vector3();\n\tvar N = new Vector3();\n\n\t// generate vertices, normals and uvs\n\n\tfor ( i = 0; i <= tubularSegments; ++ i ) {\n\n\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segement\n\n\t\tvar u = i / tubularSegments * p * Math.PI * 2;\n\n\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\n\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n\n\t\t// calculate orthonormal basis\n\n\t\tT.subVectors( P2, P1 );\n\t\tN.addVectors( P2, P1 );\n\t\tB.crossVectors( T, N );\n\t\tN.crossVectors( B, T );\n\n\t\t// normalize B, N. T can be ignored, we don't use it\n\n\t\tB.normalize();\n\t\tN.normalize();\n\n\t\tfor ( j = 0; j <= radialSegments; ++ j ) {\n\n\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\t\t\tvar cx = - tube * Math.cos( v );\n\t\t\tvar cy = tube * Math.sin( v );\n\n\t\t\t// now calculate the final vertex position.\n\t\t\t// first we orient the extrusion with our basis vectos, then we add it to the current position on the curve\n\n\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\n\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\n\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n\t\t\tnormal.subVectors( vertex, P1 ).normalize();\n\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( i / tubularSegments );\n\t\t\tuvs.push( j / radialSegments );\n\n\t\t}\n\n\t}\n\n\t// generate indices\n\n\tfor ( j = 1; j <= tubularSegments; j ++ ) {\n\n\t\tfor ( i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t// indices\n\n\t\t\tvar a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\tvar b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\tvar c = ( radialSegments + 1 ) * j + i;\n\t\t\tvar d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t// this function calculates the current position on the torus curve\n\n\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\n\n\t\tvar cu = Math.cos( u );\n\t\tvar su = Math.sin( u );\n\t\tvar quOverP = q / p * u;\n\t\tvar cs = Math.cos( quOverP );\n\n\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\n\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\n\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\n\n\t}\n\n}\n\nTorusKnotBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nTorusKnotBufferGeometry.prototype.constructor = TorusKnotBufferGeometry;\n\n/**\n * @author oosmoxiecode\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// TorusGeometry\n\nfunction TorusGeometry( radius, tube, radialSegments, tubularSegments, arc ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TorusGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\tradialSegments: radialSegments,\n\t\ttubularSegments: tubularSegments,\n\t\tarc: arc\n\t};\n\n\tthis.fromBufferGeometry( new TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) );\n\tthis.mergeVertices();\n\n}\n\nTorusGeometry.prototype = Object.create( Geometry.prototype );\nTorusGeometry.prototype.constructor = TorusGeometry;\n\n// TorusBufferGeometry\n\nfunction TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'TorusBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\tradialSegments: radialSegments,\n\t\ttubularSegments: tubularSegments,\n\t\tarc: arc\n\t};\n\n\tradius = radius || 1;\n\ttube = tube || 0.4;\n\tradialSegments = Math.floor( radialSegments ) || 8;\n\ttubularSegments = Math.floor( tubularSegments ) || 6;\n\tarc = arc || Math.PI * 2;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar center = new Vector3();\n\tvar vertex = new Vector3();\n\tvar normal = new Vector3();\n\n\tvar j, i;\n\n\t// generate vertices, normals and uvs\n\n\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\tfor ( i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\tvar u = i / tubularSegments * arc;\n\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\tvertex.z = tube * Math.sin( v );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\tcenter.y = radius * Math.sin( u );\n\t\t\tnormal.subVectors( vertex, center ).normalize();\n\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( i / tubularSegments );\n\t\t\tuvs.push( j / radialSegments );\n\n\t\t}\n\n\t}\n\n\t// generate indices\n\n\tfor ( j = 1; j <= radialSegments; j ++ ) {\n\n\t\tfor ( i = 1; i <= tubularSegments; i ++ ) {\n\n\t\t\t// indices\n\n\t\t\tvar a = ( tubularSegments + 1 ) * j + i - 1;\n\t\t\tvar b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n\t\t\tvar c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n\t\t\tvar d = ( tubularSegments + 1 ) * j + i;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nTorusBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nTorusBufferGeometry.prototype.constructor = TorusBufferGeometry;\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n * Port from https://github.com/mapbox/earcut (v2.1.2)\n */\n\nvar Earcut = {\n\n\ttriangulate: function ( data, holeIndices, dim ) {\n\n\t\tdim = dim || 2;\n\n\t\tvar hasHoles = holeIndices && holeIndices.length,\n\t\t\touterLen = hasHoles ? holeIndices[ 0 ] * dim : data.length,\n\t\t\touterNode = linkedList( data, 0, outerLen, dim, true ),\n\t\t\ttriangles = [];\n\n\t\tif ( ! outerNode ) return triangles;\n\n\t\tvar minX, minY, maxX, maxY, x, y, invSize;\n\n\t\tif ( hasHoles ) outerNode = eliminateHoles( data, holeIndices, outerNode, dim );\n\n\t\t// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\n\t\tif ( data.length > 80 * dim ) {\n\n\t\t\tminX = maxX = data[ 0 ];\n\t\t\tminY = maxY = data[ 1 ];\n\n\t\t\tfor ( var i = dim; i < outerLen; i += dim ) {\n\n\t\t\t\tx = data[ i ];\n\t\t\t\ty = data[ i + 1 ];\n\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\tif ( y > maxY ) maxY = y;\n\n\t\t\t}\n\n\t\t\t// minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\n\t\t\tinvSize = Math.max( maxX - minX, maxY - minY );\n\t\t\tinvSize = invSize !== 0 ? 1 / invSize : 0;\n\n\t\t}\n\n\t\tearcutLinked( outerNode, triangles, dim, minX, minY, invSize );\n\n\t\treturn triangles;\n\n\t}\n\n};\n\n// create a circular doubly linked list from polygon points in the specified winding order\n\nfunction linkedList( data, start, end, dim, clockwise ) {\n\n\tvar i, last;\n\n\tif ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {\n\n\t\tfor ( i = start; i < end; i += dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t} else {\n\n\t\tfor ( i = end - dim; i >= start; i -= dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t}\n\n\tif ( last && equals( last, last.next ) ) {\n\n\t\tremoveNode( last );\n\t\tlast = last.next;\n\n\t}\n\n\treturn last;\n\n}\n\n// eliminate colinear or duplicate points\n\nfunction filterPoints( start, end ) {\n\n\tif ( ! start ) return start;\n\tif ( ! end ) end = start;\n\n\tvar p = start, again;\n\n\tdo {\n\n\t\tagain = false;\n\n\t\tif ( ! p.steiner && ( equals( p, p.next ) || three_module_area( p.prev, p, p.next ) === 0 ) ) {\n\n\t\t\tremoveNode( p );\n\t\t\tp = end = p.prev;\n\t\t\tif ( p === p.next ) break;\n\t\t\tagain = true;\n\n\t\t} else {\n\n\t\t\tp = p.next;\n\n\t\t}\n\n\t} while ( again || p !== end );\n\n\treturn end;\n\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\n\nfunction earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) {\n\n\tif ( ! ear ) return;\n\n\t// interlink polygon nodes in z-order\n\n\tif ( ! pass && invSize ) indexCurve( ear, minX, minY, invSize );\n\n\tvar stop = ear, prev, next;\n\n\t// iterate through ears, slicing them one by one\n\n\twhile ( ear.prev !== ear.next ) {\n\n\t\tprev = ear.prev;\n\t\tnext = ear.next;\n\n\t\tif ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {\n\n\t\t\t// cut off the triangle\n\t\t\ttriangles.push( prev.i / dim );\n\t\t\ttriangles.push( ear.i / dim );\n\t\t\ttriangles.push( next.i / dim );\n\n\t\t\tremoveNode( ear );\n\n\t\t\t// skipping the next vertice leads to less sliver triangles\n\t\t\tear = next.next;\n\t\t\tstop = next.next;\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\tear = next;\n\n\t\t// if we looped through the whole remaining polygon and can't find any more ears\n\n\t\tif ( ear === stop ) {\n\n\t\t\t// try filtering points and slicing again\n\n\t\t\tif ( ! pass ) {\n\n\t\t\t\tearcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );\n\n\t\t\t\t// if this didn't work, try curing all small self-intersections locally\n\n\t\t\t} else if ( pass === 1 ) {\n\n\t\t\t\tear = cureLocalIntersections( ear, triangles, dim );\n\t\t\t\tearcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );\n\n\t\t\t\t// as a last resort, try splitting the remaining polygon into two\n\n\t\t\t} else if ( pass === 2 ) {\n\n\t\t\t\tsplitEarcut( ear, triangles, dim, minX, minY, invSize );\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\n\nfunction isEar( ear ) {\n\n\tvar a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( three_module_area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// now make sure we don't have other points inside the potential ear\n\tvar p = ear.next.next;\n\n\twhile ( p !== ear.prev ) {\n\n\t\tif ( pointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) && three_module_area( p.prev, p, p.next ) >= 0 ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction isEarHashed( ear, minX, minY, invSize ) {\n\n\tvar a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( three_module_area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// triangle bbox; min & max are calculated like this for speed\n\n\tvar minTX = a.x < b.x ? ( a.x < c.x ? a.x : c.x ) : ( b.x < c.x ? b.x : c.x ),\n\t\tminTY = a.y < b.y ? ( a.y < c.y ? a.y : c.y ) : ( b.y < c.y ? b.y : c.y ),\n\t\tmaxTX = a.x > b.x ? ( a.x > c.x ? a.x : c.x ) : ( b.x > c.x ? b.x : c.x ),\n\t\tmaxTY = a.y > b.y ? ( a.y > c.y ? a.y : c.y ) : ( b.y > c.y ? b.y : c.y );\n\n\t// z-order range for the current triangle bbox;\n\n\tvar minZ = zOrder( minTX, minTY, minX, minY, invSize ),\n\t\tmaxZ = zOrder( maxTX, maxTY, minX, minY, invSize );\n\n\t// first look for points inside the triangle in increasing z-order\n\n\tvar p = ear.nextZ;\n\n\twhile ( p && p.z <= maxZ ) {\n\n\t\tif ( p !== ear.prev && p !== ear.next &&\n\t\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\t\tthree_module_area( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.nextZ;\n\n\t}\n\n\t// then look for points in decreasing z-order\n\n\tp = ear.prevZ;\n\n\twhile ( p && p.z >= minZ ) {\n\n\t\tif ( p !== ear.prev && p !== ear.next &&\n\t\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\t\tthree_module_area( p.prev, p, p.next ) >= 0 ) return false;\n\n\t\tp = p.prevZ;\n\n\t}\n\n\treturn true;\n\n}\n\n// go through all polygon nodes and cure small local self-intersections\n\nfunction cureLocalIntersections( start, triangles, dim ) {\n\n\tvar p = start;\n\n\tdo {\n\n\t\tvar a = p.prev, b = p.next.next;\n\n\t\tif ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {\n\n\t\t\ttriangles.push( a.i / dim );\n\t\t\ttriangles.push( p.i / dim );\n\t\t\ttriangles.push( b.i / dim );\n\n\t\t\t// remove two nodes involved\n\n\t\t\tremoveNode( p );\n\t\t\tremoveNode( p.next );\n\n\t\t\tp = start = b;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn p;\n\n}\n\n// try splitting polygon into two and triangulate them independently\n\nfunction splitEarcut( start, triangles, dim, minX, minY, invSize ) {\n\n\t// look for a valid diagonal that divides the polygon into two\n\n\tvar a = start;\n\n\tdo {\n\n\t\tvar b = a.next.next;\n\n\t\twhile ( b !== a.prev ) {\n\n\t\t\tif ( a.i !== b.i && isValidDiagonal( a, b ) ) {\n\n\t\t\t\t// split the polygon in two by the diagonal\n\n\t\t\t\tvar c = splitPolygon( a, b );\n\n\t\t\t\t// filter colinear points around the cuts\n\n\t\t\t\ta = filterPoints( a, a.next );\n\t\t\t\tc = filterPoints( c, c.next );\n\n\t\t\t\t// run earcut on each half\n\n\t\t\t\tearcutLinked( a, triangles, dim, minX, minY, invSize );\n\t\t\t\tearcutLinked( c, triangles, dim, minX, minY, invSize );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tb = b.next;\n\n\t\t}\n\n\t\ta = a.next;\n\n\t} while ( a !== start );\n\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\n\nfunction eliminateHoles( data, holeIndices, outerNode, dim ) {\n\n\tvar queue = [], i, len, start, end, list;\n\n\tfor ( i = 0, len = holeIndices.length; i < len; i ++ ) {\n\n\t\tstart = holeIndices[ i ] * dim;\n\t\tend = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;\n\t\tlist = linkedList( data, start, end, dim, false );\n\t\tif ( list === list.next ) list.steiner = true;\n\t\tqueue.push( getLeftmost( list ) );\n\n\t}\n\n\tqueue.sort( compareX );\n\n\t// process holes from left to right\n\n\tfor ( i = 0; i < queue.length; i ++ ) {\n\n\t\teliminateHole( queue[ i ], outerNode );\n\t\touterNode = filterPoints( outerNode, outerNode.next );\n\n\t}\n\n\treturn outerNode;\n\n}\n\nfunction compareX( a, b ) {\n\n\treturn a.x - b.x;\n\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\n\nfunction eliminateHole( hole, outerNode ) {\n\n\touterNode = findHoleBridge( hole, outerNode );\n\n\tif ( outerNode ) {\n\n\t\tvar b = splitPolygon( outerNode, hole );\n\n\t\tfilterPoints( b, b.next );\n\n\t}\n\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\n\nfunction findHoleBridge( hole, outerNode ) {\n\n\tvar p = outerNode,\n\t\thx = hole.x,\n\t\thy = hole.y,\n\t\tqx = - Infinity,\n\t\tm;\n\n\t// find a segment intersected by a ray from the hole's leftmost point to the left;\n\t// segment's endpoint with lesser x will be potential connection point\n\n\tdo {\n\n\t\tif ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {\n\n\t\t\tvar x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );\n\n\t\t\tif ( x <= hx && x > qx ) {\n\n\t\t\t\tqx = x;\n\n\t\t\t\tif ( x === hx ) {\n\n\t\t\t\t\tif ( hy === p.y ) return p;\n\t\t\t\t\tif ( hy === p.next.y ) return p.next;\n\n\t\t\t\t}\n\n\t\t\t\tm = p.x < p.next.x ? p : p.next;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== outerNode );\n\n\tif ( ! m ) return null;\n\n\tif ( hx === qx ) return m.prev; // hole touches outer segment; pick lower endpoint\n\n\t// look for points inside the triangle of hole point, segment intersection and endpoint;\n\t// if there are no points found, we have a valid connection;\n\t// otherwise choose the point of the minimum angle with the ray as connection point\n\n\tvar stop = m,\n\t\tmx = m.x,\n\t\tmy = m.y,\n\t\ttanMin = Infinity,\n\t\ttan;\n\n\tp = m.next;\n\n\twhile ( p !== stop ) {\n\n\t\tif ( hx >= p.x && p.x >= mx && hx !== p.x &&\n\t\t\t\t\t\tpointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {\n\n\t\t\ttan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential\n\n\t\t\tif ( ( tan < tanMin || ( tan === tanMin && p.x > m.x ) ) && locallyInside( p, hole ) ) {\n\n\t\t\t\tm = p;\n\t\t\t\ttanMin = tan;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t}\n\n\treturn m;\n\n}\n\n// interlink polygon nodes in z-order\n\nfunction indexCurve( start, minX, minY, invSize ) {\n\n\tvar p = start;\n\n\tdo {\n\n\t\tif ( p.z === null ) p.z = zOrder( p.x, p.y, minX, minY, invSize );\n\t\tp.prevZ = p.prev;\n\t\tp.nextZ = p.next;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\tp.prevZ.nextZ = null;\n\tp.prevZ = null;\n\n\tsortLinked( p );\n\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\n\nfunction sortLinked( list ) {\n\n\tvar i, p, q, e, tail, numMerges, pSize, qSize, inSize = 1;\n\n\tdo {\n\n\t\tp = list;\n\t\tlist = null;\n\t\ttail = null;\n\t\tnumMerges = 0;\n\n\t\twhile ( p ) {\n\n\t\t\tnumMerges ++;\n\t\t\tq = p;\n\t\t\tpSize = 0;\n\n\t\t\tfor ( i = 0; i < inSize; i ++ ) {\n\n\t\t\t\tpSize ++;\n\t\t\t\tq = q.nextZ;\n\t\t\t\tif ( ! q ) break;\n\n\t\t\t}\n\n\t\t\tqSize = inSize;\n\n\t\t\twhile ( pSize > 0 || ( qSize > 0 && q ) ) {\n\n\t\t\t\tif ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {\n\n\t\t\t\t\te = p;\n\t\t\t\t\tp = p.nextZ;\n\t\t\t\t\tpSize --;\n\n\t\t\t\t} else {\n\n\t\t\t\t\te = q;\n\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\tqSize --;\n\n\t\t\t\t}\n\n\t\t\t\tif ( tail ) tail.nextZ = e;\n\t\t\t\telse list = e;\n\n\t\t\t\te.prevZ = tail;\n\t\t\t\ttail = e;\n\n\t\t\t}\n\n\t\t\tp = q;\n\n\t\t}\n\n\t\ttail.nextZ = null;\n\t\tinSize *= 2;\n\n\t} while ( numMerges > 1 );\n\n\treturn list;\n\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\n\nfunction zOrder( x, y, minX, minY, invSize ) {\n\n\t// coords are transformed into non-negative 15-bit integer range\n\n\tx = 32767 * ( x - minX ) * invSize;\n\ty = 32767 * ( y - minY ) * invSize;\n\n\tx = ( x | ( x << 8 ) ) & 0x00FF00FF;\n\tx = ( x | ( x << 4 ) ) & 0x0F0F0F0F;\n\tx = ( x | ( x << 2 ) ) & 0x33333333;\n\tx = ( x | ( x << 1 ) ) & 0x55555555;\n\n\ty = ( y | ( y << 8 ) ) & 0x00FF00FF;\n\ty = ( y | ( y << 4 ) ) & 0x0F0F0F0F;\n\ty = ( y | ( y << 2 ) ) & 0x33333333;\n\ty = ( y | ( y << 1 ) ) & 0x55555555;\n\n\treturn x | ( y << 1 );\n\n}\n\n// find the leftmost node of a polygon ring\n\nfunction getLeftmost( start ) {\n\n\tvar p = start, leftmost = start;\n\n\tdo {\n\n\t\tif ( p.x < leftmost.x ) leftmost = p;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn leftmost;\n\n}\n\n// check if a point lies within a convex triangle\n\nfunction pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {\n\n\treturn ( cx - px ) * ( ay - py ) - ( ax - px ) * ( cy - py ) >= 0 &&\n\t ( ax - px ) * ( by - py ) - ( bx - px ) * ( ay - py ) >= 0 &&\n\t ( bx - px ) * ( cy - py ) - ( cx - px ) * ( by - py ) >= 0;\n\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\n\nfunction isValidDiagonal( a, b ) {\n\n\treturn a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) &&\n\t\tlocallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b );\n\n}\n\n// signed area of a triangle\n\nfunction three_module_area( p, q, r ) {\n\n\treturn ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );\n\n}\n\n// check if two points are equal\n\nfunction equals( p1, p2 ) {\n\n\treturn p1.x === p2.x && p1.y === p2.y;\n\n}\n\n// check if two segments intersect\n\nfunction intersects( p1, q1, p2, q2 ) {\n\n\tif ( ( equals( p1, q1 ) && equals( p2, q2 ) ) ||\n\t\t\t( equals( p1, q2 ) && equals( p2, q1 ) ) ) return true;\n\n\treturn three_module_area( p1, q1, p2 ) > 0 !== three_module_area( p1, q1, q2 ) > 0 &&\n\t\t\t\t three_module_area( p2, q2, p1 ) > 0 !== three_module_area( p2, q2, q1 ) > 0;\n\n}\n\n// check if a polygon diagonal intersects any polygon segments\n\nfunction intersectsPolygon( a, b ) {\n\n\tvar p = a;\n\n\tdo {\n\n\t\tif ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n\t\t\t\t\t\tintersects( p, p.next, a, b ) ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn false;\n\n}\n\n// check if a polygon diagonal is locally inside the polygon\n\nfunction locallyInside( a, b ) {\n\n\treturn three_module_area( a.prev, a, a.next ) < 0 ?\n\t\tthree_module_area( a, b, a.next ) >= 0 && three_module_area( a, a.prev, b ) >= 0 :\n\t\tthree_module_area( a, b, a.prev ) < 0 || three_module_area( a, a.next, b ) < 0;\n\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\n\nfunction middleInside( a, b ) {\n\n\tvar p = a,\n\t\tinside = false,\n\t\tpx = ( a.x + b.x ) / 2,\n\t\tpy = ( a.y + b.y ) / 2;\n\n\tdo {\n\n\t\tif ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&\n\t\t\t\t\t\t( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) ) {\n\n\t\t\tinside = ! inside;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn inside;\n\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\n\nfunction splitPolygon( a, b ) {\n\n\tvar a2 = new three_module_Node( a.i, a.x, a.y ),\n\t\tb2 = new three_module_Node( b.i, b.x, b.y ),\n\t\tan = a.next,\n\t\tbp = b.prev;\n\n\ta.next = b;\n\tb.prev = a;\n\n\ta2.next = an;\n\tan.prev = a2;\n\n\tb2.next = a2;\n\ta2.prev = b2;\n\n\tbp.next = b2;\n\tb2.prev = bp;\n\n\treturn b2;\n\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\n\nfunction insertNode( i, x, y, last ) {\n\n\tvar p = new three_module_Node( i, x, y );\n\n\tif ( ! last ) {\n\n\t\tp.prev = p;\n\t\tp.next = p;\n\n\t} else {\n\n\t\tp.next = last.next;\n\t\tp.prev = last;\n\t\tlast.next.prev = p;\n\t\tlast.next = p;\n\n\t}\n\n\treturn p;\n\n}\n\nfunction removeNode( p ) {\n\n\tp.next.prev = p.prev;\n\tp.prev.next = p.next;\n\n\tif ( p.prevZ ) p.prevZ.nextZ = p.nextZ;\n\tif ( p.nextZ ) p.nextZ.prevZ = p.prevZ;\n\n}\n\nfunction three_module_Node( i, x, y ) {\n\n\t// vertice index in coordinates array\n\tthis.i = i;\n\n\t// vertex coordinates\n\tthis.x = x;\n\tthis.y = y;\n\n\t// previous and next vertice nodes in a polygon ring\n\tthis.prev = null;\n\tthis.next = null;\n\n\t// z-order curve value\n\tthis.z = null;\n\n\t// previous and next nodes in z-order\n\tthis.prevZ = null;\n\tthis.nextZ = null;\n\n\t// indicates whether this is a steiner point\n\tthis.steiner = false;\n\n}\n\nfunction signedArea( data, start, end, dim ) {\n\n\tvar sum = 0;\n\n\tfor ( var i = start, j = end - dim; i < end; i += dim ) {\n\n\t\tsum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );\n\t\tj = i;\n\n\t}\n\n\treturn sum;\n\n}\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n */\n\nvar ShapeUtils = {\n\n\t// calculate area of the contour polygon\n\n\tarea: function ( contour ) {\n\n\t\tvar n = contour.length;\n\t\tvar a = 0.0;\n\n\t\tfor ( var p = n - 1, q = 0; q < n; p = q ++ ) {\n\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n\t\t}\n\n\t\treturn a * 0.5;\n\n\t},\n\n\tisClockWise: function ( pts ) {\n\n\t\treturn ShapeUtils.area( pts ) < 0;\n\n\t},\n\n\ttriangulateShape: function ( contour, holes ) {\n\n\t\tvar vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\t\tvar holeIndices = []; // array of hole indices\n\t\tvar faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n\t\tremoveDupEndPts( contour );\n\t\taddContour( vertices, contour );\n\n\t\t//\n\n\t\tvar holeIndex = contour.length;\n\n\t\tholes.forEach( removeDupEndPts );\n\n\t\tfor ( var i = 0; i < holes.length; i ++ ) {\n\n\t\t\tholeIndices.push( holeIndex );\n\t\t\tholeIndex += holes[ i ].length;\n\t\t\taddContour( vertices, holes[ i ] );\n\n\t\t}\n\n\t\t//\n\n\t\tvar triangles = Earcut.triangulate( vertices, holeIndices );\n\n\t\t//\n\n\t\tfor ( var i = 0; i < triangles.length; i += 3 ) {\n\n\t\t\tfaces.push( triangles.slice( i, i + 3 ) );\n\n\t\t}\n\n\t\treturn faces;\n\n\t}\n\n};\n\nfunction removeDupEndPts( points ) {\n\n\tvar l = points.length;\n\n\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n\n\t\tpoints.pop();\n\n\t}\n\n}\n\nfunction addContour( vertices, contour ) {\n\n\tfor ( var i = 0; i < contour.length; i ++ ) {\n\n\t\tvertices.push( contour[ i ].x );\n\t\tvertices.push( contour[ i ].y );\n\n\t}\n\n}\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n *\n * Creates extruded geometry from a path shape.\n *\n * parameters = {\n *\n *  curveSegments: <int>, // number of points on the curves\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n *  depth: <float>, // Depth to extrude the shape\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\n *  bevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel\n *  bevelOffset: <float>, // how far from shape outline does bevel start\n *  bevelSegments: <int>, // number of bevel layers\n *\n *  extrudePath: <THREE.Curve> // curve to extrude shape along\n *\n *  UVGenerator: <Object> // object that provides UV generator functions\n *\n * }\n */\n\n// ExtrudeGeometry\n\nfunction ExtrudeGeometry( shapes, options ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'ExtrudeGeometry';\n\n\tthis.parameters = {\n\t\tshapes: shapes,\n\t\toptions: options\n\t};\n\n\tthis.fromBufferGeometry( new ExtrudeBufferGeometry( shapes, options ) );\n\tthis.mergeVertices();\n\n}\n\nExtrudeGeometry.prototype = Object.create( Geometry.prototype );\nExtrudeGeometry.prototype.constructor = ExtrudeGeometry;\n\nExtrudeGeometry.prototype.toJSON = function () {\n\n\tvar data = Geometry.prototype.toJSON.call( this );\n\n\tvar shapes = this.parameters.shapes;\n\tvar options = this.parameters.options;\n\n\treturn toJSON( shapes, options, data );\n\n};\n\n// ExtrudeBufferGeometry\n\nfunction ExtrudeBufferGeometry( shapes, options ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'ExtrudeBufferGeometry';\n\n\tthis.parameters = {\n\t\tshapes: shapes,\n\t\toptions: options\n\t};\n\n\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n\n\tvar scope = this;\n\n\tvar verticesArray = [];\n\tvar uvArray = [];\n\n\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\tvar shape = shapes[ i ];\n\t\taddShape( shape );\n\n\t}\n\n\t// build geometry\n\n\tthis.addAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvArray, 2 ) );\n\n\tthis.computeVertexNormals();\n\n\t// functions\n\n\tfunction addShape( shape ) {\n\n\t\tvar placeholder = [];\n\n\t\t// options\n\n\t\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\t\tvar steps = options.steps !== undefined ? options.steps : 1;\n\t\tvar depth = options.depth !== undefined ? options.depth : 100;\n\n\t\tvar bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n\t\tvar bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6;\n\t\tvar bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2;\n\t\tvar bevelOffset = options.bevelOffset !== undefined ? options.bevelOffset : 0;\n\t\tvar bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n\t\tvar extrudePath = options.extrudePath;\n\n\t\tvar uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator;\n\n\t\t// deprecated options\n\n\t\tif ( options.amount !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.ExtrudeBufferGeometry: amount has been renamed to depth.' );\n\t\t\tdepth = options.amount;\n\n\t\t}\n\n\t\t//\n\n\t\tvar extrudePts, extrudeByPath = false;\n\t\tvar splineTube, binormal, normal, position2;\n\n\t\tif ( extrudePath ) {\n\n\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\n\n\t\t\textrudeByPath = true;\n\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\n\t\t\t// SETUP TNB variables\n\n\t\t\t// TODO1 - have a .isClosed in spline?\n\n\t\t\tsplineTube = extrudePath.computeFrenetFrames( steps, false );\n\n\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\t\tbinormal = new Vector3();\n\t\t\tnormal = new Vector3();\n\t\t\tposition2 = new Vector3();\n\n\t\t}\n\n\t\t// Safeguards if bevels are not enabled\n\n\t\tif ( ! bevelEnabled ) {\n\n\t\t\tbevelSegments = 0;\n\t\t\tbevelThickness = 0;\n\t\t\tbevelSize = 0;\n\t\t\tbevelOffset = 0;\n\n\t\t}\n\n\t\t// Variables initialization\n\n\t\tvar ahole, h, hl; // looping of holes\n\n\t\tvar shapePoints = shape.extractPoints( curveSegments );\n\n\t\tvar vertices = shapePoints.shape;\n\t\tvar holes = shapePoints.holes;\n\n\t\tvar reverse = ! ShapeUtils.isClockWise( vertices );\n\n\t\tif ( reverse ) {\n\n\t\t\tvertices = vertices.reverse();\n\n\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\n\n\t\t\t\t\tholes[ h ] = ahole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tvar faces = ShapeUtils.triangulateShape( vertices, holes );\n\n\t\t/* Vertices */\n\n\t\tvar contour = vertices; // vertices has all points but contour has only points of circumference\n\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\tahole = holes[ h ];\n\n\t\t\tvertices = vertices.concat( ahole );\n\n\t\t}\n\n\n\t\tfunction scalePt2( pt, vec, size ) {\n\n\t\t\tif ( ! vec ) console.error( \"THREE.ExtrudeGeometry: vec does not exist\" );\n\n\t\t\treturn vec.clone().multiplyScalar( size ).add( pt );\n\n\t\t}\n\n\t\tvar b, bs, t, z,\n\t\t\tvert, vlen = vertices.length,\n\t\t\tface, flen = faces.length;\n\n\n\t\t// Find directions for point movement\n\n\n\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\n\n\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\n\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t//\n\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n\t\t\tvar v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\n\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\t\tvar v_prev_x = inPt.x - inPrev.x,\n\t\t\t\tv_prev_y = inPt.y - inPrev.y;\n\t\t\tvar v_next_x = inNext.x - inPt.x,\n\t\t\t\tv_next_y = inNext.y - inPt.y;\n\n\t\t\tvar v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\n\t\t\t// check for collinear edges\n\t\t\tvar collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\n\n\t\t\t\t// not collinear\n\n\t\t\t\t// length of vectors for normalizing\n\n\t\t\t\tvar v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\t\tvar v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\n\t\t\t\t// shift adjacent points by unit vectors to the left\n\n\t\t\t\tvar ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\t\tvar ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\n\t\t\t\tvar ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\t\tvar ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\n\t\t\t\t// scaling factor for v_prev to intersection point\n\n\t\t\t\tvar sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\n\t\t\t\t\t( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\t// vector from inPt to intersection point\n\n\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\n\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t//  but prevent crazy spikes\n\t\t\t\tvar v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n\t\t\t\tif ( v_trans_lensq <= 2 ) {\n\n\t\t\t\t\treturn new Vector2( v_trans_x, v_trans_y );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// handle special case of collinear edges\n\n\t\t\t\tvar direction_eq = false; // assumes: opposite\n\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\n\n\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\n\n\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( direction_eq ) {\n\n\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\tv_trans_x = - v_prev_y;\n\t\t\t\t\tv_trans_y = v_prev_x;\n\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n\t\t}\n\n\n\t\tvar contourMovements = [];\n\n\t\tfor ( var i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\tif ( j === il ) j = 0;\n\t\t\tif ( k === il ) k = 0;\n\n\t\t\t//  (j)---(i)---(k)\n\t\t\t// console.log('i,j,k', i, j , k)\n\n\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n\t\t}\n\n\t\tvar holesMovements = [],\n\t\t\toneHoleMovements, verticesMovements = contourMovements.concat();\n\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\tahole = holes[ h ];\n\n\t\t\toneHoleMovements = [];\n\n\t\t\tfor ( i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n\n\t\t\t}\n\n\t\t\tholesMovements.push( oneHoleMovements );\n\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\n\t\t}\n\n\n\t\t// Loop bevelSegments, 1 for the front, 1 for the back\n\n\t\tfor ( b = 0; b < bevelSegments; b ++ ) {\n\n\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\n\t\t\tt = b / bevelSegments;\n\t\t\tz = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\tbs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t// contract shape\n\n\t\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\n\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t}\n\n\t\t\t// expand holes\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tbs = bevelSize + bevelOffset;\n\n\t\t// Back facing vertices\n\n\t\tfor ( i = 0; i < vlen; i ++ ) {\n\n\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\tv( vert.x, vert.y, 0 );\n\n\t\t\t} else {\n\n\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\n\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\n\n\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n\n\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Add stepped vertices...\n\t\t// Including front facing vertices\n\n\t\tvar s;\n\n\t\tfor ( s = 1; s <= steps; s ++ ) {\n\n\t\t\tfor ( i = 0; i < vlen; i ++ ) {\n\n\t\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\tv( vert.x, vert.y, depth / steps * s );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\n\t\t// Add bevel segments planes\n\n\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\t\tfor ( b = bevelSegments - 1; b >= 0; b -- ) {\n\n\t\t\tt = b / bevelSegments;\n\t\t\tz = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\tbs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t// contract shape\n\n\t\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t}\n\n\t\t\t// expand holes\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t/* Faces */\n\n\t\t// Top and bottom faces\n\n\t\tbuildLidFaces();\n\n\t\t// Sides faces\n\n\t\tbuildSideFaces();\n\n\n\t\t/////  Internal functions\n\n\t\tfunction buildLidFaces() {\n\n\t\t\tvar start = verticesArray.length / 3;\n\n\t\t\tif ( bevelEnabled ) {\n\n\t\t\t\tvar layer = 0; // steps + 1\n\t\t\t\tvar offset = vlen * layer;\n\n\t\t\t\t// Bottom faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n\n\t\t\t\t}\n\n\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\toffset = vlen * layer;\n\n\t\t\t\t// Top faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// Bottom faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\n\n\t\t\t\t}\n\n\t\t\t\t// Top faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 0 );\n\n\t\t}\n\n\t\t// Create faces for the z-sides of the shape\n\n\t\tfunction buildSideFaces() {\n\n\t\t\tvar start = verticesArray.length / 3;\n\t\t\tvar layeroffset = 0;\n\t\t\tsidewalls( contour, layeroffset );\n\t\t\tlayeroffset += contour.length;\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\t\t\t\tsidewalls( ahole, layeroffset );\n\n\t\t\t\t//, true\n\t\t\t\tlayeroffset += ahole.length;\n\n\t\t\t}\n\n\n\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 1 );\n\n\n\t\t}\n\n\t\tfunction sidewalls( contour, layeroffset ) {\n\n\t\t\tvar j, k;\n\t\t\ti = contour.length;\n\n\t\t\twhile ( -- i >= 0 ) {\n\n\t\t\t\tj = i;\n\t\t\t\tk = i - 1;\n\t\t\t\tif ( k < 0 ) k = contour.length - 1;\n\n\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\t\tvar s = 0,\n\t\t\t\t\tsl = steps + bevelSegments * 2;\n\n\t\t\t\tfor ( s = 0; s < sl; s ++ ) {\n\n\t\t\t\t\tvar slen1 = vlen * s;\n\t\t\t\t\tvar slen2 = vlen * ( s + 1 );\n\n\t\t\t\t\tvar a = layeroffset + j + slen1,\n\t\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\t\td = layeroffset + j + slen2;\n\n\t\t\t\t\tf4( a, b, c, d );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction v( x, y, z ) {\n\n\t\t\tplaceholder.push( x );\n\t\t\tplaceholder.push( y );\n\t\t\tplaceholder.push( z );\n\n\t\t}\n\n\n\t\tfunction f3( a, b, c ) {\n\n\t\t\taddVertex( a );\n\t\t\taddVertex( b );\n\t\t\taddVertex( c );\n\n\t\t\tvar nextIndex = verticesArray.length / 3;\n\t\t\tvar uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\taddUV( uvs[ 0 ] );\n\t\t\taddUV( uvs[ 1 ] );\n\t\t\taddUV( uvs[ 2 ] );\n\n\t\t}\n\n\t\tfunction f4( a, b, c, d ) {\n\n\t\t\taddVertex( a );\n\t\t\taddVertex( b );\n\t\t\taddVertex( d );\n\n\t\t\taddVertex( b );\n\t\t\taddVertex( c );\n\t\t\taddVertex( d );\n\n\n\t\t\tvar nextIndex = verticesArray.length / 3;\n\t\t\tvar uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\taddUV( uvs[ 0 ] );\n\t\t\taddUV( uvs[ 1 ] );\n\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\taddUV( uvs[ 1 ] );\n\t\t\taddUV( uvs[ 2 ] );\n\t\t\taddUV( uvs[ 3 ] );\n\n\t\t}\n\n\t\tfunction addVertex( index ) {\n\n\t\t\tverticesArray.push( placeholder[ index * 3 + 0 ] );\n\t\t\tverticesArray.push( placeholder[ index * 3 + 1 ] );\n\t\t\tverticesArray.push( placeholder[ index * 3 + 2 ] );\n\n\t\t}\n\n\n\t\tfunction addUV( vector2 ) {\n\n\t\t\tuvArray.push( vector2.x );\n\t\t\tuvArray.push( vector2.y );\n\n\t\t}\n\n\t}\n\n}\n\nExtrudeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nExtrudeBufferGeometry.prototype.constructor = ExtrudeBufferGeometry;\n\nExtrudeBufferGeometry.prototype.toJSON = function () {\n\n\tvar data = BufferGeometry.prototype.toJSON.call( this );\n\n\tvar shapes = this.parameters.shapes;\n\tvar options = this.parameters.options;\n\n\treturn toJSON( shapes, options, data );\n\n};\n\n//\n\nvar WorldUVGenerator = {\n\n\tgenerateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\n\n\t\tvar a_x = vertices[ indexA * 3 ];\n\t\tvar a_y = vertices[ indexA * 3 + 1 ];\n\t\tvar b_x = vertices[ indexB * 3 ];\n\t\tvar b_y = vertices[ indexB * 3 + 1 ];\n\t\tvar c_x = vertices[ indexC * 3 ];\n\t\tvar c_y = vertices[ indexC * 3 + 1 ];\n\n\t\treturn [\n\t\t\tnew Vector2( a_x, a_y ),\n\t\t\tnew Vector2( b_x, b_y ),\n\t\t\tnew Vector2( c_x, c_y )\n\t\t];\n\n\t},\n\n\tgenerateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\n\n\t\tvar a_x = vertices[ indexA * 3 ];\n\t\tvar a_y = vertices[ indexA * 3 + 1 ];\n\t\tvar a_z = vertices[ indexA * 3 + 2 ];\n\t\tvar b_x = vertices[ indexB * 3 ];\n\t\tvar b_y = vertices[ indexB * 3 + 1 ];\n\t\tvar b_z = vertices[ indexB * 3 + 2 ];\n\t\tvar c_x = vertices[ indexC * 3 ];\n\t\tvar c_y = vertices[ indexC * 3 + 1 ];\n\t\tvar c_z = vertices[ indexC * 3 + 2 ];\n\t\tvar d_x = vertices[ indexD * 3 ];\n\t\tvar d_y = vertices[ indexD * 3 + 1 ];\n\t\tvar d_z = vertices[ indexD * 3 + 2 ];\n\n\t\tif ( Math.abs( a_y - b_y ) < 0.01 ) {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_x, 1 - a_z ),\n\t\t\t\tnew Vector2( b_x, 1 - b_z ),\n\t\t\t\tnew Vector2( c_x, 1 - c_z ),\n\t\t\t\tnew Vector2( d_x, 1 - d_z )\n\t\t\t];\n\n\t\t} else {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_y, 1 - a_z ),\n\t\t\t\tnew Vector2( b_y, 1 - b_z ),\n\t\t\t\tnew Vector2( c_y, 1 - c_z ),\n\t\t\t\tnew Vector2( d_y, 1 - d_z )\n\t\t\t];\n\n\t\t}\n\n\t}\n};\n\nfunction toJSON( shapes, options, data ) {\n\n\t//\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tvar shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\t//\n\n\tif ( options.extrudePath !== undefined ) data.options.extrudePath = options.extrudePath.toJSON();\n\n\treturn data;\n\n}\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author alteredq / http://alteredqualia.com/\n *\n * Text = 3D Text\n *\n * parameters = {\n *  font: <THREE.Font>, // font\n *\n *  size: <float>, // size of the text\n *  height: <float>, // thickness to extrude text\n *  curveSegments: <int>, // number of points on the curves\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into text bevel goes\n *  bevelSize: <float>, // how far from text outline (including bevelOffset) is bevel\n *  bevelOffset: <float> // how far from text outline does bevel start\n * }\n */\n\n// TextGeometry\n\nfunction TextGeometry( text, parameters ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TextGeometry';\n\n\tthis.parameters = {\n\t\ttext: text,\n\t\tparameters: parameters\n\t};\n\n\tthis.fromBufferGeometry( new TextBufferGeometry( text, parameters ) );\n\tthis.mergeVertices();\n\n}\n\nTextGeometry.prototype = Object.create( Geometry.prototype );\nTextGeometry.prototype.constructor = TextGeometry;\n\n// TextBufferGeometry\n\nfunction TextBufferGeometry( text, parameters ) {\n\n\tparameters = parameters || {};\n\n\tvar font = parameters.font;\n\n\tif ( ! ( font && font.isFont ) ) {\n\n\t\tconsole.error( 'THREE.TextGeometry: font parameter is not an instance of THREE.Font.' );\n\t\treturn new Geometry();\n\n\t}\n\n\tvar shapes = font.generateShapes( text, parameters.size );\n\n\t// translate parameters to ExtrudeGeometry API\n\n\tparameters.depth = parameters.height !== undefined ? parameters.height : 50;\n\n\t// defaults\n\n\tif ( parameters.bevelThickness === undefined ) parameters.bevelThickness = 10;\n\tif ( parameters.bevelSize === undefined ) parameters.bevelSize = 8;\n\tif ( parameters.bevelEnabled === undefined ) parameters.bevelEnabled = false;\n\n\tExtrudeBufferGeometry.call( this, shapes, parameters );\n\n\tthis.type = 'TextBufferGeometry';\n\n}\n\nTextBufferGeometry.prototype = Object.create( ExtrudeBufferGeometry.prototype );\nTextBufferGeometry.prototype.constructor = TextBufferGeometry;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author benaadams / https://twitter.com/ben_a_adams\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// SphereGeometry\n\nfunction SphereGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'SphereGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) );\n\tthis.mergeVertices();\n\n}\n\nSphereGeometry.prototype = Object.create( Geometry.prototype );\nSphereGeometry.prototype.constructor = SphereGeometry;\n\n// SphereBufferGeometry\n\nfunction SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'SphereBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tradius = radius || 1;\n\n\twidthSegments = Math.max( 3, Math.floor( widthSegments ) || 8 );\n\theightSegments = Math.max( 2, Math.floor( heightSegments ) || 6 );\n\n\tphiStart = phiStart !== undefined ? phiStart : 0;\n\tphiLength = phiLength !== undefined ? phiLength : Math.PI * 2;\n\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI;\n\n\tvar thetaEnd = Math.min( thetaStart + thetaLength, Math.PI );\n\n\tvar ix, iy;\n\n\tvar index = 0;\n\tvar grid = [];\n\n\tvar vertex = new Vector3();\n\tvar normal = new Vector3();\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// generate vertices, normals and uvs\n\n\tfor ( iy = 0; iy <= heightSegments; iy ++ ) {\n\n\t\tvar verticesRow = [];\n\n\t\tvar v = iy / heightSegments;\n\n\t\t// special case for the poles\n\n\t\tvar uOffset = 0;\n\n\t\tif ( iy == 0 && thetaStart == 0 ) {\n\n\t\t\tuOffset = 0.5 / widthSegments;\n\n\t\t} else if ( iy == heightSegments && thetaEnd == Math.PI ) {\n\n\t\t\tuOffset = - 0.5 / widthSegments;\n\n\t\t}\n\n\t\tfor ( ix = 0; ix <= widthSegments; ix ++ ) {\n\n\t\t\tvar u = ix / widthSegments;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormal.copy( vertex ).normalize();\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( u + uOffset, 1 - v );\n\n\t\t\tverticesRow.push( index ++ );\n\n\t\t}\n\n\t\tgrid.push( verticesRow );\n\n\t}\n\n\t// indices\n\n\tfor ( iy = 0; iy < heightSegments; iy ++ ) {\n\n\t\tfor ( ix = 0; ix < widthSegments; ix ++ ) {\n\n\t\t\tvar a = grid[ iy ][ ix + 1 ];\n\t\t\tvar b = grid[ iy ][ ix ];\n\t\t\tvar c = grid[ iy + 1 ][ ix ];\n\t\t\tvar d = grid[ iy + 1 ][ ix + 1 ];\n\n\t\t\tif ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );\n\t\t\tif ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nSphereBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nSphereBufferGeometry.prototype.constructor = SphereBufferGeometry;\n\n/**\n * @author Kaleb Murphy\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// RingGeometry\n\nfunction RingGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'RingGeometry';\n\n\tthis.parameters = {\n\t\tinnerRadius: innerRadius,\n\t\touterRadius: outerRadius,\n\t\tthetaSegments: thetaSegments,\n\t\tphiSegments: phiSegments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) );\n\tthis.mergeVertices();\n\n}\n\nRingGeometry.prototype = Object.create( Geometry.prototype );\nRingGeometry.prototype.constructor = RingGeometry;\n\n// RingBufferGeometry\n\nfunction RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'RingBufferGeometry';\n\n\tthis.parameters = {\n\t\tinnerRadius: innerRadius,\n\t\touterRadius: outerRadius,\n\t\tthetaSegments: thetaSegments,\n\t\tphiSegments: phiSegments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tinnerRadius = innerRadius || 0.5;\n\touterRadius = outerRadius || 1;\n\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\tthetaSegments = thetaSegments !== undefined ? Math.max( 3, thetaSegments ) : 8;\n\tphiSegments = phiSegments !== undefined ? Math.max( 1, phiSegments ) : 1;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// some helper variables\n\n\tvar segment;\n\tvar radius = innerRadius;\n\tvar radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\tvar vertex = new Vector3();\n\tvar uv = new Vector2();\n\tvar j, i;\n\n\t// generate vertices, normals and uvs\n\n\tfor ( j = 0; j <= phiSegments; j ++ ) {\n\n\t\tfor ( i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\t// values are generate from the inside of the ring to the outside\n\n\t\t\tsegment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t// uv\n\n\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\n\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t}\n\n\t\t// increase the radius for next row of vertices\n\n\t\tradius += radiusStep;\n\n\t}\n\n\t// indices\n\n\tfor ( j = 0; j < phiSegments; j ++ ) {\n\n\t\tvar thetaSegmentLevel = j * ( thetaSegments + 1 );\n\n\t\tfor ( i = 0; i < thetaSegments; i ++ ) {\n\n\t\t\tsegment = i + thetaSegmentLevel;\n\n\t\t\tvar a = segment;\n\t\t\tvar b = segment + thetaSegments + 1;\n\t\t\tvar c = segment + thetaSegments + 2;\n\t\t\tvar d = segment + 1;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nRingBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nRingBufferGeometry.prototype.constructor = RingBufferGeometry;\n\n/**\n * @author zz85 / https://github.com/zz85\n * @author bhouston / http://clara.io\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// LatheGeometry\n\nfunction LatheGeometry( points, segments, phiStart, phiLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'LatheGeometry';\n\n\tthis.parameters = {\n\t\tpoints: points,\n\t\tsegments: segments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength\n\t};\n\n\tthis.fromBufferGeometry( new LatheBufferGeometry( points, segments, phiStart, phiLength ) );\n\tthis.mergeVertices();\n\n}\n\nLatheGeometry.prototype = Object.create( Geometry.prototype );\nLatheGeometry.prototype.constructor = LatheGeometry;\n\n// LatheBufferGeometry\n\nfunction LatheBufferGeometry( points, segments, phiStart, phiLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'LatheBufferGeometry';\n\n\tthis.parameters = {\n\t\tpoints: points,\n\t\tsegments: segments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength\n\t};\n\n\tsegments = Math.floor( segments ) || 12;\n\tphiStart = phiStart || 0;\n\tphiLength = phiLength || Math.PI * 2;\n\n\t// clamp phiLength so it's in range of [ 0, 2PI ]\n\n\tphiLength = _Math.clamp( phiLength, 0, Math.PI * 2 );\n\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar base;\n\tvar inverseSegments = 1.0 / segments;\n\tvar vertex = new Vector3();\n\tvar uv = new Vector2();\n\tvar i, j;\n\n\t// generate vertices and uvs\n\n\tfor ( i = 0; i <= segments; i ++ ) {\n\n\t\tvar phi = phiStart + i * inverseSegments * phiLength;\n\n\t\tvar sin = Math.sin( phi );\n\t\tvar cos = Math.cos( phi );\n\n\t\tfor ( j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = points[ j ].x * sin;\n\t\t\tvertex.y = points[ j ].y;\n\t\t\tvertex.z = points[ j ].x * cos;\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// uv\n\n\t\t\tuv.x = i / segments;\n\t\t\tuv.y = j / ( points.length - 1 );\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\n\t\t}\n\n\t}\n\n\t// indices\n\n\tfor ( i = 0; i < segments; i ++ ) {\n\n\t\tfor ( j = 0; j < ( points.length - 1 ); j ++ ) {\n\n\t\t\tbase = j + i * points.length;\n\n\t\t\tvar a = base;\n\t\t\tvar b = base + points.length;\n\t\t\tvar c = base + points.length + 1;\n\t\t\tvar d = base + 1;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t// generate normals\n\n\tthis.computeVertexNormals();\n\n\t// if the geometry is closed, we need to average the normals along the seam.\n\t// because the corresponding vertices are identical (but still have different UVs).\n\n\tif ( phiLength === Math.PI * 2 ) {\n\n\t\tvar normals = this.attributes.normal.array;\n\t\tvar n1 = new Vector3();\n\t\tvar n2 = new Vector3();\n\t\tvar n = new Vector3();\n\n\t\t// this is the buffer offset for the last line of vertices\n\n\t\tbase = segments * points.length * 3;\n\n\t\tfor ( i = 0, j = 0; i < points.length; i ++, j += 3 ) {\n\n\t\t\t// select the normal of the vertex in the first line\n\n\t\t\tn1.x = normals[ j + 0 ];\n\t\t\tn1.y = normals[ j + 1 ];\n\t\t\tn1.z = normals[ j + 2 ];\n\n\t\t\t// select the normal of the vertex in the last line\n\n\t\t\tn2.x = normals[ base + j + 0 ];\n\t\t\tn2.y = normals[ base + j + 1 ];\n\t\t\tn2.z = normals[ base + j + 2 ];\n\n\t\t\t// average normals\n\n\t\t\tn.addVectors( n1, n2 ).normalize();\n\n\t\t\t// assign the new values to both normals\n\n\t\t\tnormals[ j + 0 ] = normals[ base + j + 0 ] = n.x;\n\t\t\tnormals[ j + 1 ] = normals[ base + j + 1 ] = n.y;\n\t\t\tnormals[ j + 2 ] = normals[ base + j + 2 ] = n.z;\n\n\t\t}\n\n\t}\n\n}\n\nLatheBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nLatheBufferGeometry.prototype.constructor = LatheBufferGeometry;\n\n/**\n * @author jonobr1 / http://jonobr1.com\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// ShapeGeometry\n\nfunction ShapeGeometry( shapes, curveSegments ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'ShapeGeometry';\n\n\tif ( typeof curveSegments === 'object' ) {\n\n\t\tconsole.warn( 'THREE.ShapeGeometry: Options parameter has been removed.' );\n\n\t\tcurveSegments = curveSegments.curveSegments;\n\n\t}\n\n\tthis.parameters = {\n\t\tshapes: shapes,\n\t\tcurveSegments: curveSegments\n\t};\n\n\tthis.fromBufferGeometry( new ShapeBufferGeometry( shapes, curveSegments ) );\n\tthis.mergeVertices();\n\n}\n\nShapeGeometry.prototype = Object.create( Geometry.prototype );\nShapeGeometry.prototype.constructor = ShapeGeometry;\n\nShapeGeometry.prototype.toJSON = function () {\n\n\tvar data = Geometry.prototype.toJSON.call( this );\n\n\tvar shapes = this.parameters.shapes;\n\n\treturn toJSON$1( shapes, data );\n\n};\n\n// ShapeBufferGeometry\n\nfunction ShapeBufferGeometry( shapes, curveSegments ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'ShapeBufferGeometry';\n\n\tthis.parameters = {\n\t\tshapes: shapes,\n\t\tcurveSegments: curveSegments\n\t};\n\n\tcurveSegments = curveSegments || 12;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar groupStart = 0;\n\tvar groupCount = 0;\n\n\t// allow single and array values for \"shapes\" parameter\n\n\tif ( Array.isArray( shapes ) === false ) {\n\n\t\taddShape( shapes );\n\n\t} else {\n\n\t\tfor ( var i = 0; i < shapes.length; i ++ ) {\n\n\t\t\taddShape( shapes[ i ] );\n\n\t\t\tthis.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\n\n\t\t\tgroupStart += groupCount;\n\t\t\tgroupCount = 0;\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\n\t// helper functions\n\n\tfunction addShape( shape ) {\n\n\t\tvar i, l, shapeHole;\n\n\t\tvar indexOffset = vertices.length / 3;\n\t\tvar points = shape.extractPoints( curveSegments );\n\n\t\tvar shapeVertices = points.shape;\n\t\tvar shapeHoles = points.holes;\n\n\t\t// check direction of vertices\n\n\t\tif ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\n\n\t\t\tshapeVertices = shapeVertices.reverse();\n\n\t\t}\n\n\t\tfor ( i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\tshapeHole = shapeHoles[ i ];\n\n\t\t\tif ( ShapeUtils.isClockWise( shapeHole ) === true ) {\n\n\t\t\t\tshapeHoles[ i ] = shapeHole.reverse();\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\n\n\t\t// join vertices of inner and outer paths to a single array\n\n\t\tfor ( i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\tshapeHole = shapeHoles[ i ];\n\t\t\tshapeVertices = shapeVertices.concat( shapeHole );\n\n\t\t}\n\n\t\t// vertices, normals, uvs\n\n\t\tfor ( i = 0, l = shapeVertices.length; i < l; i ++ ) {\n\n\t\t\tvar vertex = shapeVertices[ i ];\n\n\t\t\tvertices.push( vertex.x, vertex.y, 0 );\n\t\t\tnormals.push( 0, 0, 1 );\n\t\t\tuvs.push( vertex.x, vertex.y ); // world uvs\n\n\t\t}\n\n\t\t// incides\n\n\t\tfor ( i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tvar a = face[ 0 ] + indexOffset;\n\t\t\tvar b = face[ 1 ] + indexOffset;\n\t\t\tvar c = face[ 2 ] + indexOffset;\n\n\t\t\tindices.push( a, b, c );\n\t\t\tgroupCount += 3;\n\n\t\t}\n\n\t}\n\n}\n\nShapeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nShapeBufferGeometry.prototype.constructor = ShapeBufferGeometry;\n\nShapeBufferGeometry.prototype.toJSON = function () {\n\n\tvar data = BufferGeometry.prototype.toJSON.call( this );\n\n\tvar shapes = this.parameters.shapes;\n\n\treturn toJSON$1( shapes, data );\n\n};\n\n//\n\nfunction toJSON$1( shapes, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tvar shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\treturn data;\n\n}\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction EdgesGeometry( geometry, thresholdAngle ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'EdgesGeometry';\n\n\tthis.parameters = {\n\t\tthresholdAngle: thresholdAngle\n\t};\n\n\tthresholdAngle = ( thresholdAngle !== undefined ) ? thresholdAngle : 1;\n\n\t// buffer\n\n\tvar vertices = [];\n\n\t// helper variables\n\n\tvar thresholdDot = Math.cos( _Math.DEG2RAD * thresholdAngle );\n\tvar edge = [ 0, 0 ], edges = {}, edge1, edge2;\n\tvar key, keys = [ 'a', 'b', 'c' ];\n\n\t// prepare source geometry\n\n\tvar geometry2;\n\n\tif ( geometry.isBufferGeometry ) {\n\n\t\tgeometry2 = new Geometry();\n\t\tgeometry2.fromBufferGeometry( geometry );\n\n\t} else {\n\n\t\tgeometry2 = geometry.clone();\n\n\t}\n\n\tgeometry2.mergeVertices();\n\tgeometry2.computeFaceNormals();\n\n\tvar sourceVertices = geometry2.vertices;\n\tvar faces = geometry2.faces;\n\n\t// now create a data structure where each entry represents an edge with its adjoining faces\n\n\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\tvar face = faces[ i ];\n\n\t\tfor ( var j = 0; j < 3; j ++ ) {\n\n\t\t\tedge1 = face[ keys[ j ] ];\n\t\t\tedge2 = face[ keys[ ( j + 1 ) % 3 ] ];\n\t\t\tedge[ 0 ] = Math.min( edge1, edge2 );\n\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ], face1: i, face2: undefined };\n\n\t\t\t} else {\n\n\t\t\t\tedges[ key ].face2 = i;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// generate vertices\n\n\tfor ( key in edges ) {\n\n\t\tvar e = edges[ key ];\n\n\t\t// an edge is only rendered if the angle (in degrees) between the face normals of the adjoining faces exceeds this value. default = 1 degree.\n\n\t\tif ( e.face2 === undefined || faces[ e.face1 ].normal.dot( faces[ e.face2 ].normal ) <= thresholdDot ) {\n\n\t\t\tvar vertex = sourceVertices[ e.index1 ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\tvertex = sourceVertices[ e.index2 ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n}\n\nEdgesGeometry.prototype = Object.create( BufferGeometry.prototype );\nEdgesGeometry.prototype.constructor = EdgesGeometry;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// CylinderGeometry\n\nfunction CylinderGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'CylinderGeometry';\n\n\tthis.parameters = {\n\t\tradiusTop: radiusTop,\n\t\tradiusBottom: radiusBottom,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\topenEnded: openEnded,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) );\n\tthis.mergeVertices();\n\n}\n\nCylinderGeometry.prototype = Object.create( Geometry.prototype );\nCylinderGeometry.prototype.constructor = CylinderGeometry;\n\n// CylinderBufferGeometry\n\nfunction CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'CylinderBufferGeometry';\n\n\tthis.parameters = {\n\t\tradiusTop: radiusTop,\n\t\tradiusBottom: radiusBottom,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\topenEnded: openEnded,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tvar scope = this;\n\n\tradiusTop = radiusTop !== undefined ? radiusTop : 1;\n\tradiusBottom = radiusBottom !== undefined ? radiusBottom : 1;\n\theight = height || 1;\n\n\tradialSegments = Math.floor( radialSegments ) || 8;\n\theightSegments = Math.floor( heightSegments ) || 1;\n\n\topenEnded = openEnded !== undefined ? openEnded : false;\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0.0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar index = 0;\n\tvar indexArray = [];\n\tvar halfHeight = height / 2;\n\tvar groupStart = 0;\n\n\t// generate geometry\n\n\tgenerateTorso();\n\n\tif ( openEnded === false ) {\n\n\t\tif ( radiusTop > 0 ) generateCap( true );\n\t\tif ( radiusBottom > 0 ) generateCap( false );\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\tfunction generateTorso() {\n\n\t\tvar x, y;\n\t\tvar normal = new Vector3();\n\t\tvar vertex = new Vector3();\n\n\t\tvar groupCount = 0;\n\n\t\t// this will be used to calculate the normal\n\t\tvar slope = ( radiusBottom - radiusTop ) / height;\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\tvar indexRow = [];\n\n\t\t\tvar v = y / heightSegments;\n\n\t\t\t// calculate the radius of the current row\n\n\t\t\tvar radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n\t\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\tvar u = x / radialSegments;\n\n\t\t\t\tvar theta = u * thetaLength + thetaStart;\n\n\t\t\t\tvar sinTheta = Math.sin( theta );\n\t\t\t\tvar cosTheta = Math.cos( theta );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\tvertex.y = - v * height + halfHeight;\n\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u, 1 - v );\n\n\t\t\t\t// save index of vertex in respective row\n\n\t\t\t\tindexRow.push( index ++ );\n\n\t\t\t}\n\n\t\t\t// now save vertices of the row in our index array\n\n\t\t\tindexArray.push( indexRow );\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( x = 0; x < radialSegments; x ++ ) {\n\n\t\t\tfor ( y = 0; y < heightSegments; y ++ ) {\n\n\t\t\t\t// we use the index array to access the correct indices\n\n\t\t\t\tvar a = indexArray[ y ][ x ];\n\t\t\t\tvar b = indexArray[ y + 1 ][ x ];\n\t\t\t\tvar c = indexArray[ y + 1 ][ x + 1 ];\n\t\t\t\tvar d = indexArray[ y ][ x + 1 ];\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t// update group counter\n\n\t\t\t\tgroupCount += 6;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\tscope.addGroup( groupStart, groupCount, 0 );\n\n\t\t// calculate new start value for groups\n\n\t\tgroupStart += groupCount;\n\n\t}\n\n\tfunction generateCap( top ) {\n\n\t\tvar x, centerIndexStart, centerIndexEnd;\n\n\t\tvar uv = new Vector2();\n\t\tvar vertex = new Vector3();\n\n\t\tvar groupCount = 0;\n\n\t\tvar radius = ( top === true ) ? radiusTop : radiusBottom;\n\t\tvar sign = ( top === true ) ? 1 : - 1;\n\n\t\t// save the index of the first center vertex\n\t\tcenterIndexStart = index;\n\n\t\t// first we generate the center vertex data of the cap.\n\t\t// because the geometry needs one set of uvs per face,\n\t\t// we must generate a center vertex per face/segment\n\n\t\tfor ( x = 1; x <= radialSegments; x ++ ) {\n\n\t\t\t// vertex\n\n\t\t\tvertices.push( 0, halfHeight * sign, 0 );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( 0.5, 0.5 );\n\n\t\t\t// increase index\n\n\t\t\tindex ++;\n\n\t\t}\n\n\t\t// save the index of the last center vertex\n\n\t\tcenterIndexEnd = index;\n\n\t\t// now we generate the surrounding vertices, normals and uvs\n\n\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\tvar u = x / radialSegments;\n\t\t\tvar theta = u * thetaLength + thetaStart;\n\n\t\t\tvar cosTheta = Math.cos( theta );\n\t\t\tvar sinTheta = Math.sin( theta );\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * sinTheta;\n\t\t\tvertex.y = halfHeight * sign;\n\t\t\tvertex.z = radius * cosTheta;\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t// uv\n\n\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\n\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t// increase index\n\n\t\t\tindex ++;\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( x = 0; x < radialSegments; x ++ ) {\n\n\t\t\tvar c = centerIndexStart + x;\n\t\t\tvar i = centerIndexEnd + x;\n\n\t\t\tif ( top === true ) {\n\n\t\t\t\t// face top\n\n\t\t\t\tindices.push( i, i + 1, c );\n\n\t\t\t} else {\n\n\t\t\t\t// face bottom\n\n\t\t\t\tindices.push( i + 1, i, c );\n\n\t\t\t}\n\n\t\t\tgroupCount += 3;\n\n\t\t}\n\n\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n\n\t\t// calculate new start value for groups\n\n\t\tgroupStart += groupCount;\n\n\t}\n\n}\n\nCylinderBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nCylinderBufferGeometry.prototype.constructor = CylinderBufferGeometry;\n\n/**\n * @author abelnation / http://github.com/abelnation\n */\n\n// ConeGeometry\n\nfunction ConeGeometry( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\tCylinderGeometry.call( this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\tthis.type = 'ConeGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\topenEnded: openEnded,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n}\n\nConeGeometry.prototype = Object.create( CylinderGeometry.prototype );\nConeGeometry.prototype.constructor = ConeGeometry;\n\n// ConeBufferGeometry\n\nfunction ConeBufferGeometry( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\tCylinderBufferGeometry.call( this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\tthis.type = 'ConeBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\topenEnded: openEnded,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n}\n\nConeBufferGeometry.prototype = Object.create( CylinderBufferGeometry.prototype );\nConeBufferGeometry.prototype.constructor = ConeBufferGeometry;\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n * @author Mugen87 / https://github.com/Mugen87\n * @author hughes\n */\n\n// CircleGeometry\n\nfunction CircleGeometry( radius, segments, thetaStart, thetaLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'CircleGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tsegments: segments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) );\n\tthis.mergeVertices();\n\n}\n\nCircleGeometry.prototype = Object.create( Geometry.prototype );\nCircleGeometry.prototype.constructor = CircleGeometry;\n\n// CircleBufferGeometry\n\nfunction CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'CircleBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tsegments: segments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tradius = radius || 1;\n\tsegments = segments !== undefined ? Math.max( 3, segments ) : 8;\n\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar i, s;\n\tvar vertex = new Vector3();\n\tvar uv = new Vector2();\n\n\t// center point\n\n\tvertices.push( 0, 0, 0 );\n\tnormals.push( 0, 0, 1 );\n\tuvs.push( 0.5, 0.5 );\n\n\tfor ( s = 0, i = 3; s <= segments; s ++, i += 3 ) {\n\n\t\tvar segment = thetaStart + s / segments * thetaLength;\n\n\t\t// vertex\n\n\t\tvertex.x = radius * Math.cos( segment );\n\t\tvertex.y = radius * Math.sin( segment );\n\n\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t// normal\n\n\t\tnormals.push( 0, 0, 1 );\n\n\t\t// uvs\n\n\t\tuv.x = ( vertices[ i ] / radius + 1 ) / 2;\n\t\tuv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\n\n\t\tuvs.push( uv.x, uv.y );\n\n\t}\n\n\t// indices\n\n\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\tindices.push( i, i + 1, 0 );\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nCircleBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nCircleBufferGeometry.prototype.constructor = CircleBufferGeometry;\n\n\n\nvar Geometries = /*#__PURE__*/Object.freeze({\n\tWireframeGeometry: WireframeGeometry,\n\tParametricGeometry: ParametricGeometry,\n\tParametricBufferGeometry: ParametricBufferGeometry,\n\tTetrahedronGeometry: TetrahedronGeometry,\n\tTetrahedronBufferGeometry: TetrahedronBufferGeometry,\n\tOctahedronGeometry: OctahedronGeometry,\n\tOctahedronBufferGeometry: OctahedronBufferGeometry,\n\tIcosahedronGeometry: IcosahedronGeometry,\n\tIcosahedronBufferGeometry: IcosahedronBufferGeometry,\n\tDodecahedronGeometry: DodecahedronGeometry,\n\tDodecahedronBufferGeometry: DodecahedronBufferGeometry,\n\tPolyhedronGeometry: PolyhedronGeometry,\n\tPolyhedronBufferGeometry: PolyhedronBufferGeometry,\n\tTubeGeometry: TubeGeometry,\n\tTubeBufferGeometry: TubeBufferGeometry,\n\tTorusKnotGeometry: TorusKnotGeometry,\n\tTorusKnotBufferGeometry: TorusKnotBufferGeometry,\n\tTorusGeometry: TorusGeometry,\n\tTorusBufferGeometry: TorusBufferGeometry,\n\tTextGeometry: TextGeometry,\n\tTextBufferGeometry: TextBufferGeometry,\n\tSphereGeometry: SphereGeometry,\n\tSphereBufferGeometry: SphereBufferGeometry,\n\tRingGeometry: RingGeometry,\n\tRingBufferGeometry: RingBufferGeometry,\n\tPlaneGeometry: PlaneGeometry,\n\tPlaneBufferGeometry: PlaneBufferGeometry,\n\tLatheGeometry: LatheGeometry,\n\tLatheBufferGeometry: LatheBufferGeometry,\n\tShapeGeometry: ShapeGeometry,\n\tShapeBufferGeometry: ShapeBufferGeometry,\n\tExtrudeGeometry: ExtrudeGeometry,\n\tExtrudeBufferGeometry: ExtrudeBufferGeometry,\n\tEdgesGeometry: EdgesGeometry,\n\tConeGeometry: ConeGeometry,\n\tConeBufferGeometry: ConeBufferGeometry,\n\tCylinderGeometry: CylinderGeometry,\n\tCylinderBufferGeometry: CylinderBufferGeometry,\n\tCircleGeometry: CircleGeometry,\n\tCircleBufferGeometry: CircleBufferGeometry,\n\tBoxGeometry: BoxGeometry,\n\tBoxBufferGeometry: BoxBufferGeometry\n});\n\n/**\n * @author mrdoob / http://mrdoob.com/\n *\n * parameters = {\n *  color: <THREE.Color>\n * }\n */\n\nfunction ShadowMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'ShadowMaterial';\n\n\tthis.color = new Color( 0x000000 );\n\tthis.transparent = true;\n\n\tthis.setValues( parameters );\n\n}\n\nShadowMaterial.prototype = Object.create( Material.prototype );\nShadowMaterial.prototype.constructor = ShadowMaterial;\n\nShadowMaterial.prototype.isShadowMaterial = true;\n\nShadowMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction RawShaderMaterial( parameters ) {\n\n\tShaderMaterial.call( this, parameters );\n\n\tthis.type = 'RawShaderMaterial';\n\n}\n\nRawShaderMaterial.prototype = Object.create( ShaderMaterial.prototype );\nRawShaderMaterial.prototype.constructor = RawShaderMaterial;\n\nRawShaderMaterial.prototype.isRawShaderMaterial = true;\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  color: <hex>,\n *  roughness: <float>,\n *  metalness: <float>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  roughnessMap: new THREE.Texture( <Image> ),\n *\n *  metalnessMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  envMapIntensity: <float>\n *\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshStandardMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.defines = { 'STANDARD': '' };\n\n\tthis.type = 'MeshStandardMaterial';\n\n\tthis.color = new Color( 0xffffff ); // diffuse\n\tthis.roughness = 0.5;\n\tthis.metalness = 0.5;\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.emissive = new Color( 0x000000 );\n\tthis.emissiveIntensity = 1.0;\n\tthis.emissiveMap = null;\n\n\tthis.bumpMap = null;\n\tthis.bumpScale = 1;\n\n\tthis.normalMap = null;\n\tthis.normalMapType = TangentSpaceNormalMap;\n\tthis.normalScale = new Vector2( 1, 1 );\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.roughnessMap = null;\n\n\tthis.metalnessMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.envMapIntensity = 1.0;\n\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshStandardMaterial.prototype = Object.create( Material.prototype );\nMeshStandardMaterial.prototype.constructor = MeshStandardMaterial;\n\nMeshStandardMaterial.prototype.isMeshStandardMaterial = true;\n\nMeshStandardMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.defines = { 'STANDARD': '' };\n\n\tthis.color.copy( source.color );\n\tthis.roughness = source.roughness;\n\tthis.metalness = source.metalness;\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.emissive.copy( source.emissive );\n\tthis.emissiveMap = source.emissiveMap;\n\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\tthis.bumpMap = source.bumpMap;\n\tthis.bumpScale = source.bumpScale;\n\n\tthis.normalMap = source.normalMap;\n\tthis.normalMapType = source.normalMapType;\n\tthis.normalScale.copy( source.normalScale );\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.roughnessMap = source.roughnessMap;\n\n\tthis.metalnessMap = source.metalnessMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.envMapIntensity = source.envMapIntensity;\n\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  reflectivity: <float>\n *  clearCoat: <float>\n *  clearCoatRoughness: <float>\n * }\n */\n\nfunction MeshPhysicalMaterial( parameters ) {\n\n\tMeshStandardMaterial.call( this );\n\n\tthis.defines = { 'PHYSICAL': '' };\n\n\tthis.type = 'MeshPhysicalMaterial';\n\n\tthis.reflectivity = 0.5; // maps to F0 = 0.04\n\n\tthis.clearCoat = 0.0;\n\tthis.clearCoatRoughness = 0.0;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshPhysicalMaterial.prototype = Object.create( MeshStandardMaterial.prototype );\nMeshPhysicalMaterial.prototype.constructor = MeshPhysicalMaterial;\n\nMeshPhysicalMaterial.prototype.isMeshPhysicalMaterial = true;\n\nMeshPhysicalMaterial.prototype.copy = function ( source ) {\n\n\tMeshStandardMaterial.prototype.copy.call( this, source );\n\n\tthis.defines = { 'PHYSICAL': '' };\n\n\tthis.reflectivity = source.reflectivity;\n\n\tthis.clearCoat = source.clearCoat;\n\tthis.clearCoatRoughness = source.clearCoatRoughness;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  specular: <hex>,\n *  shininess: <float>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshPhongMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshPhongMaterial';\n\n\tthis.color = new Color( 0xffffff ); // diffuse\n\tthis.specular = new Color( 0x111111 );\n\tthis.shininess = 30;\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.emissive = new Color( 0x000000 );\n\tthis.emissiveIntensity = 1.0;\n\tthis.emissiveMap = null;\n\n\tthis.bumpMap = null;\n\tthis.bumpScale = 1;\n\n\tthis.normalMap = null;\n\tthis.normalMapType = TangentSpaceNormalMap;\n\tthis.normalScale = new Vector2( 1, 1 );\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.specularMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.combine = MultiplyOperation;\n\tthis.reflectivity = 1;\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshPhongMaterial.prototype = Object.create( Material.prototype );\nMeshPhongMaterial.prototype.constructor = MeshPhongMaterial;\n\nMeshPhongMaterial.prototype.isMeshPhongMaterial = true;\n\nMeshPhongMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\tthis.specular.copy( source.specular );\n\tthis.shininess = source.shininess;\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.emissive.copy( source.emissive );\n\tthis.emissiveMap = source.emissiveMap;\n\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\tthis.bumpMap = source.bumpMap;\n\tthis.bumpScale = source.bumpScale;\n\n\tthis.normalMap = source.normalMap;\n\tthis.normalMapType = source.normalMapType;\n\tthis.normalScale.copy( source.normalScale );\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.specularMap = source.specularMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.combine = source.combine;\n\tthis.reflectivity = source.reflectivity;\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author takahirox / http://github.com/takahirox\n *\n * parameters = {\n *  gradientMap: new THREE.Texture( <Image> )\n * }\n */\n\nfunction MeshToonMaterial( parameters ) {\n\n\tMeshPhongMaterial.call( this );\n\n\tthis.defines = { 'TOON': '' };\n\n\tthis.type = 'MeshToonMaterial';\n\n\tthis.gradientMap = null;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshToonMaterial.prototype = Object.create( MeshPhongMaterial.prototype );\nMeshToonMaterial.prototype.constructor = MeshToonMaterial;\n\nMeshToonMaterial.prototype.isMeshToonMaterial = true;\n\nMeshToonMaterial.prototype.copy = function ( source ) {\n\n\tMeshPhongMaterial.prototype.copy.call( this, source );\n\n\tthis.gradientMap = source.gradientMap;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  opacity: <float>,\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshNormalMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshNormalMaterial';\n\n\tthis.bumpMap = null;\n\tthis.bumpScale = 1;\n\n\tthis.normalMap = null;\n\tthis.normalMapType = TangentSpaceNormalMap;\n\tthis.normalScale = new Vector2( 1, 1 );\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\n\tthis.fog = false;\n\tthis.lights = false;\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshNormalMaterial.prototype = Object.create( Material.prototype );\nMeshNormalMaterial.prototype.constructor = MeshNormalMaterial;\n\nMeshNormalMaterial.prototype.isMeshNormalMaterial = true;\n\nMeshNormalMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.bumpMap = source.bumpMap;\n\tthis.bumpScale = source.bumpScale;\n\n\tthis.normalMap = source.normalMap;\n\tthis.normalMapType = source.normalMapType;\n\tthis.normalScale.copy( source.normalScale );\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshLambertMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshLambertMaterial';\n\n\tthis.color = new Color( 0xffffff ); // diffuse\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.emissive = new Color( 0x000000 );\n\tthis.emissiveIntensity = 1.0;\n\tthis.emissiveMap = null;\n\n\tthis.specularMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.combine = MultiplyOperation;\n\tthis.reflectivity = 1;\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshLambertMaterial.prototype = Object.create( Material.prototype );\nMeshLambertMaterial.prototype.constructor = MeshLambertMaterial;\n\nMeshLambertMaterial.prototype.isMeshLambertMaterial = true;\n\nMeshLambertMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.emissive.copy( source.emissive );\n\tthis.emissiveMap = source.emissiveMap;\n\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\tthis.specularMap = source.specularMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.combine = source.combine;\n\tthis.reflectivity = source.reflectivity;\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  matcap: new THREE.Texture( <Image> ),\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshMatcapMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.defines = { 'MATCAP': '' };\n\n\tthis.type = 'MeshMatcapMaterial';\n\n\tthis.color = new Color( 0xffffff ); // diffuse\n\n\tthis.matcap = null;\n\n\tthis.map = null;\n\n\tthis.bumpMap = null;\n\tthis.bumpScale = 1;\n\n\tthis.normalMap = null;\n\tthis.normalMapType = TangentSpaceNormalMap;\n\tthis.normalScale = new Vector2( 1, 1 );\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.alphaMap = null;\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshMatcapMaterial.prototype = Object.create( Material.prototype );\nMeshMatcapMaterial.prototype.constructor = MeshMatcapMaterial;\n\nMeshMatcapMaterial.prototype.isMeshMatcapMaterial = true;\n\nMeshMatcapMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.defines = { 'MATCAP': '' };\n\n\tthis.color.copy( source.color );\n\n\tthis.matcap = source.matcap;\n\n\tthis.map = source.map;\n\n\tthis.bumpMap = source.bumpMap;\n\tthis.bumpScale = source.bumpScale;\n\n\tthis.normalMap = source.normalMap;\n\tthis.normalMapType = source.normalMapType;\n\tthis.normalScale.copy( source.normalScale );\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  linewidth: <float>,\n *\n *  scale: <float>,\n *  dashSize: <float>,\n *  gapSize: <float>\n * }\n */\n\nfunction LineDashedMaterial( parameters ) {\n\n\tLineBasicMaterial.call( this );\n\n\tthis.type = 'LineDashedMaterial';\n\n\tthis.scale = 1;\n\tthis.dashSize = 3;\n\tthis.gapSize = 1;\n\n\tthis.setValues( parameters );\n\n}\n\nLineDashedMaterial.prototype = Object.create( LineBasicMaterial.prototype );\nLineDashedMaterial.prototype.constructor = LineDashedMaterial;\n\nLineDashedMaterial.prototype.isLineDashedMaterial = true;\n\nLineDashedMaterial.prototype.copy = function ( source ) {\n\n\tLineBasicMaterial.prototype.copy.call( this, source );\n\n\tthis.scale = source.scale;\n\tthis.dashSize = source.dashSize;\n\tthis.gapSize = source.gapSize;\n\n\treturn this;\n\n};\n\n\n\nvar Materials = /*#__PURE__*/Object.freeze({\n\tShadowMaterial: ShadowMaterial,\n\tSpriteMaterial: SpriteMaterial,\n\tRawShaderMaterial: RawShaderMaterial,\n\tShaderMaterial: ShaderMaterial,\n\tPointsMaterial: PointsMaterial,\n\tMeshPhysicalMaterial: MeshPhysicalMaterial,\n\tMeshStandardMaterial: MeshStandardMaterial,\n\tMeshPhongMaterial: MeshPhongMaterial,\n\tMeshToonMaterial: MeshToonMaterial,\n\tMeshNormalMaterial: MeshNormalMaterial,\n\tMeshLambertMaterial: MeshLambertMaterial,\n\tMeshDepthMaterial: MeshDepthMaterial,\n\tMeshDistanceMaterial: MeshDistanceMaterial,\n\tMeshBasicMaterial: MeshBasicMaterial,\n\tMeshMatcapMaterial: MeshMatcapMaterial,\n\tLineDashedMaterial: LineDashedMaterial,\n\tLineBasicMaterial: LineBasicMaterial,\n\tMaterial: Material\n});\n\n/**\n * @author tschw\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n */\n\nvar AnimationUtils = {\n\n\t// same as Array.prototype.slice, but also works on typed arrays\n\tarraySlice: function ( array, from, to ) {\n\n\t\tif ( AnimationUtils.isTypedArray( array ) ) {\n\n\t\t\t// in ios9 array.subarray(from, undefined) will return empty array\n\t\t\t// but array.subarray(from) or array.subarray(from, len) is correct\n\t\t\treturn new array.constructor( array.subarray( from, to !== undefined ? to : array.length ) );\n\n\t\t}\n\n\t\treturn array.slice( from, to );\n\n\t},\n\n\t// converts an array to a specific type\n\tconvertArray: function ( array, type, forceClone ) {\n\n\t\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t\t! forceClone && array.constructor === type ) return array;\n\n\t\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n\t\t\treturn new type( array ); // create typed array\n\n\t\t}\n\n\t\treturn Array.prototype.slice.call( array ); // create Array\n\n\t},\n\n\tisTypedArray: function ( object ) {\n\n\t\treturn ArrayBuffer.isView( object ) &&\n\t\t\t! ( object instanceof DataView );\n\n\t},\n\n\t// returns an array by which times and values can be sorted\n\tgetKeyframeOrder: function ( times ) {\n\n\t\tfunction compareTime( i, j ) {\n\n\t\t\treturn times[ i ] - times[ j ];\n\n\t\t}\n\n\t\tvar n = times.length;\n\t\tvar result = new Array( n );\n\t\tfor ( var i = 0; i !== n; ++ i ) result[ i ] = i;\n\n\t\tresult.sort( compareTime );\n\n\t\treturn result;\n\n\t},\n\n\t// uses the array previously returned by 'getKeyframeOrder' to sort data\n\tsortedArray: function ( values, stride, order ) {\n\n\t\tvar nValues = values.length;\n\t\tvar result = new values.constructor( nValues );\n\n\t\tfor ( var i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n\t\t\tvar srcOffset = order[ i ] * stride;\n\n\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn result;\n\n\t},\n\n\t// function for parsing AOS keyframe formats\n\tflattenJSON: function ( jsonKeys, times, values, valuePropertyName ) {\n\n\t\tvar i = 1, key = jsonKeys[ 0 ];\n\n\t\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t}\n\n\t\tif ( key === undefined ) return; // no data\n\n\t\tvar value = key[ valuePropertyName ];\n\t\tif ( value === undefined ) return; // no data\n\n\t\tif ( Array.isArray( value ) ) {\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t} else if ( value.toArray !== undefined ) {\n\n\t\t\t// ...assume THREE.Math-ish\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalue.toArray( values, values.length );\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t} else {\n\n\t\t\t// otherwise push as-is\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalues.push( value );\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t}\n\n\t}\n\n};\n\n/**\n * Abstract base class of interpolants over parametric samples.\n *\n * The parameter domain is one dimensional, typically the time or a path\n * along a curve defined by the data.\n *\n * The sample values can have any dimensionality and derived classes may\n * apply special interpretations to the data.\n *\n * This class provides the interval seek in a Template Method, deferring\n * the actual interpolation to derived classes.\n *\n * Time complexity is O(1) for linear access crossing at most two points\n * and O(log N) for random access, where N is the number of positions.\n *\n * References:\n *\n * \t\thttp://www.oodesign.com/template-method-pattern.html\n *\n * @author tschw\n */\n\nfunction Interpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tthis.parameterPositions = parameterPositions;\n\tthis._cachedIndex = 0;\n\n\tthis.resultBuffer = resultBuffer !== undefined ?\n\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n\tthis.sampleValues = sampleValues;\n\tthis.valueSize = sampleSize;\n\n}\n\nObject.assign( Interpolant.prototype, {\n\n\tevaluate: function ( t ) {\n\n\t\tvar pp = this.parameterPositions,\n\t\t\ti1 = this._cachedIndex,\n\n\t\t\tt1 = pp[ i1 ],\n\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\tvalidate_interval: {\n\n\t\t\tseek: {\n\n\t\t\t\tvar right;\n\n\t\t\t\tlinear_scan: {\n\n\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\n\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\n\t\t\t\t\t\tfor ( var giveUpAt = i1 + 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\n\n\t\t\t\t\t\t\t\t// after end\n\n\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\treturn this.afterEnd_( i1 - 1, t, t0 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\n\t\t\t\t\t\t\tif ( t < t1 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the right side of the index\n\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\n\t\t\t\t\t\t// looping?\n\n\t\t\t\t\t\tvar t1global = pp[ 1 ];\n\n\t\t\t\t\t\tif ( t < t1global ) {\n\n\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\tt0 = t1global;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// linear reverse scan\n\n\t\t\t\t\t\tfor ( var giveUpAt = i1 - 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\t\t\t// before start\n\n\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\n\t\t\t\t\t\t\tif ( t >= t0 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the left side of the index\n\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the interval is valid\n\n\t\t\t\t\tbreak validate_interval;\n\n\t\t\t\t} // linear scan\n\n\t\t\t\t// binary search\n\n\t\t\t\twhile ( i1 < right ) {\n\n\t\t\t\t\tvar mid = ( i1 + right ) >>> 1;\n\n\t\t\t\t\tif ( t < pp[ mid ] ) {\n\n\t\t\t\t\t\tright = mid;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ti1 = mid + 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tt1 = pp[ i1 ];\n\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\t\t// check boundary cases, again\n\n\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\treturn this.afterEnd_( i1 - 1, t0, t );\n\n\t\t\t\t}\n\n\t\t\t} // seek\n\n\t\t\tthis._cachedIndex = i1;\n\n\t\t\tthis.intervalChanged_( i1, t0, t1 );\n\n\t\t} // validate_interval\n\n\t\treturn this.interpolate_( i1, t0, t, t1 );\n\n\t},\n\n\tsettings: null, // optional, subclass-specific settings structure\n\t// Note: The indirection allows central control of many interpolants.\n\n\t// --- Protected interface\n\n\tDefaultSettings_: {},\n\n\tgetSettings_: function () {\n\n\t\treturn this.settings || this.DefaultSettings_;\n\n\t},\n\n\tcopySampleValue_: function ( index ) {\n\n\t\t// copies a sample value to the result buffer\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = index * stride;\n\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t},\n\n\t// Template methods for derived classes:\n\n\tinterpolate_: function ( /* i1, t0, t, t1 */ ) {\n\n\t\tthrow new Error( 'call to abstract method' );\n\t\t// implementations shall return this.resultBuffer\n\n\t},\n\n\tintervalChanged_: function ( /* i1, t0, t1 */ ) {\n\n\t\t// empty\n\n\t}\n\n} );\n\n//!\\ DECLARE ALIAS AFTER assign prototype !\nObject.assign( Interpolant.prototype, {\n\n\t//( 0, t, t0 ), returns this.resultBuffer\n\tbeforeStart_: Interpolant.prototype.copySampleValue_,\n\n\t//( N-1, tN-1, t ), returns this.resultBuffer\n\tafterEnd_: Interpolant.prototype.copySampleValue_,\n\n} );\n\n/**\n * Fast and simple cubic spline interpolant.\n *\n * It was derived from a Hermitian construction setting the first derivative\n * at each sample position to the linear slope between neighboring positions\n * over their parameter interval.\n *\n * @author tschw\n */\n\nfunction CubicInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\tthis._weightPrev = - 0;\n\tthis._offsetPrev = - 0;\n\tthis._weightNext = - 0;\n\tthis._offsetNext = - 0;\n\n}\n\nCubicInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: CubicInterpolant,\n\n\tDefaultSettings_: {\n\n\t\tendingStart: ZeroCurvatureEnding,\n\t\tendingEnd: ZeroCurvatureEnding\n\n\t},\n\n\tintervalChanged_: function ( i1, t0, t1 ) {\n\n\t\tvar pp = this.parameterPositions,\n\t\t\tiPrev = i1 - 2,\n\t\t\tiNext = i1 + 1,\n\n\t\t\ttPrev = pp[ iPrev ],\n\t\t\ttNext = pp[ iNext ];\n\n\t\tif ( tPrev === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingStart ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = 2 * t0 - t1;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = t1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tNext === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingEnd ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\tiNext = i1;\n\t\t\t\t\ttNext = 2 * t1 - t0;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiNext = 1;\n\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\ttNext = t0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar halfDt = ( t1 - t0 ) * 0.5,\n\t\t\tstride = this.valueSize;\n\n\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n\t\tthis._weightNext = halfDt / ( tNext - t1 );\n\t\tthis._offsetPrev = iPrev * stride;\n\t\tthis._offsetNext = iNext * stride;\n\n\t},\n\n\tinterpolate_: function ( i1, t0, t, t1 ) {\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\twP = this._weightPrev,\twN = this._weightNext,\n\n\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tpp = p * p,\n\t\t\tppp = pp * p;\n\n\t\t// evaluate polynomials\n\n\t\tvar sP = - wP * ppp + 2 * wP * pp - wP * p;\n\t\tvar s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1;\n\t\tvar s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p;\n\t\tvar sN = wN * ppp - wN * pp;\n\n\t\t// combine data linearly\n\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tsP * values[ oP + i ] +\n\t\t\t\t\ts0 * values[ o0 + i ] +\n\t\t\t\t\ts1 * values[ o1 + i ] +\n\t\t\t\t\tsN * values[ oN + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n} );\n\n/**\n * @author tschw\n */\n\nfunction LinearInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n}\n\nLinearInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: LinearInterpolant,\n\n\tinterpolate_: function ( i1, t0, t, t1 ) {\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset1 = i1 * stride,\n\t\t\toffset0 = offset1 - stride,\n\n\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tweight0 = 1 - weight1;\n\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n\t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n} );\n\n/**\n *\n * Interpolant that evaluates to the sample value at the position preceeding\n * the parameter.\n *\n * @author tschw\n */\n\nfunction DiscreteInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n}\n\nDiscreteInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: DiscreteInterpolant,\n\n\tinterpolate_: function ( i1 /*, t0, t, t1 */ ) {\n\n\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t}\n\n} );\n\n/**\n *\n * A timed sequence of keyframes for a specific property.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction KeyframeTrack( name, times, values, interpolation ) {\n\n\tif ( name === undefined ) throw new Error( 'THREE.KeyframeTrack: track name is undefined' );\n\tif ( times === undefined || times.length === 0 ) throw new Error( 'THREE.KeyframeTrack: no keyframes in track named ' + name );\n\n\tthis.name = name;\n\n\tthis.times = AnimationUtils.convertArray( times, this.TimeBufferType );\n\tthis.values = AnimationUtils.convertArray( values, this.ValueBufferType );\n\n\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\n}\n\n// Static methods\n\nObject.assign( KeyframeTrack, {\n\n\t// Serialization (in static context, because of constructor invocation\n\t// and automatic invocation of .toJSON):\n\n\ttoJSON: function ( track ) {\n\n\t\tvar trackType = track.constructor;\n\n\t\tvar json;\n\n\t\t// derived classes can define a static toJSON method\n\t\tif ( trackType.toJSON !== undefined ) {\n\n\t\t\tjson = trackType.toJSON( track );\n\n\t\t} else {\n\n\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\tjson = {\n\n\t\t\t\t'name': track.name,\n\t\t\t\t'times': AnimationUtils.convertArray( track.times, Array ),\n\t\t\t\t'values': AnimationUtils.convertArray( track.values, Array )\n\n\t\t\t};\n\n\t\t\tvar interpolation = track.getInterpolation();\n\n\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\n\t\t\t\tjson.interpolation = interpolation;\n\n\t\t\t}\n\n\t\t}\n\n\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\treturn json;\n\n\t}\n\n} );\n\nObject.assign( KeyframeTrack.prototype, {\n\n\tconstructor: KeyframeTrack,\n\n\tTimeBufferType: Float32Array,\n\n\tValueBufferType: Float32Array,\n\n\tDefaultInterpolation: InterpolateLinear,\n\n\tInterpolantFactoryMethodDiscrete: function ( result ) {\n\n\t\treturn new DiscreteInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tInterpolantFactoryMethodLinear: function ( result ) {\n\n\t\treturn new LinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tInterpolantFactoryMethodSmooth: function ( result ) {\n\n\t\treturn new CubicInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tsetInterpolation: function ( interpolation ) {\n\n\t\tvar factoryMethod;\n\n\t\tswitch ( interpolation ) {\n\n\t\t\tcase InterpolateDiscrete:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateLinear:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateSmooth:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( factoryMethod === undefined ) {\n\n\t\t\tvar message = \"unsupported interpolation for \" +\n\t\t\t\tthis.ValueTypeName + \" keyframe track named \" + this.name;\n\n\t\t\tif ( this.createInterpolant === undefined ) {\n\n\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\n\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconsole.warn( 'THREE.KeyframeTrack:', message );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis.createInterpolant = factoryMethod;\n\n\t\treturn this;\n\n\t},\n\n\tgetInterpolation: function () {\n\n\t\tswitch ( this.createInterpolant ) {\n\n\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\n\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\tcase this.InterpolantFactoryMethodLinear:\n\n\t\t\t\treturn InterpolateLinear;\n\n\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\n\t\t\t\treturn InterpolateSmooth;\n\n\t\t}\n\n\t},\n\n\tgetValueSize: function () {\n\n\t\treturn this.values.length / this.times.length;\n\n\t},\n\n\t// move all keyframes either forwards or backwards in time\n\tshift: function ( timeOffset ) {\n\n\t\tif ( timeOffset !== 0.0 ) {\n\n\t\t\tvar times = this.times;\n\n\t\t\tfor ( var i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] += timeOffset;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\tscale: function ( timeScale ) {\n\n\t\tif ( timeScale !== 1.0 ) {\n\n\t\t\tvar times = this.times;\n\n\t\t\tfor ( var i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] *= timeScale;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\ttrim: function ( startTime, endTime ) {\n\n\t\tvar times = this.times,\n\t\t\tnKeys = times.length,\n\t\t\tfrom = 0,\n\t\t\tto = nKeys - 1;\n\n\t\twhile ( from !== nKeys && times[ from ] < startTime ) {\n\n\t\t\t++ from;\n\n\t\t}\n\n\t\twhile ( to !== - 1 && times[ to ] > endTime ) {\n\n\t\t\t-- to;\n\n\t\t}\n\n\t\t++ to; // inclusive -> exclusive bound\n\n\t\tif ( from !== 0 || to !== nKeys ) {\n\n\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\tif ( from >= to ) to = Math.max( to, 1 ), from = to - 1;\n\n\t\t\tvar stride = this.getValueSize();\n\t\t\tthis.times = AnimationUtils.arraySlice( times, from, to );\n\t\t\tthis.values = AnimationUtils.arraySlice( this.values, from * stride, to * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\tvalidate: function () {\n\n\t\tvar valid = true;\n\n\t\tvar valueSize = this.getValueSize();\n\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Invalid value size in track.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tvar times = this.times,\n\t\t\tvalues = this.values,\n\n\t\t\tnKeys = times.length;\n\n\t\tif ( nKeys === 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Track is empty.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tvar prevTime = null;\n\n\t\tfor ( var i = 0; i !== nKeys; i ++ ) {\n\n\t\t\tvar currTime = times[ i ];\n\n\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( prevTime !== null && prevTime > currTime ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tprevTime = currTime;\n\n\t\t}\n\n\t\tif ( values !== undefined ) {\n\n\t\t\tif ( AnimationUtils.isTypedArray( values ) ) {\n\n\t\t\t\tfor ( var i = 0, n = values.length; i !== n; ++ i ) {\n\n\t\t\t\t\tvar value = values[ i ];\n\n\t\t\t\t\tif ( isNaN( value ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Value is not a valid number.', this, i, value );\n\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn valid;\n\n\t},\n\n\t// removes equivalent sequential keys as common in morph target sequences\n\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\toptimize: function () {\n\n\t\tvar times = this.times,\n\t\t\tvalues = this.values,\n\t\t\tstride = this.getValueSize(),\n\n\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\n\t\t\twriteIndex = 1,\n\t\t\tlastIndex = times.length - 1;\n\n\t\tfor ( var i = 1; i < lastIndex; ++ i ) {\n\n\t\t\tvar keep = false;\n\n\t\t\tvar time = times[ i ];\n\t\t\tvar timeNext = times[ i + 1 ];\n\n\t\t\t// remove adjacent keyframes scheduled at the same time\n\n\t\t\tif ( time !== timeNext && ( i !== 1 || time !== time[ 0 ] ) ) {\n\n\t\t\t\tif ( ! smoothInterpolation ) {\n\n\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\n\t\t\t\t\tvar offset = i * stride,\n\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvar value = values[ offset + j ];\n\n\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\n\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tkeep = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// in-place compaction\n\n\t\t\tif ( keep ) {\n\n\t\t\t\tif ( i !== writeIndex ) {\n\n\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\n\t\t\t\t\tvar readOffset = i * stride,\n\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t++ writeIndex;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// flush last keyframe (compaction looks ahead)\n\n\t\tif ( lastIndex > 0 ) {\n\n\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\n\n\t\t\tfor ( var readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t}\n\n\t\t\t++ writeIndex;\n\n\t\t}\n\n\t\tif ( writeIndex !== times.length ) {\n\n\t\t\tthis.times = AnimationUtils.arraySlice( times, 0, writeIndex );\n\t\t\tthis.values = AnimationUtils.arraySlice( values, 0, writeIndex * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\tvar times = AnimationUtils.arraySlice( this.times, 0 );\n\t\tvar values = AnimationUtils.arraySlice( this.values, 0 );\n\n\t\tvar TypedKeyframeTrack = this.constructor;\n\t\tvar track = new TypedKeyframeTrack( this.name, times, values );\n\n\t\t// Interpolant argument to constructor is not saved, so copy the factory method directly.\n\t\ttrack.createInterpolant = this.createInterpolant;\n\n\t\treturn track;\n\n\t}\n\n} );\n\n/**\n *\n * A Track of Boolean keyframe values.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction BooleanKeyframeTrack( name, times, values ) {\n\n\tKeyframeTrack.call( this, name, times, values );\n\n}\n\nBooleanKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: BooleanKeyframeTrack,\n\n\tValueTypeName: 'bool',\n\tValueBufferType: Array,\n\n\tDefaultInterpolation: InterpolateDiscrete,\n\n\tInterpolantFactoryMethodLinear: undefined,\n\tInterpolantFactoryMethodSmooth: undefined\n\n\t// Note: Actually this track could have a optimized / compressed\n\t// representation of a single value and a custom interpolant that\n\t// computes \"firstValue ^ isOdd( index )\".\n\n} );\n\n/**\n *\n * A Track of keyframe values that represent color.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction ColorKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nColorKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: ColorKeyframeTrack,\n\n\tValueTypeName: 'color'\n\n\t// ValueBufferType is inherited\n\n\t// DefaultInterpolation is inherited\n\n\t// Note: Very basic implementation and nothing special yet.\n\t// However, this is the place for color space parameterization.\n\n} );\n\n/**\n *\n * A Track of numeric keyframe values.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction NumberKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nNumberKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: NumberKeyframeTrack,\n\n\tValueTypeName: 'number'\n\n\t// ValueBufferType is inherited\n\n\t// DefaultInterpolation is inherited\n\n} );\n\n/**\n * Spherical linear unit quaternion interpolant.\n *\n * @author tschw\n */\n\nfunction QuaternionLinearInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n}\n\nQuaternionLinearInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: QuaternionLinearInterpolant,\n\n\tinterpolate_: function ( i1, t0, t, t1 ) {\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset = i1 * stride,\n\n\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n\t\tfor ( var end = offset + stride; offset !== end; offset += 4 ) {\n\n\t\t\tQuaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n} );\n\n/**\n *\n * A Track of quaternion keyframe values.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction QuaternionKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nQuaternionKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: QuaternionKeyframeTrack,\n\n\tValueTypeName: 'quaternion',\n\n\t// ValueBufferType is inherited\n\n\tDefaultInterpolation: InterpolateLinear,\n\n\tInterpolantFactoryMethodLinear: function ( result ) {\n\n\t\treturn new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tInterpolantFactoryMethodSmooth: undefined // not yet implemented\n\n} );\n\n/**\n *\n * A Track that interpolates Strings\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction StringKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nStringKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: StringKeyframeTrack,\n\n\tValueTypeName: 'string',\n\tValueBufferType: Array,\n\n\tDefaultInterpolation: InterpolateDiscrete,\n\n\tInterpolantFactoryMethodLinear: undefined,\n\n\tInterpolantFactoryMethodSmooth: undefined\n\n} );\n\n/**\n *\n * A Track of vectored keyframe values.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction VectorKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nVectorKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: VectorKeyframeTrack,\n\n\tValueTypeName: 'vector'\n\n\t// ValueBufferType is inherited\n\n\t// DefaultInterpolation is inherited\n\n} );\n\n/**\n *\n * Reusable set of Tracks that represent an animation.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n */\n\nfunction AnimationClip( name, duration, tracks ) {\n\n\tthis.name = name;\n\tthis.tracks = tracks;\n\tthis.duration = ( duration !== undefined ) ? duration : - 1;\n\n\tthis.uuid = _Math.generateUUID();\n\n\t// this means it should figure out its duration by scanning the tracks\n\tif ( this.duration < 0 ) {\n\n\t\tthis.resetDuration();\n\n\t}\n\n}\n\nfunction getTrackTypeForValueTypeName( typeName ) {\n\n\tswitch ( typeName.toLowerCase() ) {\n\n\t\tcase 'scalar':\n\t\tcase 'double':\n\t\tcase 'float':\n\t\tcase 'number':\n\t\tcase 'integer':\n\n\t\t\treturn NumberKeyframeTrack;\n\n\t\tcase 'vector':\n\t\tcase 'vector2':\n\t\tcase 'vector3':\n\t\tcase 'vector4':\n\n\t\t\treturn VectorKeyframeTrack;\n\n\t\tcase 'color':\n\n\t\t\treturn ColorKeyframeTrack;\n\n\t\tcase 'quaternion':\n\n\t\t\treturn QuaternionKeyframeTrack;\n\n\t\tcase 'bool':\n\t\tcase 'boolean':\n\n\t\t\treturn BooleanKeyframeTrack;\n\n\t\tcase 'string':\n\n\t\t\treturn StringKeyframeTrack;\n\n\t}\n\n\tthrow new Error( 'THREE.KeyframeTrack: Unsupported typeName: ' + typeName );\n\n}\n\nfunction parseKeyframeTrack( json ) {\n\n\tif ( json.type === undefined ) {\n\n\t\tthrow new Error( 'THREE.KeyframeTrack: track type undefined, can not parse' );\n\n\t}\n\n\tvar trackType = getTrackTypeForValueTypeName( json.type );\n\n\tif ( json.times === undefined ) {\n\n\t\tvar times = [], values = [];\n\n\t\tAnimationUtils.flattenJSON( json.keys, times, values, 'value' );\n\n\t\tjson.times = times;\n\t\tjson.values = values;\n\n\t}\n\n\t// derived classes can define a static parse method\n\tif ( trackType.parse !== undefined ) {\n\n\t\treturn trackType.parse( json );\n\n\t} else {\n\n\t\t// by default, we assume a constructor compatible with the base\n\t\treturn new trackType( json.name, json.times, json.values, json.interpolation );\n\n\t}\n\n}\n\nObject.assign( AnimationClip, {\n\n\tparse: function ( json ) {\n\n\t\tvar tracks = [],\n\t\t\tjsonTracks = json.tracks,\n\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\n\t\tfor ( var i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( parseKeyframeTrack( jsonTracks[ i ] ).scale( frameTime ) );\n\n\t\t}\n\n\t\treturn new AnimationClip( json.name, json.duration, tracks );\n\n\t},\n\n\ttoJSON: function ( clip ) {\n\n\t\tvar tracks = [],\n\t\t\tclipTracks = clip.tracks;\n\n\t\tvar json = {\n\n\t\t\t'name': clip.name,\n\t\t\t'duration': clip.duration,\n\t\t\t'tracks': tracks,\n\t\t\t'uuid': clip.uuid\n\n\t\t};\n\n\t\tfor ( var i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\n\t\t}\n\n\t\treturn json;\n\n\t},\n\n\tCreateFromMorphTargetSequence: function ( name, morphTargetSequence, fps, noLoop ) {\n\n\t\tvar numMorphTargets = morphTargetSequence.length;\n\t\tvar tracks = [];\n\n\t\tfor ( var i = 0; i < numMorphTargets; i ++ ) {\n\n\t\t\tvar times = [];\n\t\t\tvar values = [];\n\n\t\t\ttimes.push(\n\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\ti,\n\t\t\t\t( i + 1 ) % numMorphTargets );\n\n\t\t\tvalues.push( 0, 1, 0 );\n\n\t\t\tvar order = AnimationUtils.getKeyframeOrder( times );\n\t\t\ttimes = AnimationUtils.sortedArray( times, 1, order );\n\t\t\tvalues = AnimationUtils.sortedArray( values, 1, order );\n\n\t\t\t// if there is a key at the first frame, duplicate it as the\n\t\t\t// last frame as well for perfect loop.\n\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\n\t\t\t\ttimes.push( numMorphTargets );\n\t\t\t\tvalues.push( values[ 0 ] );\n\n\t\t\t}\n\n\t\t\ttracks.push(\n\t\t\t\tnew NumberKeyframeTrack(\n\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\ttimes, values\n\t\t\t\t).scale( 1.0 / fps ) );\n\n\t\t}\n\n\t\treturn new AnimationClip( name, - 1, tracks );\n\n\t},\n\n\tfindByName: function ( objectOrClipArray, name ) {\n\n\t\tvar clipArray = objectOrClipArray;\n\n\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\n\t\t\tvar o = objectOrClipArray;\n\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\n\t\t}\n\n\t\tfor ( var i = 0; i < clipArray.length; i ++ ) {\n\n\t\t\tif ( clipArray[ i ].name === name ) {\n\n\t\t\t\treturn clipArray[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t},\n\n\tCreateClipsFromMorphTargetSequences: function ( morphTargets, fps, noLoop ) {\n\n\t\tvar animationToMorphTargets = {};\n\n\t\t// tested with https://regex101.com/ on trick sequences\n\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\tvar pattern = /^([\\w-]*?)([\\d]+)$/;\n\n\t\t// sort morph target names into animation groups based\n\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\tfor ( var i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tvar morphTarget = morphTargets[ i ];\n\t\t\tvar parts = morphTarget.name.match( pattern );\n\n\t\t\tif ( parts && parts.length > 1 ) {\n\n\t\t\t\tvar name = parts[ 1 ];\n\n\t\t\t\tvar animationMorphTargets = animationToMorphTargets[ name ];\n\t\t\t\tif ( ! animationMorphTargets ) {\n\n\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\n\t\t\t\t}\n\n\t\t\t\tanimationMorphTargets.push( morphTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar clips = [];\n\n\t\tfor ( var name in animationToMorphTargets ) {\n\n\t\t\tclips.push( AnimationClip.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\n\n\t\t}\n\n\t\treturn clips;\n\n\t},\n\n\t// parse the animation.hierarchy format\n\tparseAnimation: function ( animation, bones ) {\n\n\t\tif ( ! animation ) {\n\n\t\t\tconsole.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tvar addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\n\n\t\t\t// only return track if there are actually keys.\n\t\t\tif ( animationKeys.length !== 0 ) {\n\n\t\t\t\tvar times = [];\n\t\t\t\tvar values = [];\n\n\t\t\t\tAnimationUtils.flattenJSON( animationKeys, times, values, propertyName );\n\n\t\t\t\t// empty keys are filtered out, so check again\n\t\t\t\tif ( times.length !== 0 ) {\n\n\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tvar tracks = [];\n\n\t\tvar clipName = animation.name || 'default';\n\t\t// automatic length determination in AnimationClip.\n\t\tvar duration = animation.length || - 1;\n\t\tvar fps = animation.fps || 30;\n\n\t\tvar hierarchyTracks = animation.hierarchy || [];\n\n\t\tfor ( var h = 0; h < hierarchyTracks.length; h ++ ) {\n\n\t\t\tvar animationKeys = hierarchyTracks[ h ].keys;\n\n\t\t\t// skip empty tracks\n\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\n\n\t\t\t// process morph targets\n\t\t\tif ( animationKeys[ 0 ].morphTargets ) {\n\n\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\tvar morphTargetNames = {};\n\n\t\t\t\tfor ( var k = 0; k < animationKeys.length; k ++ ) {\n\n\t\t\t\t\tif ( animationKeys[ k ].morphTargets ) {\n\n\t\t\t\t\t\tfor ( var m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// create a track for each morph target with all zero\n\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t// the morphTarget is named.\n\t\t\t\tfor ( var morphTargetName in morphTargetNames ) {\n\n\t\t\t\t\tvar times = [];\n\t\t\t\t\tvar values = [];\n\n\t\t\t\t\tfor ( var m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {\n\n\t\t\t\t\t\tvar animationKey = animationKeys[ k ];\n\n\t\t\t\t\t\ttimes.push( animationKey.time );\n\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\n\t\t\t\t}\n\n\t\t\t\tduration = morphTargetNames.length * ( fps || 1.0 );\n\n\t\t\t} else {\n\n\t\t\t\t// ...assume skeletal animation\n\n\t\t\t\tvar boneName = '.bones[' + bones[ h ].name + ']';\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\tanimationKeys, 'pos', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\tanimationKeys, 'rot', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\tanimationKeys, 'scl', tracks );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tracks.length === 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tvar clip = new AnimationClip( clipName, duration, tracks );\n\n\t\treturn clip;\n\n\t}\n\n} );\n\nObject.assign( AnimationClip.prototype, {\n\n\tresetDuration: function () {\n\n\t\tvar tracks = this.tracks, duration = 0;\n\n\t\tfor ( var i = 0, n = tracks.length; i !== n; ++ i ) {\n\n\t\t\tvar track = this.tracks[ i ];\n\n\t\t\tduration = Math.max( duration, track.times[ track.times.length - 1 ] );\n\n\t\t}\n\n\t\tthis.duration = duration;\n\n\t\treturn this;\n\n\t},\n\n\ttrim: function () {\n\n\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tvalidate: function () {\n\n\t\tvar valid = true;\n\n\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tvalid = valid && this.tracks[ i ].validate();\n\n\t\t}\n\n\t\treturn valid;\n\n\t},\n\n\toptimize: function () {\n\n\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].optimize();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\n\tclone: function () {\n\n\t\tvar tracks = [];\n\n\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\ttracks.push( this.tracks[ i ].clone() );\n\n\t\t}\n\n\t\treturn new AnimationClip( this.name, this.duration, tracks );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar Cache = {\n\n\tenabled: false,\n\n\tfiles: {},\n\n\tadd: function ( key, file ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\tthis.files[ key ] = file;\n\n\t},\n\n\tget: function ( key ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\treturn this.files[ key ];\n\n\t},\n\n\tremove: function ( key ) {\n\n\t\tdelete this.files[ key ];\n\n\t},\n\n\tclear: function () {\n\n\t\tthis.files = {};\n\n\t}\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LoadingManager( onLoad, onProgress, onError ) {\n\n\tvar scope = this;\n\n\tvar isLoading = false;\n\tvar itemsLoaded = 0;\n\tvar itemsTotal = 0;\n\tvar urlModifier = undefined;\n\n\t// Refer to #5689 for the reason why we don't set .onStart\n\t// in the constructor\n\n\tthis.onStart = undefined;\n\tthis.onLoad = onLoad;\n\tthis.onProgress = onProgress;\n\tthis.onError = onError;\n\n\tthis.itemStart = function ( url ) {\n\n\t\titemsTotal ++;\n\n\t\tif ( isLoading === false ) {\n\n\t\t\tif ( scope.onStart !== undefined ) {\n\n\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n\t\t\t}\n\n\t\t}\n\n\t\tisLoading = true;\n\n\t};\n\n\tthis.itemEnd = function ( url ) {\n\n\t\titemsLoaded ++;\n\n\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n\t\t}\n\n\t\tif ( itemsLoaded === itemsTotal ) {\n\n\t\t\tisLoading = false;\n\n\t\t\tif ( scope.onLoad !== undefined ) {\n\n\t\t\t\tscope.onLoad();\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.itemError = function ( url ) {\n\n\t\tif ( scope.onError !== undefined ) {\n\n\t\t\tscope.onError( url );\n\n\t\t}\n\n\t};\n\n\tthis.resolveURL = function ( url ) {\n\n\t\tif ( urlModifier ) {\n\n\t\t\treturn urlModifier( url );\n\n\t\t}\n\n\t\treturn url;\n\n\t};\n\n\tthis.setURLModifier = function ( transform ) {\n\n\t\turlModifier = transform;\n\t\treturn this;\n\n\t};\n\n}\n\nvar DefaultLoadingManager = new LoadingManager();\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar loading = {};\n\nfunction FileLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( FileLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tvar scope = this;\n\n\t\tvar cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\t// Check if request is duplicate\n\n\t\tif ( loading[ url ] !== undefined ) {\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// Check for data: URI\n\t\tvar dataUriRegex = /^data:(.*?)(;base64)?,(.*)$/;\n\t\tvar dataUriRegexResult = url.match( dataUriRegex );\n\n\t\t// Safari can not handle Data URIs through XMLHttpRequest so process manually\n\t\tif ( dataUriRegexResult ) {\n\n\t\t\tvar mimeType = dataUriRegexResult[ 1 ];\n\t\t\tvar isBase64 = !! dataUriRegexResult[ 2 ];\n\t\t\tvar data = dataUriRegexResult[ 3 ];\n\n\t\t\tdata = decodeURIComponent( data );\n\n\t\t\tif ( isBase64 ) data = atob( data );\n\n\t\t\ttry {\n\n\t\t\t\tvar response;\n\t\t\t\tvar responseType = ( this.responseType || '' ).toLowerCase();\n\n\t\t\t\tswitch ( responseType ) {\n\n\t\t\t\t\tcase 'arraybuffer':\n\t\t\t\t\tcase 'blob':\n\n\t\t\t\t\t\tvar view = new Uint8Array( data.length );\n\n\t\t\t\t\t\tfor ( var i = 0; i < data.length; i ++ ) {\n\n\t\t\t\t\t\t\tview[ i ] = data.charCodeAt( i );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( responseType === 'blob' ) {\n\n\t\t\t\t\t\t\tresponse = new Blob( [ view.buffer ], { type: mimeType } );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tresponse = view.buffer;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'document':\n\n\t\t\t\t\t\tvar parser = new DOMParser();\n\t\t\t\t\t\tresponse = parser.parseFromString( data, mimeType );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'json':\n\n\t\t\t\t\t\tresponse = JSON.parse( data );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault: // 'text' or other\n\n\t\t\t\t\t\tresponse = data;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\t// Wait for next browser tick like standard XMLHttpRequest event dispatching does\n\t\t\t\tsetTimeout( function () {\n\n\t\t\t\t\tif ( onLoad ) onLoad( response );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\t// Wait for next browser tick like standard XMLHttpRequest event dispatching does\n\t\t\t\tsetTimeout( function () {\n\n\t\t\t\t\tif ( onError ) onError( error );\n\n\t\t\t\t\tscope.manager.itemError( url );\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Initialise array for duplicate requests\n\n\t\t\tloading[ url ] = [];\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\tvar request = new XMLHttpRequest();\n\n\t\t\trequest.open( 'GET', url, true );\n\n\t\t\trequest.addEventListener( 'load', function ( event ) {\n\n\t\t\t\tvar response = this.response;\n\n\t\t\t\tCache.add( url, response );\n\n\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tif ( this.status === 200 || this.status === 0 ) {\n\n\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\t\tif ( this.status === 0 ) console.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\n\n\t\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\t\tif ( callback.onLoad ) callback.onLoad( response );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\t\tif ( callback.onError ) callback.onError( event );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemError( url );\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}\n\n\t\t\t}, false );\n\n\t\t\trequest.addEventListener( 'progress', function ( event ) {\n\n\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onProgress ) callback.onProgress( event );\n\n\t\t\t\t}\n\n\t\t\t}, false );\n\n\t\t\trequest.addEventListener( 'error', function ( event ) {\n\n\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( event );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, false );\n\n\t\t\trequest.addEventListener( 'abort', function ( event ) {\n\n\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( event );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, false );\n\n\t\t\tif ( this.responseType !== undefined ) request.responseType = this.responseType;\n\t\t\tif ( this.withCredentials !== undefined ) request.withCredentials = this.withCredentials;\n\n\t\t\tif ( request.overrideMimeType ) request.overrideMimeType( this.mimeType !== undefined ? this.mimeType : 'text/plain' );\n\n\t\t\tfor ( var header in this.requestHeader ) {\n\n\t\t\t\trequest.setRequestHeader( header, this.requestHeader[ header ] );\n\n\t\t\t}\n\n\t\t\trequest.send( null );\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\treturn request;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t},\n\n\tsetResponseType: function ( value ) {\n\n\t\tthis.responseType = value;\n\t\treturn this;\n\n\t},\n\n\tsetWithCredentials: function ( value ) {\n\n\t\tthis.withCredentials = value;\n\t\treturn this;\n\n\t},\n\n\tsetMimeType: function ( value ) {\n\n\t\tthis.mimeType = value;\n\t\treturn this;\n\n\t},\n\n\tsetRequestHeader: function ( value ) {\n\n\t\tthis.requestHeader = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io/\n */\n\nfunction AnimationLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( AnimationLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tparse: function ( json ) {\n\n\t\tvar animations = [];\n\n\t\tfor ( var i = 0; i < json.length; i ++ ) {\n\n\t\t\tvar clip = AnimationClip.parse( json[ i ] );\n\n\t\t\tanimations.push( clip );\n\n\t\t}\n\n\t\treturn animations;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n *\n * Abstract Base class to block based textures loader (dds, pvr, ...)\n */\n\nfunction CompressedTextureLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t// override in sub classes\n\tthis._parser = null;\n\n}\n\nObject.assign( CompressedTextureLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar images = [];\n\n\t\tvar texture = new CompressedTexture();\n\t\ttexture.image = images;\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( url[ i ], function ( buffer ) {\n\n\t\t\t\tvar texDatas = scope._parser( buffer, true );\n\n\t\t\t\timages[ i ] = {\n\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t};\n\n\t\t\t\tloaded += 1;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 )\n\t\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\tif ( Array.isArray( url ) ) {\n\n\t\t\tvar loaded = 0;\n\n\t\t\tfor ( var i = 0, il = url.length; i < il; ++ i ) {\n\n\t\t\t\tloadTexture( i );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// compressed cubemap texture stored in a single DDS file\n\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tvar texDatas = scope._parser( buffer, true );\n\n\t\t\t\tif ( texDatas.isCubemap ) {\n\n\t\t\t\t\tvar faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\tfor ( var f = 0; f < faces; f ++ ) {\n\n\t\t\t\t\t\timages[ f ] = { mipmaps: [] };\n\n\t\t\t\t\t\tfor ( var i = 0; i < texDatas.mipmapCount; i ++ ) {\n\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\treturn texture;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author Nikos M. / https://github.com/foo123/\n *\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n */\n\nfunction DataTextureLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t// override in sub classes\n\tthis._parser = null;\n\n}\n\nObject.assign( DataTextureLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar texture = new DataTexture();\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setPath( this.path );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\tvar texData = scope._parser( buffer );\n\n\t\t\tif ( ! texData ) return;\n\n\t\t\tif ( texData.image !== undefined ) {\n\n\t\t\t\ttexture.image = texData.image;\n\n\t\t\t} else if ( texData.data !== undefined ) {\n\n\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\ttexture.image.data = texData.data;\n\n\t\t\t}\n\n\t\t\ttexture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\ttexture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;\n\n\t\t\ttexture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter;\n\t\t\ttexture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearMipMapLinearFilter;\n\n\t\t\ttexture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1;\n\n\t\t\tif ( texData.format !== undefined ) {\n\n\t\t\t\ttexture.format = texData.format;\n\n\t\t\t}\n\t\t\tif ( texData.type !== undefined ) {\n\n\t\t\t\ttexture.type = texData.type;\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmaps !== undefined ) {\n\n\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmapCount === 1 ) {\n\n\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t}\n\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t}, onProgress, onError );\n\n\n\t\treturn texture;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction ImageLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( ImageLoader.prototype, {\n\n\tcrossOrigin: 'anonymous',\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tvar scope = this;\n\n\t\tvar cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tvar image = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'img' );\n\n\t\tfunction onImageLoad() {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t\tCache.add( url, this );\n\n\t\t\tif ( onLoad ) onLoad( this );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction onImageError( event ) {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t\tif ( onError ) onError( event );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\timage.addEventListener( 'load', onImageLoad, false );\n\t\timage.addEventListener( 'error', onImageError, false );\n\n\t\tif ( url.substr( 0, 5 ) !== 'data:' ) {\n\n\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\timage.src = url;\n\n\t\treturn image;\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction CubeTextureLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( CubeTextureLoader.prototype, {\n\n\tcrossOrigin: 'anonymous',\n\n\tload: function ( urls, onLoad, onProgress, onError ) {\n\n\t\tvar texture = new CubeTexture();\n\n\t\tvar loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tvar loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( urls[ i ], function ( image ) {\n\n\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\tloaded ++;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, undefined, onError );\n\n\t\t}\n\n\t\tfor ( var i = 0; i < urls.length; ++ i ) {\n\n\t\t\tloadTexture( i );\n\n\t\t}\n\n\t\treturn texture;\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction TextureLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( TextureLoader.prototype, {\n\n\tcrossOrigin: 'anonymous',\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar texture = new Texture();\n\n\t\tvar loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tloader.load( url, function ( image ) {\n\n\t\t\ttexture.image = image;\n\n\t\t\t// JPEGs can't have an alpha channel, so memory can be saved by storing them as RGB.\n\t\t\tvar isJPEG = url.search( /\\.jpe?g($|\\?)/i ) > 0 || url.search( /^data\\:image\\/jpeg/ ) === 0;\n\n\t\t\ttexture.format = isJPEG ? RGBFormat : RGBAFormat;\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\tonLoad( texture );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\treturn texture;\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * Extensible curve object\n *\n * Some common of curve methods:\n * .getPoint( t, optionalTarget ), .getTangent( t )\n * .getPointAt( u, optionalTarget ), .getTangentAt( u )\n * .getPoints(), .getSpacedPoints()\n * .getLength()\n * .updateArcLengths()\n *\n * This following curves inherit from THREE.Curve:\n *\n * -- 2D curves --\n * THREE.ArcCurve\n * THREE.CubicBezierCurve\n * THREE.EllipseCurve\n * THREE.LineCurve\n * THREE.QuadraticBezierCurve\n * THREE.SplineCurve\n *\n * -- 3D curves --\n * THREE.CatmullRomCurve3\n * THREE.CubicBezierCurve3\n * THREE.LineCurve3\n * THREE.QuadraticBezierCurve3\n *\n * A series of curves can be represented as a THREE.CurvePath.\n *\n **/\n\n/**************************************************************\n *\tAbstract Curve base class\n **************************************************************/\n\nfunction Curve() {\n\n\tthis.type = 'Curve';\n\n\tthis.arcLengthDivisions = 200;\n\n}\n\nObject.assign( Curve.prototype, {\n\n\t// Virtual base class method to overwrite and implement in subclasses\n\t//\t- t [0 .. 1]\n\n\tgetPoint: function ( /* t, optionalTarget */ ) {\n\n\t\tconsole.warn( 'THREE.Curve: .getPoint() not implemented.' );\n\t\treturn null;\n\n\t},\n\n\t// Get point at relative position in curve according to arc length\n\t// - u [0 .. 1]\n\n\tgetPointAt: function ( u, optionalTarget ) {\n\n\t\tvar t = this.getUtoTmapping( u );\n\t\treturn this.getPoint( t, optionalTarget );\n\n\t},\n\n\t// Get sequence of points using getPoint( t )\n\n\tgetPoints: function ( divisions ) {\n\n\t\tif ( divisions === undefined ) divisions = 5;\n\n\t\tvar points = [];\n\n\t\tfor ( var d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPoint( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\t// Get sequence of points using getPointAt( u )\n\n\tgetSpacedPoints: function ( divisions ) {\n\n\t\tif ( divisions === undefined ) divisions = 5;\n\n\t\tvar points = [];\n\n\t\tfor ( var d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPointAt( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\t// Get total curve arc length\n\n\tgetLength: function () {\n\n\t\tvar lengths = this.getLengths();\n\t\treturn lengths[ lengths.length - 1 ];\n\n\t},\n\n\t// Get list of cumulative segment lengths\n\n\tgetLengths: function ( divisions ) {\n\n\t\tif ( divisions === undefined ) divisions = this.arcLengthDivisions;\n\n\t\tif ( this.cacheArcLengths &&\n\t\t\t( this.cacheArcLengths.length === divisions + 1 ) &&\n\t\t\t! this.needsUpdate ) {\n\n\t\t\treturn this.cacheArcLengths;\n\n\t\t}\n\n\t\tthis.needsUpdate = false;\n\n\t\tvar cache = [];\n\t\tvar current, last = this.getPoint( 0 );\n\t\tvar p, sum = 0;\n\n\t\tcache.push( 0 );\n\n\t\tfor ( p = 1; p <= divisions; p ++ ) {\n\n\t\t\tcurrent = this.getPoint( p / divisions );\n\t\t\tsum += current.distanceTo( last );\n\t\t\tcache.push( sum );\n\t\t\tlast = current;\n\n\t\t}\n\n\t\tthis.cacheArcLengths = cache;\n\n\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\n\n\t},\n\n\tupdateArcLengths: function () {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.getLengths();\n\n\t},\n\n\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\tgetUtoTmapping: function ( u, distance ) {\n\n\t\tvar arcLengths = this.getLengths();\n\n\t\tvar i = 0, il = arcLengths.length;\n\n\t\tvar targetArcLength; // The targeted u distance value to get\n\n\t\tif ( distance ) {\n\n\t\t\ttargetArcLength = distance;\n\n\t\t} else {\n\n\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\n\t\t}\n\n\t\t// binary search for the index with largest value smaller than target u distance\n\n\t\tvar low = 0, high = il - 1, comparison;\n\n\t\twhile ( low <= high ) {\n\n\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\n\t\t\tif ( comparison < 0 ) {\n\n\t\t\t\tlow = i + 1;\n\n\t\t\t} else if ( comparison > 0 ) {\n\n\t\t\t\thigh = i - 1;\n\n\t\t\t} else {\n\n\t\t\t\thigh = i;\n\t\t\t\tbreak;\n\n\t\t\t\t// DONE\n\n\t\t\t}\n\n\t\t}\n\n\t\ti = high;\n\n\t\tif ( arcLengths[ i ] === targetArcLength ) {\n\n\t\t\treturn i / ( il - 1 );\n\n\t\t}\n\n\t\t// we could get finer grain at lengths, or use simple interpolation between two points\n\n\t\tvar lengthBefore = arcLengths[ i ];\n\t\tvar lengthAfter = arcLengths[ i + 1 ];\n\n\t\tvar segmentLength = lengthAfter - lengthBefore;\n\n\t\t// determine where we are between the 'before' and 'after' points\n\n\t\tvar segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n\t\t// add that fractional amount to t\n\n\t\tvar t = ( i + segmentFraction ) / ( il - 1 );\n\n\t\treturn t;\n\n\t},\n\n\t// Returns a unit vector tangent at t\n\t// In case any sub curve does not implement its tangent derivation,\n\t// 2 points a small delta apart will be used to find its gradient\n\t// which seems to give a reasonable approximation\n\n\tgetTangent: function ( t ) {\n\n\t\tvar delta = 0.0001;\n\t\tvar t1 = t - delta;\n\t\tvar t2 = t + delta;\n\n\t\t// Capping in case of danger\n\n\t\tif ( t1 < 0 ) t1 = 0;\n\t\tif ( t2 > 1 ) t2 = 1;\n\n\t\tvar pt1 = this.getPoint( t1 );\n\t\tvar pt2 = this.getPoint( t2 );\n\n\t\tvar vec = pt2.clone().sub( pt1 );\n\t\treturn vec.normalize();\n\n\t},\n\n\tgetTangentAt: function ( u ) {\n\n\t\tvar t = this.getUtoTmapping( u );\n\t\treturn this.getTangent( t );\n\n\t},\n\n\tcomputeFrenetFrames: function ( segments, closed ) {\n\n\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\n\t\tvar normal = new Vector3();\n\n\t\tvar tangents = [];\n\t\tvar normals = [];\n\t\tvar binormals = [];\n\n\t\tvar vec = new Vector3();\n\t\tvar mat = new Matrix4();\n\n\t\tvar i, u, theta;\n\n\t\t// compute the tangent vectors for each segment on the curve\n\n\t\tfor ( i = 0; i <= segments; i ++ ) {\n\n\t\t\tu = i / segments;\n\n\t\t\ttangents[ i ] = this.getTangentAt( u );\n\t\t\ttangents[ i ].normalize();\n\n\t\t}\n\n\t\t// select an initial normal vector perpendicular to the first tangent vector,\n\t\t// and in the direction of the minimum tangent xyz component\n\n\t\tnormals[ 0 ] = new Vector3();\n\t\tbinormals[ 0 ] = new Vector3();\n\t\tvar min = Number.MAX_VALUE;\n\t\tvar tx = Math.abs( tangents[ 0 ].x );\n\t\tvar ty = Math.abs( tangents[ 0 ].y );\n\t\tvar tz = Math.abs( tangents[ 0 ].z );\n\n\t\tif ( tx <= min ) {\n\n\t\t\tmin = tx;\n\t\t\tnormal.set( 1, 0, 0 );\n\n\t\t}\n\n\t\tif ( ty <= min ) {\n\n\t\t\tmin = ty;\n\t\t\tnormal.set( 0, 1, 0 );\n\n\t\t}\n\n\t\tif ( tz <= min ) {\n\n\t\t\tnormal.set( 0, 0, 1 );\n\n\t\t}\n\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\n\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\n\n\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\n\n\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\n\n\t\t\tif ( vec.length() > Number.EPSILON ) {\n\n\t\t\t\tvec.normalize();\n\n\t\t\t\ttheta = Math.acos( _Math.clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n\t\t\t}\n\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t}\n\n\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\t\tif ( closed === true ) {\n\n\t\t\ttheta = Math.acos( _Math.clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\n\t\t\ttheta /= segments;\n\n\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\n\n\t\t\t\ttheta = - theta;\n\n\t\t\t}\n\n\t\t\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\t\t\t// twist a little...\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\ttangents: tangents,\n\t\t\tnormals: normals,\n\t\t\tbinormals: binormals\n\t\t};\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.arcLengthDivisions = source.arcLengthDivisions;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Curve',\n\t\t\t\tgenerator: 'Curve.toJSON'\n\t\t\t}\n\t\t};\n\n\t\tdata.arcLengthDivisions = this.arcLengthDivisions;\n\t\tdata.type = this.type;\n\n\t\treturn data;\n\n\t},\n\n\tfromJSON: function ( json ) {\n\n\t\tthis.arcLengthDivisions = json.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n} );\n\nfunction EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'EllipseCurve';\n\n\tthis.aX = aX || 0;\n\tthis.aY = aY || 0;\n\n\tthis.xRadius = xRadius || 1;\n\tthis.yRadius = yRadius || 1;\n\n\tthis.aStartAngle = aStartAngle || 0;\n\tthis.aEndAngle = aEndAngle || 2 * Math.PI;\n\n\tthis.aClockwise = aClockwise || false;\n\n\tthis.aRotation = aRotation || 0;\n\n}\n\nEllipseCurve.prototype = Object.create( Curve.prototype );\nEllipseCurve.prototype.constructor = EllipseCurve;\n\nEllipseCurve.prototype.isEllipseCurve = true;\n\nEllipseCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tvar twoPi = Math.PI * 2;\n\tvar deltaAngle = this.aEndAngle - this.aStartAngle;\n\tvar samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n\n\t// ensures that deltaAngle is 0 .. 2 PI\n\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\n\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\n\n\tif ( deltaAngle < Number.EPSILON ) {\n\n\t\tif ( samePoints ) {\n\n\t\t\tdeltaAngle = 0;\n\n\t\t} else {\n\n\t\t\tdeltaAngle = twoPi;\n\n\t\t}\n\n\t}\n\n\tif ( this.aClockwise === true && ! samePoints ) {\n\n\t\tif ( deltaAngle === twoPi ) {\n\n\t\t\tdeltaAngle = - twoPi;\n\n\t\t} else {\n\n\t\t\tdeltaAngle = deltaAngle - twoPi;\n\n\t\t}\n\n\t}\n\n\tvar angle = this.aStartAngle + t * deltaAngle;\n\tvar x = this.aX + this.xRadius * Math.cos( angle );\n\tvar y = this.aY + this.yRadius * Math.sin( angle );\n\n\tif ( this.aRotation !== 0 ) {\n\n\t\tvar cos = Math.cos( this.aRotation );\n\t\tvar sin = Math.sin( this.aRotation );\n\n\t\tvar tx = x - this.aX;\n\t\tvar ty = y - this.aY;\n\n\t\t// Rotate the point about the center of the ellipse.\n\t\tx = tx * cos - ty * sin + this.aX;\n\t\ty = tx * sin + ty * cos + this.aY;\n\n\t}\n\n\treturn point.set( x, y );\n\n};\n\nEllipseCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.aX = source.aX;\n\tthis.aY = source.aY;\n\n\tthis.xRadius = source.xRadius;\n\tthis.yRadius = source.yRadius;\n\n\tthis.aStartAngle = source.aStartAngle;\n\tthis.aEndAngle = source.aEndAngle;\n\n\tthis.aClockwise = source.aClockwise;\n\n\tthis.aRotation = source.aRotation;\n\n\treturn this;\n\n};\n\n\nEllipseCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.aX = this.aX;\n\tdata.aY = this.aY;\n\n\tdata.xRadius = this.xRadius;\n\tdata.yRadius = this.yRadius;\n\n\tdata.aStartAngle = this.aStartAngle;\n\tdata.aEndAngle = this.aEndAngle;\n\n\tdata.aClockwise = this.aClockwise;\n\n\tdata.aRotation = this.aRotation;\n\n\treturn data;\n\n};\n\nEllipseCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.aX = json.aX;\n\tthis.aY = json.aY;\n\n\tthis.xRadius = json.xRadius;\n\tthis.yRadius = json.yRadius;\n\n\tthis.aStartAngle = json.aStartAngle;\n\tthis.aEndAngle = json.aEndAngle;\n\n\tthis.aClockwise = json.aClockwise;\n\n\tthis.aRotation = json.aRotation;\n\n\treturn this;\n\n};\n\nfunction ArcCurve( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\tEllipseCurve.call( this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\tthis.type = 'ArcCurve';\n\n}\n\nArcCurve.prototype = Object.create( EllipseCurve.prototype );\nArcCurve.prototype.constructor = ArcCurve;\n\nArcCurve.prototype.isArcCurve = true;\n\n/**\n * @author zz85 https://github.com/zz85\n *\n * Centripetal CatmullRom Curve - which is useful for avoiding\n * cusps and self-intersections in non-uniform catmull rom curves.\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n *\n * curve.type accepts centripetal(default), chordal and catmullrom\n * curve.tension is used for catmullrom which defaults to 0.5\n */\n\n\n/*\nBased on an optimized c++ solution in\n - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n - http://ideone.com/NoEbVM\n\nThis CubicPoly class could be used for reusing some variables and calculations,\nbut for three.js curve use, it could be possible inlined and flatten into a single function call\nwhich can be placed in CurveUtils.\n*/\n\nfunction CubicPoly() {\n\n\tvar c0 = 0, c1 = 0, c2 = 0, c3 = 0;\n\n\t/*\n\t * Compute coefficients for a cubic polynomial\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t * such that\n\t *   p(0) = x0, p(1) = x1\n\t *  and\n\t *   p'(0) = t0, p'(1) = t1.\n\t */\n\tfunction init( x0, x1, t0, t1 ) {\n\n\t\tc0 = x0;\n\t\tc1 = t0;\n\t\tc2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\n\n\t}\n\n\treturn {\n\n\t\tinitCatmullRom: function ( x0, x1, x2, x3, tension ) {\n\n\t\t\tinit( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n\n\t\t},\n\n\t\tinitNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n\n\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\tvar t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n\t\t\tvar t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n\n\t\t\t// rescale tangents for parametrization in [0,1]\n\t\t\tt1 *= dt1;\n\t\t\tt2 *= dt1;\n\n\t\t\tinit( x1, x2, t1, t2 );\n\n\t\t},\n\n\t\tcalc: function ( t ) {\n\n\t\t\tvar t2 = t * t;\n\t\t\tvar t3 = t2 * t;\n\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\n\n\t\t}\n\n\t};\n\n}\n\n//\n\nvar tmp = new Vector3();\nvar px = new CubicPoly(), py = new CubicPoly(), pz = new CubicPoly();\n\nfunction CatmullRomCurve3( points, closed, curveType, tension ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'CatmullRomCurve3';\n\n\tthis.points = points || [];\n\tthis.closed = closed || false;\n\tthis.curveType = curveType || 'centripetal';\n\tthis.tension = tension || 0.5;\n\n}\n\nCatmullRomCurve3.prototype = Object.create( Curve.prototype );\nCatmullRomCurve3.prototype.constructor = CatmullRomCurve3;\n\nCatmullRomCurve3.prototype.isCatmullRomCurve3 = true;\n\nCatmullRomCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector3();\n\n\tvar points = this.points;\n\tvar l = points.length;\n\n\tvar p = ( l - ( this.closed ? 0 : 1 ) ) * t;\n\tvar intPoint = Math.floor( p );\n\tvar weight = p - intPoint;\n\n\tif ( this.closed ) {\n\n\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / l ) + 1 ) * l;\n\n\t} else if ( weight === 0 && intPoint === l - 1 ) {\n\n\t\tintPoint = l - 2;\n\t\tweight = 1;\n\n\t}\n\n\tvar p0, p1, p2, p3; // 4 points\n\n\tif ( this.closed || intPoint > 0 ) {\n\n\t\tp0 = points[ ( intPoint - 1 ) % l ];\n\n\t} else {\n\n\t\t// extrapolate first point\n\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n\t\tp0 = tmp;\n\n\t}\n\n\tp1 = points[ intPoint % l ];\n\tp2 = points[ ( intPoint + 1 ) % l ];\n\n\tif ( this.closed || intPoint + 2 < l ) {\n\n\t\tp3 = points[ ( intPoint + 2 ) % l ];\n\n\t} else {\n\n\t\t// extrapolate last point\n\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n\t\tp3 = tmp;\n\n\t}\n\n\tif ( this.curveType === 'centripetal' || this.curveType === 'chordal' ) {\n\n\t\t// init Centripetal / Chordal Catmull-Rom\n\t\tvar pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n\t\tvar dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n\t\tvar dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n\t\tvar dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n\n\t\t// safety check for repeated points\n\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\n\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\n\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\n\n\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n\n\t} else if ( this.curveType === 'catmullrom' ) {\n\n\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, this.tension );\n\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, this.tension );\n\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, this.tension );\n\n\t}\n\n\tpoint.set(\n\t\tpx.calc( weight ),\n\t\tpy.calc( weight ),\n\t\tpz.calc( weight )\n\t);\n\n\treturn point;\n\n};\n\nCatmullRomCurve3.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.points = [];\n\n\tfor ( var i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\tvar point = source.points[ i ];\n\n\t\tthis.points.push( point.clone() );\n\n\t}\n\n\tthis.closed = source.closed;\n\tthis.curveType = source.curveType;\n\tthis.tension = source.tension;\n\n\treturn this;\n\n};\n\nCatmullRomCurve3.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.points = [];\n\n\tfor ( var i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\tvar point = this.points[ i ];\n\t\tdata.points.push( point.toArray() );\n\n\t}\n\n\tdata.closed = this.closed;\n\tdata.curveType = this.curveType;\n\tdata.tension = this.tension;\n\n\treturn data;\n\n};\n\nCatmullRomCurve3.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.points = [];\n\n\tfor ( var i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\tvar point = json.points[ i ];\n\t\tthis.points.push( new Vector3().fromArray( point ) );\n\n\t}\n\n\tthis.closed = json.closed;\n\tthis.curveType = json.curveType;\n\tthis.tension = json.tension;\n\n\treturn this;\n\n};\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n *\n * Bezier Curves formulas obtained from\n * http://en.wikipedia.org/wiki/Bézier_curve\n */\n\nfunction CatmullRom( t, p0, p1, p2, p3 ) {\n\n\tvar v0 = ( p2 - p0 ) * 0.5;\n\tvar v1 = ( p3 - p1 ) * 0.5;\n\tvar t2 = t * t;\n\tvar t3 = t * t2;\n\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n}\n\n//\n\nfunction QuadraticBezierP0( t, p ) {\n\n\tvar k = 1 - t;\n\treturn k * k * p;\n\n}\n\nfunction QuadraticBezierP1( t, p ) {\n\n\treturn 2 * ( 1 - t ) * t * p;\n\n}\n\nfunction QuadraticBezierP2( t, p ) {\n\n\treturn t * t * p;\n\n}\n\nfunction QuadraticBezier( t, p0, p1, p2 ) {\n\n\treturn QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\n\t\tQuadraticBezierP2( t, p2 );\n\n}\n\n//\n\nfunction CubicBezierP0( t, p ) {\n\n\tvar k = 1 - t;\n\treturn k * k * k * p;\n\n}\n\nfunction CubicBezierP1( t, p ) {\n\n\tvar k = 1 - t;\n\treturn 3 * k * k * t * p;\n\n}\n\nfunction CubicBezierP2( t, p ) {\n\n\treturn 3 * ( 1 - t ) * t * t * p;\n\n}\n\nfunction CubicBezierP3( t, p ) {\n\n\treturn t * t * t * p;\n\n}\n\nfunction CubicBezier( t, p0, p1, p2, p3 ) {\n\n\treturn CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\n\t\tCubicBezierP3( t, p3 );\n\n}\n\nfunction CubicBezierCurve( v0, v1, v2, v3 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'CubicBezierCurve';\n\n\tthis.v0 = v0 || new Vector2();\n\tthis.v1 = v1 || new Vector2();\n\tthis.v2 = v2 || new Vector2();\n\tthis.v3 = v3 || new Vector2();\n\n}\n\nCubicBezierCurve.prototype = Object.create( Curve.prototype );\nCubicBezierCurve.prototype.constructor = CubicBezierCurve;\n\nCubicBezierCurve.prototype.isCubicBezierCurve = true;\n\nCubicBezierCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\tpoint.set(\n\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y )\n\t);\n\n\treturn point;\n\n};\n\nCubicBezierCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v0.copy( source.v0 );\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\tthis.v3.copy( source.v3 );\n\n\treturn this;\n\n};\n\nCubicBezierCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v0 = this.v0.toArray();\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\tdata.v3 = this.v3.toArray();\n\n\treturn data;\n\n};\n\nCubicBezierCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v0.fromArray( json.v0 );\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\tthis.v3.fromArray( json.v3 );\n\n\treturn this;\n\n};\n\nfunction CubicBezierCurve3( v0, v1, v2, v3 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'CubicBezierCurve3';\n\n\tthis.v0 = v0 || new Vector3();\n\tthis.v1 = v1 || new Vector3();\n\tthis.v2 = v2 || new Vector3();\n\tthis.v3 = v3 || new Vector3();\n\n}\n\nCubicBezierCurve3.prototype = Object.create( Curve.prototype );\nCubicBezierCurve3.prototype.constructor = CubicBezierCurve3;\n\nCubicBezierCurve3.prototype.isCubicBezierCurve3 = true;\n\nCubicBezierCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector3();\n\n\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\tpoint.set(\n\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\n\t\tCubicBezier( t, v0.z, v1.z, v2.z, v3.z )\n\t);\n\n\treturn point;\n\n};\n\nCubicBezierCurve3.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v0.copy( source.v0 );\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\tthis.v3.copy( source.v3 );\n\n\treturn this;\n\n};\n\nCubicBezierCurve3.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v0 = this.v0.toArray();\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\tdata.v3 = this.v3.toArray();\n\n\treturn data;\n\n};\n\nCubicBezierCurve3.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v0.fromArray( json.v0 );\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\tthis.v3.fromArray( json.v3 );\n\n\treturn this;\n\n};\n\nfunction LineCurve( v1, v2 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'LineCurve';\n\n\tthis.v1 = v1 || new Vector2();\n\tthis.v2 = v2 || new Vector2();\n\n}\n\nLineCurve.prototype = Object.create( Curve.prototype );\nLineCurve.prototype.constructor = LineCurve;\n\nLineCurve.prototype.isLineCurve = true;\n\nLineCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tif ( t === 1 ) {\n\n\t\tpoint.copy( this.v2 );\n\n\t} else {\n\n\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t}\n\n\treturn point;\n\n};\n\n// Line curve is linear, so we can overwrite default getPointAt\n\nLineCurve.prototype.getPointAt = function ( u, optionalTarget ) {\n\n\treturn this.getPoint( u, optionalTarget );\n\n};\n\nLineCurve.prototype.getTangent = function ( /* t */ ) {\n\n\tvar tangent = this.v2.clone().sub( this.v1 );\n\n\treturn tangent.normalize();\n\n};\n\nLineCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\n\treturn this;\n\n};\n\nLineCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\n\treturn data;\n\n};\n\nLineCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\n\treturn this;\n\n};\n\nfunction LineCurve3( v1, v2 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'LineCurve3';\n\n\tthis.v1 = v1 || new Vector3();\n\tthis.v2 = v2 || new Vector3();\n\n}\n\nLineCurve3.prototype = Object.create( Curve.prototype );\nLineCurve3.prototype.constructor = LineCurve3;\n\nLineCurve3.prototype.isLineCurve3 = true;\n\nLineCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector3();\n\n\tif ( t === 1 ) {\n\n\t\tpoint.copy( this.v2 );\n\n\t} else {\n\n\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t}\n\n\treturn point;\n\n};\n\n// Line curve is linear, so we can overwrite default getPointAt\n\nLineCurve3.prototype.getPointAt = function ( u, optionalTarget ) {\n\n\treturn this.getPoint( u, optionalTarget );\n\n};\n\nLineCurve3.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\n\treturn this;\n\n};\n\nLineCurve3.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\n\treturn data;\n\n};\n\nLineCurve3.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\n\treturn this;\n\n};\n\nfunction QuadraticBezierCurve( v0, v1, v2 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'QuadraticBezierCurve';\n\n\tthis.v0 = v0 || new Vector2();\n\tthis.v1 = v1 || new Vector2();\n\tthis.v2 = v2 || new Vector2();\n\n}\n\nQuadraticBezierCurve.prototype = Object.create( Curve.prototype );\nQuadraticBezierCurve.prototype.constructor = QuadraticBezierCurve;\n\nQuadraticBezierCurve.prototype.isQuadraticBezierCurve = true;\n\nQuadraticBezierCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\tpoint.set(\n\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\tQuadraticBezier( t, v0.y, v1.y, v2.y )\n\t);\n\n\treturn point;\n\n};\n\nQuadraticBezierCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v0.copy( source.v0 );\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\n\treturn this;\n\n};\n\nQuadraticBezierCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v0 = this.v0.toArray();\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\n\treturn data;\n\n};\n\nQuadraticBezierCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v0.fromArray( json.v0 );\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\n\treturn this;\n\n};\n\nfunction QuadraticBezierCurve3( v0, v1, v2 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'QuadraticBezierCurve3';\n\n\tthis.v0 = v0 || new Vector3();\n\tthis.v1 = v1 || new Vector3();\n\tthis.v2 = v2 || new Vector3();\n\n}\n\nQuadraticBezierCurve3.prototype = Object.create( Curve.prototype );\nQuadraticBezierCurve3.prototype.constructor = QuadraticBezierCurve3;\n\nQuadraticBezierCurve3.prototype.isQuadraticBezierCurve3 = true;\n\nQuadraticBezierCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector3();\n\n\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\tpoint.set(\n\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\tQuadraticBezier( t, v0.y, v1.y, v2.y ),\n\t\tQuadraticBezier( t, v0.z, v1.z, v2.z )\n\t);\n\n\treturn point;\n\n};\n\nQuadraticBezierCurve3.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v0.copy( source.v0 );\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\n\treturn this;\n\n};\n\nQuadraticBezierCurve3.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v0 = this.v0.toArray();\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\n\treturn data;\n\n};\n\nQuadraticBezierCurve3.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v0.fromArray( json.v0 );\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\n\treturn this;\n\n};\n\nfunction SplineCurve( points /* array of Vector2 */ ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'SplineCurve';\n\n\tthis.points = points || [];\n\n}\n\nSplineCurve.prototype = Object.create( Curve.prototype );\nSplineCurve.prototype.constructor = SplineCurve;\n\nSplineCurve.prototype.isSplineCurve = true;\n\nSplineCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tvar points = this.points;\n\tvar p = ( points.length - 1 ) * t;\n\n\tvar intPoint = Math.floor( p );\n\tvar weight = p - intPoint;\n\n\tvar p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\tvar p1 = points[ intPoint ];\n\tvar p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\tvar p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\tpoint.set(\n\t\tCatmullRom( weight, p0.x, p1.x, p2.x, p3.x ),\n\t\tCatmullRom( weight, p0.y, p1.y, p2.y, p3.y )\n\t);\n\n\treturn point;\n\n};\n\nSplineCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.points = [];\n\n\tfor ( var i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\tvar point = source.points[ i ];\n\n\t\tthis.points.push( point.clone() );\n\n\t}\n\n\treturn this;\n\n};\n\nSplineCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.points = [];\n\n\tfor ( var i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\tvar point = this.points[ i ];\n\t\tdata.points.push( point.toArray() );\n\n\t}\n\n\treturn data;\n\n};\n\nSplineCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.points = [];\n\n\tfor ( var i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\tvar point = json.points[ i ];\n\t\tthis.points.push( new Vector2().fromArray( point ) );\n\n\t}\n\n\treturn this;\n\n};\n\n\n\nvar Curves = /*#__PURE__*/Object.freeze({\n\tArcCurve: ArcCurve,\n\tCatmullRomCurve3: CatmullRomCurve3,\n\tCubicBezierCurve: CubicBezierCurve,\n\tCubicBezierCurve3: CubicBezierCurve3,\n\tEllipseCurve: EllipseCurve,\n\tLineCurve: LineCurve,\n\tLineCurve3: LineCurve3,\n\tQuadraticBezierCurve: QuadraticBezierCurve,\n\tQuadraticBezierCurve3: QuadraticBezierCurve3,\n\tSplineCurve: SplineCurve\n});\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n *\n **/\n\n/**************************************************************\n *\tCurved Path - a curve path is simply a array of connected\n *  curves, but retains the api of a curve\n **************************************************************/\n\nfunction CurvePath() {\n\n\tCurve.call( this );\n\n\tthis.type = 'CurvePath';\n\n\tthis.curves = [];\n\tthis.autoClose = false; // Automatically closes the path\n\n}\n\nCurvePath.prototype = Object.assign( Object.create( Curve.prototype ), {\n\n\tconstructor: CurvePath,\n\n\tadd: function ( curve ) {\n\n\t\tthis.curves.push( curve );\n\n\t},\n\n\tclosePath: function () {\n\n\t\t// Add a line curve if start and end of lines are not connected\n\t\tvar startPoint = this.curves[ 0 ].getPoint( 0 );\n\t\tvar endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n\n\t\tif ( ! startPoint.equals( endPoint ) ) {\n\n\t\t\tthis.curves.push( new LineCurve( endPoint, startPoint ) );\n\n\t\t}\n\n\t},\n\n\t// To get accurate point with reference to\n\t// entire path distance at time t,\n\t// following has to be done:\n\n\t// 1. Length of each sub path have to be known\n\t// 2. Locate and identify type of curve\n\t// 3. Get t for the curve\n\t// 4. Return curve.getPointAt(t')\n\n\tgetPoint: function ( t ) {\n\n\t\tvar d = t * this.getLength();\n\t\tvar curveLengths = this.getCurveLengths();\n\t\tvar i = 0;\n\n\t\t// To think about boundaries points.\n\n\t\twhile ( i < curveLengths.length ) {\n\n\t\t\tif ( curveLengths[ i ] >= d ) {\n\n\t\t\t\tvar diff = curveLengths[ i ] - d;\n\t\t\t\tvar curve = this.curves[ i ];\n\n\t\t\t\tvar segmentLength = curve.getLength();\n\t\t\t\tvar u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\n\t\t\t\treturn curve.getPointAt( u );\n\n\t\t\t}\n\n\t\t\ti ++;\n\n\t\t}\n\n\t\treturn null;\n\n\t\t// loop where sum != 0, sum > d , sum+1 <d\n\n\t},\n\n\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t// getPoint() depends on getLength\n\n\tgetLength: function () {\n\n\t\tvar lens = this.getCurveLengths();\n\t\treturn lens[ lens.length - 1 ];\n\n\t},\n\n\t// cacheLengths must be recalculated.\n\tupdateArcLengths: function () {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.cacheLengths = null;\n\t\tthis.getCurveLengths();\n\n\t},\n\n\t// Compute lengths and cache them\n\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\tgetCurveLengths: function () {\n\n\t\t// We use cache values if curves and cache array are same length\n\n\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n\n\t\t\treturn this.cacheLengths;\n\n\t\t}\n\n\t\t// Get length of sub-curve\n\t\t// Push sums into cached array\n\n\t\tvar lengths = [], sums = 0;\n\n\t\tfor ( var i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tsums += this.curves[ i ].getLength();\n\t\t\tlengths.push( sums );\n\n\t\t}\n\n\t\tthis.cacheLengths = lengths;\n\n\t\treturn lengths;\n\n\t},\n\n\tgetSpacedPoints: function ( divisions ) {\n\n\t\tif ( divisions === undefined ) divisions = 40;\n\n\t\tvar points = [];\n\n\t\tfor ( var i = 0; i <= divisions; i ++ ) {\n\n\t\t\tpoints.push( this.getPoint( i / divisions ) );\n\n\t\t}\n\n\t\tif ( this.autoClose ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\tgetPoints: function ( divisions ) {\n\n\t\tdivisions = divisions || 12;\n\n\t\tvar points = [], last;\n\n\t\tfor ( var i = 0, curves = this.curves; i < curves.length; i ++ ) {\n\n\t\t\tvar curve = curves[ i ];\n\t\t\tvar resolution = ( curve && curve.isEllipseCurve ) ? divisions * 2\n\t\t\t\t: ( curve && ( curve.isLineCurve || curve.isLineCurve3 ) ) ? 1\n\t\t\t\t\t: ( curve && curve.isSplineCurve ) ? divisions * curve.points.length\n\t\t\t\t\t\t: divisions;\n\n\t\t\tvar pts = curve.getPoints( resolution );\n\n\t\t\tfor ( var j = 0; j < pts.length; j ++ ) {\n\n\t\t\t\tvar point = pts[ j ];\n\n\t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\n\n\t\t\t\tpoints.push( point );\n\t\t\t\tlast = point;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.autoClose && points.length > 1 && ! points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tCurve.prototype.copy.call( this, source );\n\n\t\tthis.curves = [];\n\n\t\tfor ( var i = 0, l = source.curves.length; i < l; i ++ ) {\n\n\t\t\tvar curve = source.curves[ i ];\n\n\t\t\tthis.curves.push( curve.clone() );\n\n\t\t}\n\n\t\tthis.autoClose = source.autoClose;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = Curve.prototype.toJSON.call( this );\n\n\t\tdata.autoClose = this.autoClose;\n\t\tdata.curves = [];\n\n\t\tfor ( var i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tvar curve = this.curves[ i ];\n\t\t\tdata.curves.push( curve.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tfromJSON: function ( json ) {\n\n\t\tCurve.prototype.fromJSON.call( this, json );\n\n\t\tthis.autoClose = json.autoClose;\n\t\tthis.curves = [];\n\n\t\tfor ( var i = 0, l = json.curves.length; i < l; i ++ ) {\n\n\t\t\tvar curve = json.curves[ i ];\n\t\t\tthis.curves.push( new Curves[ curve.type ]().fromJSON( curve ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * Creates free form 2d path using series of points, lines or curves.\n **/\n\nfunction Path( points ) {\n\n\tCurvePath.call( this );\n\n\tthis.type = 'Path';\n\n\tthis.currentPoint = new Vector2();\n\n\tif ( points ) {\n\n\t\tthis.setFromPoints( points );\n\n\t}\n\n}\n\nPath.prototype = Object.assign( Object.create( CurvePath.prototype ), {\n\n\tconstructor: Path,\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.moveTo( points[ 0 ].x, points[ 0 ].y );\n\n\t\tfor ( var i = 1, l = points.length; i < l; i ++ ) {\n\n\t\t\tthis.lineTo( points[ i ].x, points[ i ].y );\n\n\t\t}\n\n\t},\n\n\tmoveTo: function ( x, y ) {\n\n\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n\n\t},\n\n\tlineTo: function ( x, y ) {\n\n\t\tvar curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( x, y );\n\n\t},\n\n\tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\n\n\t\tvar curve = new QuadraticBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCPx, aCPy ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t},\n\n\tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tvar curve = new CubicBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCP1x, aCP1y ),\n\t\t\tnew Vector2( aCP2x, aCP2y ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t},\n\n\tsplineThru: function ( pts /*Array of Vector*/ ) {\n\n\t\tvar npts = [ this.currentPoint.clone() ].concat( pts );\n\n\t\tvar curve = new SplineCurve( npts );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\n\n\t},\n\n\tarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tvar x0 = this.currentPoint.x;\n\t\tvar y0 = this.currentPoint.y;\n\n\t\tthis.absarc( aX + x0, aY + y0, aRadius,\n\t\t\taStartAngle, aEndAngle, aClockwise );\n\n\t},\n\n\tabsarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t},\n\n\tellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tvar x0 = this.currentPoint.x;\n\t\tvar y0 = this.currentPoint.y;\n\n\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t},\n\n\tabsellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tvar curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\tif ( this.curves.length > 0 ) {\n\n\t\t\t// if a previous curve is present, attempt to join\n\t\t\tvar firstPoint = curve.getPoint( 0 );\n\n\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\n\n\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.curves.push( curve );\n\n\t\tvar lastPoint = curve.getPoint( 1 );\n\t\tthis.currentPoint.copy( lastPoint );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tCurvePath.prototype.copy.call( this, source );\n\n\t\tthis.currentPoint.copy( source.currentPoint );\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = CurvePath.prototype.toJSON.call( this );\n\n\t\tdata.currentPoint = this.currentPoint.toArray();\n\n\t\treturn data;\n\n\t},\n\n\tfromJSON: function ( json ) {\n\n\t\tCurvePath.prototype.fromJSON.call( this, json );\n\n\t\tthis.currentPoint.fromArray( json.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * Defines a 2d shape plane using paths.\n **/\n\n// STEP 1 Create a path.\n// STEP 2 Turn path into shape.\n// STEP 3 ExtrudeGeometry takes in Shape/Shapes\n// STEP 3a - Extract points from each shape, turn to vertices\n// STEP 3b - Triangulate each shape, add faces.\n\nfunction Shape( points ) {\n\n\tPath.call( this, points );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.type = 'Shape';\n\n\tthis.holes = [];\n\n}\n\nShape.prototype = Object.assign( Object.create( Path.prototype ), {\n\n\tconstructor: Shape,\n\n\tgetPointsHoles: function ( divisions ) {\n\n\t\tvar holesPts = [];\n\n\t\tfor ( var i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\n\t\t}\n\n\t\treturn holesPts;\n\n\t},\n\n\t// get points of shape and holes (keypoints based on segments parameter)\n\n\textractPoints: function ( divisions ) {\n\n\t\treturn {\n\n\t\t\tshape: this.getPoints( divisions ),\n\t\t\tholes: this.getPointsHoles( divisions )\n\n\t\t};\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tPath.prototype.copy.call( this, source );\n\n\t\tthis.holes = [];\n\n\t\tfor ( var i = 0, l = source.holes.length; i < l; i ++ ) {\n\n\t\t\tvar hole = source.holes[ i ];\n\n\t\t\tthis.holes.push( hole.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = Path.prototype.toJSON.call( this );\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.holes = [];\n\n\t\tfor ( var i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tvar hole = this.holes[ i ];\n\t\t\tdata.holes.push( hole.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tfromJSON: function ( json ) {\n\n\t\tPath.prototype.fromJSON.call( this, json );\n\n\t\tthis.uuid = json.uuid;\n\t\tthis.holes = [];\n\n\t\tfor ( var i = 0, l = json.holes.length; i < l; i ++ ) {\n\n\t\t\tvar hole = json.holes[ i ];\n\t\t\tthis.holes.push( new Path().fromJSON( hole ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Light( color, intensity ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Light';\n\n\tthis.color = new Color( color );\n\tthis.intensity = intensity !== undefined ? intensity : 1;\n\n\tthis.receiveShadow = undefined;\n\n}\n\nLight.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Light,\n\n\tisLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.intensity = source.intensity;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.color = this.color.getHex();\n\t\tdata.object.intensity = this.intensity;\n\n\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\n\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\n\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction HemisphereLight( skyColor, groundColor, intensity ) {\n\n\tLight.call( this, skyColor, intensity );\n\n\tthis.type = 'HemisphereLight';\n\n\tthis.castShadow = undefined;\n\n\tthis.position.copy( Object3D.DefaultUp );\n\tthis.updateMatrix();\n\n\tthis.groundColor = new Color( groundColor );\n\n}\n\nHemisphereLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: HemisphereLight,\n\n\tisHemisphereLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.groundColor.copy( source.groundColor );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LightShadow( camera ) {\n\n\tthis.camera = camera;\n\n\tthis.bias = 0;\n\tthis.radius = 1;\n\n\tthis.mapSize = new Vector2( 512, 512 );\n\n\tthis.map = null;\n\tthis.matrix = new Matrix4();\n\n}\n\nObject.assign( LightShadow.prototype, {\n\n\tcopy: function ( source ) {\n\n\t\tthis.camera = source.camera.clone();\n\n\t\tthis.bias = source.bias;\n\t\tthis.radius = source.radius;\n\n\t\tthis.mapSize.copy( source.mapSize );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar object = {};\n\n\t\tif ( this.bias !== 0 ) object.bias = this.bias;\n\t\tif ( this.radius !== 1 ) object.radius = this.radius;\n\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n\n\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\tdelete object.camera.matrix;\n\n\t\treturn object;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction SpotLightShadow() {\n\n\tLightShadow.call( this, new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n}\n\nSpotLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\n\n\tconstructor: SpotLightShadow,\n\n\tisSpotLightShadow: true,\n\n\tupdate: function ( light ) {\n\n\t\tvar camera = this.camera;\n\n\t\tvar fov = _Math.RAD2DEG * 2 * light.angle;\n\t\tvar aspect = this.mapSize.width / this.mapSize.height;\n\t\tvar far = light.distance || camera.far;\n\n\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\tcamera.fov = fov;\n\t\t\tcamera.aspect = aspect;\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction SpotLight( color, intensity, distance, angle, penumbra, decay ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'SpotLight';\n\n\tthis.position.copy( Object3D.DefaultUp );\n\tthis.updateMatrix();\n\n\tthis.target = new Object3D();\n\n\tObject.defineProperty( this, 'power', {\n\t\tget: function () {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\treturn this.intensity * Math.PI;\n\n\t\t},\n\t\tset: function ( power ) {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\tthis.intensity = power / Math.PI;\n\n\t\t}\n\t} );\n\n\tthis.distance = ( distance !== undefined ) ? distance : 0;\n\tthis.angle = ( angle !== undefined ) ? angle : Math.PI / 3;\n\tthis.penumbra = ( penumbra !== undefined ) ? penumbra : 0;\n\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\n\n\tthis.shadow = new SpotLightShadow();\n\n}\n\nSpotLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: SpotLight,\n\n\tisSpotLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.distance = source.distance;\n\t\tthis.angle = source.angle;\n\t\tthis.penumbra = source.penumbra;\n\t\tthis.decay = source.decay;\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction PointLight( color, intensity, distance, decay ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'PointLight';\n\n\tObject.defineProperty( this, 'power', {\n\t\tget: function () {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\treturn this.intensity * 4 * Math.PI;\n\n\t\t},\n\t\tset: function ( power ) {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\tthis.intensity = power / ( 4 * Math.PI );\n\n\t\t}\n\t} );\n\n\tthis.distance = ( distance !== undefined ) ? distance : 0;\n\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\n\n\tthis.shadow = new LightShadow( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n}\n\nPointLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: PointLight,\n\n\tisPointLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.distance = source.distance;\n\t\tthis.decay = source.decay;\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author arose / http://github.com/arose\n */\n\nfunction OrthographicCamera( left, right, top, bottom, near, far ) {\n\n\tCamera.call( this );\n\n\tthis.type = 'OrthographicCamera';\n\n\tthis.zoom = 1;\n\tthis.view = null;\n\n\tthis.left = ( left !== undefined ) ? left : - 1;\n\tthis.right = ( right !== undefined ) ? right : 1;\n\tthis.top = ( top !== undefined ) ? top : 1;\n\tthis.bottom = ( bottom !== undefined ) ? bottom : - 1;\n\n\tthis.near = ( near !== undefined ) ? near : 0.1;\n\tthis.far = ( far !== undefined ) ? far : 2000;\n\n\tthis.updateProjectionMatrix();\n\n}\n\nOrthographicCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\n\n\tconstructor: OrthographicCamera,\n\n\tisOrthographicCamera: true,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tCamera.prototype.copy.call( this, source, recursive );\n\n\t\tthis.left = source.left;\n\t\tthis.right = source.right;\n\t\tthis.top = source.top;\n\t\tthis.bottom = source.bottom;\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\n\t\tthis.zoom = source.zoom;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\treturn this;\n\n\t},\n\n\tsetViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tclearViewOffset: function () {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tupdateProjectionMatrix: function () {\n\n\t\tvar dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\tvar dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\tvar cx = ( this.right + this.left ) / 2;\n\t\tvar cy = ( this.top + this.bottom ) / 2;\n\n\t\tvar left = cx - dx;\n\t\tvar right = cx + dx;\n\t\tvar top = cy + dy;\n\t\tvar bottom = cy - dy;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tvar zoomW = this.zoom / ( this.view.width / this.view.fullWidth );\n\t\t\tvar zoomH = this.zoom / ( this.view.height / this.view.fullHeight );\n\t\t\tvar scaleW = ( this.right - this.left ) / this.view.width;\n\t\t\tvar scaleH = ( this.top - this.bottom ) / this.view.height;\n\n\t\t\tleft += scaleW * ( this.view.offsetX / zoomW );\n\t\t\tright = left + scaleW * ( this.view.width / zoomW );\n\t\t\ttop -= scaleH * ( this.view.offsetY / zoomH );\n\t\t\tbottom = top - scaleH * ( this.view.height / zoomH );\n\n\t\t}\n\n\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far );\n\n\t\tthis.projectionMatrixInverse.getInverse( this.projectionMatrix );\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.zoom = this.zoom;\n\t\tdata.object.left = this.left;\n\t\tdata.object.right = this.right;\n\t\tdata.object.top = this.top;\n\t\tdata.object.bottom = this.bottom;\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction DirectionalLightShadow( ) {\n\n\tLightShadow.call( this, new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n}\n\nDirectionalLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\n\n\tconstructor: DirectionalLightShadow\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction DirectionalLight( color, intensity ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'DirectionalLight';\n\n\tthis.position.copy( Object3D.DefaultUp );\n\tthis.updateMatrix();\n\n\tthis.target = new Object3D();\n\n\tthis.shadow = new DirectionalLightShadow();\n\n}\n\nDirectionalLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: DirectionalLight,\n\n\tisDirectionalLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AmbientLight( color, intensity ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'AmbientLight';\n\n\tthis.castShadow = undefined;\n\n}\n\nAmbientLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: AmbientLight,\n\n\tisAmbientLight: true\n\n} );\n\n/**\n * @author abelnation / http://github.com/abelnation\n */\n\nfunction RectAreaLight( color, intensity, width, height ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'RectAreaLight';\n\n\tthis.width = ( width !== undefined ) ? width : 10;\n\tthis.height = ( height !== undefined ) ? height : 10;\n\n}\n\nRectAreaLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: RectAreaLight,\n\n\tisRectAreaLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Light.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.width = this.width;\n\t\tdata.object.height = this.height;\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction MaterialLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\tthis.textures = {};\n\n}\n\nObject.assign( MaterialLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tparse: function ( json ) {\n\n\t\tvar textures = this.textures;\n\n\t\tfunction getTexture( name ) {\n\n\t\t\tif ( textures[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\n\t\t\t}\n\n\t\t\treturn textures[ name ];\n\n\t\t}\n\n\t\tvar material = new Materials[ json.type ]();\n\n\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\n\t\tif ( json.name !== undefined ) material.name = json.name;\n\t\tif ( json.color !== undefined ) material.color.setHex( json.color );\n\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\n\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\n\t\tif ( json.emissive !== undefined ) material.emissive.setHex( json.emissive );\n\t\tif ( json.specular !== undefined ) material.specular.setHex( json.specular );\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\n\t\tif ( json.clearCoat !== undefined ) material.clearCoat = json.clearCoat;\n\t\tif ( json.clearCoatRoughness !== undefined ) material.clearCoatRoughness = json.clearCoatRoughness;\n\t\tif ( json.vertexColors !== undefined ) material.vertexColors = json.vertexColors;\n\t\tif ( json.fog !== undefined ) material.fog = json.fog;\n\t\tif ( json.flatShading !== undefined ) material.flatShading = json.flatShading;\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\n\t\tif ( json.combine !== undefined ) material.combine = json.combine;\n\t\tif ( json.side !== undefined ) material.side = json.side;\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\n\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\n\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\n\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\n\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\n\t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\n\n\t\tif ( json.rotation !== undefined ) material.rotation = json.rotation;\n\n\t\tif ( json.linewidth !== 1 ) material.linewidth = json.linewidth;\n\t\tif ( json.dashSize !== undefined ) material.dashSize = json.dashSize;\n\t\tif ( json.gapSize !== undefined ) material.gapSize = json.gapSize;\n\t\tif ( json.scale !== undefined ) material.scale = json.scale;\n\n\t\tif ( json.polygonOffset !== undefined ) material.polygonOffset = json.polygonOffset;\n\t\tif ( json.polygonOffsetFactor !== undefined ) material.polygonOffsetFactor = json.polygonOffsetFactor;\n\t\tif ( json.polygonOffsetUnits !== undefined ) material.polygonOffsetUnits = json.polygonOffsetUnits;\n\n\t\tif ( json.skinning !== undefined ) material.skinning = json.skinning;\n\t\tif ( json.morphTargets !== undefined ) material.morphTargets = json.morphTargets;\n\t\tif ( json.dithering !== undefined ) material.dithering = json.dithering;\n\n\t\tif ( json.visible !== undefined ) material.visible = json.visible;\n\t\tif ( json.userData !== undefined ) material.userData = json.userData;\n\n\t\t// Shader Material\n\n\t\tif ( json.uniforms !== undefined ) {\n\n\t\t\tfor ( var name in json.uniforms ) {\n\n\t\t\t\tvar uniform = json.uniforms[ name ];\n\n\t\t\t\tmaterial.uniforms[ name ] = {};\n\n\t\t\t\tswitch ( uniform.type ) {\n\n\t\t\t\t\tcase 't':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = getTexture( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'c':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Color().setHex( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v2':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector2().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix3().fromArray( uniform.value );\n\n\t\t\t\t\tcase 'm4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = uniform.value;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.defines !== undefined ) material.defines = json.defines;\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\n\n\t\tif ( json.extensions !== undefined ) {\n\n\t\t\tfor ( var key in json.extensions ) {\n\n\t\t\t\tmaterial.extensions[ key ] = json.extensions[ key ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Deprecated\n\n\t\tif ( json.shading !== undefined ) material.flatShading = json.shading === 1; // THREE.FlatShading\n\n\t\t// for PointsMaterial\n\n\t\tif ( json.size !== undefined ) material.size = json.size;\n\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\n\n\t\t// maps\n\n\t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\n\t\tif ( json.matcap !== undefined ) material.matcap = getTexture( json.matcap );\n\n\t\tif ( json.alphaMap !== undefined ) {\n\n\t\t\tmaterial.alphaMap = getTexture( json.alphaMap );\n\t\t\tmaterial.transparent = true;\n\n\t\t}\n\n\t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\n\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\n\n\t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\n\t\tif ( json.normalMapType !== undefined ) material.normalMapType = json.normalMapType;\n\t\tif ( json.normalScale !== undefined ) {\n\n\t\t\tvar normalScale = json.normalScale;\n\n\t\t\tif ( Array.isArray( normalScale ) === false ) {\n\n\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\n\t\t\t\tnormalScale = [ normalScale, normalScale ];\n\n\t\t\t}\n\n\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\n\n\t\t}\n\n\t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\n\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\n\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\n\n\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\n\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\n\n\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\n\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\n\n\t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\n\n\t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\n\t\tif ( json.envMapIntensity !== undefined ) material.envMapIntensity = json.envMapIntensity;\n\n\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\n\n\t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\n\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\n\n\t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\n\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\n\n\t\tif ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );\n\n\t\treturn material;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t},\n\n\tsetTextures: function ( value ) {\n\n\t\tthis.textures = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author Don McCurdy / https://www.donmccurdy.com\n */\n\nvar LoaderUtils = {\n\n\tdecodeText: function ( array ) {\n\n\t\tif ( typeof TextDecoder !== 'undefined' ) {\n\n\t\t\treturn new TextDecoder().decode( array );\n\n\t\t}\n\n\t\t// Avoid the String.fromCharCode.apply(null, array) shortcut, which\n\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\t\tvar s = '';\n\n\t\tfor ( var i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t// Implicitly assumes little-endian.\n\t\t\ts += String.fromCharCode( array[ i ] );\n\n\t\t}\n\n\t\ttry {\n\n\t\t\t// merges multi-byte utf-8 characters.\n\n\t\t\treturn decodeURIComponent( escape( s ) );\n\n\t\t} catch ( e ) { // see #16358\n\n\t\t\treturn s;\n\n\t\t}\n\n\t},\n\n\textractUrlBase: function ( url ) {\n\n\t\tvar index = url.lastIndexOf( '/' );\n\n\t\tif ( index === - 1 ) return './';\n\n\t\treturn url.substr( 0, index + 1 );\n\n\t}\n\n};\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InstancedBufferGeometry() {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'InstancedBufferGeometry';\n\tthis.maxInstancedCount = undefined;\n\n}\n\nInstancedBufferGeometry.prototype = Object.assign( Object.create( BufferGeometry.prototype ), {\n\n\tconstructor: InstancedBufferGeometry,\n\n\tisInstancedBufferGeometry: true,\n\n\tcopy: function ( source ) {\n\n\t\tBufferGeometry.prototype.copy.call( this, source );\n\n\t\tthis.maxInstancedCount = source.maxInstancedCount;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = BufferGeometry.prototype.toJSON.call( this );\n\n\t\tdata.maxInstancedCount = this.maxInstancedCount;\n\n\t\tdata.isInstancedBufferGeometry = true;\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InstancedBufferAttribute( array, itemSize, normalized, meshPerAttribute ) {\n\n\tif ( typeof ( normalized ) === 'number' ) {\n\n\t\tmeshPerAttribute = normalized;\n\n\t\tnormalized = false;\n\n\t\tconsole.error( 'THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.' );\n\n\t}\n\n\tBufferAttribute.call( this, array, itemSize, normalized );\n\n\tthis.meshPerAttribute = meshPerAttribute || 1;\n\n}\n\nInstancedBufferAttribute.prototype = Object.assign( Object.create( BufferAttribute.prototype ), {\n\n\tconstructor: InstancedBufferAttribute,\n\n\tisInstancedBufferAttribute: true,\n\n\tcopy: function ( source ) {\n\n\t\tBufferAttribute.prototype.copy.call( this, source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ()\t{\n\n\t\tvar data = BufferAttribute.prototype.toJSON.call( this );\n\n\t\tdata.meshPerAttribute = this.meshPerAttribute;\n\n\t\tdata.isInstancedBufferAttribute = true;\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction BufferGeometryLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( BufferGeometryLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tparse: function ( json ) {\n\n\t\tvar geometry = json.isInstancedBufferGeometry ? new InstancedBufferGeometry() : new BufferGeometry();\n\n\t\tvar index = json.data.index;\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tvar typedArray = new TYPED_ARRAYS[ index.type ]( index.array );\n\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n\n\t\t}\n\n\t\tvar attributes = json.data.attributes;\n\n\t\tfor ( var key in attributes ) {\n\n\t\t\tvar attribute = attributes[ key ];\n\t\t\tvar typedArray = new TYPED_ARRAYS[ attribute.type ]( attribute.array );\n\t\t\tvar bufferAttributeConstr = attribute.isInstancedBufferAttribute ? InstancedBufferAttribute : BufferAttribute;\n\t\t\tvar bufferAttribute = new bufferAttributeConstr( typedArray, attribute.itemSize, attribute.normalized );\n\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\tgeometry.addAttribute( key, bufferAttribute );\n\n\t\t}\n\n\t\tvar morphAttributes = json.data.morphAttributes;\n\n\t\tif ( morphAttributes ) {\n\n\t\t\tfor ( var key in morphAttributes ) {\n\n\t\t\t\tvar attributeArray = morphAttributes[ key ];\n\n\t\t\t\tvar array = [];\n\n\t\t\t\tfor ( var i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar attribute = attributeArray[ i ];\n\t\t\t\t\tvar typedArray = new TYPED_ARRAYS[ attribute.type ]( attribute.array );\n\n\t\t\t\t\tvar bufferAttribute = new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized );\n\t\t\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\t\t\tarray.push( bufferAttribute );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.morphAttributes[ key ] = array;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\tif ( groups !== undefined ) {\n\n\t\t\tfor ( var i = 0, n = groups.length; i !== n; ++ i ) {\n\n\t\t\t\tvar group = groups[ i ];\n\n\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar boundingSphere = json.data.boundingSphere;\n\n\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\tvar center = new Vector3();\n\n\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t}\n\n\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n\n\t\t}\n\n\t\tif ( json.name ) geometry.name = json.name;\n\t\tif ( json.userData ) geometry.userData = json.userData;\n\n\t\treturn geometry;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\nvar TYPED_ARRAYS = {\n\tInt8Array: Int8Array,\n\tUint8Array: Uint8Array,\n\t// Workaround for IE11 pre KB2929437. See #11440\n\tUint8ClampedArray: typeof Uint8ClampedArray !== 'undefined' ? Uint8ClampedArray : Uint8Array,\n\tInt16Array: Int16Array,\n\tUint16Array: Uint16Array,\n\tInt32Array: Int32Array,\n\tUint32Array: Uint32Array,\n\tFloat32Array: Float32Array,\n\tFloat64Array: Float64Array\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction ObjectLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\tthis.resourcePath = '';\n\n}\n\nObject.assign( ObjectLoader.prototype, {\n\n\tcrossOrigin: 'anonymous',\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar path = ( this.path === undefined ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tvar loader = new FileLoader( scope.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tvar json = null;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( error );\n\n\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tvar metadata = json.metadata;\n\n\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tscope.parse( json, onLoad );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t},\n\n\tsetResourcePath: function ( value ) {\n\n\t\tthis.resourcePath = value;\n\t\treturn this;\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t},\n\n\tparse: function ( json, onLoad ) {\n\n\t\tvar shapes = this.parseShape( json.shapes );\n\t\tvar geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tvar images = this.parseImages( json.images, function () {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t} );\n\n\t\tvar textures = this.parseTextures( json.textures, images );\n\t\tvar materials = this.parseMaterials( json.materials, textures );\n\n\t\tvar object = this.parseObject( json.object, geometries, materials );\n\n\t\tif ( json.animations ) {\n\n\t\t\tobject.animations = this.parseAnimations( json.animations );\n\n\t\t}\n\n\t\tif ( json.images === undefined || json.images.length === 0 ) {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t}\n\n\t\treturn object;\n\n\t},\n\n\tparseShape: function ( json ) {\n\n\t\tvar shapes = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar shape = new Shape().fromJSON( json[ i ] );\n\n\t\t\t\tshapes[ shape.uuid ] = shape;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn shapes;\n\n\t},\n\n\tparseGeometries: function ( json, shapes ) {\n\n\t\tvar geometries = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tvar bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar geometry;\n\t\t\t\tvar data = json[ i ];\n\n\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\tcase 'PlaneGeometry':\n\t\t\t\t\tcase 'PlaneBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.width,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\tdata.heightSegments\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'BoxGeometry':\n\t\t\t\t\tcase 'BoxBufferGeometry':\n\t\t\t\t\tcase 'CubeGeometry': // backwards compatible\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.width,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.depth,\n\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.depthSegments\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'CircleGeometry':\n\t\t\t\t\tcase 'CircleBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.segments,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'CylinderGeometry':\n\t\t\t\t\tcase 'CylinderBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radiusTop,\n\t\t\t\t\t\t\tdata.radiusBottom,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.openEnded,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'ConeGeometry':\n\t\t\t\t\tcase 'ConeBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.openEnded,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'SphereGeometry':\n\t\t\t\t\tcase 'SphereBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.phiStart,\n\t\t\t\t\t\t\tdata.phiLength,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'DodecahedronGeometry':\n\t\t\t\t\tcase 'DodecahedronBufferGeometry':\n\t\t\t\t\tcase 'IcosahedronGeometry':\n\t\t\t\t\tcase 'IcosahedronBufferGeometry':\n\t\t\t\t\tcase 'OctahedronGeometry':\n\t\t\t\t\tcase 'OctahedronBufferGeometry':\n\t\t\t\t\tcase 'TetrahedronGeometry':\n\t\t\t\t\tcase 'TetrahedronBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.detail\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'RingGeometry':\n\t\t\t\t\tcase 'RingBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.innerRadius,\n\t\t\t\t\t\t\tdata.outerRadius,\n\t\t\t\t\t\t\tdata.thetaSegments,\n\t\t\t\t\t\t\tdata.phiSegments,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'TorusGeometry':\n\t\t\t\t\tcase 'TorusBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.tube,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\tdata.arc\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'TorusKnotGeometry':\n\t\t\t\t\tcase 'TorusKnotBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.tube,\n\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.p,\n\t\t\t\t\t\t\tdata.q\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'TubeGeometry':\n\t\t\t\t\tcase 'TubeBufferGeometry':\n\n\t\t\t\t\t\t// This only works for built-in curves (e.g. CatmullRomCurve3).\n\t\t\t\t\t\t// User defined curves or instances of CurvePath will not be deserialized.\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tnew Curves[ data.path.type ]().fromJSON( data.path ),\n\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.closed\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'LatheGeometry':\n\t\t\t\t\tcase 'LatheBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.points,\n\t\t\t\t\t\t\tdata.segments,\n\t\t\t\t\t\t\tdata.phiStart,\n\t\t\t\t\t\t\tdata.phiLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PolyhedronGeometry':\n\t\t\t\t\tcase 'PolyhedronBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.vertices,\n\t\t\t\t\t\t\tdata.indices,\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.details\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'ShapeGeometry':\n\t\t\t\t\tcase 'ShapeBufferGeometry':\n\n\t\t\t\t\t\tvar geometryShapes = [];\n\n\t\t\t\t\t\tfor ( var j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tvar shape = shapes[ data.shapes[ j ] ];\n\n\t\t\t\t\t\t\tgeometryShapes.push( shape );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tgeometryShapes,\n\t\t\t\t\t\t\tdata.curveSegments\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\n\t\t\t\t\tcase 'ExtrudeGeometry':\n\t\t\t\t\tcase 'ExtrudeBufferGeometry':\n\n\t\t\t\t\t\tvar geometryShapes = [];\n\n\t\t\t\t\t\tfor ( var j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tvar shape = shapes[ data.shapes[ j ] ];\n\n\t\t\t\t\t\t\tgeometryShapes.push( shape );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar extrudePath = data.options.extrudePath;\n\n\t\t\t\t\t\tif ( extrudePath !== undefined ) {\n\n\t\t\t\t\t\t\tdata.options.extrudePath = new Curves[ extrudePath.type ]().fromJSON( extrudePath );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tgeometryShapes,\n\t\t\t\t\t\t\tdata.options\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'BufferGeometry':\n\t\t\t\t\tcase 'InstancedBufferGeometry':\n\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Geometry':\n\n\t\t\t\t\t\tif ( 'THREE' in window && 'LegacyJSONLoader' in THREE ) {\n\n\t\t\t\t\t\t\tvar geometryLoader = new THREE.LegacyJSONLoader();\n\t\t\t\t\t\t\tgeometry = geometryLoader.parse( data, this.resourcePath ).geometry;\n\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.ObjectLoader: You have to import LegacyJSONLoader in order load geometry data of type \"Geometry\".' );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Unsupported geometry type \"' + data.type + '\"' );\n\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\n\t\t\t\tif ( geometry.isBufferGeometry === true && data.userData !== undefined ) geometry.userData = data.userData;\n\n\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn geometries;\n\n\t},\n\n\tparseMaterials: function ( json, textures ) {\n\n\t\tvar cache = {}; // MultiMaterial\n\t\tvar materials = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tvar loader = new MaterialLoader();\n\t\t\tloader.setTextures( textures );\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar data = json[ i ];\n\n\t\t\t\tif ( data.type === 'MultiMaterial' ) {\n\n\t\t\t\t\t// Deprecated\n\n\t\t\t\t\tvar array = [];\n\n\t\t\t\t\tfor ( var j = 0; j < data.materials.length; j ++ ) {\n\n\t\t\t\t\t\tvar material = data.materials[ j ];\n\n\t\t\t\t\t\tif ( cache[ material.uuid ] === undefined ) {\n\n\t\t\t\t\t\t\tcache[ material.uuid ] = loader.parse( material );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tarray.push( cache[ material.uuid ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmaterials[ data.uuid ] = array;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( cache[ data.uuid ] === undefined ) {\n\n\t\t\t\t\t\tcache[ data.uuid ] = loader.parse( data );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmaterials[ data.uuid ] = cache[ data.uuid ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn materials;\n\n\t},\n\n\tparseAnimations: function ( json ) {\n\n\t\tvar animations = [];\n\n\t\tfor ( var i = 0; i < json.length; i ++ ) {\n\n\t\t\tvar data = json[ i ];\n\n\t\t\tvar clip = AnimationClip.parse( data );\n\n\t\t\tif ( data.uuid !== undefined ) clip.uuid = data.uuid;\n\n\t\t\tanimations.push( clip );\n\n\t\t}\n\n\t\treturn animations;\n\n\t},\n\n\tparseImages: function ( json, onLoad ) {\n\n\t\tvar scope = this;\n\t\tvar images = {};\n\n\t\tfunction loadImage( url ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn loader.load( url, function () {\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, undefined, function () {\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tvar manager = new LoadingManager( onLoad );\n\n\t\t\tvar loader = new ImageLoader( manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( var i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tvar image = json[ i ];\n\t\t\t\tvar url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\timages[ image.uuid ] = [];\n\n\t\t\t\t\tfor ( var j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tvar currentUrl = url[ j ];\n\n\t\t\t\t\t\tvar path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( currentUrl ) ? currentUrl : scope.resourcePath + currentUrl;\n\n\t\t\t\t\t\timages[ image.uuid ].push( loadImage( path ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tvar path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( image.url ) ? image.url : scope.resourcePath + image.url;\n\n\t\t\t\t\timages[ image.uuid ] = loadImage( path );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t},\n\n\tparseTextures: function ( json, images ) {\n\n\t\tfunction parseConstant( value, type ) {\n\n\t\t\tif ( typeof value === 'number' ) return value;\n\n\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\treturn type[ value ];\n\n\t\t}\n\n\t\tvar textures = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar data = json[ i ];\n\n\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t}\n\n\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t}\n\n\t\t\t\tvar texture;\n\n\t\t\t\tif ( Array.isArray( images[ data.image ] ) ) {\n\n\t\t\t\t\ttexture = new CubeTexture( images[ data.image ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture = new Texture( images[ data.image ] );\n\n\t\t\t\t}\n\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\n\n\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\n\n\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\n\t\t\t\tif ( data.center !== undefined ) texture.center.fromArray( data.center );\n\t\t\t\tif ( data.rotation !== undefined ) texture.rotation = data.rotation;\n\n\t\t\t\tif ( data.wrap !== undefined ) {\n\n\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\n\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.format !== undefined ) texture.format = data.format;\n\t\t\t\tif ( data.type !== undefined ) texture.type = data.type;\n\t\t\t\tif ( data.encoding !== undefined ) texture.encoding = data.encoding;\n\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n\n\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\n\n\t\t\t\tif ( data.premultiplyAlpha !== undefined ) texture.premultiplyAlpha = data.premultiplyAlpha;\n\t\t\t\tif ( data.unpackAlignment !== undefined ) texture.unpackAlignment = data.unpackAlignment;\n\n\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn textures;\n\n\t},\n\n\tparseObject: function ( data, geometries, materials ) {\n\n\t\tvar object;\n\n\t\tfunction getGeometry( name ) {\n\n\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t}\n\n\t\t\treturn geometries[ name ];\n\n\t\t}\n\n\t\tfunction getMaterial( name ) {\n\n\t\t\tif ( name === undefined ) return undefined;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\n\t\t\t\tvar array = [];\n\n\t\t\t\tfor ( var i = 0, l = name.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar uuid = name[ i ];\n\n\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tarray.push( materials[ uuid ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn array;\n\n\t\t\t}\n\n\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t}\n\n\t\t\treturn materials[ name ];\n\n\t\t}\n\n\t\tswitch ( data.type ) {\n\n\t\t\tcase 'Scene':\n\n\t\t\t\tobject = new Scene();\n\n\t\t\t\tif ( data.background !== undefined ) {\n\n\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\n\n\t\t\t\t\t\tobject.background = new Color( data.background );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.fog !== undefined ) {\n\n\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\n\n\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n\n\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\n\n\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'AmbientLight':\n\n\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'DirectionalLight':\n\n\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointLight':\n\n\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'RectAreaLight':\n\n\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SpotLight':\n\n\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'HemisphereLight':\n\n\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SkinnedMesh':\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.' );\n\n\t\t\tcase 'Mesh':\n\n\t\t\t\tvar geometry = getGeometry( data.geometry );\n\t\t\t\tvar material = getMaterial( data.material );\n\n\t\t\t\tif ( geometry.bones && geometry.bones.length > 0 ) {\n\n\t\t\t\t\tobject = new SkinnedMesh( geometry, material );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tobject = new Mesh( geometry, material );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.drawMode !== undefined ) object.setDrawMode( data.drawMode );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LOD':\n\n\t\t\t\tobject = new LOD();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Line':\n\n\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ), data.mode );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineLoop':\n\n\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineSegments':\n\n\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointCloud':\n\t\t\tcase 'Points':\n\n\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Sprite':\n\n\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Group':\n\n\t\t\t\tobject = new Group();\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tobject = new Object3D();\n\n\t\t}\n\n\t\tobject.uuid = data.uuid;\n\n\t\tif ( data.name !== undefined ) object.name = data.name;\n\n\t\tif ( data.matrix !== undefined ) {\n\n\t\t\tobject.matrix.fromArray( data.matrix );\n\n\t\t\tif ( data.matrixAutoUpdate !== undefined ) object.matrixAutoUpdate = data.matrixAutoUpdate;\n\t\t\tif ( object.matrixAutoUpdate ) object.matrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t} else {\n\n\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\n\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\n\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\n\t\t}\n\n\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n\n\t\tif ( data.shadow ) {\n\n\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\n\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\n\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\n\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\n\n\t\t}\n\n\t\tif ( data.visible !== undefined ) object.visible = data.visible;\n\t\tif ( data.frustumCulled !== undefined ) object.frustumCulled = data.frustumCulled;\n\t\tif ( data.renderOrder !== undefined ) object.renderOrder = data.renderOrder;\n\t\tif ( data.userData !== undefined ) object.userData = data.userData;\n\t\tif ( data.layers !== undefined ) object.layers.mask = data.layers;\n\n\t\tif ( data.children !== undefined ) {\n\n\t\t\tvar children = data.children;\n\n\t\t\tfor ( var i = 0; i < children.length; i ++ ) {\n\n\t\t\t\tobject.add( this.parseObject( children[ i ], geometries, materials ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.type === 'LOD' ) {\n\n\t\t\tvar levels = data.levels;\n\n\t\t\tfor ( var l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\tvar level = levels[ l ];\n\t\t\t\tvar child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\tobject.addLevel( child, level.distance );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n} );\n\nvar TEXTURE_MAPPING = {\n\tUVMapping: UVMapping,\n\tCubeReflectionMapping: CubeReflectionMapping,\n\tCubeRefractionMapping: CubeRefractionMapping,\n\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\tSphericalReflectionMapping: SphericalReflectionMapping,\n\tCubeUVReflectionMapping: CubeUVReflectionMapping,\n\tCubeUVRefractionMapping: CubeUVRefractionMapping\n};\n\nvar TEXTURE_WRAPPING = {\n\tRepeatWrapping: RepeatWrapping,\n\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\tMirroredRepeatWrapping: MirroredRepeatWrapping\n};\n\nvar TEXTURE_FILTER = {\n\tNearestFilter: NearestFilter,\n\tNearestMipMapNearestFilter: NearestMipMapNearestFilter,\n\tNearestMipMapLinearFilter: NearestMipMapLinearFilter,\n\tLinearFilter: LinearFilter,\n\tLinearMipMapNearestFilter: LinearMipMapNearestFilter,\n\tLinearMipMapLinearFilter: LinearMipMapLinearFilter\n};\n\n/**\n * @author thespite / http://clicktorelease.com/\n */\n\n\nfunction ImageBitmapLoader( manager ) {\n\n\tif ( typeof createImageBitmap === 'undefined' ) {\n\n\t\tconsole.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );\n\n\t}\n\n\tif ( typeof fetch === 'undefined' ) {\n\n\t\tconsole.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );\n\n\t}\n\n\tthis.manager = manager !== undefined ? manager : DefaultLoadingManager;\n\tthis.options = undefined;\n\n}\n\nImageBitmapLoader.prototype = {\n\n\tconstructor: ImageBitmapLoader,\n\n\tsetOptions: function setOptions( options ) {\n\n\t\tthis.options = options;\n\n\t\treturn this;\n\n\t},\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tvar scope = this;\n\n\t\tvar cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tfetch( url ).then( function ( res ) {\n\n\t\t\treturn res.blob();\n\n\t\t} ).then( function ( blob ) {\n\n\t\t\tif ( scope.options === undefined ) {\n\n\t\t\t\t// Workaround for FireFox. It causes an error if you pass options.\n\t\t\t\treturn createImageBitmap( blob );\n\n\t\t\t} else {\n\n\t\t\t\treturn createImageBitmap( blob, scope.options );\n\n\t\t\t}\n\n\t\t} ).then( function ( imageBitmap ) {\n\n\t\t\tCache.add( url, imageBitmap );\n\n\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} ).catch( function ( e ) {\n\n\t\t\tif ( onError ) onError( e );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} );\n\n\t\tscope.manager.itemStart( url );\n\n\t},\n\n\tsetCrossOrigin: function ( /* value */ ) {\n\n\t\treturn this;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n};\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * minimal class for proxing functions to Path. Replaces old \"extractSubpaths()\"\n **/\n\nfunction ShapePath() {\n\n\tthis.type = 'ShapePath';\n\n\tthis.color = new Color();\n\n\tthis.subPaths = [];\n\tthis.currentPath = null;\n\n}\n\nObject.assign( ShapePath.prototype, {\n\n\tmoveTo: function ( x, y ) {\n\n\t\tthis.currentPath = new Path();\n\t\tthis.subPaths.push( this.currentPath );\n\t\tthis.currentPath.moveTo( x, y );\n\n\t},\n\n\tlineTo: function ( x, y ) {\n\n\t\tthis.currentPath.lineTo( x, y );\n\n\t},\n\n\tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\n\n\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n\n\t},\n\n\tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n\n\t},\n\n\tsplineThru: function ( pts ) {\n\n\t\tthis.currentPath.splineThru( pts );\n\n\t},\n\n\ttoShapes: function ( isCCW, noHoles ) {\n\n\t\tfunction toShapesNoHoles( inSubpaths ) {\n\n\t\t\tvar shapes = [];\n\n\t\t\tfor ( var i = 0, l = inSubpaths.length; i < l; i ++ ) {\n\n\t\t\t\tvar tmpPath = inSubpaths[ i ];\n\n\t\t\t\tvar tmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\n\t\t\t\tshapes.push( tmpShape );\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\n\t\t\tvar polyLen = inPolygon.length;\n\n\t\t\t// inPt on polygon contour => immediate success    or\n\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t//  with the horizontal line through inPt, left of inPt\n\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n\t\t\tvar inside = false;\n\t\t\tfor ( var p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\n\t\t\t\tvar edgeLowPt = inPolygon[ p ];\n\t\t\t\tvar edgeHighPt = inPolygon[ q ];\n\n\t\t\t\tvar edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\tvar edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not parallel\n\t\t\t\t\tif ( edgeDy < 0 ) {\n\n\t\t\t\t\t\tedgeLowPt = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\n\n\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\n\n\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvar perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\n\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// parallel or collinear\n\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\n\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\n\t\t\t\t\t// continue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn\tinside;\n\n\t\t}\n\n\t\tvar isClockWise = ShapeUtils.isClockWise;\n\n\t\tvar subPaths = this.subPaths;\n\t\tif ( subPaths.length === 0 ) return [];\n\n\t\tif ( noHoles === true )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tvar solid, tmpPath, tmpShape, shapes = [];\n\n\t\tif ( subPaths.length === 1 ) {\n\n\t\t\ttmpPath = subPaths[ 0 ];\n\t\t\ttmpShape = new Shape();\n\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\tshapes.push( tmpShape );\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tvar holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\n\t\t// console.log(\"Holes first\", holesFirst);\n\n\t\tvar betterShapeHoles = [];\n\t\tvar newShapes = [];\n\t\tvar newShapeHoles = [];\n\t\tvar mainIdx = 0;\n\t\tvar tmpPoints;\n\n\t\tnewShapes[ mainIdx ] = undefined;\n\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\tfor ( var i = 0, l = subPaths.length; i < l; i ++ ) {\n\n\t\t\ttmpPath = subPaths[ i ];\n\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\tsolid = isClockWise( tmpPoints );\n\t\t\tsolid = isCCW ? ! solid : solid;\n\n\t\t\tif ( solid ) {\n\n\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\n\n\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\n\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\n\n\t\t\t\tif ( holesFirst )\tmainIdx ++;\n\t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\t\t//console.log('cw', i);\n\n\t\t\t} else {\n\n\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n\n\t\t\t\t//console.log('ccw', i);\n\n\t\t\t}\n\n\t\t}\n\n\t\t// only Holes? -> probably all Shapes with wrong orientation\n\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tif ( newShapes.length > 1 ) {\n\n\t\t\tvar ambiguous = false;\n\t\t\tvar toChange = [];\n\n\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tbetterShapeHoles[ sIdx ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tvar sho = newShapeHoles[ sIdx ];\n\n\t\t\t\tfor ( var hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\n\t\t\t\t\tvar ho = sho[ hIdx ];\n\t\t\t\t\tvar hole_unassigned = true;\n\n\t\t\t\t\tfor ( var s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\n\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n\n\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange.push( { froms: sIdx, tos: s2Idx, hole: hIdx } );\n\t\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tambiguous = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t\t// console.log(\"ambiguous: \", ambiguous);\n\t\t\tif ( toChange.length > 0 ) {\n\n\t\t\t\t// console.log(\"to change: \", toChange);\n\t\t\t\tif ( ! ambiguous )\tnewShapeHoles = betterShapeHoles;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar tmpHoles;\n\n\t\tfor ( var i = 0, il = newShapes.length; i < il; i ++ ) {\n\n\t\t\ttmpShape = newShapes[ i ].s;\n\t\t\tshapes.push( tmpShape );\n\t\t\ttmpHoles = newShapeHoles[ i ];\n\n\t\t\tfor ( var j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\n\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//console.log(\"shape\", shapes);\n\n\t\treturn shapes;\n\n\t}\n\n} );\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction Font( data ) {\n\n\tthis.type = 'Font';\n\n\tthis.data = data;\n\n}\n\nObject.assign( Font.prototype, {\n\n\tisFont: true,\n\n\tgenerateShapes: function ( text, size ) {\n\n\t\tif ( size === undefined ) size = 100;\n\n\t\tvar shapes = [];\n\t\tvar paths = createPaths( text, size, this.data );\n\n\t\tfor ( var p = 0, pl = paths.length; p < pl; p ++ ) {\n\n\t\t\tArray.prototype.push.apply( shapes, paths[ p ].toShapes() );\n\n\t\t}\n\n\t\treturn shapes;\n\n\t}\n\n} );\n\nfunction createPaths( text, size, data ) {\n\n\tvar chars = Array.from ? Array.from( text ) : String( text ).split( '' ); // see #13988\n\tvar scale = size / data.resolution;\n\tvar line_height = ( data.boundingBox.yMax - data.boundingBox.yMin + data.underlineThickness ) * scale;\n\n\tvar paths = [];\n\n\tvar offsetX = 0, offsetY = 0;\n\n\tfor ( var i = 0; i < chars.length; i ++ ) {\n\n\t\tvar char = chars[ i ];\n\n\t\tif ( char === '\\n' ) {\n\n\t\t\toffsetX = 0;\n\t\t\toffsetY -= line_height;\n\n\t\t} else {\n\n\t\t\tvar ret = createPath( char, scale, offsetX, offsetY, data );\n\t\t\toffsetX += ret.offsetX;\n\t\t\tpaths.push( ret.path );\n\n\t\t}\n\n\t}\n\n\treturn paths;\n\n}\n\nfunction createPath( char, scale, offsetX, offsetY, data ) {\n\n\tvar glyph = data.glyphs[ char ] || data.glyphs[ '?' ];\n\n\tif ( ! glyph ) return;\n\n\tvar path = new ShapePath();\n\n\tvar x, y, cpx, cpy, cpx1, cpy1, cpx2, cpy2;\n\n\tif ( glyph.o ) {\n\n\t\tvar outline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) );\n\n\t\tfor ( var i = 0, l = outline.length; i < l; ) {\n\n\t\t\tvar action = outline[ i ++ ];\n\n\t\t\tswitch ( action ) {\n\n\t\t\t\tcase 'm': // moveTo\n\n\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.moveTo( x, y );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'l': // lineTo\n\n\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.lineTo( x, y );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'q': // quadraticCurveTo\n\n\t\t\t\t\tcpx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.quadraticCurveTo( cpx1, cpy1, cpx, cpy );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'b': // bezierCurveTo\n\n\t\t\t\t\tcpx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx2 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy2 = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.bezierCurveTo( cpx1, cpy1, cpx2, cpy2, cpx, cpy );\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn { offsetX: glyph.ha * scale, path: path };\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction FontLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( FontLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tvar json;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tconsole.warn( 'THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.' );\n\t\t\t\tjson = JSON.parse( text.substring( 65, text.length - 2 ) );\n\n\t\t\t}\n\n\t\t\tvar font = scope.parse( json );\n\n\t\t\tif ( onLoad ) onLoad( font );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tparse: function ( json ) {\n\n\t\treturn new Font( json );\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Loader() {}\n\nLoader.Handlers = {\n\n\thandlers: [],\n\n\tadd: function ( regex, loader ) {\n\n\t\tthis.handlers.push( regex, loader );\n\n\t},\n\n\tget: function ( file ) {\n\n\t\tvar handlers = this.handlers;\n\n\t\tfor ( var i = 0, l = handlers.length; i < l; i += 2 ) {\n\n\t\t\tvar regex = handlers[ i ];\n\t\t\tvar loader = handlers[ i + 1 ];\n\n\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\treturn loader;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n};\n\nObject.assign( Loader.prototype, {\n\n\tcrossOrigin: 'anonymous',\n\n\tonLoadStart: function () {},\n\n\tonLoadProgress: function () {},\n\n\tonLoadComplete: function () {},\n\n\tinitMaterials: function ( materials, texturePath, crossOrigin ) {\n\n\t\tvar array = [];\n\n\t\tfor ( var i = 0; i < materials.length; ++ i ) {\n\n\t\t\tarray[ i ] = this.createMaterial( materials[ i ], texturePath, crossOrigin );\n\n\t\t}\n\n\t\treturn array;\n\n\t},\n\n\tcreateMaterial: ( function () {\n\n\t\tvar BlendingMode = {\n\t\t\tNoBlending: NoBlending,\n\t\t\tNormalBlending: NormalBlending,\n\t\t\tAdditiveBlending: AdditiveBlending,\n\t\t\tSubtractiveBlending: SubtractiveBlending,\n\t\t\tMultiplyBlending: MultiplyBlending,\n\t\t\tCustomBlending: CustomBlending\n\t\t};\n\n\t\tvar color = new Color();\n\t\tvar textureLoader = new TextureLoader();\n\t\tvar materialLoader = new MaterialLoader();\n\n\t\treturn function createMaterial( m, texturePath, crossOrigin ) {\n\n\t\t\t// convert from old material format\n\n\t\t\tvar textures = {};\n\n\t\t\tfunction loadTexture( path, repeat, offset, wrap, anisotropy ) {\n\n\t\t\t\tvar fullPath = texturePath + path;\n\t\t\t\tvar loader = Loader.Handlers.get( fullPath );\n\n\t\t\t\tvar texture;\n\n\t\t\t\tif ( loader !== null ) {\n\n\t\t\t\t\ttexture = loader.load( fullPath );\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttextureLoader.setCrossOrigin( crossOrigin );\n\t\t\t\t\ttexture = textureLoader.load( fullPath );\n\n\t\t\t\t}\n\n\t\t\t\tif ( repeat !== undefined ) {\n\n\t\t\t\t\ttexture.repeat.fromArray( repeat );\n\n\t\t\t\t\tif ( repeat[ 0 ] !== 1 ) texture.wrapS = RepeatWrapping;\n\t\t\t\t\tif ( repeat[ 1 ] !== 1 ) texture.wrapT = RepeatWrapping;\n\n\t\t\t\t}\n\n\t\t\t\tif ( offset !== undefined ) {\n\n\t\t\t\t\ttexture.offset.fromArray( offset );\n\n\t\t\t\t}\n\n\t\t\t\tif ( wrap !== undefined ) {\n\n\t\t\t\t\tif ( wrap[ 0 ] === 'repeat' ) texture.wrapS = RepeatWrapping;\n\t\t\t\t\tif ( wrap[ 0 ] === 'mirror' ) texture.wrapS = MirroredRepeatWrapping;\n\n\t\t\t\t\tif ( wrap[ 1 ] === 'repeat' ) texture.wrapT = RepeatWrapping;\n\t\t\t\t\tif ( wrap[ 1 ] === 'mirror' ) texture.wrapT = MirroredRepeatWrapping;\n\n\t\t\t\t}\n\n\t\t\t\tif ( anisotropy !== undefined ) {\n\n\t\t\t\t\ttexture.anisotropy = anisotropy;\n\n\t\t\t\t}\n\n\t\t\t\tvar uuid = _Math.generateUUID();\n\n\t\t\t\ttextures[ uuid ] = texture;\n\n\t\t\t\treturn uuid;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tvar json = {\n\t\t\t\tuuid: _Math.generateUUID(),\n\t\t\t\ttype: 'MeshLambertMaterial'\n\t\t\t};\n\n\t\t\tfor ( var name in m ) {\n\n\t\t\t\tvar value = m[ name ];\n\n\t\t\t\tswitch ( name ) {\n\n\t\t\t\t\tcase 'DbgColor':\n\t\t\t\t\tcase 'DbgIndex':\n\t\t\t\t\tcase 'opticalDensity':\n\t\t\t\t\tcase 'illumination':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'DbgName':\n\t\t\t\t\t\tjson.name = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'blending':\n\t\t\t\t\t\tjson.blending = BlendingMode[ value ];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'colorAmbient':\n\t\t\t\t\tcase 'mapAmbient':\n\t\t\t\t\t\tconsole.warn( 'THREE.Loader.createMaterial:', name, 'is no longer supported.' );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'colorDiffuse':\n\t\t\t\t\t\tjson.color = color.fromArray( value ).getHex();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'colorSpecular':\n\t\t\t\t\t\tjson.specular = color.fromArray( value ).getHex();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'colorEmissive':\n\t\t\t\t\t\tjson.emissive = color.fromArray( value ).getHex();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'specularCoef':\n\t\t\t\t\t\tjson.shininess = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'shading':\n\t\t\t\t\t\tif ( value.toLowerCase() === 'basic' ) json.type = 'MeshBasicMaterial';\n\t\t\t\t\t\tif ( value.toLowerCase() === 'phong' ) json.type = 'MeshPhongMaterial';\n\t\t\t\t\t\tif ( value.toLowerCase() === 'standard' ) json.type = 'MeshStandardMaterial';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapDiffuse':\n\t\t\t\t\t\tjson.map = loadTexture( value, m.mapDiffuseRepeat, m.mapDiffuseOffset, m.mapDiffuseWrap, m.mapDiffuseAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapDiffuseRepeat':\n\t\t\t\t\tcase 'mapDiffuseOffset':\n\t\t\t\t\tcase 'mapDiffuseWrap':\n\t\t\t\t\tcase 'mapDiffuseAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapEmissive':\n\t\t\t\t\t\tjson.emissiveMap = loadTexture( value, m.mapEmissiveRepeat, m.mapEmissiveOffset, m.mapEmissiveWrap, m.mapEmissiveAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapEmissiveRepeat':\n\t\t\t\t\tcase 'mapEmissiveOffset':\n\t\t\t\t\tcase 'mapEmissiveWrap':\n\t\t\t\t\tcase 'mapEmissiveAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapLight':\n\t\t\t\t\t\tjson.lightMap = loadTexture( value, m.mapLightRepeat, m.mapLightOffset, m.mapLightWrap, m.mapLightAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapLightRepeat':\n\t\t\t\t\tcase 'mapLightOffset':\n\t\t\t\t\tcase 'mapLightWrap':\n\t\t\t\t\tcase 'mapLightAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapAO':\n\t\t\t\t\t\tjson.aoMap = loadTexture( value, m.mapAORepeat, m.mapAOOffset, m.mapAOWrap, m.mapAOAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapAORepeat':\n\t\t\t\t\tcase 'mapAOOffset':\n\t\t\t\t\tcase 'mapAOWrap':\n\t\t\t\t\tcase 'mapAOAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapBump':\n\t\t\t\t\t\tjson.bumpMap = loadTexture( value, m.mapBumpRepeat, m.mapBumpOffset, m.mapBumpWrap, m.mapBumpAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapBumpScale':\n\t\t\t\t\t\tjson.bumpScale = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapBumpRepeat':\n\t\t\t\t\tcase 'mapBumpOffset':\n\t\t\t\t\tcase 'mapBumpWrap':\n\t\t\t\t\tcase 'mapBumpAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapNormal':\n\t\t\t\t\t\tjson.normalMap = loadTexture( value, m.mapNormalRepeat, m.mapNormalOffset, m.mapNormalWrap, m.mapNormalAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapNormalFactor':\n\t\t\t\t\t\tjson.normalScale = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapNormalRepeat':\n\t\t\t\t\tcase 'mapNormalOffset':\n\t\t\t\t\tcase 'mapNormalWrap':\n\t\t\t\t\tcase 'mapNormalAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapSpecular':\n\t\t\t\t\t\tjson.specularMap = loadTexture( value, m.mapSpecularRepeat, m.mapSpecularOffset, m.mapSpecularWrap, m.mapSpecularAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapSpecularRepeat':\n\t\t\t\t\tcase 'mapSpecularOffset':\n\t\t\t\t\tcase 'mapSpecularWrap':\n\t\t\t\t\tcase 'mapSpecularAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapMetalness':\n\t\t\t\t\t\tjson.metalnessMap = loadTexture( value, m.mapMetalnessRepeat, m.mapMetalnessOffset, m.mapMetalnessWrap, m.mapMetalnessAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapMetalnessRepeat':\n\t\t\t\t\tcase 'mapMetalnessOffset':\n\t\t\t\t\tcase 'mapMetalnessWrap':\n\t\t\t\t\tcase 'mapMetalnessAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapRoughness':\n\t\t\t\t\t\tjson.roughnessMap = loadTexture( value, m.mapRoughnessRepeat, m.mapRoughnessOffset, m.mapRoughnessWrap, m.mapRoughnessAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapRoughnessRepeat':\n\t\t\t\t\tcase 'mapRoughnessOffset':\n\t\t\t\t\tcase 'mapRoughnessWrap':\n\t\t\t\t\tcase 'mapRoughnessAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapAlpha':\n\t\t\t\t\t\tjson.alphaMap = loadTexture( value, m.mapAlphaRepeat, m.mapAlphaOffset, m.mapAlphaWrap, m.mapAlphaAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapAlphaRepeat':\n\t\t\t\t\tcase 'mapAlphaOffset':\n\t\t\t\t\tcase 'mapAlphaWrap':\n\t\t\t\t\tcase 'mapAlphaAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'flipSided':\n\t\t\t\t\t\tjson.side = BackSide;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'doubleSided':\n\t\t\t\t\t\tjson.side = DoubleSide;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'transparency':\n\t\t\t\t\t\tconsole.warn( 'THREE.Loader.createMaterial: transparency has been renamed to opacity' );\n\t\t\t\t\t\tjson.opacity = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'depthTest':\n\t\t\t\t\tcase 'depthWrite':\n\t\t\t\t\tcase 'colorWrite':\n\t\t\t\t\tcase 'opacity':\n\t\t\t\t\tcase 'reflectivity':\n\t\t\t\t\tcase 'transparent':\n\t\t\t\t\tcase 'visible':\n\t\t\t\t\tcase 'wireframe':\n\t\t\t\t\t\tjson[ name ] = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'vertexColors':\n\t\t\t\t\t\tif ( value === true ) json.vertexColors = VertexColors;\n\t\t\t\t\t\tif ( value === 'face' ) json.vertexColors = FaceColors;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.error( 'THREE.Loader.createMaterial: Unsupported', name, value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( json.type === 'MeshBasicMaterial' ) delete json.emissive;\n\t\t\tif ( json.type !== 'MeshPhongMaterial' ) delete json.specular;\n\n\t\t\tif ( json.opacity < 1 ) json.transparent = true;\n\n\t\t\tmaterialLoader.setTextures( textures );\n\n\t\t\treturn materialLoader.parse( json );\n\n\t\t};\n\n\t} )()\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar context;\n\nvar AudioContext = {\n\n\tgetContext: function () {\n\n\t\tif ( context === undefined ) {\n\n\t\t\tcontext = new ( window.AudioContext || window.webkitAudioContext )();\n\n\t\t}\n\n\t\treturn context;\n\n\t},\n\n\tsetContext: function ( value ) {\n\n\t\tcontext = value;\n\n\t}\n\n};\n\n/**\n * @author Reece Aaron Lecrivain / http://reecenotes.com/\n */\n\nfunction AudioLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( AudioLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setPath( this.path );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t// Create a copy of the buffer. The `decodeAudioData` method\n\t\t\t// detaches the buffer when complete, preventing reuse.\n\t\t\tvar bufferCopy = buffer.slice( 0 );\n\n\t\t\tvar context = AudioContext.getContext();\n\t\t\tcontext.decodeAudioData( bufferCopy, function ( audioBuffer ) {\n\n\t\t\t\tonLoad( audioBuffer );\n\n\t\t\t} );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n *\n * Primary reference:\n *   https://graphics.stanford.edu/papers/envmap/envmap.pdf\n *\n * Secondary reference:\n *   https://www.ppsloan.org/publications/StupidSH36.pdf\n */\n\n// 3-band SH defined by 9 coefficients\n\nfunction SphericalHarmonics3() {\n\n\tthis.coefficients = [];\n\n\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\tthis.coefficients.push( new Vector3() );\n\n\t}\n\n}\n\nObject.assign( SphericalHarmonics3.prototype, {\n\n\tisSphericalHarmonics3: true,\n\n\tset: function ( coefficients ) {\n\n\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].copy( coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tzero: function () {\n\n\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].set( 0, 0, 0 );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// get the radiance in the direction of the normal\n\t// target is a Vector3\n\tgetAt: function ( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tvar x = normal.x, y = normal.y, z = normal.z;\n\n\t\tvar coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget = coeff[ 0 ] * 0.282095;\n\n\t\t// band 1\n\t\ttarget += coeff[ 1 ] * 0.488603 * y;\n\t\ttarget += coeff[ 2 ] * 0.488603 * z;\n\t\ttarget += coeff[ 3 ] * 0.488603 * x;\n\n\t\t// band 2\n\t\ttarget += coeff[ 4 ] * 1.092548 * ( x * y );\n\t\ttarget += coeff[ 5 ] * 1.092548 * ( y * z );\n\t\ttarget += coeff[ 6 ] * 0.315392 * ( 3.0 * z * z - 1.0 );\n\t\ttarget += coeff[ 7 ] * 1.092548 * ( x * z );\n\t\ttarget += coeff[ 8 ] * 0.546274 * ( x * x - y * y );\n\n\t\treturn target;\n\n\t},\n\n\t// get the irradiance (radiance convolved with cosine lobe) in the direction of the normal\n\t// target is a Vector3\n\t// https://graphics.stanford.edu/papers/envmap/envmap.pdf\n\tgetIrradianceAt: function ( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tvar x = normal.x, y = normal.y, z = normal.z;\n\n\t\tvar coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget = coeff[ 0 ] * 0.886227; // π * 0.282095\n\n\t\t// band 1\n\t\ttarget += coeff[ 1 ] * 2.0 * 0.511664 * y; // ( 2 * π / 3 ) * 0.488603\n\t\ttarget += coeff[ 2 ] * 2.0 * 0.511664 * z;\n\t\ttarget += coeff[ 3 ] * 2.0 * 0.511664 * x;\n\n\t\t// band 2\n\t\ttarget += coeff[ 4 ] * 2.0 * 0.429043 * x * y; // ( π / 4 ) * 1.092548\n\t\ttarget += coeff[ 5 ] * 2.0 * 0.429043 * y * z;\n\t\ttarget += coeff[ 6 ] * ( 0.743125 * z * z - 0.247708 ); // ( π / 4 ) * 0.315392 * 3\n\t\ttarget += coeff[ 7 ] * 2.0 * 0.429043 * x * z;\n\t\ttarget += coeff[ 8 ] * 0.429043 * ( x * x - y * y ); // ( π / 4 ) * 0.546274\n\n\t\treturn target;\n\n\t},\n\n\tadd: function ( sh ) {\n\n\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].add( sh.coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\n\tscale: function ( s ) {\n\n\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].multiplyScalar( s );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tlerp: function ( sh, alpha ) {\n\n\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].lerp( sh.coefficients[ i ], alpha );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( sh ) {\n\n\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( ! this.coefficients[ i ].equals( sh.coefficients[ i ] ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tcopy: function ( sh ) {\n\n\t\treturn this.set( sh.coefficients );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tfromArray: function ( array ) {\n\n\t\tvar coefficients = this.coefficients;\n\n\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].fromArray( array, i * 3 );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function () {\n\n\t\tvar array = [];\n\t\tvar coefficients = this.coefficients;\n\n\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].toArray( array, i * 3 );\n\n\t\t}\n\n\t\treturn array;\n\n\t}\n\n} );\n\nObject.assign( SphericalHarmonics3, {\n\n\t// evaluate the basis functions\n\t// shBasis is an Array[ 9 ]\n\tgetBasisAt: function ( normal, shBasis ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tvar x = normal.x, y = normal.y, z = normal.z;\n\n\t\t// band 0\n\t\tshBasis[ 0 ] = 0.282095;\n\n\t\t// band 1\n\t\tshBasis[ 1 ] = 0.488603 * y;\n\t\tshBasis[ 2 ] = 0.488603 * z;\n\t\tshBasis[ 3 ] = 0.488603 * x;\n\n\t\t// band 2\n\t\tshBasis[ 4 ] = 1.092548 * x * y;\n\t\tshBasis[ 5 ] = 1.092548 * y * z;\n\t\tshBasis[ 6 ] = 0.315392 * ( 3 * z * z - 1 );\n\t\tshBasis[ 7 ] = 1.092548 * x * z;\n\t\tshBasis[ 8 ] = 0.546274 * ( x * x - y * y );\n\n\t}\n\n} );\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * A LightProbe is a source of indirect-diffuse light\n */\n\nfunction LightProbe( sh, intensity ) {\n\n\tLight.call( this, undefined, intensity );\n\n\tthis.sh = ( sh !== undefined ) ? sh : new SphericalHarmonics3();\n\n}\n\nLightProbe.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: LightProbe,\n\n\tisLightProbe: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.sh.copy( source.sh );\n\t\tthis.intensity = source.intensity;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Light.prototype.toJSON.call( this, meta );\n\n\t\t// data.sh = this.sh.toArray(); // todo\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction HemisphereLightProbe( skyColor, groundColor, intensity ) {\n\n\tLightProbe.call( this, undefined, intensity );\n\n\tvar color1 = new Color().set( skyColor );\n\tvar color2 = new Color().set( groundColor );\n\n\tvar sky = new Vector3( color1.r, color1.g, color1.b );\n\tvar ground = new Vector3( color2.r, color2.g, color2.b );\n\n\t// without extra factor of PI in the shader, should = 1 / Math.sqrt( Math.PI );\n\tvar c0 = Math.sqrt( Math.PI );\n\tvar c1 = c0 * Math.sqrt( 0.75 );\n\n\tthis.sh.coefficients[ 0 ].copy( sky ).add( ground ).multiplyScalar( c0 );\n\tthis.sh.coefficients[ 1 ].copy( sky ).sub( ground ).multiplyScalar( c1 );\n\n}\n\nHemisphereLightProbe.prototype = Object.assign( Object.create( LightProbe.prototype ), {\n\n\tconstructor: HemisphereLightProbe,\n\n\tisHemisphereLightProbe: true,\n\n\tcopy: function ( source ) { // modifying colors not currently supported\n\n\t\tLightProbe.prototype.copy.call( this, source );\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = LightProbe.prototype.toJSON.call( this, meta );\n\n\t\t// data.sh = this.sh.toArray(); // todo\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction AmbientLightProbe( color, intensity ) {\n\n\tLightProbe.call( this, undefined, intensity );\n\n\tvar color1 = new Color().set( color );\n\n\t// without extra factor of PI in the shader, would be 2 / Math.sqrt( Math.PI );\n\tthis.sh.coefficients[ 0 ].set( color1.r, color1.g, color1.b ).multiplyScalar( 2 * Math.sqrt( Math.PI ) );\n\n}\n\nAmbientLightProbe.prototype = Object.assign( Object.create( LightProbe.prototype ), {\n\n\tconstructor: AmbientLightProbe,\n\n\tisAmbientLightProbe: true,\n\n\tcopy: function ( source ) { // modifying color not currently supported\n\n\t\tLightProbe.prototype.copy.call( this, source );\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = LightProbe.prototype.toJSON.call( this, meta );\n\n\t\t// data.sh = this.sh.toArray(); // todo\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction StereoCamera() {\n\n\tthis.type = 'StereoCamera';\n\n\tthis.aspect = 1;\n\n\tthis.eyeSep = 0.064;\n\n\tthis.cameraL = new PerspectiveCamera();\n\tthis.cameraL.layers.enable( 1 );\n\tthis.cameraL.matrixAutoUpdate = false;\n\n\tthis.cameraR = new PerspectiveCamera();\n\tthis.cameraR.layers.enable( 2 );\n\tthis.cameraR.matrixAutoUpdate = false;\n\n}\n\nObject.assign( StereoCamera.prototype, {\n\n\tupdate: ( function () {\n\n\t\tvar instance, focus, fov, aspect, near, far, zoom, eyeSep;\n\n\t\tvar eyeRight = new Matrix4();\n\t\tvar eyeLeft = new Matrix4();\n\n\t\treturn function update( camera ) {\n\n\t\t\tvar needsUpdate = instance !== this || focus !== camera.focus || fov !== camera.fov ||\n\t\t\t\t\t\t\t\t\t\t\t\taspect !== camera.aspect * this.aspect || near !== camera.near ||\n\t\t\t\t\t\t\t\t\t\t\t\tfar !== camera.far || zoom !== camera.zoom || eyeSep !== this.eyeSep;\n\n\t\t\tif ( needsUpdate ) {\n\n\t\t\t\tinstance = this;\n\t\t\t\tfocus = camera.focus;\n\t\t\t\tfov = camera.fov;\n\t\t\t\taspect = camera.aspect * this.aspect;\n\t\t\t\tnear = camera.near;\n\t\t\t\tfar = camera.far;\n\t\t\t\tzoom = camera.zoom;\n\n\t\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\t\tvar projectionMatrix = camera.projectionMatrix.clone();\n\t\t\t\teyeSep = this.eyeSep / 2;\n\t\t\t\tvar eyeSepOnProjection = eyeSep * near / focus;\n\t\t\t\tvar ymax = ( near * Math.tan( _Math.DEG2RAD * fov * 0.5 ) ) / zoom;\n\t\t\t\tvar xmin, xmax;\n\n\t\t\t\t// translate xOffset\n\n\t\t\t\teyeLeft.elements[ 12 ] = - eyeSep;\n\t\t\t\teyeRight.elements[ 12 ] = eyeSep;\n\n\t\t\t\t// for left eye\n\n\t\t\t\txmin = - ymax * aspect + eyeSepOnProjection;\n\t\t\t\txmax = ymax * aspect + eyeSepOnProjection;\n\n\t\t\t\tprojectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin );\n\t\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\t\tthis.cameraL.projectionMatrix.copy( projectionMatrix );\n\n\t\t\t\t// for right eye\n\n\t\t\t\txmin = - ymax * aspect - eyeSepOnProjection;\n\t\t\t\txmax = ymax * aspect - eyeSepOnProjection;\n\n\t\t\t\tprojectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin );\n\t\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\t\tthis.cameraR.projectionMatrix.copy( projectionMatrix );\n\n\t\t\t}\n\n\t\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( eyeLeft );\n\t\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( eyeRight );\n\n\t\t};\n\n\t} )()\n\n} );\n\n/**\n * Camera for rendering cube maps\n *\t- renders scene into axis-aligned cube\n *\n * @author alteredq / http://alteredqualia.com/\n */\n\nvar fov = 90, aspect = 1;\n\nfunction CubeCamera( near, far, cubeResolution, options ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'CubeCamera';\n\n\tvar cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraPX.up.set( 0, - 1, 0 );\n\tcameraPX.lookAt( new Vector3( 1, 0, 0 ) );\n\tthis.add( cameraPX );\n\n\tvar cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraNX.up.set( 0, - 1, 0 );\n\tcameraNX.lookAt( new Vector3( - 1, 0, 0 ) );\n\tthis.add( cameraNX );\n\n\tvar cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraPY.up.set( 0, 0, 1 );\n\tcameraPY.lookAt( new Vector3( 0, 1, 0 ) );\n\tthis.add( cameraPY );\n\n\tvar cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraNY.up.set( 0, 0, - 1 );\n\tcameraNY.lookAt( new Vector3( 0, - 1, 0 ) );\n\tthis.add( cameraNY );\n\n\tvar cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraPZ.up.set( 0, - 1, 0 );\n\tcameraPZ.lookAt( new Vector3( 0, 0, 1 ) );\n\tthis.add( cameraPZ );\n\n\tvar cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraNZ.up.set( 0, - 1, 0 );\n\tcameraNZ.lookAt( new Vector3( 0, 0, - 1 ) );\n\tthis.add( cameraNZ );\n\n\toptions = options || { format: RGBFormat, magFilter: LinearFilter, minFilter: LinearFilter };\n\n\tthis.renderTarget = new WebGLRenderTargetCube( cubeResolution, cubeResolution, options );\n\tthis.renderTarget.texture.name = \"CubeCamera\";\n\n\tthis.update = function ( renderer, scene ) {\n\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n\t\tvar currentRenderTarget = renderer.getRenderTarget();\n\n\t\tvar renderTarget = this.renderTarget;\n\t\tvar generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\trenderer.setRenderTarget( renderTarget, 0 );\n\t\trenderer.render( scene, cameraPX );\n\n\t\trenderer.setRenderTarget( renderTarget, 1 );\n\t\trenderer.render( scene, cameraNX );\n\n\t\trenderer.setRenderTarget( renderTarget, 2 );\n\t\trenderer.render( scene, cameraPY );\n\n\t\trenderer.setRenderTarget( renderTarget, 3 );\n\t\trenderer.render( scene, cameraNY );\n\n\t\trenderer.setRenderTarget( renderTarget, 4 );\n\t\trenderer.render( scene, cameraPZ );\n\n\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\trenderer.setRenderTarget( renderTarget, 5 );\n\t\trenderer.render( scene, cameraNZ );\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t};\n\n\tthis.clear = function ( renderer, color, depth, stencil ) {\n\n\t\tvar currentRenderTarget = renderer.getRenderTarget();\n\n\t\tvar renderTarget = this.renderTarget;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\trenderer.setRenderTarget( renderTarget, i );\n\n\t\t\trenderer.clear( color, depth, stencil );\n\n\t\t}\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t};\n\n}\n\nCubeCamera.prototype = Object.create( Object3D.prototype );\nCubeCamera.prototype.constructor = CubeCamera;\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Clock( autoStart ) {\n\n\tthis.autoStart = ( autoStart !== undefined ) ? autoStart : true;\n\n\tthis.startTime = 0;\n\tthis.oldTime = 0;\n\tthis.elapsedTime = 0;\n\n\tthis.running = false;\n\n}\n\nObject.assign( Clock.prototype, {\n\n\tstart: function () {\n\n\t\tthis.startTime = ( typeof performance === 'undefined' ? Date : performance ).now(); // see #10732\n\n\t\tthis.oldTime = this.startTime;\n\t\tthis.elapsedTime = 0;\n\t\tthis.running = true;\n\n\t},\n\n\tstop: function () {\n\n\t\tthis.getElapsedTime();\n\t\tthis.running = false;\n\t\tthis.autoStart = false;\n\n\t},\n\n\tgetElapsedTime: function () {\n\n\t\tthis.getDelta();\n\t\treturn this.elapsedTime;\n\n\t},\n\n\tgetDelta: function () {\n\n\t\tvar diff = 0;\n\n\t\tif ( this.autoStart && ! this.running ) {\n\n\t\t\tthis.start();\n\t\t\treturn 0;\n\n\t\t}\n\n\t\tif ( this.running ) {\n\n\t\t\tvar newTime = ( typeof performance === 'undefined' ? Date : performance ).now();\n\n\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\n\t\t\tthis.oldTime = newTime;\n\n\t\t\tthis.elapsedTime += diff;\n\n\t\t}\n\n\t\treturn diff;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AudioListener() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'AudioListener';\n\n\tthis.context = AudioContext.getContext();\n\n\tthis.gain = this.context.createGain();\n\tthis.gain.connect( this.context.destination );\n\n\tthis.filter = null;\n\n\tthis.timeDelta = 0;\n\n}\n\nAudioListener.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: AudioListener,\n\n\tgetInput: function () {\n\n\t\treturn this.gain;\n\n\t},\n\n\tremoveFilter: function ( ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\t\t\tthis.gain.connect( this.context.destination );\n\t\t\tthis.filter = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetFilter: function () {\n\n\t\treturn this.filter;\n\n\t},\n\n\tsetFilter: function ( value ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\n\t\t} else {\n\n\t\t\tthis.gain.disconnect( this.context.destination );\n\n\t\t}\n\n\t\tthis.filter = value;\n\t\tthis.gain.connect( this.filter );\n\t\tthis.filter.connect( this.context.destination );\n\n\t\treturn this;\n\n\t},\n\n\tgetMasterVolume: function () {\n\n\t\treturn this.gain.gain.value;\n\n\t},\n\n\tsetMasterVolume: function ( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t},\n\n\tupdateMatrixWorld: ( function () {\n\n\t\tvar position = new Vector3();\n\t\tvar quaternion = new Quaternion();\n\t\tvar scale = new Vector3();\n\n\t\tvar orientation = new Vector3();\n\t\tvar clock = new Clock();\n\n\t\treturn function updateMatrixWorld( force ) {\n\n\t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\t\tvar listener = this.context.listener;\n\t\t\tvar up = this.up;\n\n\t\t\tthis.timeDelta = clock.getDelta();\n\n\t\t\tthis.matrixWorld.decompose( position, quaternion, scale );\n\n\t\t\torientation.set( 0, 0, - 1 ).applyQuaternion( quaternion );\n\n\t\t\tif ( listener.positionX ) {\n\n\t\t\t\t// code path for Chrome (see #14393)\n\n\t\t\t\tvar endTime = this.context.currentTime + this.timeDelta;\n\n\t\t\t\tlistener.positionX.linearRampToValueAtTime( position.x, endTime );\n\t\t\t\tlistener.positionY.linearRampToValueAtTime( position.y, endTime );\n\t\t\t\tlistener.positionZ.linearRampToValueAtTime( position.z, endTime );\n\t\t\t\tlistener.forwardX.linearRampToValueAtTime( orientation.x, endTime );\n\t\t\t\tlistener.forwardY.linearRampToValueAtTime( orientation.y, endTime );\n\t\t\t\tlistener.forwardZ.linearRampToValueAtTime( orientation.z, endTime );\n\t\t\t\tlistener.upX.linearRampToValueAtTime( up.x, endTime );\n\t\t\t\tlistener.upY.linearRampToValueAtTime( up.y, endTime );\n\t\t\t\tlistener.upZ.linearRampToValueAtTime( up.z, endTime );\n\n\t\t\t} else {\n\n\t\t\t\tlistener.setPosition( position.x, position.y, position.z );\n\t\t\t\tlistener.setOrientation( orientation.x, orientation.y, orientation.z, up.x, up.y, up.z );\n\n\t\t\t}\n\n\t\t};\n\n\t} )()\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Reece Aaron Lecrivain / http://reecenotes.com/\n */\n\nfunction Audio( listener ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Audio';\n\n\tthis.listener = listener;\n\tthis.context = listener.context;\n\n\tthis.gain = this.context.createGain();\n\tthis.gain.connect( listener.getInput() );\n\n\tthis.autoplay = false;\n\n\tthis.buffer = null;\n\tthis.detune = 0;\n\tthis.loop = false;\n\tthis.startTime = 0;\n\tthis.offset = 0;\n\tthis.playbackRate = 1;\n\tthis.isPlaying = false;\n\tthis.hasPlaybackControl = true;\n\tthis.sourceType = 'empty';\n\n\tthis.filters = [];\n\n}\n\nAudio.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Audio,\n\n\tgetOutput: function () {\n\n\t\treturn this.gain;\n\n\t},\n\n\tsetNodeSource: function ( audioNode ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'audioNode';\n\t\tthis.source = audioNode;\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t},\n\n\tsetMediaElementSource: function ( mediaElement ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaNode';\n\t\tthis.source = this.context.createMediaElementSource( mediaElement );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t},\n\n\tsetBuffer: function ( audioBuffer ) {\n\n\t\tthis.buffer = audioBuffer;\n\t\tthis.sourceType = 'buffer';\n\n\t\tif ( this.autoplay ) this.play();\n\n\t\treturn this;\n\n\t},\n\n\tplay: function () {\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar source = this.context.createBufferSource();\n\n\t\tsource.buffer = this.buffer;\n\t\tsource.loop = this.loop;\n\t\tsource.onended = this.onEnded.bind( this );\n\t\tthis.startTime = this.context.currentTime;\n\t\tsource.start( this.startTime, this.offset );\n\n\t\tthis.isPlaying = true;\n\n\t\tthis.source = source;\n\n\t\tthis.setDetune( this.detune );\n\t\tthis.setPlaybackRate( this.playbackRate );\n\n\t\treturn this.connect();\n\n\t},\n\n\tpause: function () {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\t\t\tthis.offset += ( this.context.currentTime - this.startTime ) * this.playbackRate;\n\t\t\tthis.isPlaying = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tstop: function () {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.source.stop();\n\t\tthis.source.onended = null;\n\t\tthis.offset = 0;\n\t\tthis.isPlaying = false;\n\n\t\treturn this;\n\n\t},\n\n\tconnect: function () {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.connect( this.filters[ 0 ] );\n\n\t\t\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.connect( this.getOutput() );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tdisconnect: function () {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.disconnect( this.filters[ 0 ] );\n\n\t\t\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.disconnect( this.getOutput() );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetFilters: function () {\n\n\t\treturn this.filters;\n\n\t},\n\n\tsetFilters: function ( value ) {\n\n\t\tif ( ! value ) value = [];\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.disconnect();\n\t\t\tthis.filters = value;\n\t\t\tthis.connect();\n\n\t\t} else {\n\n\t\t\tthis.filters = value;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetDetune: function ( value ) {\n\n\t\tthis.detune = value;\n\n\t\tif ( this.source.detune === undefined ) return; // only set detune when available\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.detune.setTargetAtTime( this.detune, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetDetune: function () {\n\n\t\treturn this.detune;\n\n\t},\n\n\tgetFilter: function () {\n\n\t\treturn this.getFilters()[ 0 ];\n\n\t},\n\n\tsetFilter: function ( filter ) {\n\n\t\treturn this.setFilters( filter ? [ filter ] : [] );\n\n\t},\n\n\tsetPlaybackRate: function ( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.playbackRate = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.playbackRate.setTargetAtTime( this.playbackRate, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetPlaybackRate: function () {\n\n\t\treturn this.playbackRate;\n\n\t},\n\n\tonEnded: function () {\n\n\t\tthis.isPlaying = false;\n\n\t},\n\n\tgetLoop: function () {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn this.loop;\n\n\t},\n\n\tsetLoop: function ( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.loop = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.loop = this.loop;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetVolume: function () {\n\n\t\treturn this.gain.gain.value;\n\n\t},\n\n\tsetVolume: function ( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction PositionalAudio( listener ) {\n\n\tAudio.call( this, listener );\n\n\tthis.panner = this.context.createPanner();\n\tthis.panner.panningModel = 'HRTF';\n\tthis.panner.connect( this.gain );\n\n}\n\nPositionalAudio.prototype = Object.assign( Object.create( Audio.prototype ), {\n\n\tconstructor: PositionalAudio,\n\n\tgetOutput: function () {\n\n\t\treturn this.panner;\n\n\t},\n\n\tgetRefDistance: function () {\n\n\t\treturn this.panner.refDistance;\n\n\t},\n\n\tsetRefDistance: function ( value ) {\n\n\t\tthis.panner.refDistance = value;\n\n\t\treturn this;\n\n\t},\n\n\tgetRolloffFactor: function () {\n\n\t\treturn this.panner.rolloffFactor;\n\n\t},\n\n\tsetRolloffFactor: function ( value ) {\n\n\t\tthis.panner.rolloffFactor = value;\n\n\t\treturn this;\n\n\t},\n\n\tgetDistanceModel: function () {\n\n\t\treturn this.panner.distanceModel;\n\n\t},\n\n\tsetDistanceModel: function ( value ) {\n\n\t\tthis.panner.distanceModel = value;\n\n\t\treturn this;\n\n\t},\n\n\tgetMaxDistance: function () {\n\n\t\treturn this.panner.maxDistance;\n\n\t},\n\n\tsetMaxDistance: function ( value ) {\n\n\t\tthis.panner.maxDistance = value;\n\n\t\treturn this;\n\n\t},\n\n\tsetDirectionalCone: function ( coneInnerAngle, coneOuterAngle, coneOuterGain ) {\n\n\t\tthis.panner.coneInnerAngle = coneInnerAngle;\n\t\tthis.panner.coneOuterAngle = coneOuterAngle;\n\t\tthis.panner.coneOuterGain = coneOuterGain;\n\n\t\treturn this;\n\n\t},\n\n\tupdateMatrixWorld: ( function () {\n\n\t\tvar position = new Vector3();\n\t\tvar quaternion = new Quaternion();\n\t\tvar scale = new Vector3();\n\n\t\tvar orientation = new Vector3();\n\n\t\treturn function updateMatrixWorld( force ) {\n\n\t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\t\tif ( this.hasPlaybackControl === true && this.isPlaying === false ) return;\n\n\t\t\tthis.matrixWorld.decompose( position, quaternion, scale );\n\n\t\t\torientation.set( 0, 0, 1 ).applyQuaternion( quaternion );\n\n\t\t\tvar panner = this.panner;\n\n\t\t\tif ( panner.positionX ) {\n\n\t\t\t\t// code path for Chrome and Firefox (see #14393)\n\n\t\t\t\tvar endTime = this.context.currentTime + this.listener.timeDelta;\n\n\t\t\t\tpanner.positionX.linearRampToValueAtTime( position.x, endTime );\n\t\t\t\tpanner.positionY.linearRampToValueAtTime( position.y, endTime );\n\t\t\t\tpanner.positionZ.linearRampToValueAtTime( position.z, endTime );\n\t\t\t\tpanner.orientationX.linearRampToValueAtTime( orientation.x, endTime );\n\t\t\t\tpanner.orientationY.linearRampToValueAtTime( orientation.y, endTime );\n\t\t\t\tpanner.orientationZ.linearRampToValueAtTime( orientation.z, endTime );\n\n\t\t\t} else {\n\n\t\t\t\tpanner.setPosition( position.x, position.y, position.z );\n\t\t\t\tpanner.setOrientation( orientation.x, orientation.y, orientation.z );\n\n\t\t\t}\n\n\t\t};\n\n\t} )()\n\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AudioAnalyser( audio, fftSize ) {\n\n\tthis.analyser = audio.context.createAnalyser();\n\tthis.analyser.fftSize = fftSize !== undefined ? fftSize : 2048;\n\n\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\n\n\taudio.getOutput().connect( this.analyser );\n\n}\n\nObject.assign( AudioAnalyser.prototype, {\n\n\tgetFrequencyData: function () {\n\n\t\tthis.analyser.getByteFrequencyData( this.data );\n\n\t\treturn this.data;\n\n\t},\n\n\tgetAverageFrequency: function () {\n\n\t\tvar value = 0, data = this.getFrequencyData();\n\n\t\tfor ( var i = 0; i < data.length; i ++ ) {\n\n\t\t\tvalue += data[ i ];\n\n\t\t}\n\n\t\treturn value / data.length;\n\n\t}\n\n} );\n\n/**\n *\n * Buffered scene graph property that allows weighted accumulation.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction PropertyMixer( binding, typeName, valueSize ) {\n\n\tthis.binding = binding;\n\tthis.valueSize = valueSize;\n\n\tvar bufferType = Float64Array,\n\t\tmixFunction;\n\n\tswitch ( typeName ) {\n\n\t\tcase 'quaternion':\n\t\t\tmixFunction = this._slerp;\n\t\t\tbreak;\n\n\t\tcase 'string':\n\t\tcase 'bool':\n\t\t\tbufferType = Array;\n\t\t\tmixFunction = this._select;\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tmixFunction = this._lerp;\n\n\t}\n\n\tthis.buffer = new bufferType( valueSize * 4 );\n\t// layout: [ incoming | accu0 | accu1 | orig ]\n\t//\n\t// interpolators can use .buffer as their .result\n\t// the data then goes to 'incoming'\n\t//\n\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t// the cumulative result and are compared to detect\n\t// changes\n\t//\n\t// 'orig' stores the original state of the property\n\n\tthis._mixBufferRegion = mixFunction;\n\n\tthis.cumulativeWeight = 0;\n\n\tthis.useCount = 0;\n\tthis.referenceCount = 0;\n\n}\n\nObject.assign( PropertyMixer.prototype, {\n\n\t// accumulate data in the 'incoming' region into 'accu<i>'\n\taccumulate: function ( accuIndex, weight ) {\n\n\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t// the weight and shouldn't have made the call in the first place\n\n\t\tvar buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tcurrentWeight = this.cumulativeWeight;\n\n\t\tif ( currentWeight === 0 ) {\n\n\t\t\t// accuN := incoming * weight\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\n\n\t\t\t}\n\n\t\t\tcurrentWeight = weight;\n\n\t\t} else {\n\n\t\t\t// accuN := accuN + incoming * weight\n\n\t\t\tcurrentWeight += weight;\n\t\t\tvar mix = weight / currentWeight;\n\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\n\n\t\t}\n\n\t\tthis.cumulativeWeight = currentWeight;\n\n\t},\n\n\t// apply the state of 'accu<i>' to the binding when accus differ\n\tapply: function ( accuIndex ) {\n\n\t\tvar stride = this.valueSize,\n\t\t\tbuffer = this.buffer,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tweight = this.cumulativeWeight,\n\n\t\t\tbinding = this.binding;\n\n\t\tthis.cumulativeWeight = 0;\n\n\t\tif ( weight < 1 ) {\n\n\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\n\t\t\tvar originalValueOffset = stride * 3;\n\n\t\t\tthis._mixBufferRegion(\n\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\n\n\t\t}\n\n\t\tfor ( var i = stride, e = stride + stride; i !== e; ++ i ) {\n\n\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\n\n\t\t\t\t// value has changed -> update scene graph\n\n\t\t\t\tbinding.setValue( buffer, offset );\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t// remember the state of the bound property and copy it to both accus\n\tsaveOriginalState: function () {\n\n\t\tvar binding = this.binding;\n\n\t\tvar buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\n\t\t\toriginalValueOffset = stride * 3;\n\n\t\tbinding.getValue( buffer, originalValueOffset );\n\n\t\t// accu[0..1] := orig -- initially detect changes against the original\n\t\tfor ( var i = stride, e = originalValueOffset; i !== e; ++ i ) {\n\n\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n\n\t\t}\n\n\t\tthis.cumulativeWeight = 0;\n\n\t},\n\n\t// apply the state previously taken via 'saveOriginalState' to the binding\n\trestoreOriginalState: function () {\n\n\t\tvar originalValueOffset = this.valueSize * 3;\n\t\tthis.binding.setValue( this.buffer, originalValueOffset );\n\n\t},\n\n\n\t// mix functions\n\n\t_select: function ( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tif ( t >= 0.5 ) {\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_slerp: function ( buffer, dstOffset, srcOffset, t ) {\n\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\n\n\t},\n\n\t_lerp: function ( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tvar s = 1 - t;\n\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\tvar j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n *\n * A reference to a real property in the scene graph.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\n// Characters [].:/ are reserved for track binding syntax.\nvar RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\n\nfunction Composite( targetGroup, path, optionalParsedPath ) {\n\n\tvar parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\n\n\tthis._targetGroup = targetGroup;\n\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\n}\n\nObject.assign( Composite.prototype, {\n\n\tgetValue: function ( array, offset ) {\n\n\t\tthis.bind(); // bind all binding\n\n\t\tvar firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\tbinding = this._bindings[ firstValidIndex ];\n\n\t\t// and only call .getValue on the first\n\t\tif ( binding !== undefined ) binding.getValue( array, offset );\n\n\t},\n\n\tsetValue: function ( array, offset ) {\n\n\t\tvar bindings = this._bindings;\n\n\t\tfor ( var i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].setValue( array, offset );\n\n\t\t}\n\n\t},\n\n\tbind: function () {\n\n\t\tvar bindings = this._bindings;\n\n\t\tfor ( var i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].bind();\n\n\t\t}\n\n\t},\n\n\tunbind: function () {\n\n\t\tvar bindings = this._bindings;\n\n\t\tfor ( var i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].unbind();\n\n\t\t}\n\n\t}\n\n} );\n\n\nfunction PropertyBinding( rootNode, path, parsedPath ) {\n\n\tthis.path = path;\n\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\n\n\tthis.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName ) || rootNode;\n\n\tthis.rootNode = rootNode;\n\n}\n\nObject.assign( PropertyBinding, {\n\n\tComposite: Composite,\n\n\tcreate: function ( root, path, parsedPath ) {\n\n\t\tif ( ! ( root && root.isAnimationObjectGroup ) ) {\n\n\t\t\treturn new PropertyBinding( root, path, parsedPath );\n\n\t\t} else {\n\n\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\n\n\t\t}\n\n\t},\n\n\t/**\n\t * Replaces spaces with underscores and removes unsupported characters from\n\t * node names, to ensure compatibility with parseTrackName().\n\t *\n\t * @param {string} name Node name to be sanitized.\n\t * @return {string}\n\t */\n\tsanitizeNodeName: ( function () {\n\n\t\tvar reservedRe = new RegExp( '[' + RESERVED_CHARS_RE + ']', 'g' );\n\n\t\treturn function sanitizeNodeName( name ) {\n\n\t\t\treturn name.replace( /\\s/g, '_' ).replace( reservedRe, '' );\n\n\t\t};\n\n\t}() ),\n\n\tparseTrackName: function () {\n\n\t\t// Attempts to allow node names from any language. ES5's `\\w` regexp matches\n\t\t// only latin characters, and the unicode \\p{L} is not yet supported. So\n\t\t// instead, we exclude reserved characters and match everything else.\n\t\tvar wordChar = '[^' + RESERVED_CHARS_RE + ']';\n\t\tvar wordCharOrDot = '[^' + RESERVED_CHARS_RE.replace( '\\\\.', '' ) + ']';\n\n\t\t// Parent directories, delimited by '/' or ':'. Currently unused, but must\n\t\t// be matched to parse the rest of the track name.\n\t\tvar directoryRe = /((?:WC+[\\/:])*)/.source.replace( 'WC', wordChar );\n\n\t\t// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\n\t\tvar nodeRe = /(WCOD+)?/.source.replace( 'WCOD', wordCharOrDot );\n\n\t\t// Object on target node, and accessor. May not contain reserved\n\t\t// characters. Accessor may contain any character except closing bracket.\n\t\tvar objectRe = /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace( 'WC', wordChar );\n\n\t\t// Property and accessor. May not contain reserved characters. Accessor may\n\t\t// contain any non-bracket characters.\n\t\tvar propertyRe = /\\.(WC+)(?:\\[(.+)\\])?/.source.replace( 'WC', wordChar );\n\n\t\tvar trackRe = new RegExp( ''\n\t\t\t+ '^'\n\t\t\t+ directoryRe\n\t\t\t+ nodeRe\n\t\t\t+ objectRe\n\t\t\t+ propertyRe\n\t\t\t+ '$'\n\t\t);\n\n\t\tvar supportedObjectNames = [ 'material', 'materials', 'bones' ];\n\n\t\treturn function parseTrackName( trackName ) {\n\n\t\t\tvar matches = trackRe.exec( trackName );\n\n\t\t\tif ( ! matches ) {\n\n\t\t\t\tthrow new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\n\n\t\t\t}\n\n\t\t\tvar results = {\n\t\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\t\tnodeName: matches[ 2 ],\n\t\t\t\tobjectName: matches[ 3 ],\n\t\t\t\tobjectIndex: matches[ 4 ],\n\t\t\t\tpropertyName: matches[ 5 ], // required\n\t\t\t\tpropertyIndex: matches[ 6 ]\n\t\t\t};\n\n\t\t\tvar lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\n\n\t\t\tif ( lastDot !== undefined && lastDot !== - 1 ) {\n\n\t\t\t\tvar objectName = results.nodeName.substring( lastDot + 1 );\n\n\t\t\t\t// Object names must be checked against a whitelist. Otherwise, there\n\t\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t\t// include '.' characters).\n\t\t\t\tif ( supportedObjectNames.indexOf( objectName ) !== - 1 ) {\n\n\t\t\t\t\tresults.nodeName = results.nodeName.substring( 0, lastDot );\n\t\t\t\t\tresults.objectName = objectName;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\n\n\t\t\t\tthrow new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\n\n\t\t\t}\n\n\t\t\treturn results;\n\n\t\t};\n\n\t}(),\n\n\tfindNode: function ( root, nodeName ) {\n\n\t\tif ( ! nodeName || nodeName === \"\" || nodeName === \"root\" || nodeName === \".\" || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\n\n\t\t\treturn root;\n\n\t\t}\n\n\t\t// search into skeleton bones.\n\t\tif ( root.skeleton ) {\n\n\t\t\tvar bone = root.skeleton.getBoneByName( nodeName );\n\n\t\t\tif ( bone !== undefined ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// search into node subtree.\n\t\tif ( root.children ) {\n\n\t\t\tvar searchNodeSubtree = function ( children ) {\n\n\t\t\t\tfor ( var i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\tvar childNode = children[ i ];\n\n\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\n\t\t\t\t\t\treturn childNode;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar result = searchNodeSubtree( childNode.children );\n\n\t\t\t\t\tif ( result ) return result;\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t};\n\n\t\t\tvar subTreeNode = searchNodeSubtree( root.children );\n\n\t\t\tif ( subTreeNode ) {\n\n\t\t\t\treturn subTreeNode;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n} );\n\nObject.assign( PropertyBinding.prototype, { // prototype, continued\n\n\t// these are used to \"bind\" a nonexistent property\n\t_getValue_unavailable: function () {},\n\t_setValue_unavailable: function () {},\n\n\tBindingType: {\n\t\tDirect: 0,\n\t\tEntireArray: 1,\n\t\tArrayElement: 2,\n\t\tHasFromToArray: 3\n\t},\n\n\tVersioning: {\n\t\tNone: 0,\n\t\tNeedsUpdate: 1,\n\t\tMatrixWorldNeedsUpdate: 2\n\t},\n\n\tGetterByBindingType: [\n\n\t\tfunction getValue_direct( buffer, offset ) {\n\n\t\t\tbuffer[ offset ] = this.node[ this.propertyName ];\n\n\t\t},\n\n\t\tfunction getValue_array( buffer, offset ) {\n\n\t\t\tvar source = this.resolvedProperty;\n\n\t\t\tfor ( var i = 0, n = source.length; i !== n; ++ i ) {\n\n\t\t\t\tbuffer[ offset ++ ] = source[ i ];\n\n\t\t\t}\n\n\t\t},\n\n\t\tfunction getValue_arrayElement( buffer, offset ) {\n\n\t\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\n\t\t},\n\n\t\tfunction getValue_toArray( buffer, offset ) {\n\n\t\t\tthis.resolvedProperty.toArray( buffer, offset );\n\n\t\t}\n\n\t],\n\n\tSetterByBindingTypeAndVersioning: [\n\n\t\t[\n\t\t\t// Direct\n\n\t\t\tfunction setValue_direct( buffer, offset ) {\n\n\t\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\n\t\t\t},\n\n\t\t\tfunction setValue_direct_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t], [\n\n\t\t\t// EntireArray\n\n\t\t\tfunction setValue_array( buffer, offset ) {\n\n\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tfunction setValue_array_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t}\n\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t}\n\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t], [\n\n\t\t\t// ArrayElement\n\n\t\t\tfunction setValue_arrayElement( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\n\t\t\t},\n\n\t\t\tfunction setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t], [\n\n\t\t\t// HasToFromArray\n\n\t\t\tfunction setValue_fromArray( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\n\t\t\t},\n\n\t\t\tfunction setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t]\n\n\t],\n\n\tgetValue: function getValue_unbound( targetArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.getValue( targetArray, offset );\n\n\t\t// Note: This class uses a State pattern on a per-method basis:\n\t\t// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n\t\t// prototype version of these methods with one that represents\n\t\t// the bound state. When the property is not found, the methods\n\t\t// become no-ops.\n\n\t},\n\n\tsetValue: function getValue_unbound( sourceArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.setValue( sourceArray, offset );\n\n\t},\n\n\t// create getter / setter pair for a property in the scene graph\n\tbind: function () {\n\n\t\tvar targetObject = this.node,\n\t\t\tparsedPath = this.parsedPath,\n\n\t\t\tobjectName = parsedPath.objectName,\n\t\t\tpropertyName = parsedPath.propertyName,\n\t\t\tpropertyIndex = parsedPath.propertyIndex;\n\n\t\tif ( ! targetObject ) {\n\n\t\t\ttargetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName ) || this.rootNode;\n\n\t\t\tthis.node = targetObject;\n\n\t\t}\n\n\t\t// set fail state so we can just 'return' on error\n\t\tthis.getValue = this._getValue_unavailable;\n\t\tthis.setValue = this._setValue_unavailable;\n\n\t\t// ensure there is a value node\n\t\tif ( ! targetObject ) {\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update node for track: ' + this.path + ' but it wasn\\'t found.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( objectName ) {\n\n\t\t\tvar objectIndex = parsedPath.objectIndex;\n\n\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\tswitch ( objectName ) {\n\n\t\t\t\tcase 'materials':\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.materials ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.materials;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bones':\n\n\t\t\t\t\tif ( ! targetObject.skeleton ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t// and convert the integer string to a true integer.\n\n\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tfor ( var i = 0; i < targetObject.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\n\n\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[ objectName ];\n\n\t\t\t}\n\n\n\t\t\tif ( objectIndex !== undefined ) {\n\n\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\ttargetObject = targetObject[ objectIndex ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// resolve property\n\t\tvar nodeProperty = targetObject[ propertyName ];\n\n\t\tif ( nodeProperty === undefined ) {\n\n\t\t\tvar nodeName = parsedPath.nodeName;\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\n\t\t\t\t'.' + propertyName + ' but it wasn\\'t found.', targetObject );\n\t\t\treturn;\n\n\t\t}\n\n\t\t// determine versioning scheme\n\t\tvar versioning = this.Versioning.None;\n\n\t\tthis.targetObject = targetObject;\n\n\t\tif ( targetObject.needsUpdate !== undefined ) { // material\n\n\t\t\tversioning = this.Versioning.NeedsUpdate;\n\n\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\n\n\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\n\t\t}\n\n\t\t// determine how the property gets bound\n\t\tvar bindingType = this.BindingType.Direct;\n\n\t\tif ( propertyIndex !== undefined ) {\n\n\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\n\t\t\tif ( propertyName === \"morphTargetInfluences\" ) {\n\n\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\tif ( ! targetObject.geometry ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( targetObject.geometry.isBufferGeometry ) {\n\n\t\t\t\t\tif ( ! targetObject.geometry.morphAttributes ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var i = 0; i < this.node.geometry.morphAttributes.position.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject.geometry.morphAttributes.position[ i ].name === propertyIndex ) {\n\n\t\t\t\t\t\t\tpropertyIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( ! targetObject.geometry.morphTargets ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphTargets.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var i = 0; i < this.node.geometry.morphTargets.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject.geometry.morphTargets[ i ].name === propertyIndex ) {\n\n\t\t\t\t\t\t\tpropertyIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tbindingType = this.BindingType.ArrayElement;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\tthis.propertyIndex = propertyIndex;\n\n\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n\n\t\t\t// must use copy for Object3D.Euler/Quaternion\n\n\t\t\tbindingType = this.BindingType.HasFromToArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else if ( Array.isArray( nodeProperty ) ) {\n\n\t\t\tbindingType = this.BindingType.EntireArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else {\n\n\t\t\tthis.propertyName = propertyName;\n\n\t\t}\n\n\t\t// select getter / setter\n\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\n\t},\n\n\tunbind: function () {\n\n\t\tthis.node = null;\n\n\t\t// back to the prototype version of getValue / setValue\n\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n} );\n\n//!\\ DECLARE ALIAS AFTER assign prototype !\nObject.assign( PropertyBinding.prototype, {\n\n\t// initial state of these methods that calls 'bind'\n\t_getValue_unbound: PropertyBinding.prototype.getValue,\n\t_setValue_unbound: PropertyBinding.prototype.setValue,\n\n} );\n\n/**\n *\n * A group of objects that receives a shared animation state.\n *\n * Usage:\n *\n *  - Add objects you would otherwise pass as 'root' to the\n *    constructor or the .clipAction method of AnimationMixer.\n *\n *  - Instead pass this object as 'root'.\n *\n *  - You can also add and remove objects later when the mixer\n *    is running.\n *\n * Note:\n *\n *    Objects of this class appear as one object to the mixer,\n *    so cache control of the individual objects must be done\n *    on the group.\n *\n * Limitation:\n *\n *  - The animated properties must be compatible among the\n *    all objects in the group.\n *\n *  - A single property can either be controlled through a\n *    target group or directly, but not both.\n *\n * @author tschw\n */\n\nfunction AnimationObjectGroup() {\n\n\tthis.uuid = _Math.generateUUID();\n\n\t// cached objects followed by the active ones\n\tthis._objects = Array.prototype.slice.call( arguments );\n\n\tthis.nCachedObjects_ = 0; // threshold\n\t// note: read by PropertyBinding.Composite\n\n\tvar indices = {};\n\tthis._indicesByUUID = indices; // for bookkeeping\n\n\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\tindices[ arguments[ i ].uuid ] = i;\n\n\t}\n\n\tthis._paths = []; // inside: string\n\tthis._parsedPaths = []; // inside: { we don't care, here }\n\tthis._bindings = []; // inside: Array< PropertyBinding >\n\tthis._bindingsIndicesByPath = {}; // inside: indices in these arrays\n\n\tvar scope = this;\n\n\tthis.stats = {\n\n\t\tobjects: {\n\t\t\tget total() {\n\n\t\t\t\treturn scope._objects.length;\n\n\t\t\t},\n\t\t\tget inUse() {\n\n\t\t\t\treturn this.total - scope.nCachedObjects_;\n\n\t\t\t}\n\t\t},\n\t\tget bindingsPerObject() {\n\n\t\t\treturn scope._bindings.length;\n\n\t\t}\n\n\t};\n\n}\n\nObject.assign( AnimationObjectGroup.prototype, {\n\n\tisAnimationObjectGroup: true,\n\n\tadd: function () {\n\n\t\tvar objects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tpaths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length,\n\t\t\tknownObject = undefined;\n\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tvar object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index === undefined ) {\n\n\t\t\t\t// unknown object -> add it to the ACTIVE region\n\n\t\t\t\tindex = nObjects ++;\n\t\t\t\tindicesByUUID[ uuid ] = index;\n\t\t\t\tobjects.push( object );\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tbindings[ j ].push( new PropertyBinding( object, paths[ j ], parsedPaths[ j ] ) );\n\n\t\t\t\t}\n\n\t\t\t} else if ( index < nCachedObjects ) {\n\n\t\t\t\tknownObject = objects[ index ];\n\n\t\t\t\t// move existing object to the ACTIVE region\n\n\t\t\t\tvar firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\n\n\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\n\t\t\t\tobjects[ firstActiveIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\n\t\t\t\t\tif ( binding === undefined ) {\n\n\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t// or may not exist\n\n\t\t\t\t\t\tbinding = new PropertyBinding( object, paths[ j ], parsedPaths[ j ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t} else if ( objects[ index ] !== knownObject ) {\n\n\t\t\t\tconsole.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\n\t\t\t\t\t'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\n\n\t\t\t} // else the object is already where we want it to be\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t},\n\n\tremove: function () {\n\n\t\tvar objects = this._objects,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tvar object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\n\n\t\t\t\t// move existing object into the CACHED region\n\n\t\t\t\tvar lastCachedIndex = nCachedObjects ++,\n\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\n\n\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = firstActiveObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\n\t\t\t\tobjects[ lastCachedIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = firstActive;\n\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t},\n\n\t// remove & forget\n\tuncache: function () {\n\n\t\tvar objects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tvar object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tdelete indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index < nCachedObjects ) {\n\n\t\t\t\t\t// object is cached, shrink the CACHED region\n\n\t\t\t\t\tvar firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\n\t\t\t\t\t\tlastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t// last cached object takes this object's place\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\t// last object goes to the activated slot and pop\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// object is active, just swap with the last and pop\n\n\t\t\t\t\tvar lastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tvar bindingsForPath = bindings[ j ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} // cached or active\n\n\t\t\t} // if object is known\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t},\n\n\t// Internal interface used by befriended PropertyBinding.Composite:\n\n\tsubscribe_: function ( path, parsedPath ) {\n\n\t\t// returns an array of bindings for the given path that is changed\n\t\t// according to the contained objects in the group\n\n\t\tvar indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ],\n\t\t\tbindings = this._bindings;\n\n\t\tif ( index !== undefined ) return bindings[ index ];\n\n\t\tvar paths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tobjects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tbindingsForPath = new Array( nObjects );\n\n\t\tindex = bindings.length;\n\n\t\tindicesByPath[ path ] = index;\n\n\t\tpaths.push( path );\n\t\tparsedPaths.push( parsedPath );\n\t\tbindings.push( bindingsForPath );\n\n\t\tfor ( var i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\n\n\t\t\tvar object = objects[ i ];\n\t\t\tbindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\n\n\t\t}\n\n\t\treturn bindingsForPath;\n\n\t},\n\n\tunsubscribe_: function ( path ) {\n\n\t\t// tells the group to forget about a property path and no longer\n\t\t// update the array previously obtained with 'subscribe_'\n\n\t\tvar indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ];\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tvar paths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\n\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\n\n\t\t\tindicesByPath[ lastBindingsPath ] = index;\n\n\t\t\tbindings[ index ] = lastBindings;\n\t\t\tbindings.pop();\n\n\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n\t\t\tparsedPaths.pop();\n\n\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\n\t\t\tpaths.pop();\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n *\n * Action provided by AnimationMixer for scheduling clip playback on specific\n * objects.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n *\n */\n\nfunction AnimationAction( mixer, clip, localRoot ) {\n\n\tthis._mixer = mixer;\n\tthis._clip = clip;\n\tthis._localRoot = localRoot || null;\n\n\tvar tracks = clip.tracks,\n\t\tnTracks = tracks.length,\n\t\tinterpolants = new Array( nTracks );\n\n\tvar interpolantSettings = {\n\t\tendingStart: ZeroCurvatureEnding,\n\t\tendingEnd: ZeroCurvatureEnding\n\t};\n\n\tfor ( var i = 0; i !== nTracks; ++ i ) {\n\n\t\tvar interpolant = tracks[ i ].createInterpolant( null );\n\t\tinterpolants[ i ] = interpolant;\n\t\tinterpolant.settings = interpolantSettings;\n\n\t}\n\n\tthis._interpolantSettings = interpolantSettings;\n\n\tthis._interpolants = interpolants; // bound by the mixer\n\n\t// inside: PropertyMixer (managed by the mixer)\n\tthis._propertyBindings = new Array( nTracks );\n\n\tthis._cacheIndex = null; // for the memory manager\n\tthis._byClipCacheIndex = null; // for the memory manager\n\n\tthis._timeScaleInterpolant = null;\n\tthis._weightInterpolant = null;\n\n\tthis.loop = LoopRepeat;\n\tthis._loopCount = - 1;\n\n\t// global mixer time when the action is to be started\n\t// it's set back to 'null' upon start of the action\n\tthis._startTime = null;\n\n\t// scaled local time of the action\n\t// gets clamped or wrapped to 0..clip.duration according to loop\n\tthis.time = 0;\n\n\tthis.timeScale = 1;\n\tthis._effectiveTimeScale = 1;\n\n\tthis.weight = 1;\n\tthis._effectiveWeight = 1;\n\n\tthis.repetitions = Infinity; // no. of repetitions when looping\n\n\tthis.paused = false; // true -> zero effective time scale\n\tthis.enabled = true; // false -> zero effective weight\n\n\tthis.clampWhenFinished = false;// keep feeding the last frame?\n\n\tthis.zeroSlopeAtStart = true;// for smooth interpolation w/o separate\n\tthis.zeroSlopeAtEnd = true;// clips for start, loop and end\n\n}\n\nObject.assign( AnimationAction.prototype, {\n\n\t// State & Scheduling\n\n\tplay: function () {\n\n\t\tthis._mixer._activateAction( this );\n\n\t\treturn this;\n\n\t},\n\n\tstop: function () {\n\n\t\tthis._mixer._deactivateAction( this );\n\n\t\treturn this.reset();\n\n\t},\n\n\treset: function () {\n\n\t\tthis.paused = false;\n\t\tthis.enabled = true;\n\n\t\tthis.time = 0; // restart clip\n\t\tthis._loopCount = - 1;// forget previous loops\n\t\tthis._startTime = null;// forget scheduling\n\n\t\treturn this.stopFading().stopWarping();\n\n\t},\n\n\tisRunning: function () {\n\n\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\n\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\n\n\t},\n\n\t// return true when play has been called\n\tisScheduled: function () {\n\n\t\treturn this._mixer._isActiveAction( this );\n\n\t},\n\n\tstartAt: function ( time ) {\n\n\t\tthis._startTime = time;\n\n\t\treturn this;\n\n\t},\n\n\tsetLoop: function ( mode, repetitions ) {\n\n\t\tthis.loop = mode;\n\t\tthis.repetitions = repetitions;\n\n\t\treturn this;\n\n\t},\n\n\t// Weight\n\n\t// set the weight stopping any scheduled fading\n\t// although .enabled = false yields an effective weight of zero, this\n\t// method does *not* change .enabled, because it would be confusing\n\tsetEffectiveWeight: function ( weight ) {\n\n\t\tthis.weight = weight;\n\n\t\t// note: same logic as when updated at runtime\n\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\n\t\treturn this.stopFading();\n\n\t},\n\n\t// return the weight considering fading and .enabled\n\tgetEffectiveWeight: function () {\n\n\t\treturn this._effectiveWeight;\n\n\t},\n\n\tfadeIn: function ( duration ) {\n\n\t\treturn this._scheduleFading( duration, 0, 1 );\n\n\t},\n\n\tfadeOut: function ( duration ) {\n\n\t\treturn this._scheduleFading( duration, 1, 0 );\n\n\t},\n\n\tcrossFadeFrom: function ( fadeOutAction, duration, warp ) {\n\n\t\tfadeOutAction.fadeOut( duration );\n\t\tthis.fadeIn( duration );\n\n\t\tif ( warp ) {\n\n\t\t\tvar fadeInDuration = this._clip.duration,\n\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\n\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\n\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\n\t\t\tthis.warp( endStartRatio, 1.0, duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcrossFadeTo: function ( fadeInAction, duration, warp ) {\n\n\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\n\n\t},\n\n\tstopFading: function () {\n\n\t\tvar weightInterpolant = this._weightInterpolant;\n\n\t\tif ( weightInterpolant !== null ) {\n\n\t\t\tthis._weightInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// Time Scale Control\n\n\t// set the time scale stopping any scheduled warping\n\t// although .paused = true yields an effective time scale of zero, this\n\t// method does *not* change .paused, because it would be confusing\n\tsetEffectiveTimeScale: function ( timeScale ) {\n\n\t\tthis.timeScale = timeScale;\n\t\tthis._effectiveTimeScale = this.paused ? 0 : timeScale;\n\n\t\treturn this.stopWarping();\n\n\t},\n\n\t// return the time scale considering warping and .paused\n\tgetEffectiveTimeScale: function () {\n\n\t\treturn this._effectiveTimeScale;\n\n\t},\n\n\tsetDuration: function ( duration ) {\n\n\t\tthis.timeScale = this._clip.duration / duration;\n\n\t\treturn this.stopWarping();\n\n\t},\n\n\tsyncWith: function ( action ) {\n\n\t\tthis.time = action.time;\n\t\tthis.timeScale = action.timeScale;\n\n\t\treturn this.stopWarping();\n\n\t},\n\n\thalt: function ( duration ) {\n\n\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\n\n\t},\n\n\twarp: function ( startTimeScale, endTimeScale, duration ) {\n\n\t\tvar mixer = this._mixer, now = mixer.time,\n\t\t\tinterpolant = this._timeScaleInterpolant,\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._timeScaleInterpolant = interpolant;\n\n\t\t}\n\n\t\tvar times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\ttimes[ 1 ] = now + duration;\n\n\t\tvalues[ 0 ] = startTimeScale / timeScale;\n\t\tvalues[ 1 ] = endTimeScale / timeScale;\n\n\t\treturn this;\n\n\t},\n\n\tstopWarping: function () {\n\n\t\tvar timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\tif ( timeScaleInterpolant !== null ) {\n\n\t\t\tthis._timeScaleInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// Object Accessors\n\n\tgetMixer: function () {\n\n\t\treturn this._mixer;\n\n\t},\n\n\tgetClip: function () {\n\n\t\treturn this._clip;\n\n\t},\n\n\tgetRoot: function () {\n\n\t\treturn this._localRoot || this._mixer._root;\n\n\t},\n\n\t// Interna\n\n\t_update: function ( time, deltaTime, timeDirection, accuIndex ) {\n\n\t\t// called by the mixer\n\n\t\tif ( ! this.enabled ) {\n\n\t\t\t// call ._updateWeight() to update ._effectiveWeight\n\n\t\t\tthis._updateWeight( time );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar startTime = this._startTime;\n\n\t\tif ( startTime !== null ) {\n\n\t\t\t// check for scheduled start of action\n\n\t\t\tvar timeRunning = ( time - startTime ) * timeDirection;\n\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\n\n\t\t\t\treturn; // yet to come / don't decide when delta = 0\n\n\t\t\t}\n\n\t\t\t// start\n\n\t\t\tthis._startTime = null; // unschedule\n\t\t\tdeltaTime = timeDirection * timeRunning;\n\n\t\t}\n\n\t\t// apply time scale and advance time\n\n\t\tdeltaTime *= this._updateTimeScale( time );\n\t\tvar clipTime = this._updateTime( deltaTime );\n\n\t\t// note: _updateTime may disable the action resulting in\n\t\t// an effective weight of 0\n\n\t\tvar weight = this._updateWeight( time );\n\n\t\tif ( weight > 0 ) {\n\n\t\t\tvar interpolants = this._interpolants;\n\t\t\tvar propertyMixers = this._propertyBindings;\n\n\t\t\tfor ( var j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_updateWeight: function ( time ) {\n\n\t\tvar weight = 0;\n\n\t\tif ( this.enabled ) {\n\n\t\t\tweight = this.weight;\n\t\t\tvar interpolant = this._weightInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\tif ( interpolantValue === 0 ) {\n\n\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\tthis.enabled = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveWeight = weight;\n\t\treturn weight;\n\n\t},\n\n\t_updateTimeScale: function ( time ) {\n\n\t\tvar timeScale = 0;\n\n\t\tif ( ! this.paused ) {\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\t\tvar interpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\tif ( timeScale === 0 ) {\n\n\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\tthis.paused = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\tthis.timeScale = timeScale;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveTimeScale = timeScale;\n\t\treturn timeScale;\n\n\t},\n\n\t_updateTime: function ( deltaTime ) {\n\n\t\tvar time = this.time + deltaTime;\n\t\tvar duration = this._clip.duration;\n\t\tvar loop = this.loop;\n\t\tvar loopCount = this._loopCount;\n\n\t\tvar pingPong = ( loop === LoopPingPong );\n\n\t\tif ( deltaTime === 0 ) {\n\n\t\t\tif ( loopCount === - 1 ) return time;\n\n\t\t\treturn ( pingPong && ( loopCount & 1 ) === 1 ) ? duration - time : time;\n\n\t\t}\n\n\t\tif ( loop === LoopOnce ) {\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tthis._loopCount = 0;\n\t\t\t\tthis._setEndings( true, true, false );\n\n\t\t\t}\n\n\t\t\thandle_stop: {\n\n\t\t\t\tif ( time >= duration ) {\n\n\t\t\t\t\ttime = duration;\n\n\t\t\t\t} else if ( time < 0 ) {\n\n\t\t\t\t\ttime = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tbreak handle_stop;\n\n\t\t\t\t}\n\n\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\telse this.enabled = false;\n\n\t\t\t\tthis.time = time;\n\n\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\tdirection: deltaTime < 0 ? - 1 : 1\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else { // repetitive Repeat or PingPong\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tif ( deltaTime >= 0 ) {\n\n\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\tthis._setEndings( true, this.repetitions === 0, pingPong );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t// so leave loopCount at -1\n\n\t\t\t\t\tthis._setEndings( this.repetitions === 0, true, pingPong );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( time >= duration || time < 0 ) {\n\n\t\t\t\t// wrap around\n\n\t\t\t\tvar loopDelta = Math.floor( time / duration ); // signed\n\t\t\t\ttime -= duration * loopDelta;\n\n\t\t\t\tloopCount += Math.abs( loopDelta );\n\n\t\t\t\tvar pending = this.repetitions - loopCount;\n\n\t\t\t\tif ( pending <= 0 ) {\n\n\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : - 1\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// keep running\n\n\t\t\t\t\tif ( pending === 1 ) {\n\n\t\t\t\t\t\t// entering the last round\n\n\t\t\t\t\t\tvar atStart = deltaTime < 0;\n\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._loopCount = loopCount;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tthis.time = time;\n\n\t\t\t}\n\n\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\n\n\t\t\t\t// invert time for the \"pong round\"\n\n\t\t\t\treturn duration - time;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn time;\n\n\t},\n\n\t_setEndings: function ( atStart, atEnd, pingPong ) {\n\n\t\tvar settings = this._interpolantSettings;\n\n\t\tif ( pingPong ) {\n\n\t\t\tsettings.endingStart = ZeroSlopeEnding;\n\t\t\tsettings.endingEnd = ZeroSlopeEnding;\n\n\t\t} else {\n\n\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\n\t\t\tif ( atStart ) {\n\n\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t\tif ( atEnd ) {\n\n\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_scheduleFading: function ( duration, weightNow, weightThen ) {\n\n\t\tvar mixer = this._mixer, now = mixer.time,\n\t\t\tinterpolant = this._weightInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._weightInterpolant = interpolant;\n\n\t\t}\n\n\t\tvar times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\tvalues[ 0 ] = weightNow;\n\t\ttimes[ 1 ] = now + duration;\n\t\tvalues[ 1 ] = weightThen;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n *\n * Player for AnimationClips.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction AnimationMixer( root ) {\n\n\tthis._root = root;\n\tthis._initMemoryManager();\n\tthis._accuIndex = 0;\n\n\tthis.time = 0;\n\n\tthis.timeScale = 1.0;\n\n}\n\nAnimationMixer.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: AnimationMixer,\n\n\t_bindAction: function ( action, prototypeAction ) {\n\n\t\tvar root = action._localRoot || this._root,\n\t\t\ttracks = action._clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tbindings = action._propertyBindings,\n\t\t\tinterpolants = action._interpolants,\n\t\t\trootUuid = root.uuid,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingsByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingsByName === undefined ) {\n\n\t\t\tbindingsByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\n\n\t\t}\n\n\t\tfor ( var i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tvar track = tracks[ i ],\n\t\t\t\ttrackName = track.name,\n\t\t\t\tbinding = bindingsByName[ trackName ];\n\n\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t} else {\n\n\t\t\t\tbinding = bindings[ i ];\n\n\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\t// existing binding, make sure the cache knows\n\n\t\t\t\t\tif ( binding._cacheIndex === null ) {\n\n\t\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tvar path = prototypeAction && prototypeAction.\n\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\n\n\t\t\t\tbinding = new PropertyMixer(\n\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\n\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t}\n\n\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\n\n\t\t}\n\n\t},\n\n\t_activateAction: function ( action ) {\n\n\t\tif ( ! this._isActiveAction( action ) ) {\n\n\t\t\tif ( action._cacheIndex === null ) {\n\n\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t// appears to be still using it -> rebind\n\n\t\t\t\tvar rootUuid = ( action._localRoot || this._root ).uuid,\n\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\t\tthis._bindAction( action,\n\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\n\n\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\n\n\t\t\t}\n\n\t\t\tvar bindings = action._propertyBindings;\n\n\t\t\t// increment reference counts / sort out state\n\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tvar binding = bindings[ i ];\n\n\t\t\t\tif ( binding.useCount ++ === 0 ) {\n\n\t\t\t\t\tthis._lendBinding( binding );\n\t\t\t\t\tbinding.saveOriginalState();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._lendAction( action );\n\n\t\t}\n\n\t},\n\n\t_deactivateAction: function ( action ) {\n\n\t\tif ( this._isActiveAction( action ) ) {\n\n\t\t\tvar bindings = action._propertyBindings;\n\n\t\t\t// decrement reference counts / sort out state\n\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tvar binding = bindings[ i ];\n\n\t\t\t\tif ( -- binding.useCount === 0 ) {\n\n\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\tthis._takeBackBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._takeBackAction( action );\n\n\t\t}\n\n\t},\n\n\t// Memory manager\n\n\t_initMemoryManager: function () {\n\n\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\t\tthis._nActiveActions = 0;\n\n\t\tthis._actionsByClip = {};\n\t\t// inside:\n\t\t// {\n\t\t// \tknownActions: Array< AnimationAction > - used as prototypes\n\t\t// \tactionByRoot: AnimationAction - lookup\n\t\t// }\n\n\n\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\t\tthis._nActiveBindings = 0;\n\n\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\n\t\tthis._controlInterpolants = []; // same game as above\n\t\tthis._nActiveControlInterpolants = 0;\n\n\t\tvar scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tactions: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._actions.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveActions;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tbindings: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._bindings.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveBindings;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tcontrolInterpolants: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._controlInterpolants.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveControlInterpolants;\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t};\n\n\t},\n\n\t// Memory management for AnimationAction objects\n\n\t_isActiveAction: function ( action ) {\n\n\t\tvar index = action._cacheIndex;\n\t\treturn index !== null && index < this._nActiveActions;\n\n\t},\n\n\t_addInactiveAction: function ( action, clipUuid, rootUuid ) {\n\n\t\tvar actions = this._actions,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip === undefined ) {\n\n\t\t\tactionsForClip = {\n\n\t\t\t\tknownActions: [ action ],\n\t\t\t\tactionByRoot: {}\n\n\t\t\t};\n\n\t\t\taction._byClipCacheIndex = 0;\n\n\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\n\n\t\t} else {\n\n\t\t\tvar knownActions = actionsForClip.knownActions;\n\n\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\tknownActions.push( action );\n\n\t\t}\n\n\t\taction._cacheIndex = actions.length;\n\t\tactions.push( action );\n\n\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\n\n\t},\n\n\t_removeInactiveAction: function ( action ) {\n\n\t\tvar actions = this._actions,\n\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\n\t\t\tcacheIndex = action._cacheIndex;\n\n\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\tactions.pop();\n\n\t\taction._cacheIndex = null;\n\n\n\t\tvar clipUuid = action._clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ],\n\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\n\t\t\tlastKnownAction =\n\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\n\n\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\n\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n\t\tknownActionsForClip.pop();\n\n\t\taction._byClipCacheIndex = null;\n\n\n\t\tvar actionByRoot = actionsForClip.actionByRoot,\n\t\t\trootUuid = ( action._localRoot || this._root ).uuid;\n\n\t\tdelete actionByRoot[ rootUuid ];\n\n\t\tif ( knownActionsForClip.length === 0 ) {\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t\tthis._removeInactiveBindingsForAction( action );\n\n\t},\n\n\t_removeInactiveBindingsForAction: function ( action ) {\n\n\t\tvar bindings = action._propertyBindings;\n\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tvar binding = bindings[ i ];\n\n\t\t\tif ( -- binding.referenceCount === 0 ) {\n\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_lendAction: function ( action ) {\n\n\t\t// [ active actions |  inactive actions  ]\n\t\t// [  active actions >| inactive actions ]\n\t\t//                 s        a\n\t\t//                  <-swap->\n\t\t//                 a        s\n\n\t\tvar actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveActions ++,\n\n\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\n\n\t\taction._cacheIndex = lastActiveIndex;\n\t\tactions[ lastActiveIndex ] = action;\n\n\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = firstInactiveAction;\n\n\t},\n\n\t_takeBackAction: function ( action ) {\n\n\t\t// [  active actions  | inactive actions ]\n\t\t// [ active actions |< inactive actions  ]\n\t\t//        a        s\n\t\t//         <-swap->\n\t\t//        s        a\n\n\t\tvar actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveActions,\n\n\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\n\n\t\taction._cacheIndex = firstInactiveIndex;\n\t\tactions[ firstInactiveIndex ] = action;\n\n\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = lastActiveAction;\n\n\t},\n\n\t// Memory management for PropertyMixer objects\n\n\t_addInactiveBinding: function ( binding, rootUuid, trackName ) {\n\n\t\tvar bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tbindings = this._bindings;\n\n\t\tif ( bindingByName === undefined ) {\n\n\t\t\tbindingByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\n\n\t\t}\n\n\t\tbindingByName[ trackName ] = binding;\n\n\t\tbinding._cacheIndex = bindings.length;\n\t\tbindings.push( binding );\n\n\t},\n\n\t_removeInactiveBinding: function ( binding ) {\n\n\t\tvar bindings = this._bindings,\n\t\t\tpropBinding = binding.binding,\n\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\ttrackName = propBinding.path,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\n\t\t\tcacheIndex = binding._cacheIndex;\n\n\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\tbindings[ cacheIndex ] = lastInactiveBinding;\n\t\tbindings.pop();\n\n\t\tdelete bindingByName[ trackName ];\n\n\t\tremove_empty_map: {\n\n\t\t\tfor ( var _ in bindingByName ) break remove_empty_map; // eslint-disable-line no-unused-vars\n\n\t\t\tdelete bindingsByRoot[ rootUuid ];\n\n\t\t}\n\n\t},\n\n\t_lendBinding: function ( binding ) {\n\n\t\tvar bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveBindings ++,\n\n\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\n\n\t\tbinding._cacheIndex = lastActiveIndex;\n\t\tbindings[ lastActiveIndex ] = binding;\n\n\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = firstInactiveBinding;\n\n\t},\n\n\t_takeBackBinding: function ( binding ) {\n\n\t\tvar bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\n\n\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\n\n\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\tbindings[ firstInactiveIndex ] = binding;\n\n\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = lastActiveBinding;\n\n\t},\n\n\n\t// Memory management of Interpolants for weight and time scale\n\n\t_lendControlInterpolant: function () {\n\n\t\tvar interpolants = this._controlInterpolants,\n\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++,\n\t\t\tinterpolant = interpolants[ lastActiveIndex ];\n\n\t\tif ( interpolant === undefined ) {\n\n\t\t\tinterpolant = new LinearInterpolant(\n\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\n\t\t\t\t1, this._controlInterpolantsResultBuffer );\n\n\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\n\n\t\t}\n\n\t\treturn interpolant;\n\n\t},\n\n\t_takeBackControlInterpolant: function ( interpolant ) {\n\n\t\tvar interpolants = this._controlInterpolants,\n\t\t\tprevIndex = interpolant.__cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\n\n\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\n\n\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\tinterpolants[ firstInactiveIndex ] = interpolant;\n\n\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\n\n\t},\n\n\t_controlInterpolantsResultBuffer: new Float32Array( 1 ),\n\n\t// return an action for a clip optionally using a custom root target\n\t// object (this method allocates a lot of dynamic memory in case a\n\t// previously unknown clip/root combination is specified)\n\tclipAction: function ( clip, optionalRoot ) {\n\n\t\tvar root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject !== null ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ],\n\t\t\tprototypeAction = null;\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\tvar existingAction =\n\t\t\t\t\tactionsForClip.actionByRoot[ rootUuid ];\n\n\t\t\tif ( existingAction !== undefined ) {\n\n\t\t\t\treturn existingAction;\n\n\t\t\t}\n\n\t\t\t// we know the clip, so we don't have to parse all\n\t\t\t// the bindings again but can just copy\n\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\n\n\t\t\t// also, take the clip from the prototype action\n\t\t\tif ( clipObject === null )\n\t\t\t\tclipObject = prototypeAction._clip;\n\n\t\t}\n\n\t\t// clip must be known when specified via string\n\t\tif ( clipObject === null ) return null;\n\n\t\t// allocate all resources required to run it\n\t\tvar newAction = new AnimationAction( this, clipObject, optionalRoot );\n\n\t\tthis._bindAction( newAction, prototypeAction );\n\n\t\t// and make the action known to the memory manager\n\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\n\n\t\treturn newAction;\n\n\t},\n\n\t// get an existing action\n\texistingAction: function ( clip, optionalRoot ) {\n\n\t\tvar root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\n\n\t\t}\n\n\t\treturn null;\n\n\t},\n\n\t// deactivates all previously scheduled actions\n\tstopAllAction: function () {\n\n\t\tvar actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tthis._nActiveActions = 0;\n\t\tthis._nActiveBindings = 0;\n\n\t\tfor ( var i = 0; i !== nActions; ++ i ) {\n\n\t\t\tactions[ i ].reset();\n\n\t\t}\n\n\t\tfor ( var i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].useCount = 0;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// advance the time and update apply the animation\n\tupdate: function ( deltaTime ) {\n\n\t\tdeltaTime *= this.timeScale;\n\n\t\tvar actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\n\t\t\ttime = this.time += deltaTime,\n\t\t\ttimeDirection = Math.sign( deltaTime ),\n\n\t\t\taccuIndex = this._accuIndex ^= 1;\n\n\t\t// run active actions\n\n\t\tfor ( var i = 0; i !== nActions; ++ i ) {\n\n\t\t\tvar action = actions[ i ];\n\n\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\n\n\t\t}\n\n\t\t// update scene graph\n\n\t\tvar bindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tfor ( var i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].apply( accuIndex );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// return this mixer's root target object\n\tgetRoot: function () {\n\n\t\treturn this._root;\n\n\t},\n\n\t// free all resources specific to a particular clip\n\tuncacheClip: function ( clip ) {\n\n\t\tvar actions = this._actions,\n\t\t\tclipUuid = clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t// iteration state and also require updating the state we can\n\t\t\t// just throw away\n\n\t\t\tvar actionsToRemove = actionsForClip.knownActions;\n\n\t\t\tfor ( var i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n\n\t\t\t\tvar action = actionsToRemove[ i ];\n\n\t\t\t\tthis._deactivateAction( action );\n\n\t\t\t\tvar cacheIndex = action._cacheIndex,\n\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\n\n\t\t\t\taction._cacheIndex = null;\n\t\t\t\taction._byClipCacheIndex = null;\n\n\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\tactions.pop();\n\n\t\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t\t}\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t},\n\n\t// free all resources specific to a particular root target object\n\tuncacheRoot: function ( root ) {\n\n\t\tvar rootUuid = root.uuid,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tfor ( var clipUuid in actionsByClip ) {\n\n\t\t\tvar actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n\t\t\t\taction = actionByRoot[ rootUuid ];\n\n\t\t\tif ( action !== undefined ) {\n\n\t\t\t\tthis._deactivateAction( action );\n\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName !== undefined ) {\n\n\t\t\tfor ( var trackName in bindingByName ) {\n\n\t\t\t\tvar binding = bindingByName[ trackName ];\n\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t// remove a targeted clip from the cache\n\tuncacheAction: function ( clip, optionalRoot ) {\n\n\t\tvar action = this.existingAction( clip, optionalRoot );\n\n\t\tif ( action !== null ) {\n\n\t\t\tthis._deactivateAction( action );\n\t\t\tthis._removeInactiveAction( action );\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Uniform( value ) {\n\n\tif ( typeof value === 'string' ) {\n\n\t\tconsole.warn( 'THREE.Uniform: Type parameter is no longer needed.' );\n\t\tvalue = arguments[ 1 ];\n\n\t}\n\n\tthis.value = value;\n\n}\n\nUniform.prototype.clone = function () {\n\n\treturn new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\n\n};\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InstancedInterleavedBuffer( array, stride, meshPerAttribute ) {\n\n\tInterleavedBuffer.call( this, array, stride );\n\n\tthis.meshPerAttribute = meshPerAttribute || 1;\n\n}\n\nInstancedInterleavedBuffer.prototype = Object.assign( Object.create( InterleavedBuffer.prototype ), {\n\n\tconstructor: InstancedInterleavedBuffer,\n\n\tisInstancedInterleavedBuffer: true,\n\n\tcopy: function ( source ) {\n\n\t\tInterleavedBuffer.prototype.copy.call( this, source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author bhouston / http://clara.io/\n * @author stephomi / http://stephaneginier.com/\n */\n\nfunction Raycaster( origin, direction, near, far ) {\n\n\tthis.ray = new Ray( origin, direction );\n\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\tthis.near = near || 0;\n\tthis.far = far || Infinity;\n\n\tthis.params = {\n\t\tMesh: {},\n\t\tLine: {},\n\t\tLOD: {},\n\t\tPoints: { threshold: 1 },\n\t\tSprite: {}\n\t};\n\n\tObject.defineProperties( this.params, {\n\t\tPointCloud: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Raycaster: params.PointCloud has been renamed to params.Points.' );\n\t\t\t\treturn this.Points;\n\n\t\t\t}\n\t\t}\n\t} );\n\n}\n\nfunction ascSort( a, b ) {\n\n\treturn a.distance - b.distance;\n\n}\n\nfunction intersectObject( object, raycaster, intersects, recursive ) {\n\n\tif ( object.visible === false ) return;\n\n\tobject.raycast( raycaster, intersects );\n\n\tif ( recursive === true ) {\n\n\t\tvar children = object.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\n\n\t\t}\n\n\t}\n\n}\n\nObject.assign( Raycaster.prototype, {\n\n\tlinePrecision: 1,\n\n\tset: function ( origin, direction ) {\n\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.ray.set( origin, direction );\n\n\t},\n\n\tsetFromCamera: function ( coords, camera ) {\n\n\t\tif ( ( camera && camera.isPerspectiveCamera ) ) {\n\n\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\n\t\t} else if ( ( camera && camera.isOrthographicCamera ) ) {\n\n\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type.' );\n\n\t\t}\n\n\t},\n\n\tintersectObject: function ( object, recursive, optionalTarget ) {\n\n\t\tvar intersects = optionalTarget || [];\n\n\t\tintersectObject( object, this, intersects, recursive );\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t},\n\n\tintersectObjects: function ( objects, recursive, optionalTarget ) {\n\n\t\tvar intersects = optionalTarget || [];\n\n\t\tif ( Array.isArray( objects ) === false ) {\n\n\t\t\tconsole.warn( 'THREE.Raycaster.intersectObjects: objects is not an Array.' );\n\t\t\treturn intersects;\n\n\t\t}\n\n\t\tfor ( var i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\n\n\t\t}\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n *\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n *\n * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up.\n * The azimuthal angle (theta) is measured from the positive z-axiz.\n */\n\nfunction Spherical( radius, phi, theta ) {\n\n\tthis.radius = ( radius !== undefined ) ? radius : 1.0;\n\tthis.phi = ( phi !== undefined ) ? phi : 0; // polar angle\n\tthis.theta = ( theta !== undefined ) ? theta : 0; // azimuthal angle\n\n\treturn this;\n\n}\n\nObject.assign( Spherical.prototype, {\n\n\tset: function ( radius, phi, theta ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi;\n\t\tthis.theta = theta;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.phi = other.phi;\n\t\tthis.theta = other.theta;\n\n\t\treturn this;\n\n\t},\n\n\t// restrict phi to be betwee EPS and PI-EPS\n\tmakeSafe: function () {\n\n\t\tvar EPS = 0.000001;\n\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromVector3: function ( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t},\n\n\tsetFromCartesianCoords: function ( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + y * y + z * z );\n\n\t\tif ( this.radius === 0 ) {\n\n\t\t\tthis.theta = 0;\n\t\t\tthis.phi = 0;\n\n\t\t} else {\n\n\t\t\tthis.theta = Math.atan2( x, z );\n\t\t\tthis.phi = Math.acos( _Math.clamp( y / this.radius, - 1, 1 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n *\n * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n *\n */\n\nfunction Cylindrical( radius, theta, y ) {\n\n\tthis.radius = ( radius !== undefined ) ? radius : 1.0; // distance from the origin to a point in the x-z plane\n\tthis.theta = ( theta !== undefined ) ? theta : 0; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\tthis.y = ( y !== undefined ) ? y : 0; // height above the x-z plane\n\n\treturn this;\n\n}\n\nObject.assign( Cylindrical.prototype, {\n\n\tset: function ( radius, theta, y ) {\n\n\t\tthis.radius = radius;\n\t\tthis.theta = theta;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.theta = other.theta;\n\t\tthis.y = other.y;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromVector3: function ( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t},\n\n\tsetFromCartesianCoords: function ( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + z * z );\n\t\tthis.theta = Math.atan2( x, z );\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n */\n\nfunction Box2( min, max ) {\n\n\tthis.min = ( min !== undefined ) ? min : new Vector2( + Infinity, + Infinity );\n\tthis.max = ( max !== undefined ) ? max : new Vector2( - Infinity, - Infinity );\n\n}\n\nObject.assign( Box2.prototype, {\n\n\tset: function ( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCenterAndSize: function () {\n\n\t\tvar v1 = new Vector2();\n\n\t\treturn function setFromCenterAndSize( center, size ) {\n\n\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\n\t\t\tthis.min.copy( center ).sub( halfSize );\n\t\t\tthis.max.copy( center ).add( halfSize );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tmakeEmpty: function () {\n\n\t\tthis.min.x = this.min.y = + Infinity;\n\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\treturn this;\n\n\t},\n\n\tisEmpty: function () {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t},\n\n\tgetCenter: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .getCenter() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t},\n\n\tgetSize: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .getSize() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t},\n\n\texpandByPoint: function ( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t},\n\n\texpandByVector: function ( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t},\n\n\texpandByScalar: function ( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t},\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ? false : true;\n\n\t},\n\n\tcontainsBox: function ( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\n\n\t},\n\n\tgetParameter: function ( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .getParameter() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t);\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\t// using 4 splitting planes to rule out intersections\n\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n\n\t},\n\n\tclampPoint: function ( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .clampPoint() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t},\n\n\tdistanceToPoint: function () {\n\n\t\tvar v1 = new Vector2();\n\n\t\treturn function distanceToPoint( point ) {\n\n\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\n\t\t\treturn clampedPoint.sub( point ).length();\n\n\t\t};\n\n\t}(),\n\n\tintersect: function ( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tunion: function ( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n */\n\nfunction Line3( start, end ) {\n\n\tthis.start = ( start !== undefined ) ? start : new Vector3();\n\tthis.end = ( end !== undefined ) ? end : new Vector3();\n\n}\n\nObject.assign( Line3.prototype, {\n\n\tset: function ( start, end ) {\n\n\t\tthis.start.copy( start );\n\t\tthis.end.copy( end );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( line ) {\n\n\t\tthis.start.copy( line.start );\n\t\tthis.end.copy( line.end );\n\n\t\treturn this;\n\n\t},\n\n\tgetCenter: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .getCenter() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t},\n\n\tdelta: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .delta() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.subVectors( this.end, this.start );\n\n\t},\n\n\tdistanceSq: function () {\n\n\t\treturn this.start.distanceToSquared( this.end );\n\n\t},\n\n\tdistance: function () {\n\n\t\treturn this.start.distanceTo( this.end );\n\n\t},\n\n\tat: function ( t, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .at() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t},\n\n\tclosestPointToPointParameter: function () {\n\n\t\tvar startP = new Vector3();\n\t\tvar startEnd = new Vector3();\n\n\t\treturn function closestPointToPointParameter( point, clampToLine ) {\n\n\t\t\tstartP.subVectors( point, this.start );\n\t\t\tstartEnd.subVectors( this.end, this.start );\n\n\t\t\tvar startEnd2 = startEnd.dot( startEnd );\n\t\t\tvar startEnd_startP = startEnd.dot( startP );\n\n\t\t\tvar t = startEnd_startP / startEnd2;\n\n\t\t\tif ( clampToLine ) {\n\n\t\t\t\tt = _Math.clamp( t, 0, 1 );\n\n\t\t\t}\n\n\t\t\treturn t;\n\n\t\t};\n\n\t}(),\n\n\tclosestPointToPoint: function ( point, clampToLine, target ) {\n\n\t\tvar t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .closestPointToPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t},\n\n\tapplyMatrix4: function ( matrix ) {\n\n\t\tthis.start.applyMatrix4( matrix );\n\t\tthis.end.applyMatrix4( matrix );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( line ) {\n\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction ImmediateRenderObject( material ) {\n\n\tObject3D.call( this );\n\n\tthis.material = material;\n\tthis.render = function ( /* renderCallback */ ) {};\n\n}\n\nImmediateRenderObject.prototype = Object.create( Object3D.prototype );\nImmediateRenderObject.prototype.constructor = ImmediateRenderObject;\n\nImmediateRenderObject.prototype.isImmediateRenderObject = true;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction VertexNormalsHelper( object, size, hex, linewidth ) {\n\n\tthis.object = object;\n\n\tthis.size = ( size !== undefined ) ? size : 1;\n\n\tvar color = ( hex !== undefined ) ? hex : 0xff0000;\n\n\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\n\n\t//\n\n\tvar nNormals = 0;\n\n\tvar objGeometry = this.object.geometry;\n\n\tif ( objGeometry && objGeometry.isGeometry ) {\n\n\t\tnNormals = objGeometry.faces.length * 3;\n\n\t} else if ( objGeometry && objGeometry.isBufferGeometry ) {\n\n\t\tnNormals = objGeometry.attributes.normal.count;\n\n\t}\n\n\t//\n\n\tvar geometry = new BufferGeometry();\n\n\tvar positions = new Float32BufferAttribute( nNormals * 2 * 3, 3 );\n\n\tgeometry.addAttribute( 'position', positions );\n\n\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color, linewidth: width } ) );\n\n\t//\n\n\tthis.matrixAutoUpdate = false;\n\n\tthis.update();\n\n}\n\nVertexNormalsHelper.prototype = Object.create( LineSegments.prototype );\nVertexNormalsHelper.prototype.constructor = VertexNormalsHelper;\n\nVertexNormalsHelper.prototype.update = ( function () {\n\n\tvar v1 = new Vector3();\n\tvar v2 = new Vector3();\n\tvar normalMatrix = new Matrix3();\n\n\treturn function update() {\n\n\t\tvar keys = [ 'a', 'b', 'c' ];\n\n\t\tthis.object.updateMatrixWorld( true );\n\n\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\n\n\t\tvar matrixWorld = this.object.matrixWorld;\n\n\t\tvar position = this.geometry.attributes.position;\n\n\t\t//\n\n\t\tvar objGeometry = this.object.geometry;\n\n\t\tif ( objGeometry && objGeometry.isGeometry ) {\n\n\t\t\tvar vertices = objGeometry.vertices;\n\n\t\t\tvar faces = objGeometry.faces;\n\n\t\t\tvar idx = 0;\n\n\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar vertex = vertices[ face[ keys[ j ] ] ];\n\n\t\t\t\t\tvar normal = face.vertexNormals[ j ];\n\n\t\t\t\t\tv1.copy( vertex ).applyMatrix4( matrixWorld );\n\n\t\t\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n\t\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n\t\t\t\t\tidx = idx + 1;\n\n\t\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n\t\t\t\t\tidx = idx + 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( objGeometry && objGeometry.isBufferGeometry ) {\n\n\t\t\tvar objPos = objGeometry.attributes.position;\n\n\t\t\tvar objNorm = objGeometry.attributes.normal;\n\n\t\t\tvar idx = 0;\n\n\t\t\t// for simplicity, ignore index and drawcalls, and render every normal\n\n\t\t\tfor ( var j = 0, jl = objPos.count; j < jl; j ++ ) {\n\n\t\t\t\tv1.set( objPos.getX( j ), objPos.getY( j ), objPos.getZ( j ) ).applyMatrix4( matrixWorld );\n\n\t\t\t\tv2.set( objNorm.getX( j ), objNorm.getY( j ), objNorm.getZ( j ) );\n\n\t\t\t\tv2.applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n\t\t\t\tidx = idx + 1;\n\n\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n\t\t\t\tidx = idx + 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tposition.needsUpdate = true;\n\n\t};\n\n}() );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction SpotLightHelper( light, color ) {\n\n\tObject3D.call( this );\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.matrix = light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.color = color;\n\n\tvar geometry = new BufferGeometry();\n\n\tvar positions = [\n\t\t0, 0, 0, \t0, 0, 1,\n\t\t0, 0, 0, \t1, 0, 1,\n\t\t0, 0, 0,\t- 1, 0, 1,\n\t\t0, 0, 0, \t0, 1, 1,\n\t\t0, 0, 0, \t0, - 1, 1\n\t];\n\n\tfor ( var i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\n\t\tvar p1 = ( i / l ) * Math.PI * 2;\n\t\tvar p2 = ( j / l ) * Math.PI * 2;\n\n\t\tpositions.push(\n\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n\t\t);\n\n\t}\n\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\tvar material = new LineBasicMaterial( { fog: false } );\n\n\tthis.cone = new LineSegments( geometry, material );\n\tthis.add( this.cone );\n\n\tthis.update();\n\n}\n\nSpotLightHelper.prototype = Object.create( Object3D.prototype );\nSpotLightHelper.prototype.constructor = SpotLightHelper;\n\nSpotLightHelper.prototype.dispose = function () {\n\n\tthis.cone.geometry.dispose();\n\tthis.cone.material.dispose();\n\n};\n\nSpotLightHelper.prototype.update = function () {\n\n\tvar vector = new Vector3();\n\n\treturn function update() {\n\n\t\tthis.light.updateMatrixWorld();\n\n\t\tvar coneLength = this.light.distance ? this.light.distance : 1000;\n\t\tvar coneWidth = coneLength * Math.tan( this.light.angle );\n\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n\t\tvector.setFromMatrixPosition( this.light.target.matrixWorld );\n\n\t\tthis.cone.lookAt( vector );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.cone.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.cone.material.color.copy( this.light.color );\n\n\t\t}\n\n\t};\n\n}();\n\n/**\n * @author Sean Griffin / http://twitter.com/sgrif\n * @author Michael Guerrero / http://realitymeltdown.com\n * @author mrdoob / http://mrdoob.com/\n * @author ikerr / http://verold.com\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction getBoneList( object ) {\n\n\tvar boneList = [];\n\n\tif ( object && object.isBone ) {\n\n\t\tboneList.push( object );\n\n\t}\n\n\tfor ( var i = 0; i < object.children.length; i ++ ) {\n\n\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\n\n\t}\n\n\treturn boneList;\n\n}\n\nfunction SkeletonHelper( object ) {\n\n\tvar bones = getBoneList( object );\n\n\tvar geometry = new BufferGeometry();\n\n\tvar vertices = [];\n\tvar colors = [];\n\n\tvar color1 = new Color( 0, 0, 1 );\n\tvar color2 = new Color( 0, 1, 0 );\n\n\tfor ( var i = 0; i < bones.length; i ++ ) {\n\n\t\tvar bone = bones[ i ];\n\n\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tcolors.push( color1.r, color1.g, color1.b );\n\t\t\tcolors.push( color2.r, color2.g, color2.b );\n\n\t\t}\n\n\t}\n\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tvar material = new LineBasicMaterial( { vertexColors: VertexColors, depthTest: false, depthWrite: false, transparent: true } );\n\n\tLineSegments.call( this, geometry, material );\n\n\tthis.root = object;\n\tthis.bones = bones;\n\n\tthis.matrix = object.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n}\n\nSkeletonHelper.prototype = Object.create( LineSegments.prototype );\nSkeletonHelper.prototype.constructor = SkeletonHelper;\n\nSkeletonHelper.prototype.updateMatrixWorld = function () {\n\n\tvar vector = new Vector3();\n\n\tvar boneMatrix = new Matrix4();\n\tvar matrixWorldInv = new Matrix4();\n\n\treturn function updateMatrixWorld( force ) {\n\n\t\tvar bones = this.bones;\n\n\t\tvar geometry = this.geometry;\n\t\tvar position = geometry.getAttribute( 'position' );\n\n\t\tmatrixWorldInv.getInverse( this.root.matrixWorld );\n\n\t\tfor ( var i = 0, j = 0; i < bones.length; i ++ ) {\n\n\t\t\tvar bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.matrixWorld );\n\t\t\t\tvector.setFromMatrixPosition( boneMatrix );\n\t\t\t\tposition.setXYZ( j, vector.x, vector.y, vector.z );\n\n\t\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t\tvector.setFromMatrixPosition( boneMatrix );\n\t\t\t\tposition.setXYZ( j + 1, vector.x, vector.y, vector.z );\n\n\t\t\t\tj += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t};\n\n}();\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction PointLightHelper( light, sphereSize, color ) {\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.color = color;\n\n\tvar geometry = new SphereBufferGeometry( sphereSize, 4, 2 );\n\tvar material = new MeshBasicMaterial( { wireframe: true, fog: false } );\n\n\tMesh.call( this, geometry, material );\n\n\tthis.matrix = this.light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.update();\n\n\n\t/*\n\tvar distanceGeometry = new THREE.IcosahedronBufferGeometry( 1, 2 );\n\tvar distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\tvar d = light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\n\tthis.add( this.lightDistance );\n\t*/\n\n}\n\nPointLightHelper.prototype = Object.create( Mesh.prototype );\nPointLightHelper.prototype.constructor = PointLightHelper;\n\nPointLightHelper.prototype.dispose = function () {\n\n\tthis.geometry.dispose();\n\tthis.material.dispose();\n\n};\n\nPointLightHelper.prototype.update = function () {\n\n\tif ( this.color !== undefined ) {\n\n\t\tthis.material.color.set( this.color );\n\n\t} else {\n\n\t\tthis.material.color.copy( this.light.color );\n\n\t}\n\n\t/*\n\tvar d = this.light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.visible = true;\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\t*/\n\n};\n\n/**\n * @author abelnation / http://github.com/abelnation\n * @author Mugen87 / http://github.com/Mugen87\n * @author WestLangley / http://github.com/WestLangley\n *\n *  This helper must be added as a child of the light\n */\n\nfunction RectAreaLightHelper( light, color ) {\n\n\tthis.type = 'RectAreaLightHelper';\n\n\tthis.light = light;\n\n\tthis.color = color; // optional hardwired color for the helper\n\n\tvar positions = [ 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, - 1, 0, 1, 1, 0 ];\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\tgeometry.computeBoundingSphere();\n\n\tvar material = new LineBasicMaterial( { fog: false } );\n\n\tLine.call( this, geometry, material );\n\n\t//\n\n\tvar positions2 = [ 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, - 1, 0, 1, - 1, 0 ];\n\n\tvar geometry2 = new BufferGeometry();\n\tgeometry2.addAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\tgeometry2.computeBoundingSphere();\n\n\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { side: BackSide, fog: false } ) ) );\n\n\tthis.update();\n\n}\n\nRectAreaLightHelper.prototype = Object.create( Line.prototype );\nRectAreaLightHelper.prototype.constructor = RectAreaLightHelper;\n\nRectAreaLightHelper.prototype.update = function () {\n\n\tthis.scale.set( 0.5 * this.light.width, 0.5 * this.light.height, 1 );\n\n\tif ( this.color !== undefined ) {\n\n\t\tthis.material.color.set( this.color );\n\t\tthis.children[ 0 ].material.color.set( this.color );\n\n\t} else {\n\n\t\tthis.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\n\n\t\t// prevent hue shift\n\t\tvar c = this.material.color;\n\t\tvar max = Math.max( c.r, c.g, c.b );\n\t\tif ( max > 1 ) c.multiplyScalar( 1 / max );\n\n\t\tthis.children[ 0 ].material.color.copy( this.material.color );\n\n\t}\n\n};\n\nRectAreaLightHelper.prototype.dispose = function () {\n\n\tthis.geometry.dispose();\n\tthis.material.dispose();\n\tthis.children[ 0 ].geometry.dispose();\n\tthis.children[ 0 ].material.dispose();\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction HemisphereLightHelper( light, size, color ) {\n\n\tObject3D.call( this );\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.matrix = light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.color = color;\n\n\tvar geometry = new OctahedronBufferGeometry( size );\n\tgeometry.rotateY( Math.PI * 0.5 );\n\n\tthis.material = new MeshBasicMaterial( { wireframe: true, fog: false } );\n\tif ( this.color === undefined ) this.material.vertexColors = VertexColors;\n\n\tvar position = geometry.getAttribute( 'position' );\n\tvar colors = new Float32Array( position.count * 3 );\n\n\tgeometry.addAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\n\tthis.add( new Mesh( geometry, this.material ) );\n\n\tthis.update();\n\n}\n\nHemisphereLightHelper.prototype = Object.create( Object3D.prototype );\nHemisphereLightHelper.prototype.constructor = HemisphereLightHelper;\n\nHemisphereLightHelper.prototype.dispose = function () {\n\n\tthis.children[ 0 ].geometry.dispose();\n\tthis.children[ 0 ].material.dispose();\n\n};\n\nHemisphereLightHelper.prototype.update = function () {\n\n\tvar vector = new Vector3();\n\n\tvar color1 = new Color();\n\tvar color2 = new Color();\n\n\treturn function update() {\n\n\t\tvar mesh = this.children[ 0 ];\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tvar colors = mesh.geometry.getAttribute( 'color' );\n\n\t\t\tcolor1.copy( this.light.color );\n\t\t\tcolor2.copy( this.light.groundColor );\n\n\t\t\tfor ( var i = 0, l = colors.count; i < l; i ++ ) {\n\n\t\t\t\tvar color = ( i < ( l / 2 ) ) ? color1 : color2;\n\n\t\t\t\tcolors.setXYZ( i, color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t\tcolors.needsUpdate = true;\n\n\t\t}\n\n\t\tmesh.lookAt( vector.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\n\t};\n\n}();\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction LightProbeHelper( lightProbe, size ) {\n\n\tthis.lightProbe = lightProbe;\n\n\tthis.size = size;\n\n\tvar defines = {};\n\tdefines[ 'GAMMA_OUTPUT' ] = \"\";\n\n\t// material\n\tvar material = new ShaderMaterial( {\n\n\t\tdefines: defines,\n\n\t\tuniforms: {\n\n\t\t\tsh: { value: this.lightProbe.sh.coefficients }, // by reference\n\n\t\t\tintensity: { value: this.lightProbe.intensity }\n\n\t\t},\n\n\t\tvertexShader: [\n\n\t\t\t'varying vec3 vNormal;',\n\n\t\t\t'void main() {',\n\n\t\t\t'\tvNormal = normalize( normalMatrix * normal );',\n\n\t\t\t'\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\n\n\t\t\t'}',\n\n\t\t].join( '\\n' ),\n\n\t\tfragmentShader: [\n\n\t\t\t'#define RECIPROCAL_PI 0.318309886',\n\n\t\t\t'vec3 inverseTransformDirection( in vec3 normal, in mat4 matrix ) {',\n\n\t\t\t'\t// matrix is assumed to be orthogonal',\n\n\t\t\t'\treturn normalize( ( vec4( normal, 0.0 ) * matrix ).xyz );',\n\n\t\t\t'}',\n\n\t\t\t'vec3 linearToOutput( in vec3 a ) {',\n\n\t\t\t'\t#ifdef GAMMA_OUTPUT',\n\n\t\t\t'\t\treturn pow( a, vec3( 1.0 / float( GAMMA_FACTOR ) ) );',\n\n\t\t\t'\t#else',\n\n\t\t\t'\t\treturn a;',\n\n\t\t\t'\t#endif',\n\n\t\t\t'}',\n\n\t\t\t'// source: https://graphics.stanford.edu/papers/envmap/envmap.pdf',\n\t\t\t'vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {',\n\n\t\t\t'\t// normal is assumed to have unit length',\n\n\t\t\t'\tfloat x = normal.x, y = normal.y, z = normal.z;',\n\n\t\t\t'\t// band 0',\n\t\t\t'\tvec3 result = shCoefficients[ 0 ] * 0.886227;',\n\n\t\t\t'\t// band 1',\n\t\t\t'\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;',\n\t\t\t'\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;',\n\t\t\t'\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;',\n\n\t\t\t'\t// band 2',\n\t\t\t'\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;',\n\t\t\t'\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;',\n\t\t\t'\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );',\n\t\t\t'\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;',\n\t\t\t'\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );',\n\n\t\t\t'\treturn result;',\n\n\t\t\t'}',\n\n\t\t\t'uniform vec3 sh[ 9 ]; // sh coefficients',\n\n\t\t\t'uniform float intensity; // light probe intensity',\n\n\t\t\t'varying vec3 vNormal;',\n\n\t\t\t'void main() {',\n\n\t\t\t'\tvec3 normal = normalize( vNormal );',\n\n\t\t\t'\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );',\n\n\t\t\t'\tvec3 irradiance = shGetIrradianceAt( worldNormal, sh );',\n\n\t\t\t'\tvec3 outgoingLight = RECIPROCAL_PI * irradiance * intensity;',\n\n\t\t\t'\toutgoingLight = linearToOutput( outgoingLight );',\n\n\t\t\t'\tgl_FragColor = vec4( outgoingLight, 1.0 );',\n\n\t\t\t'}'\n\n\t\t].join( '\\n' )\n\n\t} );\n\n\tvar geometry = new SphereBufferGeometry( 1, 32, 16 );\n\n\tMesh.call( this, geometry, material );\n\n\tthis.onBeforeRender();\n\n}\n\nLightProbeHelper.prototype = Object.create( Mesh.prototype );\nLightProbeHelper.prototype.constructor = LightProbeHelper;\n\nLightProbeHelper.prototype.dispose = function () {\n\n\tthis.geometry.dispose();\n\tthis.material.dispose();\n\n};\n\nLightProbeHelper.prototype.onBeforeRender = function () {\n\n\treturn function update() {\n\n\t\tthis.position.copy( this.lightProbe.position );\n\n\t\tthis.scale.set( 1, 1, 1 ).multiplyScalar( this.size );\n\n\t\tthis.material.uniforms.intensity.value = this.lightProbe.intensity;\n\n\t};\n\n}();\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction GridHelper( size, divisions, color1, color2 ) {\n\n\tsize = size || 10;\n\tdivisions = divisions || 10;\n\tcolor1 = new Color( color1 !== undefined ? color1 : 0x444444 );\n\tcolor2 = new Color( color2 !== undefined ? color2 : 0x888888 );\n\n\tvar center = divisions / 2;\n\tvar step = size / divisions;\n\tvar halfSize = size / 2;\n\n\tvar vertices = [], colors = [];\n\n\tfor ( var i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\n\n\t\tvertices.push( - halfSize, 0, k, halfSize, 0, k );\n\t\tvertices.push( k, 0, - halfSize, k, 0, halfSize );\n\n\t\tvar color = i === center ? color1 : color2;\n\n\t\tcolor.toArray( colors, j ); j += 3;\n\t\tcolor.toArray( colors, j ); j += 3;\n\t\tcolor.toArray( colors, j ); j += 3;\n\t\tcolor.toArray( colors, j ); j += 3;\n\n\t}\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n\tLineSegments.call( this, geometry, material );\n\n}\n\nGridHelper.prototype = Object.assign( Object.create( LineSegments.prototype ), {\n\n\tconstructor: GridHelper,\n\n\tcopy: function ( source ) {\n\n\t\tLineSegments.prototype.copy.call( this, source );\n\n\t\tthis.geometry.copy( source.geometry );\n\t\tthis.material.copy( source.material );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / http://github.com/Mugen87\n * @author Hectate / http://www.github.com/Hectate\n */\n\nfunction PolarGridHelper( radius, radials, circles, divisions, color1, color2 ) {\n\n\tradius = radius || 10;\n\tradials = radials || 16;\n\tcircles = circles || 8;\n\tdivisions = divisions || 64;\n\tcolor1 = new Color( color1 !== undefined ? color1 : 0x444444 );\n\tcolor2 = new Color( color2 !== undefined ? color2 : 0x888888 );\n\n\tvar vertices = [];\n\tvar colors = [];\n\n\tvar x, z;\n\tvar v, i, j, r, color;\n\n\t// create the radials\n\n\tfor ( i = 0; i <= radials; i ++ ) {\n\n\t\tv = ( i / radials ) * ( Math.PI * 2 );\n\n\t\tx = Math.sin( v ) * radius;\n\t\tz = Math.cos( v ) * radius;\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tvertices.push( x, 0, z );\n\n\t\tcolor = ( i & 1 ) ? color1 : color2;\n\n\t\tcolors.push( color.r, color.g, color.b );\n\t\tcolors.push( color.r, color.g, color.b );\n\n\t}\n\n\t// create the circles\n\n\tfor ( i = 0; i <= circles; i ++ ) {\n\n\t\tcolor = ( i & 1 ) ? color1 : color2;\n\n\t\tr = radius - ( radius / circles * i );\n\n\t\tfor ( j = 0; j < divisions; j ++ ) {\n\n\t\t\t// first vertex\n\n\t\t\tv = ( j / divisions ) * ( Math.PI * 2 );\n\n\t\t\tx = Math.sin( v ) * r;\n\t\t\tz = Math.cos( v ) * r;\n\n\t\t\tvertices.push( x, 0, z );\n\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t// second vertex\n\n\t\t\tv = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\n\n\t\t\tx = Math.sin( v ) * r;\n\t\t\tz = Math.cos( v ) * r;\n\n\t\t\tvertices.push( x, 0, z );\n\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t}\n\n\t}\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n\tLineSegments.call( this, geometry, material );\n\n}\n\nPolarGridHelper.prototype = Object.create( LineSegments.prototype );\nPolarGridHelper.prototype.constructor = PolarGridHelper;\n\n/**\n * @author Mugen87 / http://github.com/Mugen87\n */\n\nfunction PositionalAudioHelper( audio, range, divisionsInnerAngle, divisionsOuterAngle ) {\n\n\tthis.audio = audio;\n\tthis.range = range || 1;\n\tthis.divisionsInnerAngle = divisionsInnerAngle || 16;\n\tthis.divisionsOuterAngle = divisionsOuterAngle || 2;\n\n\tvar geometry = new BufferGeometry();\n\tvar divisions = this.divisionsInnerAngle + this.divisionsOuterAngle * 2;\n\tvar positions = new Float32Array( ( divisions * 3 + 3 ) * 3 );\n\tgeometry.addAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\tvar materialInnerAngle = new LineBasicMaterial( { color: 0x00ff00 } );\n\tvar materialOuterAngle = new LineBasicMaterial( { color: 0xffff00 } );\n\n\tLine.call( this, geometry, [ materialOuterAngle, materialInnerAngle ] );\n\n\tthis.update();\n\n}\n\nPositionalAudioHelper.prototype = Object.create( Line.prototype );\nPositionalAudioHelper.prototype.constructor = PositionalAudioHelper;\n\nPositionalAudioHelper.prototype.update = function () {\n\n\tvar audio = this.audio;\n\tvar range = this.range;\n\tvar divisionsInnerAngle = this.divisionsInnerAngle;\n\tvar divisionsOuterAngle = this.divisionsOuterAngle;\n\n\tvar coneInnerAngle = _Math.degToRad( audio.panner.coneInnerAngle );\n\tvar coneOuterAngle = _Math.degToRad( audio.panner.coneOuterAngle );\n\n\tvar halfConeInnerAngle = coneInnerAngle / 2;\n\tvar halfConeOuterAngle = coneOuterAngle / 2;\n\n\tvar start = 0;\n\tvar count = 0;\n\tvar i, stride;\n\n\tvar geometry = this.geometry;\n\tvar positionAttribute = geometry.attributes.position;\n\n\tgeometry.clearGroups();\n\n\t//\n\n\tfunction generateSegment( from, to, divisions, materialIndex ) {\n\n\t\tvar step = ( to - from ) / divisions;\n\n\t\tpositionAttribute.setXYZ( start, 0, 0, 0 );\n\t\tcount ++;\n\n\t\tfor ( i = from; i < to; i += step ) {\n\n\t\t\tstride = start + count;\n\n\t\t\tpositionAttribute.setXYZ( stride, Math.sin( i ) * range, 0, Math.cos( i ) * range );\n\t\t\tpositionAttribute.setXYZ( stride + 1, Math.sin( Math.min( i + step, to ) ) * range, 0, Math.cos( Math.min( i + step, to ) ) * range );\n\t\t\tpositionAttribute.setXYZ( stride + 2, 0, 0, 0 );\n\n\t\t\tcount += 3;\n\n\t\t}\n\n\t\tgeometry.addGroup( start, count, materialIndex );\n\n\t\tstart += count;\n\t\tcount = 0;\n\n\t}\n\n\t//\n\n\tgenerateSegment( - halfConeOuterAngle, - halfConeInnerAngle, divisionsOuterAngle, 0 );\n\tgenerateSegment( - halfConeInnerAngle, halfConeInnerAngle, divisionsInnerAngle, 1 );\n\tgenerateSegment( halfConeInnerAngle, halfConeOuterAngle, divisionsOuterAngle, 0 );\n\n\t//\n\n\tpositionAttribute.needsUpdate = true;\n\n\tif ( coneInnerAngle === coneOuterAngle ) this.material[ 0 ].visible = false;\n\n};\n\nPositionalAudioHelper.prototype.dispose = function () {\n\n\tthis.geometry.dispose();\n\tthis.material[ 0 ].dispose();\n\tthis.material[ 1 ].dispose();\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction FaceNormalsHelper( object, size, hex, linewidth ) {\n\n\t// FaceNormalsHelper only supports THREE.Geometry\n\n\tthis.object = object;\n\n\tthis.size = ( size !== undefined ) ? size : 1;\n\n\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\n\n\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\n\n\t//\n\n\tvar nNormals = 0;\n\n\tvar objGeometry = this.object.geometry;\n\n\tif ( objGeometry && objGeometry.isGeometry ) {\n\n\t\tnNormals = objGeometry.faces.length;\n\n\t} else {\n\n\t\tconsole.warn( 'THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.' );\n\n\t}\n\n\t//\n\n\tvar geometry = new BufferGeometry();\n\n\tvar positions = new Float32BufferAttribute( nNormals * 2 * 3, 3 );\n\n\tgeometry.addAttribute( 'position', positions );\n\n\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color, linewidth: width } ) );\n\n\t//\n\n\tthis.matrixAutoUpdate = false;\n\tthis.update();\n\n}\n\nFaceNormalsHelper.prototype = Object.create( LineSegments.prototype );\nFaceNormalsHelper.prototype.constructor = FaceNormalsHelper;\n\nFaceNormalsHelper.prototype.update = ( function () {\n\n\tvar v1 = new Vector3();\n\tvar v2 = new Vector3();\n\tvar normalMatrix = new Matrix3();\n\n\treturn function update() {\n\n\t\tthis.object.updateMatrixWorld( true );\n\n\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\n\n\t\tvar matrixWorld = this.object.matrixWorld;\n\n\t\tvar position = this.geometry.attributes.position;\n\n\t\t//\n\n\t\tvar objGeometry = this.object.geometry;\n\n\t\tvar vertices = objGeometry.vertices;\n\n\t\tvar faces = objGeometry.faces;\n\n\t\tvar idx = 0;\n\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tvar normal = face.normal;\n\n\t\t\tv1.copy( vertices[ face.a ] )\n\t\t\t\t.add( vertices[ face.b ] )\n\t\t\t\t.add( vertices[ face.c ] )\n\t\t\t\t.divideScalar( 3 )\n\t\t\t\t.applyMatrix4( matrixWorld );\n\n\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n\t\t\tidx = idx + 1;\n\n\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n\t\t\tidx = idx + 1;\n\n\t\t}\n\n\t\tposition.needsUpdate = true;\n\n\t};\n\n}() );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction DirectionalLightHelper( light, size, color ) {\n\n\tObject3D.call( this );\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.matrix = light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.color = color;\n\n\tif ( size === undefined ) size = 1;\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( [\n\t\t- size, size, 0,\n\t\tsize, size, 0,\n\t\tsize, - size, 0,\n\t\t- size, - size, 0,\n\t\t- size, size, 0\n\t], 3 ) );\n\n\tvar material = new LineBasicMaterial( { fog: false } );\n\n\tthis.lightPlane = new Line( geometry, material );\n\tthis.add( this.lightPlane );\n\n\tgeometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\tthis.targetLine = new Line( geometry, material );\n\tthis.add( this.targetLine );\n\n\tthis.update();\n\n}\n\nDirectionalLightHelper.prototype = Object.create( Object3D.prototype );\nDirectionalLightHelper.prototype.constructor = DirectionalLightHelper;\n\nDirectionalLightHelper.prototype.dispose = function () {\n\n\tthis.lightPlane.geometry.dispose();\n\tthis.lightPlane.material.dispose();\n\tthis.targetLine.geometry.dispose();\n\tthis.targetLine.material.dispose();\n\n};\n\nDirectionalLightHelper.prototype.update = function () {\n\n\tvar v1 = new Vector3();\n\tvar v2 = new Vector3();\n\tvar v3 = new Vector3();\n\n\treturn function update() {\n\n\t\tv1.setFromMatrixPosition( this.light.matrixWorld );\n\t\tv2.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\tv3.subVectors( v2, v1 );\n\n\t\tthis.lightPlane.lookAt( v2 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.lightPlane.material.color.set( this.color );\n\t\t\tthis.targetLine.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.lightPlane.material.color.copy( this.light.color );\n\t\t\tthis.targetLine.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\tthis.targetLine.lookAt( v2 );\n\t\tthis.targetLine.scale.z = v3.length();\n\n\t};\n\n}();\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author Mugen87 / https://github.com/Mugen87\n *\n *\t- shows frustum, line of sight and up of the camera\n *\t- suitable for fast updates\n * \t- based on frustum visualization in lightgl.js shadowmap example\n *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\n */\n\nfunction CameraHelper( camera ) {\n\n\tvar geometry = new BufferGeometry();\n\tvar material = new LineBasicMaterial( { color: 0xffffff, vertexColors: FaceColors } );\n\n\tvar vertices = [];\n\tvar colors = [];\n\n\tvar pointMap = {};\n\n\t// colors\n\n\tvar colorFrustum = new Color( 0xffaa00 );\n\tvar colorCone = new Color( 0xff0000 );\n\tvar colorUp = new Color( 0x00aaff );\n\tvar colorTarget = new Color( 0xffffff );\n\tvar colorCross = new Color( 0x333333 );\n\n\t// near\n\n\taddLine( 'n1', 'n2', colorFrustum );\n\taddLine( 'n2', 'n4', colorFrustum );\n\taddLine( 'n4', 'n3', colorFrustum );\n\taddLine( 'n3', 'n1', colorFrustum );\n\n\t// far\n\n\taddLine( 'f1', 'f2', colorFrustum );\n\taddLine( 'f2', 'f4', colorFrustum );\n\taddLine( 'f4', 'f3', colorFrustum );\n\taddLine( 'f3', 'f1', colorFrustum );\n\n\t// sides\n\n\taddLine( 'n1', 'f1', colorFrustum );\n\taddLine( 'n2', 'f2', colorFrustum );\n\taddLine( 'n3', 'f3', colorFrustum );\n\taddLine( 'n4', 'f4', colorFrustum );\n\n\t// cone\n\n\taddLine( 'p', 'n1', colorCone );\n\taddLine( 'p', 'n2', colorCone );\n\taddLine( 'p', 'n3', colorCone );\n\taddLine( 'p', 'n4', colorCone );\n\n\t// up\n\n\taddLine( 'u1', 'u2', colorUp );\n\taddLine( 'u2', 'u3', colorUp );\n\taddLine( 'u3', 'u1', colorUp );\n\n\t// target\n\n\taddLine( 'c', 't', colorTarget );\n\taddLine( 'p', 'c', colorCross );\n\n\t// cross\n\n\taddLine( 'cn1', 'cn2', colorCross );\n\taddLine( 'cn3', 'cn4', colorCross );\n\n\taddLine( 'cf1', 'cf2', colorCross );\n\taddLine( 'cf3', 'cf4', colorCross );\n\n\tfunction addLine( a, b, color ) {\n\n\t\taddPoint( a, color );\n\t\taddPoint( b, color );\n\n\t}\n\n\tfunction addPoint( id, color ) {\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tcolors.push( color.r, color.g, color.b );\n\n\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\tpointMap[ id ] = [];\n\n\t\t}\n\n\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\n\n\t}\n\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tLineSegments.call( this, geometry, material );\n\n\tthis.camera = camera;\n\tif ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n\n\tthis.matrix = camera.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.pointMap = pointMap;\n\n\tthis.update();\n\n}\n\nCameraHelper.prototype = Object.create( LineSegments.prototype );\nCameraHelper.prototype.constructor = CameraHelper;\n\nCameraHelper.prototype.update = function () {\n\n\tvar geometry, pointMap;\n\n\tvar vector = new Vector3();\n\tvar camera = new Camera();\n\n\tfunction setPoint( point, x, y, z ) {\n\n\t\tvector.set( x, y, z ).unproject( camera );\n\n\t\tvar points = pointMap[ point ];\n\n\t\tif ( points !== undefined ) {\n\n\t\t\tvar position = geometry.getAttribute( 'position' );\n\n\t\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\t\tposition.setXYZ( points[ i ], vector.x, vector.y, vector.z );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn function update() {\n\n\t\tgeometry = this.geometry;\n\t\tpointMap = this.pointMap;\n\n\t\tvar w = 1, h = 1;\n\n\t\t// we need just camera projection matrix inverse\n\t\t// world matrix must be identity\n\n\t\tcamera.projectionMatrixInverse.copy( this.camera.projectionMatrixInverse );\n\n\t\t// center / target\n\n\t\tsetPoint( 'c', 0, 0, - 1 );\n\t\tsetPoint( 't', 0, 0, 1 );\n\n\t\t// near\n\n\t\tsetPoint( 'n1', - w, - h, - 1 );\n\t\tsetPoint( 'n2', w, - h, - 1 );\n\t\tsetPoint( 'n3', - w, h, - 1 );\n\t\tsetPoint( 'n4', w, h, - 1 );\n\n\t\t// far\n\n\t\tsetPoint( 'f1', - w, - h, 1 );\n\t\tsetPoint( 'f2', w, - h, 1 );\n\t\tsetPoint( 'f3', - w, h, 1 );\n\t\tsetPoint( 'f4', w, h, 1 );\n\n\t\t// up\n\n\t\tsetPoint( 'u1', w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u2', - w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u3', 0, h * 2, - 1 );\n\n\t\t// cross\n\n\t\tsetPoint( 'cf1', - w, 0, 1 );\n\t\tsetPoint( 'cf2', w, 0, 1 );\n\t\tsetPoint( 'cf3', 0, - h, 1 );\n\t\tsetPoint( 'cf4', 0, h, 1 );\n\n\t\tsetPoint( 'cn1', - w, 0, - 1 );\n\t\tsetPoint( 'cn2', w, 0, - 1 );\n\t\tsetPoint( 'cn3', 0, - h, - 1 );\n\t\tsetPoint( 'cn4', 0, h, - 1 );\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t};\n\n}();\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / http://github.com/Mugen87\n */\n\nfunction BoxHelper( object, color ) {\n\n\tthis.object = object;\n\n\tif ( color === undefined ) color = 0xffff00;\n\n\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\tvar positions = new Float32Array( 8 * 3 );\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\tgeometry.addAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color } ) );\n\n\tthis.matrixAutoUpdate = false;\n\n\tthis.update();\n\n}\n\nBoxHelper.prototype = Object.create( LineSegments.prototype );\nBoxHelper.prototype.constructor = BoxHelper;\n\nBoxHelper.prototype.update = ( function () {\n\n\tvar box = new Box3();\n\n\treturn function update( object ) {\n\n\t\tif ( object !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\n\n\t\t}\n\n\t\tif ( this.object !== undefined ) {\n\n\t\t\tbox.setFromObject( this.object );\n\n\t\t}\n\n\t\tif ( box.isEmpty() ) return;\n\n\t\tvar min = box.min;\n\t\tvar max = box.max;\n\n\t\t/*\n\t\t  5____4\n\t\t1/___0/|\n\t\t| 6__|_7\n\t\t2/___3/\n\n\t\t0: max.x, max.y, max.z\n\t\t1: min.x, max.y, max.z\n\t\t2: min.x, min.y, max.z\n\t\t3: max.x, min.y, max.z\n\t\t4: max.x, max.y, min.z\n\t\t5: min.x, max.y, min.z\n\t\t6: min.x, min.y, min.z\n\t\t7: max.x, min.y, min.z\n\t\t*/\n\n\t\tvar position = this.geometry.attributes.position;\n\t\tvar array = position.array;\n\n\t\tarray[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z;\n\t\tarray[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z;\n\t\tarray[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z;\n\t\tarray[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n\t\tposition.needsUpdate = true;\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t};\n\n} )();\n\nBoxHelper.prototype.setFromObject = function ( object ) {\n\n\tthis.object = object;\n\tthis.update();\n\n\treturn this;\n\n};\n\nBoxHelper.prototype.copy = function ( source ) {\n\n\tLineSegments.prototype.copy.call( this, source );\n\n\tthis.object = source.object;\n\n\treturn this;\n\n};\n\nBoxHelper.prototype.clone = function () {\n\n\treturn new this.constructor().copy( this );\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Box3Helper( box, hex ) {\n\n\tthis.type = 'Box3Helper';\n\n\tthis.box = box;\n\n\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\n\n\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\n\tvar positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];\n\n\tvar geometry = new BufferGeometry();\n\n\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color } ) );\n\n\tthis.geometry.computeBoundingSphere();\n\n}\n\nBox3Helper.prototype = Object.create( LineSegments.prototype );\nBox3Helper.prototype.constructor = Box3Helper;\n\nBox3Helper.prototype.updateMatrixWorld = function ( force ) {\n\n\tvar box = this.box;\n\n\tif ( box.isEmpty() ) return;\n\n\tbox.getCenter( this.position );\n\n\tbox.getSize( this.scale );\n\n\tthis.scale.multiplyScalar( 0.5 );\n\n\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction PlaneHelper( plane, size, hex ) {\n\n\tthis.type = 'PlaneHelper';\n\n\tthis.plane = plane;\n\n\tthis.size = ( size === undefined ) ? 1 : size;\n\n\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\n\n\tvar positions = [ 1, - 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0 ];\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\tgeometry.computeBoundingSphere();\n\n\tLine.call( this, geometry, new LineBasicMaterial( { color: color } ) );\n\n\t//\n\n\tvar positions2 = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, - 1, 1, 1, - 1, 1 ];\n\n\tvar geometry2 = new BufferGeometry();\n\tgeometry2.addAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\tgeometry2.computeBoundingSphere();\n\n\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false } ) ) );\n\n}\n\nPlaneHelper.prototype = Object.create( Line.prototype );\nPlaneHelper.prototype.constructor = PlaneHelper;\n\nPlaneHelper.prototype.updateMatrixWorld = function ( force ) {\n\n\tvar scale = - this.plane.constant;\n\n\tif ( Math.abs( scale ) < 1e-8 ) scale = 1e-8; // sign does not matter\n\n\tthis.scale.set( 0.5 * this.size, 0.5 * this.size, scale );\n\n\tthis.children[ 0 ].material.side = ( scale < 0 ) ? BackSide : FrontSide; // renderer flips side when determinant < 0; flipping not wanted here\n\n\tthis.lookAt( this.plane.normal );\n\n\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n * @author zz85 / http://github.com/zz85\n * @author bhouston / http://clara.io\n *\n * Creates an arrow for visualizing directions\n *\n * Parameters:\n *  dir - Vector3\n *  origin - Vector3\n *  length - Number\n *  color - color in hex value\n *  headLength - Number\n *  headWidth - Number\n */\n\nvar lineGeometry, coneGeometry;\n\nfunction ArrowHelper( dir, origin, length, color, headLength, headWidth ) {\n\n\t// dir is assumed to be normalized\n\n\tObject3D.call( this );\n\n\tif ( dir === undefined ) dir = new Vector3( 0, 0, 1 );\n\tif ( origin === undefined ) origin = new Vector3( 0, 0, 0 );\n\tif ( length === undefined ) length = 1;\n\tif ( color === undefined ) color = 0xffff00;\n\tif ( headLength === undefined ) headLength = 0.2 * length;\n\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\n\n\tif ( lineGeometry === undefined ) {\n\n\t\tlineGeometry = new BufferGeometry();\n\t\tlineGeometry.addAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\n\t\tconeGeometry = new CylinderBufferGeometry( 0, 0.5, 1, 5, 1 );\n\t\tconeGeometry.translate( 0, - 0.5, 0 );\n\n\t}\n\n\tthis.position.copy( origin );\n\n\tthis.line = new Line( lineGeometry, new LineBasicMaterial( { color: color } ) );\n\tthis.line.matrixAutoUpdate = false;\n\tthis.add( this.line );\n\n\tthis.cone = new Mesh( coneGeometry, new MeshBasicMaterial( { color: color } ) );\n\tthis.cone.matrixAutoUpdate = false;\n\tthis.add( this.cone );\n\n\tthis.setDirection( dir );\n\tthis.setLength( length, headLength, headWidth );\n\n}\n\nArrowHelper.prototype = Object.create( Object3D.prototype );\nArrowHelper.prototype.constructor = ArrowHelper;\n\nArrowHelper.prototype.setDirection = ( function () {\n\n\tvar axis = new Vector3();\n\tvar radians;\n\n\treturn function setDirection( dir ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tif ( dir.y > 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n\t\t} else if ( dir.y < - 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n\t\t} else {\n\n\t\t\taxis.set( dir.z, 0, - dir.x ).normalize();\n\n\t\t\tradians = Math.acos( dir.y );\n\n\t\t\tthis.quaternion.setFromAxisAngle( axis, radians );\n\n\t\t}\n\n\t};\n\n}() );\n\nArrowHelper.prototype.setLength = function ( length, headLength, headWidth ) {\n\n\tif ( headLength === undefined ) headLength = 0.2 * length;\n\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\n\n\tthis.line.scale.set( 1, Math.max( 0, length - headLength ), 1 );\n\tthis.line.updateMatrix();\n\n\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\tthis.cone.position.y = length;\n\tthis.cone.updateMatrix();\n\n};\n\nArrowHelper.prototype.setColor = function ( color ) {\n\n\tthis.line.material.color.copy( color );\n\tthis.cone.material.color.copy( color );\n\n};\n\nArrowHelper.prototype.copy = function ( source ) {\n\n\tObject3D.prototype.copy.call( this, source, false );\n\n\tthis.line.copy( source.line );\n\tthis.cone.copy( source.cone );\n\n\treturn this;\n\n};\n\nArrowHelper.prototype.clone = function () {\n\n\treturn new this.constructor().copy( this );\n\n};\n\n/**\n * @author sroucheray / http://sroucheray.org/\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AxesHelper( size ) {\n\n\tsize = size || 1;\n\n\tvar vertices = [\n\t\t0, 0, 0,\tsize, 0, 0,\n\t\t0, 0, 0,\t0, size, 0,\n\t\t0, 0, 0,\t0, 0, size\n\t];\n\n\tvar colors = [\n\t\t1, 0, 0,\t1, 0.6, 0,\n\t\t0, 1, 0,\t0.6, 1, 0,\n\t\t0, 0, 1,\t0, 0.6, 1\n\t];\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n\tLineSegments.call( this, geometry, material );\n\n}\n\nAxesHelper.prototype = Object.create( LineSegments.prototype );\nAxesHelper.prototype.constructor = AxesHelper;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Face4( a, b, c, d, normal, color, materialIndex ) {\n\n\tconsole.warn( 'THREE.Face4 has been removed. A THREE.Face3 will be created instead.' );\n\treturn new Face3( a, b, c, normal, color, materialIndex );\n\n}\n\nvar LineStrip = 0;\n\nvar LinePieces = 1;\n\nfunction MeshFaceMaterial( materials ) {\n\n\tconsole.warn( 'THREE.MeshFaceMaterial has been removed. Use an Array instead.' );\n\treturn materials;\n\n}\n\nfunction MultiMaterial( materials ) {\n\n\tif ( materials === undefined ) materials = [];\n\n\tconsole.warn( 'THREE.MultiMaterial has been removed. Use an Array instead.' );\n\tmaterials.isMultiMaterial = true;\n\tmaterials.materials = materials;\n\tmaterials.clone = function () {\n\n\t\treturn materials.slice();\n\n\t};\n\treturn materials;\n\n}\n\nfunction PointCloud( geometry, material ) {\n\n\tconsole.warn( 'THREE.PointCloud has been renamed to THREE.Points.' );\n\treturn new Points( geometry, material );\n\n}\n\nfunction Particle( material ) {\n\n\tconsole.warn( 'THREE.Particle has been renamed to THREE.Sprite.' );\n\treturn new Sprite( material );\n\n}\n\nfunction ParticleSystem( geometry, material ) {\n\n\tconsole.warn( 'THREE.ParticleSystem has been renamed to THREE.Points.' );\n\treturn new Points( geometry, material );\n\n}\n\nfunction PointCloudMaterial( parameters ) {\n\n\tconsole.warn( 'THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.' );\n\treturn new PointsMaterial( parameters );\n\n}\n\nfunction ParticleBasicMaterial( parameters ) {\n\n\tconsole.warn( 'THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.' );\n\treturn new PointsMaterial( parameters );\n\n}\n\nfunction ParticleSystemMaterial( parameters ) {\n\n\tconsole.warn( 'THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.' );\n\treturn new PointsMaterial( parameters );\n\n}\n\nfunction Vertex( x, y, z ) {\n\n\tconsole.warn( 'THREE.Vertex has been removed. Use THREE.Vector3 instead.' );\n\treturn new Vector3( x, y, z );\n\n}\n\n//\n\nfunction DynamicBufferAttribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.' );\n\treturn new BufferAttribute( array, itemSize ).setDynamic( true );\n\n}\n\nfunction Int8Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead.' );\n\treturn new Int8BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint8Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead.' );\n\treturn new Uint8BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint8ClampedAttribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead.' );\n\treturn new Uint8ClampedBufferAttribute( array, itemSize );\n\n}\n\nfunction Int16Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead.' );\n\treturn new Int16BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint16Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead.' );\n\treturn new Uint16BufferAttribute( array, itemSize );\n\n}\n\nfunction Int32Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead.' );\n\treturn new Int32BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint32Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead.' );\n\treturn new Uint32BufferAttribute( array, itemSize );\n\n}\n\nfunction Float32Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead.' );\n\treturn new Float32BufferAttribute( array, itemSize );\n\n}\n\nfunction Float64Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead.' );\n\treturn new Float64BufferAttribute( array, itemSize );\n\n}\n\n//\n\nCurve.create = function ( construct, getPoint ) {\n\n\tconsole.log( 'THREE.Curve.create() has been deprecated' );\n\n\tconstruct.prototype = Object.create( Curve.prototype );\n\tconstruct.prototype.constructor = construct;\n\tconstruct.prototype.getPoint = getPoint;\n\n\treturn construct;\n\n};\n\n//\n\nObject.assign( CurvePath.prototype, {\n\n\tcreatePointsGeometry: function ( divisions ) {\n\n\t\tconsole.warn( 'THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );\n\n\t\t// generate geometry from path points (for Line or Points objects)\n\n\t\tvar pts = this.getPoints( divisions );\n\t\treturn this.createGeometry( pts );\n\n\t},\n\n\tcreateSpacedPointsGeometry: function ( divisions ) {\n\n\t\tconsole.warn( 'THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );\n\n\t\t// generate geometry from equidistant sampling along the path\n\n\t\tvar pts = this.getSpacedPoints( divisions );\n\t\treturn this.createGeometry( pts );\n\n\t},\n\n\tcreateGeometry: function ( points ) {\n\n\t\tconsole.warn( 'THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );\n\n\t\tvar geometry = new Geometry();\n\n\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tvar point = points[ i ];\n\t\t\tgeometry.vertices.push( new Vector3( point.x, point.y, point.z || 0 ) );\n\n\t\t}\n\n\t\treturn geometry;\n\n\t}\n\n} );\n\n//\n\nObject.assign( Path.prototype, {\n\n\tfromPoints: function ( points ) {\n\n\t\tconsole.warn( 'THREE.Path: .fromPoints() has been renamed to .setFromPoints().' );\n\t\tthis.setFromPoints( points );\n\n\t}\n\n} );\n\n//\n\nfunction ClosedSplineCurve3( points ) {\n\n\tconsole.warn( 'THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.' );\n\n\tCatmullRomCurve3.call( this, points );\n\tthis.type = 'catmullrom';\n\tthis.closed = true;\n\n}\n\nClosedSplineCurve3.prototype = Object.create( CatmullRomCurve3.prototype );\n\n//\n\nfunction SplineCurve3( points ) {\n\n\tconsole.warn( 'THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.' );\n\n\tCatmullRomCurve3.call( this, points );\n\tthis.type = 'catmullrom';\n\n}\n\nSplineCurve3.prototype = Object.create( CatmullRomCurve3.prototype );\n\n//\n\nfunction Spline( points ) {\n\n\tconsole.warn( 'THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead.' );\n\n\tCatmullRomCurve3.call( this, points );\n\tthis.type = 'catmullrom';\n\n}\n\nSpline.prototype = Object.create( CatmullRomCurve3.prototype );\n\nObject.assign( Spline.prototype, {\n\n\tinitFromArray: function ( /* a */ ) {\n\n\t\tconsole.error( 'THREE.Spline: .initFromArray() has been removed.' );\n\n\t},\n\tgetControlPointsArray: function ( /* optionalTarget */ ) {\n\n\t\tconsole.error( 'THREE.Spline: .getControlPointsArray() has been removed.' );\n\n\t},\n\treparametrizeByArcLength: function ( /* samplingCoef */ ) {\n\n\t\tconsole.error( 'THREE.Spline: .reparametrizeByArcLength() has been removed.' );\n\n\t}\n\n} );\n\n//\n\nfunction AxisHelper( size ) {\n\n\tconsole.warn( 'THREE.AxisHelper has been renamed to THREE.AxesHelper.' );\n\treturn new AxesHelper( size );\n\n}\n\nfunction BoundingBoxHelper( object, color ) {\n\n\tconsole.warn( 'THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead.' );\n\treturn new BoxHelper( object, color );\n\n}\n\nfunction EdgesHelper( object, hex ) {\n\n\tconsole.warn( 'THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.' );\n\treturn new LineSegments( new EdgesGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\n\n}\n\nGridHelper.prototype.setColors = function () {\n\n\tconsole.error( 'THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.' );\n\n};\n\nSkeletonHelper.prototype.update = function () {\n\n\tconsole.error( 'THREE.SkeletonHelper: update() no longer needs to be called.' );\n\n};\n\nfunction WireframeHelper( object, hex ) {\n\n\tconsole.warn( 'THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.' );\n\treturn new LineSegments( new WireframeGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\n\n}\n\n//\n\nObject.assign( Loader.prototype, {\n\n\textractUrlBase: function ( url ) {\n\n\t\tconsole.warn( 'THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead.' );\n\t\treturn LoaderUtils.extractUrlBase( url );\n\n\t}\n\n} );\n\nfunction XHRLoader( manager ) {\n\n\tconsole.warn( 'THREE.XHRLoader has been renamed to THREE.FileLoader.' );\n\treturn new FileLoader( manager );\n\n}\n\nfunction BinaryTextureLoader( manager ) {\n\n\tconsole.warn( 'THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader.' );\n\treturn new DataTextureLoader( manager );\n\n}\n\nObject.assign( ObjectLoader.prototype, {\n\n\tsetTexturePath: function ( value ) {\n\n\t\tconsole.warn( 'THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath().' );\n\t\treturn this.setResourcePath( value );\n\n\t}\n\n} );\n\n//\n\nObject.assign( Box2.prototype, {\n\n\tcenter: function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Box2: .center() has been renamed to .getCenter().' );\n\t\treturn this.getCenter( optionalTarget );\n\n\t},\n\tempty: function () {\n\n\t\tconsole.warn( 'THREE.Box2: .empty() has been renamed to .isEmpty().' );\n\t\treturn this.isEmpty();\n\n\t},\n\tisIntersectionBox: function ( box ) {\n\n\t\tconsole.warn( 'THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\treturn this.intersectsBox( box );\n\n\t},\n\tsize: function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Box2: .size() has been renamed to .getSize().' );\n\t\treturn this.getSize( optionalTarget );\n\n\t}\n} );\n\nObject.assign( Box3.prototype, {\n\n\tcenter: function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Box3: .center() has been renamed to .getCenter().' );\n\t\treturn this.getCenter( optionalTarget );\n\n\t},\n\tempty: function () {\n\n\t\tconsole.warn( 'THREE.Box3: .empty() has been renamed to .isEmpty().' );\n\t\treturn this.isEmpty();\n\n\t},\n\tisIntersectionBox: function ( box ) {\n\n\t\tconsole.warn( 'THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\treturn this.intersectsBox( box );\n\n\t},\n\tisIntersectionSphere: function ( sphere ) {\n\n\t\tconsole.warn( 'THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\t\treturn this.intersectsSphere( sphere );\n\n\t},\n\tsize: function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Box3: .size() has been renamed to .getSize().' );\n\t\treturn this.getSize( optionalTarget );\n\n\t}\n} );\n\nLine3.prototype.center = function ( optionalTarget ) {\n\n\tconsole.warn( 'THREE.Line3: .center() has been renamed to .getCenter().' );\n\treturn this.getCenter( optionalTarget );\n\n};\n\nObject.assign( _Math, {\n\n\trandom16: function () {\n\n\t\tconsole.warn( 'THREE.Math: .random16() has been deprecated. Use Math.random() instead.' );\n\t\treturn Math.random();\n\n\t},\n\n\tnearestPowerOfTwo: function ( value ) {\n\n\t\tconsole.warn( 'THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo().' );\n\t\treturn _Math.floorPowerOfTwo( value );\n\n\t},\n\n\tnextPowerOfTwo: function ( value ) {\n\n\t\tconsole.warn( 'THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo().' );\n\t\treturn _Math.ceilPowerOfTwo( value );\n\n\t}\n\n} );\n\nObject.assign( Matrix3.prototype, {\n\n\tflattenToArrayOffset: function ( array, offset ) {\n\n\t\tconsole.warn( \"THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\" );\n\t\treturn this.toArray( array, offset );\n\n\t},\n\tmultiplyVector3: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.' );\n\t\treturn vector.applyMatrix3( this );\n\n\t},\n\tmultiplyVector3Array: function ( /* a */ ) {\n\n\t\tconsole.error( 'THREE.Matrix3: .multiplyVector3Array() has been removed.' );\n\n\t},\n\tapplyToBuffer: function ( buffer /*, offset, length */ ) {\n\n\t\tconsole.warn( 'THREE.Matrix3: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.' );\n\t\treturn this.applyToBufferAttribute( buffer );\n\n\t},\n\tapplyToVector3Array: function ( /* array, offset, length */ ) {\n\n\t\tconsole.error( 'THREE.Matrix3: .applyToVector3Array() has been removed.' );\n\n\t}\n\n} );\n\nObject.assign( Matrix4.prototype, {\n\n\textractPosition: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().' );\n\t\treturn this.copyPosition( m );\n\n\t},\n\tflattenToArrayOffset: function ( array, offset ) {\n\n\t\tconsole.warn( \"THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\" );\n\t\treturn this.toArray( array, offset );\n\n\t},\n\tgetPosition: function () {\n\n\t\tvar v1;\n\n\t\treturn function getPosition() {\n\n\t\t\tif ( v1 === undefined ) v1 = new Vector3();\n\t\t\tconsole.warn( 'THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.' );\n\t\t\treturn v1.setFromMatrixColumn( this, 3 );\n\n\t\t};\n\n\t}(),\n\tsetRotationFromQuaternion: function ( q ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().' );\n\t\treturn this.makeRotationFromQuaternion( q );\n\n\t},\n\tmultiplyToArray: function () {\n\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyToArray() has been removed.' );\n\n\t},\n\tmultiplyVector3: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\treturn vector.applyMatrix4( this );\n\n\t},\n\tmultiplyVector4: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\treturn vector.applyMatrix4( this );\n\n\t},\n\tmultiplyVector3Array: function ( /* a */ ) {\n\n\t\tconsole.error( 'THREE.Matrix4: .multiplyVector3Array() has been removed.' );\n\n\t},\n\trotateAxis: function ( v ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.' );\n\t\tv.transformDirection( this );\n\n\t},\n\tcrossVector: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\treturn vector.applyMatrix4( this );\n\n\t},\n\ttranslate: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .translate() has been removed.' );\n\n\t},\n\trotateX: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .rotateX() has been removed.' );\n\n\t},\n\trotateY: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .rotateY() has been removed.' );\n\n\t},\n\trotateZ: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .rotateZ() has been removed.' );\n\n\t},\n\trotateByAxis: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .rotateByAxis() has been removed.' );\n\n\t},\n\tapplyToBuffer: function ( buffer /*, offset, length */ ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.' );\n\t\treturn this.applyToBufferAttribute( buffer );\n\n\t},\n\tapplyToVector3Array: function ( /* array, offset, length */ ) {\n\n\t\tconsole.error( 'THREE.Matrix4: .applyToVector3Array() has been removed.' );\n\n\t},\n\tmakeFrustum: function ( left, right, bottom, top, near, far ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.' );\n\t\treturn this.makePerspective( left, right, top, bottom, near, far );\n\n\t}\n\n} );\n\nPlane.prototype.isIntersectionLine = function ( line ) {\n\n\tconsole.warn( 'THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().' );\n\treturn this.intersectsLine( line );\n\n};\n\nQuaternion.prototype.multiplyVector3 = function ( vector ) {\n\n\tconsole.warn( 'THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.' );\n\treturn vector.applyQuaternion( this );\n\n};\n\nObject.assign( Ray.prototype, {\n\n\tisIntersectionBox: function ( box ) {\n\n\t\tconsole.warn( 'THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\treturn this.intersectsBox( box );\n\n\t},\n\tisIntersectionPlane: function ( plane ) {\n\n\t\tconsole.warn( 'THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().' );\n\t\treturn this.intersectsPlane( plane );\n\n\t},\n\tisIntersectionSphere: function ( sphere ) {\n\n\t\tconsole.warn( 'THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\t\treturn this.intersectsSphere( sphere );\n\n\t}\n\n} );\n\nObject.assign( Triangle.prototype, {\n\n\tarea: function () {\n\n\t\tconsole.warn( 'THREE.Triangle: .area() has been renamed to .getArea().' );\n\t\treturn this.getArea();\n\n\t},\n\tbarycoordFromPoint: function ( point, target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().' );\n\t\treturn this.getBarycoord( point, target );\n\n\t},\n\tmidpoint: function ( target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .midpoint() has been renamed to .getMidpoint().' );\n\t\treturn this.getMidpoint( target );\n\n\t},\n\tnormal: function ( target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .normal() has been renamed to .getNormal().' );\n\t\treturn this.getNormal( target );\n\n\t},\n\tplane: function ( target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .plane() has been renamed to .getPlane().' );\n\t\treturn this.getPlane( target );\n\n\t}\n\n} );\n\nObject.assign( Triangle, {\n\n\tbarycoordFromPoint: function ( point, a, b, c, target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().' );\n\t\treturn Triangle.getBarycoord( point, a, b, c, target );\n\n\t},\n\tnormal: function ( a, b, c, target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .normal() has been renamed to .getNormal().' );\n\t\treturn Triangle.getNormal( a, b, c, target );\n\n\t}\n\n} );\n\nObject.assign( Shape.prototype, {\n\n\textractAllPoints: function ( divisions ) {\n\n\t\tconsole.warn( 'THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead.' );\n\t\treturn this.extractPoints( divisions );\n\n\t},\n\textrude: function ( options ) {\n\n\t\tconsole.warn( 'THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.' );\n\t\treturn new ExtrudeGeometry( this, options );\n\n\t},\n\tmakeGeometry: function ( options ) {\n\n\t\tconsole.warn( 'THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.' );\n\t\treturn new ShapeGeometry( this, options );\n\n\t}\n\n} );\n\nObject.assign( Vector2.prototype, {\n\n\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\tconsole.warn( 'THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t},\n\tdistanceToManhattan: function ( v ) {\n\n\t\tconsole.warn( 'THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo().' );\n\t\treturn this.manhattanDistanceTo( v );\n\n\t},\n\tlengthManhattan: function () {\n\n\t\tconsole.warn( 'THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength().' );\n\t\treturn this.manhattanLength();\n\n\t}\n\n} );\n\nObject.assign( Vector3.prototype, {\n\n\tsetEulerFromRotationMatrix: function () {\n\n\t\tconsole.error( 'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.' );\n\n\t},\n\tsetEulerFromQuaternion: function () {\n\n\t\tconsole.error( 'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.' );\n\n\t},\n\tgetPositionFromMatrix: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().' );\n\t\treturn this.setFromMatrixPosition( m );\n\n\t},\n\tgetScaleFromMatrix: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().' );\n\t\treturn this.setFromMatrixScale( m );\n\n\t},\n\tgetColumnFromMatrix: function ( index, matrix ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().' );\n\t\treturn this.setFromMatrixColumn( matrix, index );\n\n\t},\n\tapplyProjection: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.' );\n\t\treturn this.applyMatrix4( m );\n\n\t},\n\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t},\n\tdistanceToManhattan: function ( v ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo().' );\n\t\treturn this.manhattanDistanceTo( v );\n\n\t},\n\tlengthManhattan: function () {\n\n\t\tconsole.warn( 'THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength().' );\n\t\treturn this.manhattanLength();\n\n\t}\n\n} );\n\nObject.assign( Vector4.prototype, {\n\n\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\tconsole.warn( 'THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t},\n\tlengthManhattan: function () {\n\n\t\tconsole.warn( 'THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength().' );\n\t\treturn this.manhattanLength();\n\n\t}\n\n} );\n\n//\n\nObject.assign( Geometry.prototype, {\n\n\tcomputeTangents: function () {\n\n\t\tconsole.error( 'THREE.Geometry: .computeTangents() has been removed.' );\n\n\t},\n\tcomputeLineDistances: function () {\n\n\t\tconsole.error( 'THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.' );\n\n\t}\n\n} );\n\nObject.assign( Object3D.prototype, {\n\n\tgetChildByName: function ( name ) {\n\n\t\tconsole.warn( 'THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().' );\n\t\treturn this.getObjectByName( name );\n\n\t},\n\trenderDepth: function () {\n\n\t\tconsole.warn( 'THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.' );\n\n\t},\n\ttranslate: function ( distance, axis ) {\n\n\t\tconsole.warn( 'THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.' );\n\t\treturn this.translateOnAxis( axis, distance );\n\n\t},\n\tgetWorldRotation: function () {\n\n\t\tconsole.error( 'THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.' );\n\n\t}\n\n} );\n\nObject.defineProperties( Object3D.prototype, {\n\n\teulerOrder: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\treturn this.rotation.order;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\tthis.rotation.order = value;\n\n\t\t}\n\t},\n\tuseQuaternion: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperties( LOD.prototype, {\n\n\tobjects: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.LOD: .objects has been renamed to .levels.' );\n\t\t\treturn this.levels;\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperty( Skeleton.prototype, 'useVertexTexture', {\n\n\tget: function () {\n\n\t\tconsole.warn( 'THREE.Skeleton: useVertexTexture has been removed.' );\n\n\t},\n\tset: function () {\n\n\t\tconsole.warn( 'THREE.Skeleton: useVertexTexture has been removed.' );\n\n\t}\n\n} );\n\nSkinnedMesh.prototype.initBones = function () {\n\n\tconsole.error( 'THREE.SkinnedMesh: initBones() has been removed.' );\n\n};\n\nObject.defineProperty( Curve.prototype, '__arcLengthDivisions', {\n\n\tget: function () {\n\n\t\tconsole.warn( 'THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.' );\n\t\treturn this.arcLengthDivisions;\n\n\t},\n\tset: function ( value ) {\n\n\t\tconsole.warn( 'THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.' );\n\t\tthis.arcLengthDivisions = value;\n\n\t}\n\n} );\n\n//\n\nPerspectiveCamera.prototype.setLens = function ( focalLength, filmGauge ) {\n\n\tconsole.warn( \"THREE.PerspectiveCamera.setLens is deprecated. \" +\n\t\t\t\"Use .setFocalLength and .filmGauge for a photographic setup.\" );\n\n\tif ( filmGauge !== undefined ) this.filmGauge = filmGauge;\n\tthis.setFocalLength( focalLength );\n\n};\n\n//\n\nObject.defineProperties( Light.prototype, {\n\tonlyShadow: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Light: .onlyShadow has been removed.' );\n\n\t\t}\n\t},\n\tshadowCameraFov: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFov is now .shadow.camera.fov.' );\n\t\t\tthis.shadow.camera.fov = value;\n\n\t\t}\n\t},\n\tshadowCameraLeft: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraLeft is now .shadow.camera.left.' );\n\t\t\tthis.shadow.camera.left = value;\n\n\t\t}\n\t},\n\tshadowCameraRight: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraRight is now .shadow.camera.right.' );\n\t\t\tthis.shadow.camera.right = value;\n\n\t\t}\n\t},\n\tshadowCameraTop: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraTop is now .shadow.camera.top.' );\n\t\t\tthis.shadow.camera.top = value;\n\n\t\t}\n\t},\n\tshadowCameraBottom: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.' );\n\t\t\tthis.shadow.camera.bottom = value;\n\n\t\t}\n\t},\n\tshadowCameraNear: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraNear is now .shadow.camera.near.' );\n\t\t\tthis.shadow.camera.near = value;\n\n\t\t}\n\t},\n\tshadowCameraFar: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFar is now .shadow.camera.far.' );\n\t\t\tthis.shadow.camera.far = value;\n\n\t\t}\n\t},\n\tshadowCameraVisible: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.' );\n\n\t\t}\n\t},\n\tshadowBias: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowBias is now .shadow.bias.' );\n\t\t\tthis.shadow.bias = value;\n\n\t\t}\n\t},\n\tshadowDarkness: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowDarkness has been removed.' );\n\n\t\t}\n\t},\n\tshadowMapWidth: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.' );\n\t\t\tthis.shadow.mapSize.width = value;\n\n\t\t}\n\t},\n\tshadowMapHeight: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.' );\n\t\t\tthis.shadow.mapSize.height = value;\n\n\t\t}\n\t}\n} );\n\n//\n\nObject.defineProperties( BufferAttribute.prototype, {\n\n\tlength: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Use .count instead.' );\n\t\t\treturn this.array.length;\n\n\t\t}\n\t},\n\tcopyIndicesArray: function ( /* indices */ ) {\n\n\t\tconsole.error( 'THREE.BufferAttribute: .copyIndicesArray() has been removed.' );\n\n\t}\n\n} );\n\nObject.assign( BufferGeometry.prototype, {\n\n\taddIndex: function ( index ) {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().' );\n\t\tthis.setIndex( index );\n\n\t},\n\taddDrawCall: function ( start, count, indexOffset ) {\n\n\t\tif ( indexOffset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.' );\n\n\t\t}\n\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() is now .addGroup().' );\n\t\tthis.addGroup( start, count );\n\n\t},\n\tclearDrawCalls: function () {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().' );\n\t\tthis.clearGroups();\n\n\t},\n\tcomputeTangents: function () {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .computeTangents() has been removed.' );\n\n\t},\n\tcomputeOffsets: function () {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .computeOffsets() has been removed.' );\n\n\t}\n\n} );\n\nObject.defineProperties( BufferGeometry.prototype, {\n\n\tdrawcalls: {\n\t\tget: function () {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry: .drawcalls has been renamed to .groups.' );\n\t\t\treturn this.groups;\n\n\t\t}\n\t},\n\toffsets: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .offsets has been renamed to .groups.' );\n\t\t\treturn this.groups;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.assign( ExtrudeBufferGeometry.prototype, {\n\n\tgetArrays: function () {\n\n\t\tconsole.error( 'THREE.ExtrudeBufferGeometry: .getArrays() has been removed.' );\n\n\t},\n\n\taddShapeList: function () {\n\n\t\tconsole.error( 'THREE.ExtrudeBufferGeometry: .addShapeList() has been removed.' );\n\n\t},\n\n\taddShape: function () {\n\n\t\tconsole.error( 'THREE.ExtrudeBufferGeometry: .addShape() has been removed.' );\n\n\t}\n\n} );\n\n//\n\nObject.defineProperties( Uniform.prototype, {\n\n\tdynamic: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.' );\n\n\t\t}\n\t},\n\tonUpdate: {\n\t\tvalue: function () {\n\n\t\t\tconsole.warn( 'THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.' );\n\t\t\treturn this;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.defineProperties( Material.prototype, {\n\n\twrapAround: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .wrapAround has been removed.' );\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .wrapAround has been removed.' );\n\n\t\t}\n\t},\n\n\toverdraw: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .overdraw has been removed.' );\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .overdraw has been removed.' );\n\n\t\t}\n\t},\n\n\twrapRGB: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .wrapRGB has been removed.' );\n\t\t\treturn new Color();\n\n\t\t}\n\t},\n\n\tshading: {\n\t\tget: function () {\n\n\t\t\tconsole.error( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\t\t\tthis.flatShading = ( value === FlatShading );\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperties( MeshPhongMaterial.prototype, {\n\n\tmetal: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.' );\n\t\t\treturn false;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead' );\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperties( ShaderMaterial.prototype, {\n\n\tderivatives: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\treturn this.extensions.derivatives;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\tthis.extensions.derivatives = value;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.assign( WebGLRenderer.prototype, {\n\n\tclearTarget: function ( renderTarget, color, depth, stencil ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead.' );\n\t\tthis.setRenderTarget( renderTarget );\n\t\tthis.clear( color, depth, stencil );\n\n\t},\n\tanimate: function ( callback ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .animate() is now .setAnimationLoop().' );\n\t\tthis.setAnimationLoop( callback );\n\n\t},\n\tgetCurrentRenderTarget: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget().' );\n\t\treturn this.getRenderTarget();\n\n\t},\n\tgetMaxAnisotropy: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy().' );\n\t\treturn this.capabilities.getMaxAnisotropy();\n\n\t},\n\tgetPrecision: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision.' );\n\t\treturn this.capabilities.precision;\n\n\t},\n\tresetGLState: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .resetGLState() is now .state.reset().' );\n\t\treturn this.state.reset();\n\n\t},\n\tsupportsFloatTextures: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).' );\n\t\treturn this.extensions.get( 'OES_texture_float' );\n\n\t},\n\tsupportsHalfFloatTextures: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).' );\n\t\treturn this.extensions.get( 'OES_texture_half_float' );\n\n\t},\n\tsupportsStandardDerivatives: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).' );\n\t\treturn this.extensions.get( 'OES_standard_derivatives' );\n\n\t},\n\tsupportsCompressedTextureS3TC: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).' );\n\t\treturn this.extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t},\n\tsupportsCompressedTexturePVRTC: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).' );\n\t\treturn this.extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t},\n\tsupportsBlendMinMax: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).' );\n\t\treturn this.extensions.get( 'EXT_blend_minmax' );\n\n\t},\n\tsupportsVertexTextures: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.' );\n\t\treturn this.capabilities.vertexTextures;\n\n\t},\n\tsupportsInstancedArrays: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).' );\n\t\treturn this.extensions.get( 'ANGLE_instanced_arrays' );\n\n\t},\n\tenableScissorTest: function ( boolean ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().' );\n\t\tthis.setScissorTest( boolean );\n\n\t},\n\tinitMaterial: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .initMaterial() has been removed.' );\n\n\t},\n\taddPrePlugin: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .addPrePlugin() has been removed.' );\n\n\t},\n\taddPostPlugin: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .addPostPlugin() has been removed.' );\n\n\t},\n\tupdateShadowMap: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .updateShadowMap() has been removed.' );\n\n\t},\n\tsetFaceCulling: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .setFaceCulling() has been removed.' );\n\n\t},\n\tallocTextureUnit: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .allocTextureUnit() has been removed.' );\n\n\t},\n\tsetTexture: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .setTexture() has been removed.' );\n\n\t},\n\tsetTexture2D: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .setTexture2D() has been removed.' );\n\n\t},\n\tsetTextureCube: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .setTextureCube() has been removed.' );\n\n\t}\n\n} );\n\nObject.defineProperties( WebGLRenderer.prototype, {\n\n\tshadowMapEnabled: {\n\t\tget: function () {\n\n\t\t\treturn this.shadowMap.enabled;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.' );\n\t\t\tthis.shadowMap.enabled = value;\n\n\t\t}\n\t},\n\tshadowMapType: {\n\t\tget: function () {\n\n\t\t\treturn this.shadowMap.type;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.' );\n\t\t\tthis.shadowMap.type = value;\n\n\t\t}\n\t},\n\tshadowMapCullFace: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function ( /* value */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t}\n} );\n\nObject.defineProperties( WebGLShadowMap.prototype, {\n\n\tcullFace: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function ( /* cullFace */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t},\n\trenderReverseSided: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t},\n\trenderSingleSided: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.defineProperties( WebGLRenderTargetCube.prototype, {\n\n\tactiveCubeFace: {\n\t\tset: function ( /* value */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTargetCube: .activeCubeFace has been removed. It is now the second parameter of WebGLRenderer.setRenderTarget().' );\n\n\t\t}\n\t},\n\tactiveMipMapLevel: {\n\t\tset: function ( /* value */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTargetCube: .activeMipMapLevel has been removed. It is now the third parameter of WebGLRenderer.setRenderTarget().' );\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.defineProperties( WebGLRenderTarget.prototype, {\n\n\twrapS: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\treturn this.texture.wrapS;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\tthis.texture.wrapS = value;\n\n\t\t}\n\t},\n\twrapT: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\treturn this.texture.wrapT;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\tthis.texture.wrapT = value;\n\n\t\t}\n\t},\n\tmagFilter: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\treturn this.texture.magFilter;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\tthis.texture.magFilter = value;\n\n\t\t}\n\t},\n\tminFilter: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\treturn this.texture.minFilter;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\tthis.texture.minFilter = value;\n\n\t\t}\n\t},\n\tanisotropy: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\treturn this.texture.anisotropy;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\tthis.texture.anisotropy = value;\n\n\t\t}\n\t},\n\toffset: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\treturn this.texture.offset;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\tthis.texture.offset = value;\n\n\t\t}\n\t},\n\trepeat: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\treturn this.texture.repeat;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\tthis.texture.repeat = value;\n\n\t\t}\n\t},\n\tformat: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\treturn this.texture.format;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\tthis.texture.format = value;\n\n\t\t}\n\t},\n\ttype: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\treturn this.texture.type;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\tthis.texture.type = value;\n\n\t\t}\n\t},\n\tgenerateMipmaps: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\treturn this.texture.generateMipmaps;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\tthis.texture.generateMipmaps = value;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.defineProperties( WebVRManager.prototype, {\n\n\tstanding: {\n\t\tset: function ( /* value */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebVRManager: .standing has been removed.' );\n\n\t\t}\n\t},\n\tuserHeight: {\n\t\tset: function ( /* value */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebVRManager: .userHeight has been removed.' );\n\n\t\t}\n\t}\n\n} );\n\n//\n\nAudio.prototype.load = function ( file ) {\n\n\tconsole.warn( 'THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.' );\n\tvar scope = this;\n\tvar audioLoader = new AudioLoader();\n\taudioLoader.load( file, function ( buffer ) {\n\n\t\tscope.setBuffer( buffer );\n\n\t} );\n\treturn this;\n\n};\n\nAudioAnalyser.prototype.getData = function () {\n\n\tconsole.warn( 'THREE.AudioAnalyser: .getData() is now .getFrequencyData().' );\n\treturn this.getFrequencyData();\n\n};\n\n//\n\nCubeCamera.prototype.updateCubeMap = function ( renderer, scene ) {\n\n\tconsole.warn( 'THREE.CubeCamera: .updateCubeMap() is now .update().' );\n\treturn this.update( renderer, scene );\n\n};\n\n//\n\nvar GeometryUtils = {\n\n\tmerge: function ( geometry1, geometry2, materialIndexOffset ) {\n\n\t\tconsole.warn( 'THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.' );\n\t\tvar matrix;\n\n\t\tif ( geometry2.isMesh ) {\n\n\t\t\tgeometry2.matrixAutoUpdate && geometry2.updateMatrix();\n\n\t\t\tmatrix = geometry2.matrix;\n\t\t\tgeometry2 = geometry2.geometry;\n\n\t\t}\n\n\t\tgeometry1.merge( geometry2, matrix, materialIndexOffset );\n\n\t},\n\n\tcenter: function ( geometry ) {\n\n\t\tconsole.warn( 'THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.' );\n\t\treturn geometry.center();\n\n\t}\n\n};\n\nImageUtils.crossOrigin = undefined;\n\nImageUtils.loadTexture = function ( url, mapping, onLoad, onError ) {\n\n\tconsole.warn( 'THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.' );\n\n\tvar loader = new TextureLoader();\n\tloader.setCrossOrigin( this.crossOrigin );\n\n\tvar texture = loader.load( url, onLoad, undefined, onError );\n\n\tif ( mapping ) texture.mapping = mapping;\n\n\treturn texture;\n\n};\n\nImageUtils.loadTextureCube = function ( urls, mapping, onLoad, onError ) {\n\n\tconsole.warn( 'THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.' );\n\n\tvar loader = new CubeTextureLoader();\n\tloader.setCrossOrigin( this.crossOrigin );\n\n\tvar texture = loader.load( urls, onLoad, undefined, onError );\n\n\tif ( mapping ) texture.mapping = mapping;\n\n\treturn texture;\n\n};\n\nImageUtils.loadCompressedTexture = function () {\n\n\tconsole.error( 'THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.' );\n\n};\n\nImageUtils.loadCompressedTextureCube = function () {\n\n\tconsole.error( 'THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.' );\n\n};\n\n//\n\nfunction CanvasRenderer() {\n\n\tconsole.error( 'THREE.CanvasRenderer has been removed' );\n\n}\n\n//\n\nfunction JSONLoader() {\n\n\tconsole.error( 'THREE.JSONLoader has been removed.' );\n\n}\n\n//\n\nvar SceneUtils = {\n\n\tcreateMultiMaterialObject: function ( /* geometry, materials */ ) {\n\n\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js' );\n\n\t},\n\n\tdetach: function ( /* child, parent, scene */ ) {\n\n\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js' );\n\n\t},\n\n\tattach: function ( /* child, scene, parent */ ) {\n\n\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js' );\n\n\t}\n\n};\n\n//\n\nfunction LensFlare() {\n\n\tconsole.error( 'THREE.LensFlare has been moved to /examples/js/objects/Lensflare.js' );\n\n}\n\n\n\n// CONCATENATED MODULE: ./node_modules/_three@0.105.2@three/examples/jsm/loaders/OBJLoader.js\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\n\nvar OBJLoader_OBJLoader = ( function () {\n\n\t// o object_name | g group_name\n\tvar object_pattern = /^[og]\\s*(.+)?/;\n\t// mtllib file_reference\n\tvar material_library_pattern = /^mtllib /;\n\t// usemtl material_name\n\tvar material_use_pattern = /^usemtl /;\n\n\tfunction ParserState() {\n\n\t\tvar state = {\n\t\t\tobjects: [],\n\t\t\tobject: {},\n\n\t\t\tvertices: [],\n\t\t\tnormals: [],\n\t\t\tcolors: [],\n\t\t\tuvs: [],\n\n\t\t\tmaterialLibraries: [],\n\n\t\t\tstartObject: function ( name, fromDeclaration ) {\n\n\t\t\t\t// If the current object (initial from reset) is not from a g/o declaration in the parsed\n\t\t\t\t// file. We need to use it for the first parsed g/o to keep things in sync.\n\t\t\t\tif ( this.object && this.object.fromDeclaration === false ) {\n\n\t\t\t\t\tthis.object.name = name;\n\t\t\t\t\tthis.object.fromDeclaration = ( fromDeclaration !== false );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tvar previousMaterial = ( this.object && typeof this.object.currentMaterial === 'function' ? this.object.currentMaterial() : undefined );\n\n\t\t\t\tif ( this.object && typeof this.object._finalize === 'function' ) {\n\n\t\t\t\t\tthis.object._finalize( true );\n\n\t\t\t\t}\n\n\t\t\t\tthis.object = {\n\t\t\t\t\tname: name || '',\n\t\t\t\t\tfromDeclaration: ( fromDeclaration !== false ),\n\n\t\t\t\t\tgeometry: {\n\t\t\t\t\t\tvertices: [],\n\t\t\t\t\t\tnormals: [],\n\t\t\t\t\t\tcolors: [],\n\t\t\t\t\t\tuvs: []\n\t\t\t\t\t},\n\t\t\t\t\tmaterials: [],\n\t\t\t\t\tsmooth: true,\n\n\t\t\t\t\tstartMaterial: function ( name, libraries ) {\n\n\t\t\t\t\t\tvar previous = this._finalize( false );\n\n\t\t\t\t\t\t// New usemtl declaration overwrites an inherited material, except if faces were declared\n\t\t\t\t\t\t// after the material, then it must be preserved for proper MultiMaterial continuation.\n\t\t\t\t\t\tif ( previous && ( previous.inherited || previous.groupCount <= 0 ) ) {\n\n\t\t\t\t\t\t\tthis.materials.splice( previous.index, 1 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar material = {\n\t\t\t\t\t\t\tindex: this.materials.length,\n\t\t\t\t\t\t\tname: name || '',\n\t\t\t\t\t\t\tmtllib: ( Array.isArray( libraries ) && libraries.length > 0 ? libraries[ libraries.length - 1 ] : '' ),\n\t\t\t\t\t\t\tsmooth: ( previous !== undefined ? previous.smooth : this.smooth ),\n\t\t\t\t\t\t\tgroupStart: ( previous !== undefined ? previous.groupEnd : 0 ),\n\t\t\t\t\t\t\tgroupEnd: - 1,\n\t\t\t\t\t\t\tgroupCount: - 1,\n\t\t\t\t\t\t\tinherited: false,\n\n\t\t\t\t\t\t\tclone: function ( index ) {\n\n\t\t\t\t\t\t\t\tvar cloned = {\n\t\t\t\t\t\t\t\t\tindex: ( typeof index === 'number' ? index : this.index ),\n\t\t\t\t\t\t\t\t\tname: this.name,\n\t\t\t\t\t\t\t\t\tmtllib: this.mtllib,\n\t\t\t\t\t\t\t\t\tsmooth: this.smooth,\n\t\t\t\t\t\t\t\t\tgroupStart: 0,\n\t\t\t\t\t\t\t\t\tgroupEnd: - 1,\n\t\t\t\t\t\t\t\t\tgroupCount: - 1,\n\t\t\t\t\t\t\t\t\tinherited: false\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tcloned.clone = this.clone.bind( cloned );\n\t\t\t\t\t\t\t\treturn cloned;\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tthis.materials.push( material );\n\n\t\t\t\t\t\treturn material;\n\n\t\t\t\t\t},\n\n\t\t\t\t\tcurrentMaterial: function () {\n\n\t\t\t\t\t\tif ( this.materials.length > 0 ) {\n\n\t\t\t\t\t\t\treturn this.materials[ this.materials.length - 1 ];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn undefined;\n\n\t\t\t\t\t},\n\n\t\t\t\t\t_finalize: function ( end ) {\n\n\t\t\t\t\t\tvar lastMultiMaterial = this.currentMaterial();\n\t\t\t\t\t\tif ( lastMultiMaterial && lastMultiMaterial.groupEnd === - 1 ) {\n\n\t\t\t\t\t\t\tlastMultiMaterial.groupEnd = this.geometry.vertices.length / 3;\n\t\t\t\t\t\t\tlastMultiMaterial.groupCount = lastMultiMaterial.groupEnd - lastMultiMaterial.groupStart;\n\t\t\t\t\t\t\tlastMultiMaterial.inherited = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Ignore objects tail materials if no face declarations followed them before a new o/g started.\n\t\t\t\t\t\tif ( end && this.materials.length > 1 ) {\n\n\t\t\t\t\t\t\tfor ( var mi = this.materials.length - 1; mi >= 0; mi -- ) {\n\n\t\t\t\t\t\t\t\tif ( this.materials[ mi ].groupCount <= 0 ) {\n\n\t\t\t\t\t\t\t\t\tthis.materials.splice( mi, 1 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Guarantee at least one empty material, this makes the creation later more straight forward.\n\t\t\t\t\t\tif ( end && this.materials.length === 0 ) {\n\n\t\t\t\t\t\t\tthis.materials.push( {\n\t\t\t\t\t\t\t\tname: '',\n\t\t\t\t\t\t\t\tsmooth: this.smooth\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn lastMultiMaterial;\n\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t// Inherit previous objects material.\n\t\t\t\t// Spec tells us that a declared material must be set to all objects until a new material is declared.\n\t\t\t\t// If a usemtl declaration is encountered while this new object is being parsed, it will\n\t\t\t\t// overwrite the inherited material. Exception being that there was already face declarations\n\t\t\t\t// to the inherited material, then it will be preserved for proper MultiMaterial continuation.\n\n\t\t\t\tif ( previousMaterial && previousMaterial.name && typeof previousMaterial.clone === 'function' ) {\n\n\t\t\t\t\tvar declared = previousMaterial.clone( 0 );\n\t\t\t\t\tdeclared.inherited = true;\n\t\t\t\t\tthis.object.materials.push( declared );\n\n\t\t\t\t}\n\n\t\t\t\tthis.objects.push( this.object );\n\n\t\t\t},\n\n\t\t\tfinalize: function () {\n\n\t\t\t\tif ( this.object && typeof this.object._finalize === 'function' ) {\n\n\t\t\t\t\tthis.object._finalize( true );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tparseVertexIndex: function ( value, len ) {\n\n\t\t\t\tvar index = parseInt( value, 10 );\n\t\t\t\treturn ( index >= 0 ? index - 1 : index + len / 3 ) * 3;\n\n\t\t\t},\n\n\t\t\tparseNormalIndex: function ( value, len ) {\n\n\t\t\t\tvar index = parseInt( value, 10 );\n\t\t\t\treturn ( index >= 0 ? index - 1 : index + len / 3 ) * 3;\n\n\t\t\t},\n\n\t\t\tparseUVIndex: function ( value, len ) {\n\n\t\t\t\tvar index = parseInt( value, 10 );\n\t\t\t\treturn ( index >= 0 ? index - 1 : index + len / 2 ) * 2;\n\n\t\t\t},\n\n\t\t\taddVertex: function ( a, b, c ) {\n\n\t\t\t\tvar src = this.vertices;\n\t\t\t\tvar dst = this.object.geometry.vertices;\n\n\t\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\t\t\t\tdst.push( src[ b + 0 ], src[ b + 1 ], src[ b + 2 ] );\n\t\t\t\tdst.push( src[ c + 0 ], src[ c + 1 ], src[ c + 2 ] );\n\n\t\t\t},\n\n\t\t\taddVertexPoint: function ( a ) {\n\n\t\t\t\tvar src = this.vertices;\n\t\t\t\tvar dst = this.object.geometry.vertices;\n\n\t\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\n\t\t\t},\n\n\t\t\taddVertexLine: function ( a ) {\n\n\t\t\t\tvar src = this.vertices;\n\t\t\t\tvar dst = this.object.geometry.vertices;\n\n\t\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\n\t\t\t},\n\n\t\t\taddNormal: function ( a, b, c ) {\n\n\t\t\t\tvar src = this.normals;\n\t\t\t\tvar dst = this.object.geometry.normals;\n\n\t\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\t\t\t\tdst.push( src[ b + 0 ], src[ b + 1 ], src[ b + 2 ] );\n\t\t\t\tdst.push( src[ c + 0 ], src[ c + 1 ], src[ c + 2 ] );\n\n\t\t\t},\n\n\t\t\taddColor: function ( a, b, c ) {\n\n\t\t\t\tvar src = this.colors;\n\t\t\t\tvar dst = this.object.geometry.colors;\n\n\t\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\t\t\t\tdst.push( src[ b + 0 ], src[ b + 1 ], src[ b + 2 ] );\n\t\t\t\tdst.push( src[ c + 0 ], src[ c + 1 ], src[ c + 2 ] );\n\n\t\t\t},\n\n\t\t\taddUV: function ( a, b, c ) {\n\n\t\t\t\tvar src = this.uvs;\n\t\t\t\tvar dst = this.object.geometry.uvs;\n\n\t\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ] );\n\t\t\t\tdst.push( src[ b + 0 ], src[ b + 1 ] );\n\t\t\t\tdst.push( src[ c + 0 ], src[ c + 1 ] );\n\n\t\t\t},\n\n\t\t\taddUVLine: function ( a ) {\n\n\t\t\t\tvar src = this.uvs;\n\t\t\t\tvar dst = this.object.geometry.uvs;\n\n\t\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ] );\n\n\t\t\t},\n\n\t\t\taddFace: function ( a, b, c, ua, ub, uc, na, nb, nc ) {\n\n\t\t\t\tvar vLen = this.vertices.length;\n\n\t\t\t\tvar ia = this.parseVertexIndex( a, vLen );\n\t\t\t\tvar ib = this.parseVertexIndex( b, vLen );\n\t\t\t\tvar ic = this.parseVertexIndex( c, vLen );\n\n\t\t\t\tthis.addVertex( ia, ib, ic );\n\n\t\t\t\tif ( ua !== undefined && ua !== '' ) {\n\n\t\t\t\t\tvar uvLen = this.uvs.length;\n\t\t\t\t\tia = this.parseUVIndex( ua, uvLen );\n\t\t\t\t\tib = this.parseUVIndex( ub, uvLen );\n\t\t\t\t\tic = this.parseUVIndex( uc, uvLen );\n\t\t\t\t\tthis.addUV( ia, ib, ic );\n\n\t\t\t\t}\n\n\t\t\t\tif ( na !== undefined && na !== '' ) {\n\n\t\t\t\t\t// Normals are many times the same. If so, skip function call and parseInt.\n\t\t\t\t\tvar nLen = this.normals.length;\n\t\t\t\t\tia = this.parseNormalIndex( na, nLen );\n\n\t\t\t\t\tib = na === nb ? ia : this.parseNormalIndex( nb, nLen );\n\t\t\t\t\tic = na === nc ? ia : this.parseNormalIndex( nc, nLen );\n\n\t\t\t\t\tthis.addNormal( ia, ib, ic );\n\n\t\t\t\t}\n\n\t\t\t\tif ( this.colors.length > 0 ) {\n\n\t\t\t\t\tthis.addColor( ia, ib, ic );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\taddPointGeometry: function ( vertices ) {\n\n\t\t\t\tthis.object.geometry.type = 'Points';\n\n\t\t\t\tvar vLen = this.vertices.length;\n\n\t\t\t\tfor ( var vi = 0, l = vertices.length; vi < l; vi ++ ) {\n\n\t\t\t\t\tthis.addVertexPoint( this.parseVertexIndex( vertices[ vi ], vLen ) );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\taddLineGeometry: function ( vertices, uvs ) {\n\n\t\t\t\tthis.object.geometry.type = 'Line';\n\n\t\t\t\tvar vLen = this.vertices.length;\n\t\t\t\tvar uvLen = this.uvs.length;\n\n\t\t\t\tfor ( var vi = 0, l = vertices.length; vi < l; vi ++ ) {\n\n\t\t\t\t\tthis.addVertexLine( this.parseVertexIndex( vertices[ vi ], vLen ) );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var uvi = 0, l = uvs.length; uvi < l; uvi ++ ) {\n\n\t\t\t\t\tthis.addUVLine( this.parseUVIndex( uvs[ uvi ], uvLen ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tstate.startObject( '', false );\n\n\t\treturn state;\n\n\t}\n\n\t//\n\n\tfunction OBJLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t\tthis.materials = null;\n\n\t}\n\n\tOBJLoader.prototype = {\n\n\t\tconstructor: OBJLoader,\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar loader = new FileLoader( scope.manager );\n\t\t\tloader.setPath( this.path );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\tonLoad( scope.parse( text ) );\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tsetPath: function ( value ) {\n\n\t\t\tthis.path = value;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetMaterials: function ( materials ) {\n\n\t\t\tthis.materials = materials;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tparse: function ( text ) {\n\n\t\t\tconsole.time( 'OBJLoader' );\n\n\t\t\tvar state = new ParserState();\n\n\t\t\tif ( text.indexOf( '\\r\\n' ) !== - 1 ) {\n\n\t\t\t\t// This is faster than String.split with regex that splits on both\n\t\t\t\ttext = text.replace( /\\r\\n/g, '\\n' );\n\n\t\t\t}\n\n\t\t\tif ( text.indexOf( '\\\\\\n' ) !== - 1 ) {\n\n\t\t\t\t// join lines separated by a line continuation character (\\)\n\t\t\t\ttext = text.replace( /\\\\\\n/g, '' );\n\n\t\t\t}\n\n\t\t\tvar lines = text.split( '\\n' );\n\t\t\tvar line = '', lineFirstChar = '';\n\t\t\tvar lineLength = 0;\n\t\t\tvar result = [];\n\n\t\t\t// Faster to just trim left side of the line. Use if available.\n\t\t\tvar trimLeft = ( typeof ''.trimLeft === 'function' );\n\n\t\t\tfor ( var i = 0, l = lines.length; i < l; i ++ ) {\n\n\t\t\t\tline = lines[ i ];\n\n\t\t\t\tline = trimLeft ? line.trimLeft() : line.trim();\n\n\t\t\t\tlineLength = line.length;\n\n\t\t\t\tif ( lineLength === 0 ) continue;\n\n\t\t\t\tlineFirstChar = line.charAt( 0 );\n\n\t\t\t\t// @todo invoke passed in handler if any\n\t\t\t\tif ( lineFirstChar === '#' ) continue;\n\n\t\t\t\tif ( lineFirstChar === 'v' ) {\n\n\t\t\t\t\tvar data = line.split( /\\s+/ );\n\n\t\t\t\t\tswitch ( data[ 0 ] ) {\n\n\t\t\t\t\t\tcase 'v':\n\t\t\t\t\t\t\tstate.vertices.push(\n\t\t\t\t\t\t\t\tparseFloat( data[ 1 ] ),\n\t\t\t\t\t\t\t\tparseFloat( data[ 2 ] ),\n\t\t\t\t\t\t\t\tparseFloat( data[ 3 ] )\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif ( data.length === 8 ) {\n\n\t\t\t\t\t\t\t\tstate.colors.push(\n\t\t\t\t\t\t\t\t\tparseFloat( data[ 4 ] ),\n\t\t\t\t\t\t\t\t\tparseFloat( data[ 5 ] ),\n\t\t\t\t\t\t\t\t\tparseFloat( data[ 6 ] )\n\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'vn':\n\t\t\t\t\t\t\tstate.normals.push(\n\t\t\t\t\t\t\t\tparseFloat( data[ 1 ] ),\n\t\t\t\t\t\t\t\tparseFloat( data[ 2 ] ),\n\t\t\t\t\t\t\t\tparseFloat( data[ 3 ] )\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'vt':\n\t\t\t\t\t\t\tstate.uvs.push(\n\t\t\t\t\t\t\t\tparseFloat( data[ 1 ] ),\n\t\t\t\t\t\t\t\tparseFloat( data[ 2 ] )\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( lineFirstChar === 'f' ) {\n\n\t\t\t\t\tvar lineData = line.substr( 1 ).trim();\n\t\t\t\t\tvar vertexData = lineData.split( /\\s+/ );\n\t\t\t\t\tvar faceVertices = [];\n\n\t\t\t\t\t// Parse the face vertex data into an easy to work with format\n\n\t\t\t\t\tfor ( var j = 0, jl = vertexData.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tvar vertex = vertexData[ j ];\n\n\t\t\t\t\t\tif ( vertex.length > 0 ) {\n\n\t\t\t\t\t\t\tvar vertexParts = vertex.split( '/' );\n\t\t\t\t\t\t\tfaceVertices.push( vertexParts );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Draw an edge between the first vertex and all subsequent vertices to form an n-gon\n\n\t\t\t\t\tvar v1 = faceVertices[ 0 ];\n\n\t\t\t\t\tfor ( var j = 1, jl = faceVertices.length - 1; j < jl; j ++ ) {\n\n\t\t\t\t\t\tvar v2 = faceVertices[ j ];\n\t\t\t\t\t\tvar v3 = faceVertices[ j + 1 ];\n\n\t\t\t\t\t\tstate.addFace(\n\t\t\t\t\t\t\tv1[ 0 ], v2[ 0 ], v3[ 0 ],\n\t\t\t\t\t\t\tv1[ 1 ], v2[ 1 ], v3[ 1 ],\n\t\t\t\t\t\t\tv1[ 2 ], v2[ 2 ], v3[ 2 ]\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( lineFirstChar === 'l' ) {\n\n\t\t\t\t\tvar lineParts = line.substring( 1 ).trim().split( \" \" );\n\t\t\t\t\tvar lineVertices = [], lineUVs = [];\n\n\t\t\t\t\tif ( line.indexOf( \"/\" ) === - 1 ) {\n\n\t\t\t\t\t\tlineVertices = lineParts;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tfor ( var li = 0, llen = lineParts.length; li < llen; li ++ ) {\n\n\t\t\t\t\t\t\tvar parts = lineParts[ li ].split( \"/\" );\n\n\t\t\t\t\t\t\tif ( parts[ 0 ] !== \"\" ) lineVertices.push( parts[ 0 ] );\n\t\t\t\t\t\t\tif ( parts[ 1 ] !== \"\" ) lineUVs.push( parts[ 1 ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t\tstate.addLineGeometry( lineVertices, lineUVs );\n\n\t\t\t\t} else if ( lineFirstChar === 'p' ) {\n\n\t\t\t\t\tvar lineData = line.substr( 1 ).trim();\n\t\t\t\t\tvar pointData = lineData.split( \" \" );\n\n\t\t\t\t\tstate.addPointGeometry( pointData );\n\n\t\t\t\t} else if ( ( result = object_pattern.exec( line ) ) !== null ) {\n\n\t\t\t\t\t// o object_name\n\t\t\t\t\t// or\n\t\t\t\t\t// g group_name\n\n\t\t\t\t\t// WORKAROUND: https://bugs.chromium.org/p/v8/issues/detail?id=2869\n\t\t\t\t\t// var name = result[ 0 ].substr( 1 ).trim();\n\t\t\t\t\tvar name = ( \" \" + result[ 0 ].substr( 1 ).trim() ).substr( 1 );\n\n\t\t\t\t\tstate.startObject( name );\n\n\t\t\t\t} else if ( material_use_pattern.test( line ) ) {\n\n\t\t\t\t\t// material\n\n\t\t\t\t\tstate.object.startMaterial( line.substring( 7 ).trim(), state.materialLibraries );\n\n\t\t\t\t} else if ( material_library_pattern.test( line ) ) {\n\n\t\t\t\t\t// mtl file\n\n\t\t\t\t\tstate.materialLibraries.push( line.substring( 7 ).trim() );\n\n\t\t\t\t} else if ( lineFirstChar === 's' ) {\n\n\t\t\t\t\tresult = line.split( ' ' );\n\n\t\t\t\t\t// smooth shading\n\n\t\t\t\t\t// @todo Handle files that have varying smooth values for a set of faces inside one geometry,\n\t\t\t\t\t// but does not define a usemtl for each face set.\n\t\t\t\t\t// This should be detected and a dummy material created (later MultiMaterial and geometry groups).\n\t\t\t\t\t// This requires some care to not create extra material on each smooth value for \"normal\" obj files.\n\t\t\t\t\t// where explicit usemtl defines geometry groups.\n\t\t\t\t\t// Example asset: examples/models/obj/cerberus/Cerberus.obj\n\n\t\t\t\t\t/*\n\t\t\t\t\t * http://paulbourke.net/dataformats/obj/\n\t\t\t\t\t * or\n\t\t\t\t\t * http://www.cs.utah.edu/~boulos/cs3505/obj_spec.pdf\n\t\t\t\t\t *\n\t\t\t\t\t * From chapter \"Grouping\" Syntax explanation \"s group_number\":\n\t\t\t\t\t * \"group_number is the smoothing group number. To turn off smoothing groups, use a value of 0 or off.\n\t\t\t\t\t * Polygonal elements use group numbers to put elements in different smoothing groups. For free-form\n\t\t\t\t\t * surfaces, smoothing groups are either turned on or off; there is no difference between values greater\n\t\t\t\t\t * than 0.\"\n\t\t\t\t\t */\n\t\t\t\t\tif ( result.length > 1 ) {\n\n\t\t\t\t\t\tvar value = result[ 1 ].trim().toLowerCase();\n\t\t\t\t\t\tstate.object.smooth = ( value !== '0' && value !== 'off' );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// ZBrush can produce \"s\" lines #11707\n\t\t\t\t\t\tstate.object.smooth = true;\n\n\t\t\t\t\t}\n\t\t\t\t\tvar material = state.object.currentMaterial();\n\t\t\t\t\tif ( material ) material.smooth = state.object.smooth;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Handle null terminated files without exception\n\t\t\t\t\tif ( line === '\\0' ) continue;\n\n\t\t\t\t\tthrow new Error( 'THREE.OBJLoader: Unexpected line: \"' + line + '\"' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.finalize();\n\n\t\t\tvar container = new Group();\n\t\t\tcontainer.materialLibraries = [].concat( state.materialLibraries );\n\n\t\t\tfor ( var i = 0, l = state.objects.length; i < l; i ++ ) {\n\n\t\t\t\tvar object = state.objects[ i ];\n\t\t\t\tvar geometry = object.geometry;\n\t\t\t\tvar materials = object.materials;\n\t\t\t\tvar isLine = ( geometry.type === 'Line' );\n\t\t\t\tvar isPoints = ( geometry.type === 'Points' );\n\t\t\t\tvar hasVertexColors = false;\n\n\t\t\t\t// Skip o/g line declarations that did not follow with any faces\n\t\t\t\tif ( geometry.vertices.length === 0 ) continue;\n\n\t\t\t\tvar buffergeometry = new BufferGeometry();\n\n\t\t\t\tbuffergeometry.addAttribute( 'position', new Float32BufferAttribute( geometry.vertices, 3 ) );\n\n\t\t\t\tif ( geometry.normals.length > 0 ) {\n\n\t\t\t\t\tbuffergeometry.addAttribute( 'normal', new Float32BufferAttribute( geometry.normals, 3 ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbuffergeometry.computeVertexNormals();\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometry.colors.length > 0 ) {\n\n\t\t\t\t\thasVertexColors = true;\n\t\t\t\t\tbuffergeometry.addAttribute( 'color', new Float32BufferAttribute( geometry.colors, 3 ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometry.uvs.length > 0 ) {\n\n\t\t\t\t\tbuffergeometry.addAttribute( 'uv', new Float32BufferAttribute( geometry.uvs, 2 ) );\n\n\t\t\t\t}\n\n\t\t\t\t// Create materials\n\n\t\t\t\tvar createdMaterials = [];\n\n\t\t\t\tfor ( var mi = 0, miLen = materials.length; mi < miLen; mi ++ ) {\n\n\t\t\t\t\tvar sourceMaterial = materials[ mi ];\n\t\t\t\t\tvar material = undefined;\n\n\t\t\t\t\tif ( this.materials !== null ) {\n\n\t\t\t\t\t\tmaterial = this.materials.create( sourceMaterial.name );\n\n\t\t\t\t\t\t// mtl etc. loaders probably can't create line materials correctly, copy properties to a line material.\n\t\t\t\t\t\tif ( isLine && material && ! ( material instanceof LineBasicMaterial ) ) {\n\n\t\t\t\t\t\t\tvar materialLine = new LineBasicMaterial();\n\t\t\t\t\t\t\tMaterial.prototype.copy.call( materialLine, material );\n\t\t\t\t\t\t\tmaterialLine.color.copy( material.color );\n\t\t\t\t\t\t\tmaterialLine.lights = false;\n\t\t\t\t\t\t\tmaterial = materialLine;\n\n\t\t\t\t\t\t} else if ( isPoints && material && ! ( material instanceof PointsMaterial ) ) {\n\n\t\t\t\t\t\t\tvar materialPoints = new PointsMaterial( { size: 10, sizeAttenuation: false } );\n\t\t\t\t\t\t\tMaterial.prototype.copy.call( materialPoints, material );\n\t\t\t\t\t\t\tmaterialPoints.color.copy( material.color );\n\t\t\t\t\t\t\tmaterialPoints.map = material.map;\n\t\t\t\t\t\t\tmaterialPoints.lights = false;\n\t\t\t\t\t\t\tmaterial = materialPoints;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! material ) {\n\n\t\t\t\t\t\tif ( isLine ) {\n\n\t\t\t\t\t\t\tmaterial = new LineBasicMaterial();\n\n\t\t\t\t\t\t} else if ( isPoints ) {\n\n\t\t\t\t\t\t\tmaterial = new PointsMaterial( { size: 1, sizeAttenuation: false } );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tmaterial = new MeshPhongMaterial();\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaterial.name = sourceMaterial.name;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmaterial.flatShading = sourceMaterial.smooth ? false : true;\n\t\t\t\t\tmaterial.vertexColors = hasVertexColors ? VertexColors : NoColors;\n\n\t\t\t\t\tcreatedMaterials.push( material );\n\n\t\t\t\t}\n\n\t\t\t\t// Create mesh\n\n\t\t\t\tvar mesh;\n\n\t\t\t\tif ( createdMaterials.length > 1 ) {\n\n\t\t\t\t\tfor ( var mi = 0, miLen = materials.length; mi < miLen; mi ++ ) {\n\n\t\t\t\t\t\tvar sourceMaterial = materials[ mi ];\n\t\t\t\t\t\tbuffergeometry.addGroup( sourceMaterial.groupStart, sourceMaterial.groupCount, mi );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( isLine ) {\n\n\t\t\t\t\t\tmesh = new LineSegments( buffergeometry, createdMaterials );\n\n\t\t\t\t\t} else if ( isPoints ) {\n\n\t\t\t\t\t\tmesh = new Points( buffergeometry, createdMaterials );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tmesh = new Mesh( buffergeometry, createdMaterials );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( isLine ) {\n\n\t\t\t\t\t\tmesh = new LineSegments( buffergeometry, createdMaterials[ 0 ] );\n\n\t\t\t\t\t} else if ( isPoints ) {\n\n\t\t\t\t\t\tmesh = new Points( buffergeometry, createdMaterials[ 0 ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tmesh = new Mesh( buffergeometry, createdMaterials[ 0 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tmesh.name = object.name;\n\n\t\t\t\tcontainer.add( mesh );\n\n\t\t\t}\n\n\t\t\tconsole.timeEnd( 'OBJLoader' );\n\n\t\t\treturn container;\n\n\t\t}\n\n\t};\n\n\treturn OBJLoader;\n\n} )();\n\n\n\n// CONCATENATED MODULE: ./node_modules/_three@0.105.2@three/examples/jsm/loaders/MTLLoader.js\n/**\n * Loads a Wavefront .mtl file specifying materials\n *\n * @author angelxuanchang\n */\n\n\n\nvar MTLLoader = function ( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n};\n\nMTLLoader.prototype = {\n\n\tconstructor: MTLLoader,\n\n\tcrossOrigin: 'anonymous',\n\n\t/**\n\t * Loads and parses a MTL asset from a URL.\n\t *\n\t * @param {String} url - URL to the MTL file.\n\t * @param {Function} [onLoad] - Callback invoked with the loaded object.\n\t * @param {Function} [onProgress] - Callback for download progress.\n\t * @param {Function} [onError] - Callback for download errors.\n\t *\n\t * @see setPath setResourcePath\n\t *\n\t * @note In order for relative texture references to resolve correctly\n\t * you must call setResourcePath() explicitly prior to load.\n\t */\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar path = ( this.path === undefined ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tonLoad( scope.parse( text, path ) );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\t/**\n\t * Set base path for resolving references.\n\t * If set this path will be prepended to each loaded and found reference.\n\t *\n\t * @see setResourcePath\n\t * @param {String} path\n\t * @return {MTLLoader}\n\t *\n\t * @example\n\t *     mtlLoader.setPath( 'assets/obj/' );\n\t *     mtlLoader.load( 'my.mtl', ... );\n\t */\n\tsetPath: function ( path ) {\n\n\t\tthis.path = path;\n\t\treturn this;\n\n\t},\n\n\t/**\n\t * Set base path for additional resources like textures.\n\t *\n\t * @see setPath\n\t * @param {String} path\n\t * @return {MTLLoader}\n\t *\n\t * @example\n\t *     mtlLoader.setPath( 'assets/obj/' );\n\t *     mtlLoader.setResourcePath( 'assets/textures/' );\n\t *     mtlLoader.load( 'my.mtl', ... );\n\t */\n\tsetResourcePath: function ( path ) {\n\n\t\tthis.resourcePath = path;\n\t\treturn this;\n\n\t},\n\n\tsetTexturePath: function ( path ) {\n\n\t\tconsole.warn( 'THREE.MTLLoader: .setTexturePath() has been renamed to .setResourcePath().' );\n\t\treturn this.setResourcePath( path );\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t},\n\n\tsetMaterialOptions: function ( value ) {\n\n\t\tthis.materialOptions = value;\n\t\treturn this;\n\n\t},\n\n\t/**\n\t * Parses a MTL file.\n\t *\n\t * @param {String} text - Content of MTL file\n\t * @return {MTLLoader.MaterialCreator}\n\t *\n\t * @see setPath setResourcePath\n\t *\n\t * @note In order for relative texture references to resolve correctly\n\t * you must call setResourcePath() explicitly prior to parse.\n\t */\n\tparse: function ( text, path ) {\n\n\t\tvar lines = text.split( '\\n' );\n\t\tvar info = {};\n\t\tvar delimiter_pattern = /\\s+/;\n\t\tvar materialsInfo = {};\n\n\t\tfor ( var i = 0; i < lines.length; i ++ ) {\n\n\t\t\tvar line = lines[ i ];\n\t\t\tline = line.trim();\n\n\t\t\tif ( line.length === 0 || line.charAt( 0 ) === '#' ) {\n\n\t\t\t\t// Blank line or comment ignore\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tvar pos = line.indexOf( ' ' );\n\n\t\t\tvar key = ( pos >= 0 ) ? line.substring( 0, pos ) : line;\n\t\t\tkey = key.toLowerCase();\n\n\t\t\tvar value = ( pos >= 0 ) ? line.substring( pos + 1 ) : '';\n\t\t\tvalue = value.trim();\n\n\t\t\tif ( key === 'newmtl' ) {\n\n\t\t\t\t// New material\n\n\t\t\t\tinfo = { name: value };\n\t\t\t\tmaterialsInfo[ value ] = info;\n\n\t\t\t} else {\n\n\t\t\t\tif ( key === 'ka' || key === 'kd' || key === 'ks' || key === 'ke' ) {\n\n\t\t\t\t\tvar ss = value.split( delimiter_pattern, 3 );\n\t\t\t\t\tinfo[ key ] = [ parseFloat( ss[ 0 ] ), parseFloat( ss[ 1 ] ), parseFloat( ss[ 2 ] ) ];\n\n\t\t\t\t} else {\n\n\t\t\t\t\tinfo[ key ] = value;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar materialCreator = new MTLLoader.MaterialCreator( this.resourcePath || path, this.materialOptions );\n\t\tmaterialCreator.setCrossOrigin( this.crossOrigin );\n\t\tmaterialCreator.setManager( this.manager );\n\t\tmaterialCreator.setMaterials( materialsInfo );\n\t\treturn materialCreator;\n\n\t}\n\n};\n\n/**\n * Create a new THREE-MTLLoader.MaterialCreator\n * @param baseUrl - Url relative to which textures are loaded\n * @param options - Set of options on how to construct the materials\n *                  side: Which side to apply the material\n *                        FrontSide (default), THREE.BackSide, THREE.DoubleSide\n *                  wrap: What type of wrapping to apply for textures\n *                        RepeatWrapping (default), THREE.ClampToEdgeWrapping, THREE.MirroredRepeatWrapping\n *                  normalizeRGB: RGBs need to be normalized to 0-1 from 0-255\n *                                Default: false, assumed to be already normalized\n *                  ignoreZeroRGBs: Ignore values of RGBs (Ka,Kd,Ks) that are all 0's\n *                                  Default: false\n * @constructor\n */\n\nMTLLoader.MaterialCreator = function ( baseUrl, options ) {\n\n\tthis.baseUrl = baseUrl || '';\n\tthis.options = options;\n\tthis.materialsInfo = {};\n\tthis.materials = {};\n\tthis.materialsArray = [];\n\tthis.nameLookup = {};\n\n\tthis.side = ( this.options && this.options.side ) ? this.options.side : FrontSide;\n\tthis.wrap = ( this.options && this.options.wrap ) ? this.options.wrap : RepeatWrapping;\n\n};\n\nMTLLoader.MaterialCreator.prototype = {\n\n\tconstructor: MTLLoader.MaterialCreator,\n\n\tcrossOrigin: 'anonymous',\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t},\n\n\tsetManager: function ( value ) {\n\n\t\tthis.manager = value;\n\n\t},\n\n\tsetMaterials: function ( materialsInfo ) {\n\n\t\tthis.materialsInfo = this.convert( materialsInfo );\n\t\tthis.materials = {};\n\t\tthis.materialsArray = [];\n\t\tthis.nameLookup = {};\n\n\t},\n\n\tconvert: function ( materialsInfo ) {\n\n\t\tif ( ! this.options ) return materialsInfo;\n\n\t\tvar converted = {};\n\n\t\tfor ( var mn in materialsInfo ) {\n\n\t\t\t// Convert materials info into normalized form based on options\n\n\t\t\tvar mat = materialsInfo[ mn ];\n\n\t\t\tvar covmat = {};\n\n\t\t\tconverted[ mn ] = covmat;\n\n\t\t\tfor ( var prop in mat ) {\n\n\t\t\t\tvar save = true;\n\t\t\t\tvar value = mat[ prop ];\n\t\t\t\tvar lprop = prop.toLowerCase();\n\n\t\t\t\tswitch ( lprop ) {\n\n\t\t\t\t\tcase 'kd':\n\t\t\t\t\tcase 'ka':\n\t\t\t\t\tcase 'ks':\n\n\t\t\t\t\t\t// Diffuse color (color under white light) using RGB values\n\n\t\t\t\t\t\tif ( this.options && this.options.normalizeRGB ) {\n\n\t\t\t\t\t\t\tvalue = [ value[ 0 ] / 255, value[ 1 ] / 255, value[ 2 ] / 255 ];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( this.options && this.options.ignoreZeroRGBs ) {\n\n\t\t\t\t\t\t\tif ( value[ 0 ] === 0 && value[ 1 ] === 0 && value[ 2 ] === 0 ) {\n\n\t\t\t\t\t\t\t\t// ignore\n\n\t\t\t\t\t\t\t\tsave = false;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tif ( save ) {\n\n\t\t\t\t\tcovmat[ lprop ] = value;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn converted;\n\n\t},\n\n\tpreload: function () {\n\n\t\tfor ( var mn in this.materialsInfo ) {\n\n\t\t\tthis.create( mn );\n\n\t\t}\n\n\t},\n\n\tgetIndex: function ( materialName ) {\n\n\t\treturn this.nameLookup[ materialName ];\n\n\t},\n\n\tgetAsArray: function () {\n\n\t\tvar index = 0;\n\n\t\tfor ( var mn in this.materialsInfo ) {\n\n\t\t\tthis.materialsArray[ index ] = this.create( mn );\n\t\t\tthis.nameLookup[ mn ] = index;\n\t\t\tindex ++;\n\n\t\t}\n\n\t\treturn this.materialsArray;\n\n\t},\n\n\tcreate: function ( materialName ) {\n\n\t\tif ( this.materials[ materialName ] === undefined ) {\n\n\t\t\tthis.createMaterial_( materialName );\n\n\t\t}\n\n\t\treturn this.materials[ materialName ];\n\n\t},\n\n\tcreateMaterial_: function ( materialName ) {\n\n\t\t// Create material\n\n\t\tvar scope = this;\n\t\tvar mat = this.materialsInfo[ materialName ];\n\t\tvar params = {\n\n\t\t\tname: materialName,\n\t\t\tside: this.side\n\n\t\t};\n\n\t\tfunction resolveURL( baseUrl, url ) {\n\n\t\t\tif ( typeof url !== 'string' || url === '' )\n\t\t\t\treturn '';\n\n\t\t\t// Absolute URL\n\t\t\tif ( /^https?:\\/\\//i.test( url ) ) return url;\n\n\t\t\treturn baseUrl + url;\n\n\t\t}\n\n\t\tfunction setMapForType( mapType, value ) {\n\n\t\t\tif ( params[ mapType ] ) return; // Keep the first encountered texture\n\n\t\t\tvar texParams = scope.getTextureParams( value, params );\n\t\t\tvar map = scope.loadTexture( resolveURL( scope.baseUrl, texParams.url ) );\n\n\t\t\tmap.repeat.copy( texParams.scale );\n\t\t\tmap.offset.copy( texParams.offset );\n\n\t\t\tmap.wrapS = scope.wrap;\n\t\t\tmap.wrapT = scope.wrap;\n\n\t\t\tparams[ mapType ] = map;\n\n\t\t}\n\n\t\tfor ( var prop in mat ) {\n\n\t\t\tvar value = mat[ prop ];\n\t\t\tvar n;\n\n\t\t\tif ( value === '' ) continue;\n\n\t\t\tswitch ( prop.toLowerCase() ) {\n\n\t\t\t\t// Ns is material specular exponent\n\n\t\t\t\tcase 'kd':\n\n\t\t\t\t\t// Diffuse color (color under white light) using RGB values\n\n\t\t\t\t\tparams.color = new Color().fromArray( value );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ks':\n\n\t\t\t\t\t// Specular color (color when light is reflected from shiny surface) using RGB values\n\t\t\t\t\tparams.specular = new Color().fromArray( value );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ke':\n\n\t\t\t\t\t// Emissive using RGB values\n\t\t\t\t\tparams.emissive = new Color().fromArray( value );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'map_kd':\n\n\t\t\t\t\t// Diffuse texture map\n\n\t\t\t\t\tsetMapForType( \"map\", value );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'map_ks':\n\n\t\t\t\t\t// Specular map\n\n\t\t\t\t\tsetMapForType( \"specularMap\", value );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'map_ke':\n\n\t\t\t\t\t// Emissive map\n\n\t\t\t\t\tsetMapForType( \"emissiveMap\", value );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'norm':\n\n\t\t\t\t\tsetMapForType( \"normalMap\", value );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'map_bump':\n\t\t\t\tcase 'bump':\n\n\t\t\t\t\t// Bump texture map\n\n\t\t\t\t\tsetMapForType( \"bumpMap\", value );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'map_d':\n\n\t\t\t\t\t// Alpha map\n\n\t\t\t\t\tsetMapForType( \"alphaMap\", value );\n\t\t\t\t\tparams.transparent = true;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ns':\n\n\t\t\t\t\t// The specular exponent (defines the focus of the specular highlight)\n\t\t\t\t\t// A high exponent results in a tight, concentrated highlight. Ns values normally range from 0 to 1000.\n\n\t\t\t\t\tparams.shininess = parseFloat( value );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'd':\n\t\t\t\t\tn = parseFloat( value );\n\n\t\t\t\t\tif ( n < 1 ) {\n\n\t\t\t\t\t\tparams.opacity = n;\n\t\t\t\t\t\tparams.transparent = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'tr':\n\t\t\t\t\tn = parseFloat( value );\n\n\t\t\t\t\tif ( this.options && this.options.invertTrProperty ) n = 1 - n;\n\n\t\t\t\t\tif ( n > 0 ) {\n\n\t\t\t\t\t\tparams.opacity = 1 - n;\n\t\t\t\t\t\tparams.transparent = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.materials[ materialName ] = new MeshPhongMaterial( params );\n\t\treturn this.materials[ materialName ];\n\n\t},\n\n\tgetTextureParams: function ( value, matParams ) {\n\n\t\tvar texParams = {\n\n\t\t\tscale: new Vector2( 1, 1 ),\n\t\t\toffset: new Vector2( 0, 0 )\n\n\t\t };\n\n\t\tvar items = value.split( /\\s+/ );\n\t\tvar pos;\n\n\t\tpos = items.indexOf( '-bm' );\n\n\t\tif ( pos >= 0 ) {\n\n\t\t\tmatParams.bumpScale = parseFloat( items[ pos + 1 ] );\n\t\t\titems.splice( pos, 2 );\n\n\t\t}\n\n\t\tpos = items.indexOf( '-s' );\n\n\t\tif ( pos >= 0 ) {\n\n\t\t\ttexParams.scale.set( parseFloat( items[ pos + 1 ] ), parseFloat( items[ pos + 2 ] ) );\n\t\t\titems.splice( pos, 4 ); // we expect 3 parameters here!\n\n\t\t}\n\n\t\tpos = items.indexOf( '-o' );\n\n\t\tif ( pos >= 0 ) {\n\n\t\t\ttexParams.offset.set( parseFloat( items[ pos + 1 ] ), parseFloat( items[ pos + 2 ] ) );\n\t\t\titems.splice( pos, 4 ); // we expect 3 parameters here!\n\n\t\t}\n\n\t\ttexParams.url = items.join( ' ' ).trim();\n\t\treturn texParams;\n\n\t},\n\n\tloadTexture: function ( url, mapping, onLoad, onProgress, onError ) {\n\n\t\tvar texture;\n\t\tvar loader = Loader.Handlers.get( url );\n\t\tvar manager = ( this.manager !== undefined ) ? this.manager : DefaultLoadingManager;\n\n\t\tif ( loader === null ) {\n\n\t\t\tloader = new TextureLoader( manager );\n\n\t\t}\n\n\t\tif ( loader.setCrossOrigin ) loader.setCrossOrigin( this.crossOrigin );\n\t\ttexture = loader.load( url, onLoad, onProgress, onError );\n\n\t\tif ( mapping !== undefined ) texture.mapping = mapping;\n\n\t\treturn texture;\n\n\t}\n\n};\n\n\n\n// CONCATENATED MODULE: ./node_modules/_three@0.105.2@three/examples/jsm/loaders/DDSLoader.js\n/*\n * @author mrdoob / http://mrdoob.com/\n */\n\n\n\nvar DDSLoader = function ( manager ) {\n\n\tCompressedTextureLoader.call( this, manager );\n\n\tthis._parser = DDSLoader.parse;\n\n};\n\nDDSLoader.prototype = Object.create( CompressedTextureLoader.prototype );\nDDSLoader.prototype.constructor = DDSLoader;\n\nDDSLoader.parse = function ( buffer, loadMipmaps ) {\n\n\tvar dds = { mipmaps: [], width: 0, height: 0, format: null, mipmapCount: 1 };\n\n\t// Adapted from @toji's DDS utils\n\t// https://github.com/toji/webgl-texture-utils/blob/master/texture-util/dds.js\n\n\t// All values and structures referenced from:\n\t// http://msdn.microsoft.com/en-us/library/bb943991.aspx/\n\n\tvar DDS_MAGIC = 0x20534444;\n\n\tvar DDSD_CAPS = 0x1,\n\t\tDDSD_HEIGHT = 0x2,\n\t\tDDSD_WIDTH = 0x4,\n\t\tDDSD_PITCH = 0x8,\n\t\tDDSD_PIXELFORMAT = 0x1000,\n\t\tDDSD_MIPMAPCOUNT = 0x20000,\n\t\tDDSD_LINEARSIZE = 0x80000,\n\t\tDDSD_DEPTH = 0x800000;\n\n\tvar DDSCAPS_COMPLEX = 0x8,\n\t\tDDSCAPS_MIPMAP = 0x400000,\n\t\tDDSCAPS_TEXTURE = 0x1000;\n\n\tvar DDSCAPS2_CUBEMAP = 0x200,\n\t\tDDSCAPS2_CUBEMAP_POSITIVEX = 0x400,\n\t\tDDSCAPS2_CUBEMAP_NEGATIVEX = 0x800,\n\t\tDDSCAPS2_CUBEMAP_POSITIVEY = 0x1000,\n\t\tDDSCAPS2_CUBEMAP_NEGATIVEY = 0x2000,\n\t\tDDSCAPS2_CUBEMAP_POSITIVEZ = 0x4000,\n\t\tDDSCAPS2_CUBEMAP_NEGATIVEZ = 0x8000,\n\t\tDDSCAPS2_VOLUME = 0x200000;\n\n\tvar DDPF_ALPHAPIXELS = 0x1,\n\t\tDDPF_ALPHA = 0x2,\n\t\tDDPF_FOURCC = 0x4,\n\t\tDDPF_RGB = 0x40,\n\t\tDDPF_YUV = 0x200,\n\t\tDDPF_LUMINANCE = 0x20000;\n\n\tfunction fourCCToInt32( value ) {\n\n\t\treturn value.charCodeAt( 0 ) +\n\t\t\t( value.charCodeAt( 1 ) << 8 ) +\n\t\t\t( value.charCodeAt( 2 ) << 16 ) +\n\t\t\t( value.charCodeAt( 3 ) << 24 );\n\n\t}\n\n\tfunction int32ToFourCC( value ) {\n\n\t\treturn String.fromCharCode(\n\t\t\tvalue & 0xff,\n\t\t\t( value >> 8 ) & 0xff,\n\t\t\t( value >> 16 ) & 0xff,\n\t\t\t( value >> 24 ) & 0xff\n\t\t);\n\n\t}\n\n\tfunction loadARGBMip( buffer, dataOffset, width, height ) {\n\n\t\tvar dataLength = width * height * 4;\n\t\tvar srcBuffer = new Uint8Array( buffer, dataOffset, dataLength );\n\t\tvar byteArray = new Uint8Array( dataLength );\n\t\tvar dst = 0;\n\t\tvar src = 0;\n\t\tfor ( var y = 0; y < height; y ++ ) {\n\n\t\t\tfor ( var x = 0; x < width; x ++ ) {\n\n\t\t\t\tvar b = srcBuffer[ src ]; src ++;\n\t\t\t\tvar g = srcBuffer[ src ]; src ++;\n\t\t\t\tvar r = srcBuffer[ src ]; src ++;\n\t\t\t\tvar a = srcBuffer[ src ]; src ++;\n\t\t\t\tbyteArray[ dst ] = r; dst ++;\t//r\n\t\t\t\tbyteArray[ dst ] = g; dst ++;\t//g\n\t\t\t\tbyteArray[ dst ] = b; dst ++;\t//b\n\t\t\t\tbyteArray[ dst ] = a; dst ++;\t//a\n\n\t\t\t}\n\n\t\t}\n\t\treturn byteArray;\n\n\t}\n\n\tvar FOURCC_DXT1 = fourCCToInt32( \"DXT1\" );\n\tvar FOURCC_DXT3 = fourCCToInt32( \"DXT3\" );\n\tvar FOURCC_DXT5 = fourCCToInt32( \"DXT5\" );\n\tvar FOURCC_ETC1 = fourCCToInt32( \"ETC1\" );\n\n\tvar headerLengthInt = 31; // The header length in 32 bit ints\n\n\t// Offsets into the header array\n\n\tvar off_magic = 0;\n\n\tvar off_size = 1;\n\tvar off_flags = 2;\n\tvar off_height = 3;\n\tvar off_width = 4;\n\n\tvar off_mipmapCount = 7;\n\n\tvar off_pfFlags = 20;\n\tvar off_pfFourCC = 21;\n\tvar off_RGBBitCount = 22;\n\tvar off_RBitMask = 23;\n\tvar off_GBitMask = 24;\n\tvar off_BBitMask = 25;\n\tvar off_ABitMask = 26;\n\n\tvar off_caps = 27;\n\tvar off_caps2 = 28;\n\tvar off_caps3 = 29;\n\tvar off_caps4 = 30;\n\n\t// Parse header\n\n\tvar header = new Int32Array( buffer, 0, headerLengthInt );\n\n\tif ( header[ off_magic ] !== DDS_MAGIC ) {\n\n\t\tconsole.error( 'THREE.DDSLoader.parse: Invalid magic number in DDS header.' );\n\t\treturn dds;\n\n\t}\n\n\tif ( ! header[ off_pfFlags ] & DDPF_FOURCC ) {\n\n\t\tconsole.error( 'THREE.DDSLoader.parse: Unsupported format, must contain a FourCC code.' );\n\t\treturn dds;\n\n\t}\n\n\tvar blockBytes;\n\n\tvar fourCC = header[ off_pfFourCC ];\n\n\tvar isRGBAUncompressed = false;\n\n\tswitch ( fourCC ) {\n\n\t\tcase FOURCC_DXT1:\n\n\t\t\tblockBytes = 8;\n\t\t\tdds.format = RGB_S3TC_DXT1_Format;\n\t\t\tbreak;\n\n\t\tcase FOURCC_DXT3:\n\n\t\t\tblockBytes = 16;\n\t\t\tdds.format = RGBA_S3TC_DXT3_Format;\n\t\t\tbreak;\n\n\t\tcase FOURCC_DXT5:\n\n\t\t\tblockBytes = 16;\n\t\t\tdds.format = RGBA_S3TC_DXT5_Format;\n\t\t\tbreak;\n\n\t\tcase FOURCC_ETC1:\n\n\t\t\tblockBytes = 8;\n\t\t\tdds.format = RGB_ETC1_Format;\n\t\t\tbreak;\n\n\t\tdefault:\n\n\t\t\tif ( header[ off_RGBBitCount ] === 32\n\t\t\t\t&& header[ off_RBitMask ] & 0xff0000\n\t\t\t\t&& header[ off_GBitMask ] & 0xff00\n\t\t\t\t&& header[ off_BBitMask ] & 0xff\n\t\t\t\t&& header[ off_ABitMask ] & 0xff000000 ) {\n\n\t\t\t\tisRGBAUncompressed = true;\n\t\t\t\tblockBytes = 64;\n\t\t\t\tdds.format = RGBAFormat;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.DDSLoader.parse: Unsupported FourCC code ', int32ToFourCC( fourCC ) );\n\t\t\t\treturn dds;\n\n\t\t\t}\n\n\t}\n\n\tdds.mipmapCount = 1;\n\n\tif ( header[ off_flags ] & DDSD_MIPMAPCOUNT && loadMipmaps !== false ) {\n\n\t\tdds.mipmapCount = Math.max( 1, header[ off_mipmapCount ] );\n\n\t}\n\n\tvar caps2 = header[ off_caps2 ];\n\tdds.isCubemap = caps2 & DDSCAPS2_CUBEMAP ? true : false;\n\tif ( dds.isCubemap && (\n\t\t! ( caps2 & DDSCAPS2_CUBEMAP_POSITIVEX ) ||\n\t\t! ( caps2 & DDSCAPS2_CUBEMAP_NEGATIVEX ) ||\n\t\t! ( caps2 & DDSCAPS2_CUBEMAP_POSITIVEY ) ||\n\t\t! ( caps2 & DDSCAPS2_CUBEMAP_NEGATIVEY ) ||\n\t\t! ( caps2 & DDSCAPS2_CUBEMAP_POSITIVEZ ) ||\n\t\t! ( caps2 & DDSCAPS2_CUBEMAP_NEGATIVEZ )\n\t) ) {\n\n\t\tconsole.error( 'THREE.DDSLoader.parse: Incomplete cubemap faces' );\n\t\treturn dds;\n\n\t}\n\n\tdds.width = header[ off_width ];\n\tdds.height = header[ off_height ];\n\n\tvar dataOffset = header[ off_size ] + 4;\n\n\t// Extract mipmaps buffers\n\n\tvar faces = dds.isCubemap ? 6 : 1;\n\n\tfor ( var face = 0; face < faces; face ++ ) {\n\n\t\tvar width = dds.width;\n\t\tvar height = dds.height;\n\n\t\tfor ( var i = 0; i < dds.mipmapCount; i ++ ) {\n\n\t\t\tif ( isRGBAUncompressed ) {\n\n\t\t\t\tvar byteArray = loadARGBMip( buffer, dataOffset, width, height );\n\t\t\t\tvar dataLength = byteArray.length;\n\n\t\t\t} else {\n\n\t\t\t\tvar dataLength = Math.max( 4, width ) / 4 * Math.max( 4, height ) / 4 * blockBytes;\n\t\t\t\tvar byteArray = new Uint8Array( buffer, dataOffset, dataLength );\n\n\t\t\t}\n\n\t\t\tvar mipmap = { \"data\": byteArray, \"width\": width, \"height\": height };\n\t\t\tdds.mipmaps.push( mipmap );\n\n\t\t\tdataOffset += dataLength;\n\n\t\t\twidth = Math.max( width >> 1, 1 );\n\t\t\theight = Math.max( height >> 1, 1 );\n\n\t\t}\n\n\t}\n\n\treturn dds;\n\n};\n\n\n\n// EXTERNAL MODULE: ./node_modules/_core-js@2.6.9@core-js/modules/es6.typed.uint32-array.js\nvar es6_typed_uint32_array = __webpack_require__(\"c615\");\n\n// EXTERNAL MODULE: ./node_modules/_core-js@2.6.9@core-js/modules/es6.typed.float32-array.js\nvar es6_typed_float32_array = __webpack_require__(\"54c8\");\n\n// CONCATENATED MODULE: ./src/util.js\n\n\n\n\n/* eslint-disable */\n\nvar box = new Box3();\n\nfunction getSize(object) {\n  box.setFromObject(object);\n  return box.getSize(new Vector3());\n}\n\nfunction getCenter(object) {\n  box.setFromObject(object);\n  return box.getCenter(new Vector3());\n} // function lightsDiff(lights, oldLights) {\n// }\n\n\nfunction toIndexed(bufferGeometry) {\n  var rawPositions = bufferGeometry.getAttribute('position').array;\n  var rawUvs;\n  var hasUV = bufferGeometry.getAttribute('uv') !== undefined;\n  if (hasUV) rawUvs = bufferGeometry.getAttribute('uv').array;\n  var rawNormals;\n  var hasNormal = bufferGeometry.getAttribute('normal') !== undefined;\n  if (hasNormal) rawNormals = bufferGeometry.getAttribute('normal').array;\n  var indices = [];\n  var vertices = [];\n  var normals = [];\n  var uvs = [];\n  var face;\n  var faceNormalss;\n  var faceUvs;\n  var tmpIndices;\n  var v0 = new Vector3();\n  var v1 = new Vector3();\n  var v2 = new Vector3();\n  var n0 = new Vector3();\n  var n1 = new Vector3();\n  var n2 = new Vector3();\n  var uv0 = new Vector2();\n  var uv1 = new Vector2();\n  var uv2 = new Vector2();\n\n  for (var i = 0; i < rawPositions.length; i += 9) {\n    v0.x = rawPositions[i];\n    v0.y = rawPositions[i + 1];\n    v0.z = rawPositions[i + 2];\n    v1.x = rawPositions[i + 3];\n    v1.y = rawPositions[i + 4];\n    v1.z = rawPositions[i + 5];\n    v2.x = rawPositions[i + 6];\n    v2.y = rawPositions[i + 7];\n    v2.z = rawPositions[i + 8];\n    face = [v0, v1, v2];\n\n    if (hasNormal) {\n      n0.x = rawNormals[i];\n      n0.y = rawNormals[i + 1];\n      n0.z = rawNormals[i + 2];\n      n1.x = rawNormals[i + 3];\n      n1.y = rawNormals[i + 4];\n      n1.z = rawNormals[i + 5];\n      n2.x = rawNormals[i + 6];\n      n2.y = rawNormals[i + 7];\n      n2.z = rawNormals[i + 8];\n      faceNormalss = [n0, n1, n2];\n    }\n\n    if (hasUV) {\n      uv0.x = rawUvs[i];\n      uv0.y = rawUvs[i + 1];\n      uv1.x = rawUvs[i + 2];\n      uv1.y = rawUvs[i + 3];\n      uv2.x = rawUvs[i + 4];\n      uv2.y = rawUvs[i + 5];\n      faceUvs = [uv0, uv1, uv2];\n    }\n\n    tmpIndices = [];\n    face.forEach(function (v, i) {\n      var id = exists(v, vertices);\n\n      if (id === -1) {\n        id = vertices.length;\n        vertices.push(v.clone());\n        if (hasNormal) normals.push(faceNormalss[i].clone());\n        if (hasUV) uvs.push(faceUvs[i].clone());\n      }\n\n      tmpIndices.push(id);\n    });\n    indices.push(tmpIndices[0], tmpIndices[1], tmpIndices[2]);\n  }\n\n  var positionBuffer = new Float32Array(vertices.length * 3);\n  var normalBuffer;\n  var uvBuffer;\n  if (hasNormal) normalBuffer = new Float32Array(vertices.length * 3);\n  if (hasUV) uvBuffer = new Float32Array(vertices.length * 2);\n  var i2 = 0;\n  var i3 = 0;\n\n  for (var _i = 0; _i < vertices.length; _i++) {\n    i3 = _i * 3;\n    positionBuffer[i3] = vertices[_i].x;\n    positionBuffer[i3 + 1] = vertices[_i].y;\n    positionBuffer[i3 + 2] = vertices[_i].z;\n\n    if (hasNormal) {\n      normalBuffer[i3] = normals[_i].x;\n      normalBuffer[i3 + 1] = normals[_i].y;\n      normalBuffer[i3 + 2] = normals[_i].z;\n    }\n\n    if (hasUV) {\n      i2 = _i * 2;\n      uvBuffer[i2] = uvs[_i].x;\n      uvBuffer[i2 + 1] = uvs[_i].y;\n    }\n  }\n\n  bufferGeometry.addAttribute('position', new BufferAttribute(positionBuffer, 3));\n  if (hasNormal) bufferGeometry.addAttribute('normal', new BufferAttribute(normalBuffer, 3));\n  if (hasUV) bufferGeometry.addAttribute('uv', new BufferAttribute(uvBuffer, 2));\n  bufferGeometry.setIndex(new BufferAttribute(new Uint32Array(indices), 1));\n  return bufferGeometry;\n\n  function exists(v, vertices) {\n    for (var _i2 = 0; _i2 < vertices.length; _i2++) {\n      if (v.equals(vertices[_i2])) return _i2;\n    }\n\n    return -1;\n  }\n}\n\n\n// CONCATENATED MODULE: ./node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js?{\"cacheDirectory\":\"node_modules/.cache/vue-loader\",\"cacheIdentifier\":\"3da6f646-vue-loader-template\"}!./node_modules/_vue-loader@15.7.0@vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!./node_modules/_vue-loader@15.7.0@vue-loader/lib??vue-loader-options!./src/model-mixin.vue?vue&type=template&id=2607c7fd&\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticStyle:{\"width\":\"100%\",\"height\":\"100%\",\"margin\":\"0\",\"border\":\"0\",\"padding\":\"0\"}},[(_vm.suportWebGL)?_c('canvas',{ref:\"canvas\",staticStyle:{\"width\":\"100%\",\"height\":\"100%\"}}):_c('div',[_vm._t(\"default\",[_vm._v(\"\\n            Your browser does not seem to support \"),_c('a',{staticStyle:{\"color\":\"#000\"},attrs:{\"href\":\"http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation\"}},[_vm._v(\"WebGL\")]),_vm._v(\".\"),_c('br'),_vm._v(\"'\\n        \")])],2)])}\nvar staticRenderFns = []\n\n\n// CONCATENATED MODULE: ./src/model-mixin.vue?vue&type=template&id=2607c7fd&\n\n// CONCATENATED MODULE: ./node_modules/_@babel_runtime@7.4.5@@babel/runtime/helpers/esm/arrayWithoutHoles.js\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n// CONCATENATED MODULE: ./node_modules/_@babel_runtime@7.4.5@@babel/runtime/helpers/esm/iterableToArray.js\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n// CONCATENATED MODULE: ./node_modules/_@babel_runtime@7.4.5@@babel/runtime/helpers/esm/nonIterableSpread.js\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n// CONCATENATED MODULE: ./node_modules/_@babel_runtime@7.4.5@@babel/runtime/helpers/esm/toConsumableArray.js\n\n\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n// EXTERNAL MODULE: ./node_modules/_core-js@2.6.9@core-js/modules/es6.number.constructor.js\nvar es6_number_constructor = __webpack_require__(\"d4d5\");\n\n// CONCATENATED MODULE: ./node_modules/_three@0.105.2@three/examples/jsm/controls/OrbitControls.js\n/**\n * @author qiao / https://github.com/qiao\n * @author mrdoob / http://mrdoob.com\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author erich666 / http://erichaines.com\n */\n\n\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nvar OrbitControls = function ( object, domElement ) {\n\n\tthis.object = object;\n\n\tthis.domElement = ( domElement !== undefined ) ? domElement : document;\n\n\t// Set to false to disable this control\n\tthis.enabled = true;\n\n\t// \"target\" sets the location of focus, where the object orbits around\n\tthis.target = new Vector3();\n\n\t// How far you can dolly in and out ( PerspectiveCamera only )\n\tthis.minDistance = 0;\n\tthis.maxDistance = Infinity;\n\n\t// How far you can zoom in and out ( OrthographicCamera only )\n\tthis.minZoom = 0;\n\tthis.maxZoom = Infinity;\n\n\t// How far you can orbit vertically, upper and lower limits.\n\t// Range is 0 to Math.PI radians.\n\tthis.minPolarAngle = 0; // radians\n\tthis.maxPolarAngle = Math.PI; // radians\n\n\t// How far you can orbit horizontally, upper and lower limits.\n\t// If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n\tthis.minAzimuthAngle = - Infinity; // radians\n\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t// Set to true to enable damping (inertia)\n\t// If damping is enabled, you must call controls.update() in your animation loop\n\tthis.enableDamping = false;\n\tthis.dampingFactor = 0.25;\n\n\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t// Set to false to disable zooming\n\tthis.enableZoom = true;\n\tthis.zoomSpeed = 1.0;\n\n\t// Set to false to disable rotating\n\tthis.enableRotate = true;\n\tthis.rotateSpeed = 1.0;\n\n\t// Set to false to disable panning\n\tthis.enablePan = true;\n\tthis.panSpeed = 1.0;\n\tthis.screenSpacePanning = false; // if true, pan in screen-space\n\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\n\t// Set to true to automatically rotate around the target\n\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\tthis.autoRotate = false;\n\tthis.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n\n\t// Set to false to disable use of the keys\n\tthis.enableKeys = true;\n\n\t// The four arrow keys\n\tthis.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };\n\n\t// Mouse buttons\n\tthis.mouseButtons = { LEFT: MOUSE.LEFT, MIDDLE: MOUSE.MIDDLE, RIGHT: MOUSE.RIGHT };\n\n\t// for reset\n\tthis.target0 = this.target.clone();\n\tthis.position0 = this.object.position.clone();\n\tthis.zoom0 = this.object.zoom;\n\n\t//\n\t// public methods\n\t//\n\n\tthis.getPolarAngle = function () {\n\n\t\treturn spherical.phi;\n\n\t};\n\n\tthis.getAzimuthalAngle = function () {\n\n\t\treturn spherical.theta;\n\n\t};\n\n\tthis.saveState = function () {\n\n\t\tscope.target0.copy( scope.target );\n\t\tscope.position0.copy( scope.object.position );\n\t\tscope.zoom0 = scope.object.zoom;\n\n\t};\n\n\tthis.reset = function () {\n\n\t\tscope.target.copy( scope.target0 );\n\t\tscope.object.position.copy( scope.position0 );\n\t\tscope.object.zoom = scope.zoom0;\n\n\t\tscope.object.updateProjectionMatrix();\n\t\tscope.dispatchEvent( changeEvent );\n\n\t\tscope.update();\n\n\t\tstate = STATE.NONE;\n\n\t};\n\n\t// this method is exposed, but perhaps it would be better if we can make it private...\n\tthis.update = function () {\n\n\t\tvar offset = new Vector3();\n\n\t\t// so camera.up is the orbit axis\n\t\tvar quat = new Quaternion().setFromUnitVectors( object.up, new Vector3( 0, 1, 0 ) );\n\t\tvar quatInverse = quat.clone().inverse();\n\n\t\tvar lastPosition = new Vector3();\n\t\tvar lastQuaternion = new Quaternion();\n\n\t\treturn function update() {\n\n\t\t\tvar position = scope.object.position;\n\n\t\t\toffset.copy( position ).sub( scope.target );\n\n\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t// angle from z-axis around y-axis\n\t\t\tspherical.setFromVector3( offset );\n\n\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\trotateLeft( getAutoRotationAngle() );\n\n\t\t\t}\n\n\t\t\tspherical.theta += sphericalDelta.theta;\n\t\t\tspherical.phi += sphericalDelta.phi;\n\n\t\t\t// restrict theta to be between desired limits\n\t\t\tspherical.theta = Math.max( scope.minAzimuthAngle, Math.min( scope.maxAzimuthAngle, spherical.theta ) );\n\n\t\t\t// restrict phi to be between desired limits\n\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\n\n\t\t\tspherical.makeSafe();\n\n\n\t\t\tspherical.radius *= scale;\n\n\t\t\t// restrict radius to be between desired limits\n\t\t\tspherical.radius = Math.max( scope.minDistance, Math.min( scope.maxDistance, spherical.radius ) );\n\n\t\t\t// move target to panned location\n\t\t\tscope.target.add( panOffset );\n\n\t\t\toffset.setFromSpherical( spherical );\n\n\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\tposition.copy( scope.target ).add( offset );\n\n\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\n\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\n\n\t\t\t\tpanOffset.multiplyScalar( 1 - scope.dampingFactor );\n\n\t\t\t} else {\n\n\t\t\t\tsphericalDelta.set( 0, 0, 0 );\n\n\t\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t}\n\n\t\t\tscale = 1;\n\n\t\t\t// update condition is:\n\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\tif ( zoomChanged ||\n\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\n\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ) {\n\n\t\t\t\tscope.dispatchEvent( changeEvent );\n\n\t\t\t\tlastPosition.copy( scope.object.position );\n\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\n\t\t\t\tzoomChanged = false;\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\treturn false;\n\n\t\t};\n\n\t}();\n\n\tthis.dispose = function () {\n\n\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu, false );\n\t\tscope.domElement.removeEventListener( 'mousedown', onMouseDown, false );\n\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel, false );\n\n\t\tscope.domElement.removeEventListener( 'touchstart', onTouchStart, false );\n\t\tscope.domElement.removeEventListener( 'touchend', onTouchEnd, false );\n\t\tscope.domElement.removeEventListener( 'touchmove', onTouchMove, false );\n\n\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\n\n\t\twindow.removeEventListener( 'keydown', onKeyDown, false );\n\n\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n\t};\n\n\t//\n\t// internals\n\t//\n\n\tvar scope = this;\n\n\tvar changeEvent = { type: 'change' };\n\tvar startEvent = { type: 'start' };\n\tvar endEvent = { type: 'end' };\n\n\tvar STATE = { NONE: - 1, ROTATE: 0, DOLLY: 1, PAN: 2, TOUCH_ROTATE: 3, TOUCH_DOLLY_PAN: 4 };\n\n\tvar state = STATE.NONE;\n\n\tvar EPS = 0.000001;\n\n\t// current position in spherical coordinates\n\tvar spherical = new Spherical();\n\tvar sphericalDelta = new Spherical();\n\n\tvar scale = 1;\n\tvar panOffset = new Vector3();\n\tvar zoomChanged = false;\n\n\tvar rotateStart = new Vector2();\n\tvar rotateEnd = new Vector2();\n\tvar rotateDelta = new Vector2();\n\n\tvar panStart = new Vector2();\n\tvar panEnd = new Vector2();\n\tvar panDelta = new Vector2();\n\n\tvar dollyStart = new Vector2();\n\tvar dollyEnd = new Vector2();\n\tvar dollyDelta = new Vector2();\n\n\tfunction getAutoRotationAngle() {\n\n\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t}\n\n\tfunction getZoomScale() {\n\n\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t}\n\n\tfunction rotateLeft( angle ) {\n\n\t\tsphericalDelta.theta -= angle;\n\n\t}\n\n\tfunction rotateUp( angle ) {\n\n\t\tsphericalDelta.phi -= angle;\n\n\t}\n\n\tvar panLeft = function () {\n\n\t\tvar v = new Vector3();\n\n\t\treturn function panLeft( distance, objectMatrix ) {\n\n\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t\tv.multiplyScalar( - distance );\n\n\t\t\tpanOffset.add( v );\n\n\t\t};\n\n\t}();\n\n\tvar panUp = function () {\n\n\t\tvar v = new Vector3();\n\n\t\treturn function panUp( distance, objectMatrix ) {\n\n\t\t\tif ( scope.screenSpacePanning === true ) {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 1 );\n\n\t\t\t} else {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 );\n\t\t\t\tv.crossVectors( scope.object.up, v );\n\n\t\t\t}\n\n\t\t\tv.multiplyScalar( distance );\n\n\t\t\tpanOffset.add( v );\n\n\t\t};\n\n\t}();\n\n\t// deltaX and deltaY are in pixels; right and down are positive\n\tvar pan = function () {\n\n\t\tvar offset = new Vector3();\n\n\t\treturn function pan( deltaX, deltaY ) {\n\n\t\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t// perspective\n\t\t\t\tvar position = scope.object.position;\n\t\t\t\toffset.copy( position ).sub( scope.target );\n\t\t\t\tvar targetDistance = offset.length();\n\n\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t// we use only clientHeight here so aspect ratio does not distort speed\n\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\n\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t// orthographic\n\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\n\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\n\n\t\t\t} else {\n\n\t\t\t\t// camera neither orthographic nor perspective\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\t\tscope.enablePan = false;\n\n\t\t\t}\n\n\t\t};\n\n\t}();\n\n\tfunction dollyIn( dollyScale ) {\n\n\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\tscale /= dollyScale;\n\n\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom * dollyScale ) );\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tzoomChanged = true;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tscope.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\tfunction dollyOut( dollyScale ) {\n\n\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\tscale *= dollyScale;\n\n\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / dollyScale ) );\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tzoomChanged = true;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tscope.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\t//\n\t// event callbacks - update the object state\n\t//\n\n\tfunction handleMouseDownRotate( event ) {\n\n\t\t//console.log( 'handleMouseDownRotate' );\n\n\t\trotateStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseDownDolly( event ) {\n\n\t\t//console.log( 'handleMouseDownDolly' );\n\n\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseDownPan( event ) {\n\n\t\t//console.log( 'handleMouseDownPan' );\n\n\t\tpanStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseMoveRotate( event ) {\n\n\t\t//console.log( 'handleMouseMoveRotate' );\n\n\t\trotateEnd.set( event.clientX, event.clientY );\n\n\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\trotateStart.copy( rotateEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseMoveDolly( event ) {\n\n\t\t//console.log( 'handleMouseMoveDolly' );\n\n\t\tdollyEnd.set( event.clientX, event.clientY );\n\n\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\tdollyIn( getZoomScale() );\n\n\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\tdollyOut( getZoomScale() );\n\n\t\t}\n\n\t\tdollyStart.copy( dollyEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseMovePan( event ) {\n\n\t\t//console.log( 'handleMouseMovePan' );\n\n\t\tpanEnd.set( event.clientX, event.clientY );\n\n\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\tpan( panDelta.x, panDelta.y );\n\n\t\tpanStart.copy( panEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseUp( event ) {\n\n\t\t// console.log( 'handleMouseUp' );\n\n\t}\n\n\tfunction handleMouseWheel( event ) {\n\n\t\t// console.log( 'handleMouseWheel' );\n\n\t\tif ( event.deltaY < 0 ) {\n\n\t\t\tdollyOut( getZoomScale() );\n\n\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\tdollyIn( getZoomScale() );\n\n\t\t}\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleKeyDown( event ) {\n\n\t\t// console.log( 'handleKeyDown' );\n\n\t\tvar needsUpdate = false;\n\n\t\tswitch ( event.keyCode ) {\n\n\t\t\tcase scope.keys.UP:\n\t\t\t\tpan( 0, scope.keyPanSpeed );\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.BOTTOM:\n\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.LEFT:\n\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.RIGHT:\n\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( needsUpdate ) {\n\n\t\t\t// prevent the browser from scrolling on cursor keys\n\t\t\tevent.preventDefault();\n\n\t\t\tscope.update();\n\n\t\t}\n\n\n\t}\n\n\tfunction handleTouchStartRotate( event ) {\n\n\t\t//console.log( 'handleTouchStartRotate' );\n\n\t\trotateStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t}\n\n\tfunction handleTouchStartDollyPan( event ) {\n\n\t\t//console.log( 'handleTouchStartDollyPan' );\n\n\t\tif ( scope.enableZoom ) {\n\n\t\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyStart.set( 0, distance );\n\n\t\t}\n\n\t\tif ( scope.enablePan ) {\n\n\t\t\tvar x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\tvar y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\tpanStart.set( x, y );\n\n\t\t}\n\n\t}\n\n\tfunction handleTouchMoveRotate( event ) {\n\n\t\t//console.log( 'handleTouchMoveRotate' );\n\n\t\trotateEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\trotateStart.copy( rotateEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleTouchMoveDollyPan( event ) {\n\n\t\t//console.log( 'handleTouchMoveDollyPan' );\n\n\t\tif ( scope.enableZoom ) {\n\n\t\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyEnd.set( 0, distance );\n\n\t\t\tdollyDelta.set( 0, Math.pow( dollyEnd.y / dollyStart.y, scope.zoomSpeed ) );\n\n\t\t\tdollyIn( dollyDelta.y );\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t}\n\n\t\tif ( scope.enablePan ) {\n\n\t\t\tvar x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\tvar y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\tpanEnd.set( x, y );\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t}\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleTouchEnd( event ) {\n\n\t\t//console.log( 'handleTouchEnd' );\n\n\t}\n\n\t//\n\t// event handlers - FSM: listen for events and reset state\n\t//\n\n\tfunction onMouseDown( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\t// Prevent the browser from scrolling.\n\n\t\tevent.preventDefault();\n\n\t\t// Manually set the focus since calling preventDefault above\n\t\t// prevents the browser from setting it automatically.\n\n\t\tscope.domElement.focus ? scope.domElement.focus() : window.focus();\n\n\t\tswitch ( event.button ) {\n\n\t\t\tcase scope.mouseButtons.LEFT:\n\n\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase scope.mouseButtons.MIDDLE:\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\thandleMouseDownDolly( event );\n\n\t\t\t\tstate = STATE.DOLLY;\n\n\t\t\t\tbreak;\n\n\t\t\tcase scope.mouseButtons.RIGHT:\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( state !== STATE.NONE ) {\n\n\t\t\tdocument.addEventListener( 'mousemove', onMouseMove, false );\n\t\t\tdocument.addEventListener( 'mouseup', onMouseUp, false );\n\n\t\t\tscope.dispatchEvent( startEvent );\n\n\t\t}\n\n\t}\n\n\tfunction onMouseMove( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t\tswitch ( state ) {\n\n\t\t\tcase STATE.ROTATE:\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\thandleMouseMoveRotate( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.DOLLY:\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\thandleMouseMoveDolly( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.PAN:\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\thandleMouseMovePan( event );\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction onMouseUp( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\thandleMouseUp( event );\n\n\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t\tstate = STATE.NONE;\n\n\t}\n\n\tfunction onMouseWheel( event ) {\n\n\t\tif ( scope.enabled === false || scope.enableZoom === false || ( state !== STATE.NONE && state !== STATE.ROTATE ) ) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tscope.dispatchEvent( startEvent );\n\n\t\thandleMouseWheel( event );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t}\n\n\tfunction onKeyDown( event ) {\n\n\t\tif ( scope.enabled === false || scope.enableKeys === false || scope.enablePan === false ) return;\n\n\t\thandleKeyDown( event );\n\n\t}\n\n\tfunction onTouchStart( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t\tswitch ( event.touches.length ) {\n\n\t\t\tcase 1:\t// one-fingered touch: rotate\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\thandleTouchStartRotate( event );\n\n\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\t// two-fingered touch: dolly-pan\n\n\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\thandleTouchStartDollyPan( event );\n\n\t\t\t\tstate = STATE.TOUCH_DOLLY_PAN;\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tif ( state !== STATE.NONE ) {\n\n\t\t\tscope.dispatchEvent( startEvent );\n\n\t\t}\n\n\t}\n\n\tfunction onTouchMove( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tswitch ( event.touches.length ) {\n\n\t\t\tcase 1: // one-fingered touch: rotate\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\t\t\t\tif ( state !== STATE.TOUCH_ROTATE ) return; // is this needed?\n\n\t\t\t\thandleTouchMoveRotate( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 2: // two-fingered touch: dolly-pan\n\n\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\t\t\t\tif ( state !== STATE.TOUCH_DOLLY_PAN ) return; // is this needed?\n\n\t\t\t\thandleTouchMoveDollyPan( event );\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t}\n\n\tfunction onTouchEnd( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\thandleTouchEnd( event );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t\tstate = STATE.NONE;\n\n\t}\n\n\tfunction onContextMenu( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t}\n\n\t//\n\n\tscope.domElement.addEventListener( 'contextmenu', onContextMenu, false );\n\n\tscope.domElement.addEventListener( 'mousedown', onMouseDown, false );\n\tscope.domElement.addEventListener( 'wheel', onMouseWheel, false );\n\n\tscope.domElement.addEventListener( 'touchstart', onTouchStart, false );\n\tscope.domElement.addEventListener( 'touchend', onTouchEnd, false );\n\tscope.domElement.addEventListener( 'touchmove', onTouchMove, false );\n\n\twindow.addEventListener( 'keydown', onKeyDown, false );\n\n\t// force an update at start\n\n\tthis.update();\n\n};\n\nOrbitControls.prototype = Object.create( EventDispatcher.prototype );\nOrbitControls.prototype.constructor = OrbitControls;\n\nObject.defineProperties( OrbitControls.prototype, {\n\n\tcenter: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .center has been renamed to .target' );\n\t\t\treturn this.target;\n\n\t\t}\n\n\t},\n\n\t// backward compatibility\n\n\tnoZoom: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.' );\n\t\t\treturn ! this.enableZoom;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.' );\n\t\t\tthis.enableZoom = ! value;\n\n\t\t}\n\n\t},\n\n\tnoRotate: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.' );\n\t\t\treturn ! this.enableRotate;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.' );\n\t\t\tthis.enableRotate = ! value;\n\n\t\t}\n\n\t},\n\n\tnoPan: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.' );\n\t\t\treturn ! this.enablePan;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.' );\n\t\t\tthis.enablePan = ! value;\n\n\t\t}\n\n\t},\n\n\tnoKeys: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.' );\n\t\t\treturn ! this.enableKeys;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.' );\n\t\t\tthis.enableKeys = ! value;\n\n\t\t}\n\n\t},\n\n\tstaticMoving: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.' );\n\t\t\treturn ! this.enableDamping;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.' );\n\t\t\tthis.enableDamping = ! value;\n\n\t\t}\n\n\t},\n\n\tdynamicDampingFactor: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.' );\n\t\t\treturn this.dampingFactor;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.' );\n\t\t\tthis.dampingFactor = value;\n\n\t\t}\n\n\t}\n\n} );\n\n\n\n// CONCATENATED MODULE: ./node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--12-0!./node_modules/_thread-loader@2.1.2@thread-loader/dist/cjs.js!./node_modules/_babel-loader@8.0.6@babel-loader/lib!./node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!./node_modules/_vue-loader@15.7.0@vue-loader/lib??vue-loader-options!./src/model-mixin.vue?vue&type=script&lang=js&\n\n\n\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n\nvar suportWebGL = function () {\n  try {\n    var canvas = document.createElement('canvas');\n    return !!(window.WebGLRenderingContext && (canvas.getContext('webgl') || canvas.getContext('experimental-webgl')));\n  } catch (e) {\n    return false;\n  }\n}();\n\n/* harmony default export */ var model_mixinvue_type_script_lang_js_ = ({\n  props: {\n    src: {\n      type: String\n    },\n    width: {\n      type: Number\n    },\n    height: {\n      type: Number\n    },\n    position: {\n      type: Object,\n      default: function _default() {\n        return {\n          x: 0,\n          y: 0,\n          z: 0\n        };\n      }\n    },\n    rotation: {\n      type: Object,\n      default: function _default() {\n        return {\n          x: 0,\n          y: 0,\n          z: 0\n        };\n      }\n    },\n    scale: {\n      type: Object,\n      default: function _default() {\n        return {\n          x: 1,\n          y: 1,\n          z: 1\n        };\n      }\n    },\n    lights: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    cameraPosition: {\n      type: Object,\n      default: function _default() {\n        return {\n          x: 0,\n          y: 0,\n          z: 0\n        };\n      }\n    },\n    cameraRotation: {\n      type: Object,\n      default: function _default() {\n        return {\n          x: 0,\n          y: 0,\n          z: 0\n        };\n      }\n    },\n    cameraUp: {\n      type: Object\n    },\n    cameraLookAt: {\n      type: Object\n    },\n    backgroundColor: {\n      default: 0xffffff\n    },\n    backgroundAlpha: {\n      type: Number,\n      default: 1\n    },\n    controllable: {\n      type: Boolean,\n      default: true\n    },\n    crossOrigin: {\n      default: 'anonymous'\n    },\n    gammaOutput: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: function data() {\n    return {\n      suportWebGL: suportWebGL,\n      size: {\n        width: this.width,\n        height: this.height\n      },\n      object: null,\n      raycaster: new Raycaster(),\n      mouse: new Vector2(),\n      camera: new PerspectiveCamera(45, 1, 0.01, 100000),\n      scene: new Scene(),\n      wrapper: new Object3D(),\n      renderer: null,\n      controls: null,\n      allLights: [],\n      clock: typeof performance === 'undefined' ? Date : performance,\n      reqId: null // requestAnimationFrame id\n\n    };\n  },\n  computed: {\n    hasListener: function hasListener() {\n      // 判断是否有鼠标事件监听，用于减少不必要的拾取判断\n\n      /* eslint-disable no-underscore-dangle */\n      var events = this._events;\n      var result = {};\n      ['on-mousemove', 'on-mouseup', 'on-mousedown', 'on-click'].forEach(function (name) {\n        result[name] = !!events[name] && events[name].length > 0;\n      });\n      return result;\n    }\n  },\n  mounted: function mounted() {\n    if (this.width === undefined || this.height === undefined) {\n      this.size = {\n        width: this.$el.offsetWidth,\n        height: this.$el.offsetHeight\n      };\n    }\n\n    this.renderer = new WebGLRenderer({\n      antialias: true,\n      alpha: true,\n      canvas: this.$refs.canvas\n    });\n    this.renderer.shadowMap.enabled = true;\n    this.renderer.gammaOutput = this.gammaOutput;\n    this.scene.add(this.wrapper);\n    this.load();\n    this.update();\n    this.$el.addEventListener('mousedown', this.onMouseDown, false);\n    this.$el.addEventListener('mousemove', this.onMouseMove, false);\n    this.$el.addEventListener('mouseup', this.onMouseUp, false);\n    this.$el.addEventListener('click', this.onClick, false);\n    window.addEventListener('resize', this.onResize, false);\n    this.animate();\n  },\n  beforeDestroy: function beforeDestroy() {\n    cancelAnimationFrame(this.reqId);\n    this.$el.removeEventListener('mousedown', this.onMouseDown, false);\n    this.$el.removeEventListener('mousemove', this.onMouseMove, false);\n    this.$el.removeEventListener('mouseup', this.onMouseUp, false);\n    this.$el.removeEventListener('click', this.onClick, false);\n    window.removeEventListener('resize', this.onResize, false);\n  },\n  watch: {\n    src: function src() {\n      this.load();\n    },\n    rotation: {\n      deep: true,\n      handler: function handler(val) {\n        if (!this.object) return;\n        this.object.rotation.set(val.x, val.y, val.z);\n      }\n    },\n    position: {\n      deep: true,\n      handler: function handler(val) {\n        if (!this.object) return;\n        this.object.position.set(val.x, val.y, val.z);\n      }\n    },\n    scale: {\n      deep: true,\n      handler: function handler(val) {\n        if (!this.object) return;\n        this.object.scale.set(val.x, val.y, val.z);\n      }\n    },\n    lights: {\n      deep: true,\n      handler: function handler() {\n        this.updateLights();\n      }\n    },\n    size: {\n      deep: true,\n      handler: function handler() {\n        this.updateCamera();\n        this.updateRenderer();\n      }\n    },\n    controllable: function controllable() {\n      this.updateControls();\n    },\n    backgroundAlpha: function backgroundAlpha() {\n      this.updateRenderer();\n    },\n    backgroundColor: function backgroundColor() {\n      this.updateRenderer();\n    }\n  },\n  methods: {\n    onResize: function onResize() {\n      var _this = this;\n\n      if (this.width === undefined || this.height === undefined) {\n        this.$nextTick(function () {\n          _this.size = {\n            width: _this.$el.offsetWidth,\n            height: _this.$el.offsetHeight\n          };\n        });\n      }\n    },\n    onMouseDown: function onMouseDown(event) {\n      if (!this.hasListener['on-mousedown']) return;\n      var intersected = this.pick(event.clientX, event.clientY);\n      this.$emit('on-mousedown', intersected);\n    },\n    onMouseMove: function onMouseMove(event) {\n      if (!this.hasListener['on-mousemove']) return;\n      var intersected = this.pick(event.clientX, event.clientY);\n      this.$emit('on-mousemove', intersected);\n    },\n    onMouseUp: function onMouseUp(event) {\n      if (!this.hasListener['on-mouseup']) return;\n      var intersected = this.pick(event.clientX, event.clientY);\n      this.$emit('on-mouseup', intersected);\n    },\n    onClick: function onClick(event) {\n      if (!this.hasListener['on-click']) return;\n      var intersected = this.pick(event.clientX, event.clientY);\n      this.$emit('on-click', intersected);\n    },\n    pick: function pick(x, y) {\n      if (!this.object) return null;\n      var rect = this.$el.getBoundingClientRect();\n      x -= rect.left;\n      y -= rect.top;\n      this.mouse.x = x / this.size.width * 2 - 1;\n      this.mouse.y = -(y / this.size.height) * 2 + 1;\n      this.raycaster.setFromCamera(this.mouse, this.camera);\n      var intersects = this.raycaster.intersectObject(this.object, true);\n      return (intersects && intersects.length) > 0 ? intersects[0] : null;\n    },\n    update: function update() {\n      this.updateRenderer();\n      this.updateCamera();\n      this.updateLights();\n      this.updateControls();\n    },\n    updateModel: function updateModel() {\n      var object = this.object;\n      if (!object) return;\n      var position = this.position;\n      var rotation = this.rotation;\n      var scale = this.scale;\n      object.position.set(position.x, position.y, position.z);\n      object.rotation.set(rotation.x, rotation.y, rotation.z);\n      object.scale.set(scale.x, scale.y, scale.z);\n    },\n    updateRenderer: function updateRenderer() {\n      var renderer = this.renderer;\n      renderer.setSize(this.size.width, this.size.height);\n      renderer.setPixelRatio(window.devicePixelRatio || 1);\n      renderer.setClearColor(new Color(this.backgroundColor).getHex());\n      renderer.setClearAlpha(this.backgroundAlpha);\n    },\n    updateCamera: function updateCamera() {\n      var camera = this.camera;\n      var object = this.object;\n      camera.aspect = this.size.width / this.size.height;\n      camera.updateProjectionMatrix();\n\n      if (!this.cameraLookAt && !this.cameraUp) {\n        if (!object) return;\n        var distance = getSize(object).length();\n        camera.position.set(this.cameraPosition.x, this.cameraPosition.y, this.cameraPosition.z);\n        camera.rotation.set(this.cameraRotation.x, this.cameraRotation.y, this.cameraRotation.z);\n\n        if (this.cameraPosition.x === 0 && this.cameraPosition.y === 0 && this.cameraPosition.z === 0) {\n          camera.position.z = distance;\n        }\n\n        camera.lookAt(new Vector3());\n      } else {\n        camera.position.set(this.cameraPosition.x, this.cameraPosition.y, this.cameraPosition.z);\n        camera.rotation.set(this.cameraRotation.x, this.cameraRotation.y, this.cameraRotation.z);\n        camera.up.set(this.cameraUp.x, this.cameraUp.y, this.cameraUp.z);\n        camera.lookAt(new Vector3(this.cameraLookAt.x, this.cameraLookAt.y, this.cameraLookAt.z));\n      }\n    },\n    updateLights: function updateLights() {\n      var _this$scene,\n          _this2 = this;\n\n      (_this$scene = this.scene).remove.apply(_this$scene, _toConsumableArray(this.allLights));\n\n      this.allLights = [];\n      this.lights.forEach(function (item) {\n        if (!item.type) return;\n        var type = item.type.toLowerCase();\n        var light = null;\n\n        if (type === 'ambient' || type === 'ambientlight') {\n          var color = item.color === 0x000000 ? item.color : item.color || 0x404040;\n          var intensity = item.intensity === 0 ? item.intensity : item.intensity || 1;\n          light = new AmbientLight(color, intensity);\n        } else if (type === 'point' || type === 'pointlight') {\n          var _color = item.color === 0x000000 ? item.color : item.color || 0xffffff;\n\n          var _intensity = item.intensity === 0 ? item.intensity : item.intensity || 1;\n\n          var distance = item.distance || 0;\n          var decay = item.decay === 0 ? item.decay : item.decay || 1;\n          light = new PointLight(_color, _intensity, distance, decay);\n\n          if (item.position) {\n            light.position.copy(item.position);\n          }\n        } else if (type === 'directional' || type === 'directionallight') {\n          var _color2 = item.color === 0x000000 ? item.color : item.color || 0xffffff;\n\n          var _intensity2 = item.intensity === 0 ? item.intensity : item.intensity || 1;\n\n          light = new DirectionalLight(_color2, _intensity2);\n\n          if (item.position) {\n            light.position.copy(item.position);\n          }\n\n          if (item.target) {\n            light.target.copy(item.target);\n          }\n        } else if (type === 'hemisphere' || type === 'hemispherelight') {\n          var skyColor = item.skyColor === 0x000000 ? item.skyColor : item.skyColor || 0xffffff;\n          var groundColor = item.groundColor === 0x000000 ? item.groundColor : item.groundColor || 0xffffff;\n\n          var _intensity3 = item.intensity === 0 ? item.intensity : item.intensity || 1;\n\n          light = new HemisphereLight(skyColor, groundColor, _intensity3);\n\n          if (item.position) {\n            light.position.copy(item.position);\n          }\n        }\n\n        _this2.allLights.push(light);\n\n        _this2.scene.add(light);\n      });\n    },\n    updateControls: function updateControls() {\n      if (this.controllable && this.controls) return;\n\n      if (this.controllable) {\n        if (this.controls) return;\n        this.controls = new OrbitControls(this.camera, this.$el);\n        this.controls.type = 'orbit';\n      } else if (this.controls) {\n        this.controls.dispose();\n        this.controls = null;\n      }\n    },\n    load: function load() {\n      var _this3 = this;\n\n      if (!this.src) return;\n\n      if (this.object) {\n        this.wrapper.remove(this.object);\n      }\n\n      this.loader.load(this.src, function () {\n        var object = _this3.getObject.apply(_this3, arguments);\n\n        if (_this3.process) {\n          _this3.process(object);\n        }\n\n        _this3.addObject(object);\n\n        _this3.$emit('on-load');\n      }, function (xhr) {\n        _this3.$emit('on-progress', xhr);\n      }, function (err) {\n        _this3.$emit('on-error', err);\n      });\n    },\n    getObject: function getObject(object) {\n      return object;\n    },\n    addObject: function addObject(object) {\n      var center = getCenter(object); // correction position\n\n      this.wrapper.position.copy(center.negate());\n      this.object = object;\n      this.wrapper.add(object);\n      this.updateCamera();\n      this.updateModel();\n    },\n    animate: function animate() {\n      this.reqId = requestAnimationFrame(this.animate);\n      this.render();\n    },\n    render: function render() {\n      this.renderer.render(this.scene, this.camera);\n    }\n  }\n});\n// CONCATENATED MODULE: ./src/model-mixin.vue?vue&type=script&lang=js&\n /* harmony default export */ var src_model_mixinvue_type_script_lang_js_ = (model_mixinvue_type_script_lang_js_); \n// CONCATENATED MODULE: ./node_modules/_vue-loader@15.7.0@vue-loader/lib/runtime/componentNormalizer.js\n/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nfunction normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n\n// CONCATENATED MODULE: ./src/model-mixin.vue\n\n\n\n\n\n/* normalize component */\n\nvar component = normalizeComponent(\n  src_model_mixinvue_type_script_lang_js_,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ var model_mixin = (component.exports);\n// CONCATENATED MODULE: ./node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--12-0!./node_modules/_thread-loader@2.1.2@thread-loader/dist/cjs.js!./node_modules/_babel-loader@8.0.6@babel-loader/lib!./node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!./node_modules/_vue-loader@15.7.0@vue-loader/lib??vue-loader-options!./src/model-obj.vue?vue&type=script&lang=js&\n\n\n\n\n\n // TODO: Better way to handle texture formats\n\nLoader.Handlers.add(/\\.dds$/i, new DDSLoader());\n/* harmony default export */ var model_objvue_type_script_lang_js_ = ({\n  name: 'model-obj',\n  mixins: [model_mixin],\n  props: {\n    lights: {\n      type: Array,\n      default: function _default() {\n        return [{\n          type: 'HemisphereLight',\n          position: {\n            x: 0,\n            y: 1,\n            z: 0\n          },\n          skyColor: 0xaaaaff,\n          groundColor: 0x806060,\n          intensity: 0.2\n        }, {\n          type: 'DirectionalLight',\n          position: {\n            x: 1,\n            y: 1,\n            z: 1\n          },\n          color: 0xffffff,\n          intensity: 0.8\n        }];\n      }\n    },\n    smoothing: {\n      type: Boolean,\n      default: false\n    },\n    mtlPath: {\n      type: String\n    },\n    mtl: {\n      type: String\n    }\n  },\n  data: function data() {\n    var objLoader = new OBJLoader_OBJLoader();\n    var mtlLoader = new MTLLoader();\n    mtlLoader.setCrossOrigin(this.crossOrigin);\n    return {\n      loader: objLoader,\n      mtlLoader: mtlLoader\n    };\n  },\n  watch: {\n    mtl: function mtl() {\n      this.load();\n    }\n  },\n  methods: {\n    process: function process(object) {\n      if (this.smoothing) {\n        object.traverse(function (child) {\n          if (child.geometry) {\n            child.geometry = toIndexed(child.geometry);\n            child.geometry.computeVertexNormals();\n          }\n        });\n      }\n    },\n    load: function load() {\n      var _this = this;\n\n      if (!this.src) return;\n\n      if (this.object) {\n        this.wrapper.remove(this.object);\n      }\n\n      var onLoad = function onLoad(object) {\n        if (_this.process) {\n          _this.process(object);\n        }\n\n        _this.addObject(object);\n\n        _this.$emit('on-load');\n      };\n\n      var onProgress = function onProgress(xhr) {\n        _this.$emit('on-progress', xhr);\n      };\n\n      var onError = function onError(err) {\n        _this.$emit('on-error', err);\n      };\n\n      if (this.mtl) {\n        var mtlPath = this.mtlPath;\n        var mtlSrc = this.mtl;\n\n        if (!this.mtlPath) {\n          var result = /^(.*\\/)([^/]*)$/.exec(this.mtl);\n\n          if (result) {\n            mtlPath = result[1];\n            mtlSrc = result[2];\n          }\n        }\n\n        if (mtlPath) {\n          this.mtlLoader.setPath(mtlPath);\n        }\n\n        this.mtlLoader.load(mtlSrc, function (materials) {\n          materials.preload();\n\n          _this.loader.setMaterials(materials).load(_this.src, onLoad, onProgress, onError);\n        }, function () {}, onError);\n      } else {\n        this.loader.load(this.src, onLoad, onProgress, onError);\n      }\n    }\n  }\n});\n// CONCATENATED MODULE: ./src/model-obj.vue?vue&type=script&lang=js&\n /* harmony default export */ var src_model_objvue_type_script_lang_js_ = (model_objvue_type_script_lang_js_); \n// CONCATENATED MODULE: ./src/model-obj.vue\nvar model_obj_render, model_obj_staticRenderFns\n\n\n\n\n/* normalize component */\n\nvar model_obj_component = normalizeComponent(\n  src_model_objvue_type_script_lang_js_,\n  model_obj_render,\n  model_obj_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ var model_obj = (model_obj_component.exports);\n// CONCATENATED MODULE: ./node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--12-0!./node_modules/_thread-loader@2.1.2@thread-loader/dist/cjs.js!./node_modules/_babel-loader@8.0.6@babel-loader/lib!./node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!./node_modules/_vue-loader@15.7.0@vue-loader/lib??vue-loader-options!./src/model-three.vue?vue&type=script&lang=js&\n\n\n/* harmony default export */ var model_threevue_type_script_lang_js_ = ({\n  name: 'model-three',\n  mixins: [model_mixin],\n  data: function data() {\n    var loader = new ObjectLoader();\n    loader.setCrossOrigin(this.crossOrigin);\n    return {\n      loader: loader\n    };\n  }\n});\n// CONCATENATED MODULE: ./src/model-three.vue?vue&type=script&lang=js&\n /* harmony default export */ var src_model_threevue_type_script_lang_js_ = (model_threevue_type_script_lang_js_); \n// CONCATENATED MODULE: ./src/model-three.vue\nvar model_three_render, model_three_staticRenderFns\n\n\n\n\n/* normalize component */\n\nvar model_three_component = normalizeComponent(\n  src_model_threevue_type_script_lang_js_,\n  model_three_render,\n  model_three_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ var model_three = (model_three_component.exports);\n// CONCATENATED MODULE: ./node_modules/_three@0.105.2@three/examples/jsm/loaders/STLLoader.js\n/**\n * @author aleeper / http://adamleeper.com/\n * @author mrdoob / http://mrdoob.com/\n * @author gero3 / https://github.com/gero3\n * @author Mugen87 / https://github.com/Mugen87\n *\n * Description: A THREE loader for STL ASCII files, as created by Solidworks and other CAD programs.\n *\n * Supports both binary and ASCII encoded files, with automatic detection of type.\n *\n * The loader returns a non-indexed buffer geometry.\n *\n * Limitations:\n *  Binary decoding supports \"Magics\" color format (http://en.wikipedia.org/wiki/STL_(file_format)#Color_in_binary_STL).\n *  There is perhaps some question as to how valid it is to always assume little-endian-ness.\n *  ASCII decoding assumes file is UTF-8.\n *\n * Usage:\n *  var loader = new STLLoader();\n *  loader.load( './models/stl/slotted_disk.stl', function ( geometry ) {\n *    scene.add( new THREE.Mesh( geometry ) );\n *  });\n *\n * For binary STLs geometry might contain colors for vertices. To use it:\n *  // use the same code to load STL as above\n *  if (geometry.hasColors) {\n *    material = new THREE.MeshPhongMaterial({ opacity: geometry.alpha, vertexColors: THREE.VertexColors });\n *  } else { .... }\n *  var mesh = new THREE.Mesh( geometry, material );\n */\n\n\n\n\nvar STLLoader = function ( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n};\n\nSTLLoader.prototype = {\n\n\tconstructor: STLLoader,\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( text ) );\n\n\t\t\t} catch ( exception ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( exception );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t},\n\n\tparse: function ( data ) {\n\n\t\tfunction isBinary( data ) {\n\n\t\t\tvar expect, face_size, n_faces, reader;\n\t\t\treader = new DataView( data );\n\t\t\tface_size = ( 32 / 8 * 3 ) + ( ( 32 / 8 * 3 ) * 3 ) + ( 16 / 8 );\n\t\t\tn_faces = reader.getUint32( 80, true );\n\t\t\texpect = 80 + ( 32 / 8 ) + ( n_faces * face_size );\n\n\t\t\tif ( expect === reader.byteLength ) {\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\t// An ASCII STL data must begin with 'solid ' as the first six bytes.\n\t\t\t// However, ASCII STLs lacking the SPACE after the 'd' are known to be\n\t\t\t// plentiful.  So, check the first 5 bytes for 'solid'.\n\n\t\t\t// Several encodings, such as UTF-8, precede the text with up to 5 bytes:\n\t\t\t// https://en.wikipedia.org/wiki/Byte_order_mark#Byte_order_marks_by_encoding\n\t\t\t// Search for \"solid\" to start anywhere after those prefixes.\n\n\t\t\t// US-ASCII ordinal values for 's', 'o', 'l', 'i', 'd'\n\n\t\t\tvar solid = [ 115, 111, 108, 105, 100 ];\n\n\t\t\tfor ( var off = 0; off < 5; off ++ ) {\n\n\t\t\t\t// If \"solid\" text is matched to the current offset, declare it to be an ASCII STL.\n\n\t\t\t\tif ( matchDataViewAt ( solid, reader, off ) ) return false;\n\n\t\t\t}\n\n\t\t\t// Couldn't find \"solid\" text at the beginning; it is binary STL.\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tfunction matchDataViewAt( query, reader, offset ) {\n\n\t\t\t// Check if each byte in query matches the corresponding byte from the current offset\n\n\t\t\tfor ( var i = 0, il = query.length; i < il; i ++ ) {\n\n\t\t\t\tif ( query[ i ] !== reader.getUint8( offset + i, false ) ) return false;\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tfunction parseBinary( data ) {\n\n\t\t\tvar reader = new DataView( data );\n\t\t\tvar faces = reader.getUint32( 80, true );\n\n\t\t\tvar r, g, b, hasColors = false, colors;\n\t\t\tvar defaultR, defaultG, defaultB, alpha;\n\n\t\t\t// process STL header\n\t\t\t// check for default color in header (\"COLOR=rgba\" sequence).\n\n\t\t\tfor ( var index = 0; index < 80 - 10; index ++ ) {\n\n\t\t\t\tif ( ( reader.getUint32( index, false ) == 0x434F4C4F /*COLO*/ ) &&\n\t\t\t\t\t( reader.getUint8( index + 4 ) == 0x52 /*'R'*/ ) &&\n\t\t\t\t\t( reader.getUint8( index + 5 ) == 0x3D /*'='*/ ) ) {\n\n\t\t\t\t\thasColors = true;\n\t\t\t\t\tcolors = [];\n\n\t\t\t\t\tdefaultR = reader.getUint8( index + 6 ) / 255;\n\t\t\t\t\tdefaultG = reader.getUint8( index + 7 ) / 255;\n\t\t\t\t\tdefaultB = reader.getUint8( index + 8 ) / 255;\n\t\t\t\t\talpha = reader.getUint8( index + 9 ) / 255;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar dataOffset = 84;\n\t\t\tvar faceLength = 12 * 4 + 2;\n\n\t\t\tvar geometry = new BufferGeometry();\n\n\t\t\tvar vertices = [];\n\t\t\tvar normals = [];\n\n\t\t\tfor ( var face = 0; face < faces; face ++ ) {\n\n\t\t\t\tvar start = dataOffset + face * faceLength;\n\t\t\t\tvar normalX = reader.getFloat32( start, true );\n\t\t\t\tvar normalY = reader.getFloat32( start + 4, true );\n\t\t\t\tvar normalZ = reader.getFloat32( start + 8, true );\n\n\t\t\t\tif ( hasColors ) {\n\n\t\t\t\t\tvar packedColor = reader.getUint16( start + 48, true );\n\n\t\t\t\t\tif ( ( packedColor & 0x8000 ) === 0 ) {\n\n\t\t\t\t\t\t// facet has its own unique color\n\n\t\t\t\t\t\tr = ( packedColor & 0x1F ) / 31;\n\t\t\t\t\t\tg = ( ( packedColor >> 5 ) & 0x1F ) / 31;\n\t\t\t\t\t\tb = ( ( packedColor >> 10 ) & 0x1F ) / 31;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tr = defaultR;\n\t\t\t\t\t\tg = defaultG;\n\t\t\t\t\t\tb = defaultB;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var i = 1; i <= 3; i ++ ) {\n\n\t\t\t\t\tvar vertexstart = start + i * 12;\n\n\t\t\t\t\tvertices.push( reader.getFloat32( vertexstart, true ) );\n\t\t\t\t\tvertices.push( reader.getFloat32( vertexstart + 4, true ) );\n\t\t\t\t\tvertices.push( reader.getFloat32( vertexstart + 8, true ) );\n\n\t\t\t\t\tnormals.push( normalX, normalY, normalZ );\n\n\t\t\t\t\tif ( hasColors ) {\n\n\t\t\t\t\t\tcolors.push( r, g, b );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tgeometry.addAttribute( 'position', new BufferAttribute( new Float32Array( vertices ), 3 ) );\n\t\t\tgeometry.addAttribute( 'normal', new BufferAttribute( new Float32Array( normals ), 3 ) );\n\n\t\t\tif ( hasColors ) {\n\n\t\t\t\tgeometry.addAttribute( 'color', new BufferAttribute( new Float32Array( colors ), 3 ) );\n\t\t\t\tgeometry.hasColors = true;\n\t\t\t\tgeometry.alpha = alpha;\n\n\t\t\t}\n\n\t\t\treturn geometry;\n\n\t\t}\n\n\t\tfunction parseASCII( data ) {\n\n\t\t\tvar geometry = new BufferGeometry();\n\t\t\tvar patternFace = /facet([\\s\\S]*?)endfacet/g;\n\t\t\tvar faceCounter = 0;\n\n\t\t\tvar patternFloat = /[\\s]+([+-]?(?:\\d*)(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)/.source;\n\t\t\tvar patternVertex = new RegExp( 'vertex' + patternFloat + patternFloat + patternFloat, 'g' );\n\t\t\tvar patternNormal = new RegExp( 'normal' + patternFloat + patternFloat + patternFloat, 'g' );\n\n\t\t\tvar vertices = [];\n\t\t\tvar normals = [];\n\n\t\t\tvar normal = new Vector3();\n\n\t\t\tvar result;\n\n\t\t\twhile ( ( result = patternFace.exec( data ) ) !== null ) {\n\n\t\t\t\tvar vertexCountPerFace = 0;\n\t\t\t\tvar normalCountPerFace = 0;\n\n\t\t\t\tvar text = result[ 0 ];\n\n\t\t\t\twhile ( ( result = patternNormal.exec( text ) ) !== null ) {\n\n\t\t\t\t\tnormal.x = parseFloat( result[ 1 ] );\n\t\t\t\t\tnormal.y = parseFloat( result[ 2 ] );\n\t\t\t\t\tnormal.z = parseFloat( result[ 3 ] );\n\t\t\t\t\tnormalCountPerFace ++;\n\n\t\t\t\t}\n\n\t\t\t\twhile ( ( result = patternVertex.exec( text ) ) !== null ) {\n\n\t\t\t\t\tvertices.push( parseFloat( result[ 1 ] ), parseFloat( result[ 2 ] ), parseFloat( result[ 3 ] ) );\n\t\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\t\t\t\t\tvertexCountPerFace ++;\n\n\t\t\t\t}\n\n\t\t\t\t// every face have to own ONE valid normal\n\n\t\t\t\tif ( normalCountPerFace !== 1 ) {\n\n\t\t\t\t\tconsole.error( 'THREE.STLLoader: Something isn\\'t right with the normal of face number ' + faceCounter );\n\n\t\t\t\t}\n\n\t\t\t\t// each face have to own THREE valid vertices\n\n\t\t\t\tif ( vertexCountPerFace !== 3 ) {\n\n\t\t\t\t\tconsole.error( 'THREE.STLLoader: Something isn\\'t right with the vertices of face number ' + faceCounter );\n\n\t\t\t\t}\n\n\t\t\t\tfaceCounter ++;\n\n\t\t\t}\n\n\t\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\t\tgeometry.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\n\t\t\treturn geometry;\n\n\t\t}\n\n\t\tfunction ensureString( buffer ) {\n\n\t\t\tif ( typeof buffer !== 'string' ) {\n\n\t\t\t\treturn LoaderUtils.decodeText( new Uint8Array( buffer ) );\n\n\t\t\t}\n\n\t\t\treturn buffer;\n\n\t\t}\n\n\t\tfunction ensureBinary( buffer ) {\n\n\t\t\tif ( typeof buffer === 'string' ) {\n\n\t\t\t\tvar array_buffer = new Uint8Array( buffer.length );\n\t\t\t\tfor ( var i = 0; i < buffer.length; i ++ ) {\n\n\t\t\t\t\tarray_buffer[ i ] = buffer.charCodeAt( i ) & 0xff; // implicitly assumes little-endian\n\n\t\t\t\t}\n\t\t\t\treturn array_buffer.buffer || array_buffer;\n\n\t\t\t} else {\n\n\t\t\t\treturn buffer;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// start\n\n\t\tvar binData = ensureBinary( data );\n\n\t\treturn isBinary( binData ) ? parseBinary( binData ) : parseASCII( ensureString( data ) );\n\n\t}\n\n};\n\n\n\n// CONCATENATED MODULE: ./node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--12-0!./node_modules/_thread-loader@2.1.2@thread-loader/dist/cjs.js!./node_modules/_babel-loader@8.0.6@babel-loader/lib!./node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!./node_modules/_vue-loader@15.7.0@vue-loader/lib??vue-loader-options!./src/model-stl.vue?vue&type=script&lang=js&\n\n\n\n/* harmony default export */ var model_stlvue_type_script_lang_js_ = ({\n  name: 'model-stl',\n  mixins: [model_mixin],\n  props: {\n    lights: {\n      type: Array,\n      default: function _default() {\n        return [{\n          type: 'HemisphereLight',\n          position: {\n            x: 0,\n            y: 1,\n            z: 0\n          },\n          skyColor: 0xaaaaff,\n          groundColor: 0x806060,\n          intensity: 0.2\n        }, {\n          type: 'DirectionalLight',\n          position: {\n            x: 1,\n            y: 1,\n            z: 1\n          },\n          color: 0xffffff,\n          intensity: 0.8\n        }];\n      }\n    }\n  },\n  data: function data() {\n    return {\n      loader: new STLLoader()\n    };\n  },\n  methods: {\n    getObject: function getObject(geometry) {\n      return new Mesh(geometry, new MeshPhongMaterial());\n    }\n  }\n});\n// CONCATENATED MODULE: ./src/model-stl.vue?vue&type=script&lang=js&\n /* harmony default export */ var src_model_stlvue_type_script_lang_js_ = (model_stlvue_type_script_lang_js_); \n// CONCATENATED MODULE: ./src/model-stl.vue\nvar model_stl_render, model_stl_staticRenderFns\n\n\n\n\n/* normalize component */\n\nvar model_stl_component = normalizeComponent(\n  src_model_stlvue_type_script_lang_js_,\n  model_stl_render,\n  model_stl_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ var model_stl = (model_stl_component.exports);\n// CONCATENATED MODULE: ./node_modules/_three@0.105.2@three/examples/jsm/loaders/PLYLoader.js\n/**\n * @author Wei Meng / http://about.me/menway\n *\n * Description: A THREE loader for PLY ASCII files (known as the Polygon\n * File Format or the Stanford Triangle Format).\n *\n * Limitations: ASCII decoding assumes file is UTF-8.\n *\n * Usage:\n *\tvar loader = new PLYLoader();\n *\tloader.load('./models/ply/ascii/dolphins.ply', function (geometry) {\n *\n *\t\tscene.add( new THREE.Mesh( geometry ) );\n *\n *\t} );\n *\n * If the PLY file uses non standard property names, they can be mapped while\n * loading. For example, the following maps the properties\n * “diffuse_(red|green|blue)” in the file to standard color names.\n *\n * loader.setPropertyNameMapping( {\n *\tdiffuse_red: 'red',\n *\tdiffuse_green: 'green',\n *\tdiffuse_blue: 'blue'\n * } );\n *\n */\n\n\n\n\nvar PLYLoader = function ( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\tthis.propertyNameMapping = {};\n\n};\n\nPLYLoader.prototype = {\n\n\tconstructor: PLYLoader,\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tonLoad( scope.parse( text ) );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t},\n\n\tsetPropertyNameMapping: function ( mapping ) {\n\n\t\tthis.propertyNameMapping = mapping;\n\n\t},\n\n\tparse: function ( data ) {\n\n\t\tfunction parseHeader( data ) {\n\n\t\t\tvar patternHeader = /ply([\\s\\S]*)end_header\\r?\\n/;\n\t\t\tvar headerText = '';\n\t\t\tvar headerLength = 0;\n\t\t\tvar result = patternHeader.exec( data );\n\n\t\t\tif ( result !== null ) {\n\n\t\t\t\theaderText = result[ 1 ];\n\t\t\t\theaderLength = result[ 0 ].length;\n\n\t\t\t}\n\n\t\t\tvar header = {\n\t\t\t\tcomments: [],\n\t\t\t\telements: [],\n\t\t\t\theaderLength: headerLength\n\t\t\t};\n\n\t\t\tvar lines = headerText.split( '\\n' );\n\t\t\tvar currentElement;\n\t\t\tvar lineType, lineValues;\n\n\t\t\tfunction make_ply_element_property( propertValues, propertyNameMapping ) {\n\n\t\t\t\tvar property = { type: propertValues[ 0 ] };\n\n\t\t\t\tif ( property.type === 'list' ) {\n\n\t\t\t\t\tproperty.name = propertValues[ 3 ];\n\t\t\t\t\tproperty.countType = propertValues[ 1 ];\n\t\t\t\t\tproperty.itemType = propertValues[ 2 ];\n\n\t\t\t\t} else {\n\n\t\t\t\t\tproperty.name = propertValues[ 1 ];\n\n\t\t\t\t}\n\n\t\t\t\tif ( property.name in propertyNameMapping ) {\n\n\t\t\t\t\tproperty.name = propertyNameMapping[ property.name ];\n\n\t\t\t\t}\n\n\t\t\t\treturn property;\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i < lines.length; i ++ ) {\n\n\t\t\t\tvar line = lines[ i ];\n\t\t\t\tline = line.trim();\n\n\t\t\t\tif ( line === '' ) continue;\n\n\t\t\t\tlineValues = line.split( /\\s+/ );\n\t\t\t\tlineType = lineValues.shift();\n\t\t\t\tline = lineValues.join( ' ' );\n\n\t\t\t\tswitch ( lineType ) {\n\n\t\t\t\t\tcase 'format':\n\n\t\t\t\t\t\theader.format = lineValues[ 0 ];\n\t\t\t\t\t\theader.version = lineValues[ 1 ];\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'comment':\n\n\t\t\t\t\t\theader.comments.push( line );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'element':\n\n\t\t\t\t\t\tif ( currentElement !== undefined ) {\n\n\t\t\t\t\t\t\theader.elements.push( currentElement );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcurrentElement = {};\n\t\t\t\t\t\tcurrentElement.name = lineValues[ 0 ];\n\t\t\t\t\t\tcurrentElement.count = parseInt( lineValues[ 1 ] );\n\t\t\t\t\t\tcurrentElement.properties = [];\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'property':\n\n\t\t\t\t\t\tcurrentElement.properties.push( make_ply_element_property( lineValues, scope.propertyNameMapping ) );\n\n\t\t\t\t\t\tbreak;\n\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tconsole.log( 'unhandled', lineType, lineValues );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( currentElement !== undefined ) {\n\n\t\t\t\theader.elements.push( currentElement );\n\n\t\t\t}\n\n\t\t\treturn header;\n\n\t\t}\n\n\t\tfunction parseASCIINumber( n, type ) {\n\n\t\t\tswitch ( type ) {\n\n\t\t\t\tcase 'char': case 'uchar': case 'short': case 'ushort': case 'int': case 'uint':\n\t\t\t\tcase 'int8': case 'uint8': case 'int16': case 'uint16': case 'int32': case 'uint32':\n\n\t\t\t\t\treturn parseInt( n );\n\n\t\t\t\tcase 'float': case 'double': case 'float32': case 'float64':\n\n\t\t\t\t\treturn parseFloat( n );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction parseASCIIElement( properties, line ) {\n\n\t\t\tvar values = line.split( /\\s+/ );\n\n\t\t\tvar element = {};\n\n\t\t\tfor ( var i = 0; i < properties.length; i ++ ) {\n\n\t\t\t\tif ( properties[ i ].type === 'list' ) {\n\n\t\t\t\t\tvar list = [];\n\t\t\t\t\tvar n = parseASCIINumber( values.shift(), properties[ i ].countType );\n\n\t\t\t\t\tfor ( var j = 0; j < n; j ++ ) {\n\n\t\t\t\t\t\tlist.push( parseASCIINumber( values.shift(), properties[ i ].itemType ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\telement[ properties[ i ].name ] = list;\n\n\t\t\t\t} else {\n\n\t\t\t\t\telement[ properties[ i ].name ] = parseASCIINumber( values.shift(), properties[ i ].type );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn element;\n\n\t\t}\n\n\t\tfunction parseASCII( data, header ) {\n\n\t\t\t// PLY ascii format specification, as per http://en.wikipedia.org/wiki/PLY_(file_format)\n\n\t\t\tvar buffer = {\n\t\t\t\tindices: [],\n\t\t\t\tvertices: [],\n\t\t\t\tnormals: [],\n\t\t\t\tuvs: [],\n\t\t\t\tfaceVertexUvs: [],\n\t\t\t\tcolors: []\n\t\t\t};\n\n\t\t\tvar result;\n\n\t\t\tvar patternBody = /end_header\\s([\\s\\S]*)$/;\n\t\t\tvar body = '';\n\t\t\tif ( ( result = patternBody.exec( data ) ) !== null ) {\n\n\t\t\t\tbody = result[ 1 ];\n\n\t\t\t}\n\n\t\t\tvar lines = body.split( '\\n' );\n\t\t\tvar currentElement = 0;\n\t\t\tvar currentElementCount = 0;\n\n\t\t\tfor ( var i = 0; i < lines.length; i ++ ) {\n\n\t\t\t\tvar line = lines[ i ];\n\t\t\t\tline = line.trim();\n\t\t\t\tif ( line === '' ) {\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tif ( currentElementCount >= header.elements[ currentElement ].count ) {\n\n\t\t\t\t\tcurrentElement ++;\n\t\t\t\t\tcurrentElementCount = 0;\n\n\t\t\t\t}\n\n\t\t\t\tvar element = parseASCIIElement( header.elements[ currentElement ].properties, line );\n\n\t\t\t\thandleElement( buffer, header.elements[ currentElement ].name, element );\n\n\t\t\t\tcurrentElementCount ++;\n\n\t\t\t}\n\n\t\t\treturn postProcess( buffer );\n\n\t\t}\n\n\t\tfunction postProcess( buffer ) {\n\n\t\t\tvar geometry = new BufferGeometry();\n\n\t\t\t// mandatory buffer data\n\n\t\t\tif ( buffer.indices.length > 0 ) {\n\n\t\t\t\tgeometry.setIndex( buffer.indices );\n\n\t\t\t}\n\n\t\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( buffer.vertices, 3 ) );\n\n\t\t\t// optional buffer data\n\n\t\t\tif ( buffer.normals.length > 0 ) {\n\n\t\t\t\tgeometry.addAttribute( 'normal', new Float32BufferAttribute( buffer.normals, 3 ) );\n\n\t\t\t}\n\n\t\t\tif ( buffer.uvs.length > 0 ) {\n\n\t\t\t\tgeometry.addAttribute( 'uv', new Float32BufferAttribute( buffer.uvs, 2 ) );\n\n\t\t\t}\n\n\t\t\tif ( buffer.colors.length > 0 ) {\n\n\t\t\t\tgeometry.addAttribute( 'color', new Float32BufferAttribute( buffer.colors, 3 ) );\n\n\t\t\t}\n\n\t\t\tif ( buffer.faceVertexUvs.length > 0 ) {\n\n\t\t\t\tgeometry = geometry.toNonIndexed();\n\t\t\t\tgeometry.addAttribute( 'uv', new Float32BufferAttribute( buffer.faceVertexUvs, 2 ) );\n\n\t\t\t}\n\n\t\t\tgeometry.computeBoundingSphere();\n\n\t\t\treturn geometry;\n\n\t\t}\n\n\t\tfunction handleElement( buffer, elementName, element ) {\n\n\t\t\tif ( elementName === 'vertex' ) {\n\n\t\t\t\tbuffer.vertices.push( element.x, element.y, element.z );\n\n\t\t\t\tif ( 'nx' in element && 'ny' in element && 'nz' in element ) {\n\n\t\t\t\t\tbuffer.normals.push( element.nx, element.ny, element.nz );\n\n\t\t\t\t}\n\n\t\t\t\tif ( 's' in element && 't' in element ) {\n\n\t\t\t\t\tbuffer.uvs.push( element.s, element.t );\n\n\t\t\t\t}\n\n\t\t\t\tif ( 'red' in element && 'green' in element && 'blue' in element ) {\n\n\t\t\t\t\tbuffer.colors.push( element.red / 255.0, element.green / 255.0, element.blue / 255.0 );\n\n\t\t\t\t}\n\n\t\t\t} else if ( elementName === 'face' ) {\n\n\t\t\t\tvar vertex_indices = element.vertex_indices || element.vertex_index; // issue #9338\n\t\t\t\tvar texcoord = element.texcoord;\n\n\t\t\t\tif ( vertex_indices.length === 3 ) {\n\n\t\t\t\t\tbuffer.indices.push( vertex_indices[ 0 ], vertex_indices[ 1 ], vertex_indices[ 2 ] );\n\n\t\t\t\t\tif ( texcoord && texcoord.length === 6 ) {\n\n\t\t\t\t\t\tbuffer.faceVertexUvs.push( texcoord[ 0 ], texcoord[ 1 ] );\n\t\t\t\t\t\tbuffer.faceVertexUvs.push( texcoord[ 2 ], texcoord[ 3 ] );\n\t\t\t\t\t\tbuffer.faceVertexUvs.push( texcoord[ 4 ], texcoord[ 5 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( vertex_indices.length === 4 ) {\n\n\t\t\t\t\tbuffer.indices.push( vertex_indices[ 0 ], vertex_indices[ 1 ], vertex_indices[ 3 ] );\n\t\t\t\t\tbuffer.indices.push( vertex_indices[ 1 ], vertex_indices[ 2 ], vertex_indices[ 3 ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction binaryRead( dataview, at, type, little_endian ) {\n\n\t\t\tswitch ( type ) {\n\n\t\t\t\t// corespondences for non-specific length types here match rply:\n\t\t\t\tcase 'int8':\t\tcase 'char':\t return [ dataview.getInt8( at ), 1 ];\n\t\t\t\tcase 'uint8':\t\tcase 'uchar':\t return [ dataview.getUint8( at ), 1 ];\n\t\t\t\tcase 'int16':\t\tcase 'short':\t return [ dataview.getInt16( at, little_endian ), 2 ];\n\t\t\t\tcase 'uint16':\tcase 'ushort': return [ dataview.getUint16( at, little_endian ), 2 ];\n\t\t\t\tcase 'int32':\t\tcase 'int':\t\t return [ dataview.getInt32( at, little_endian ), 4 ];\n\t\t\t\tcase 'uint32':\tcase 'uint':\t return [ dataview.getUint32( at, little_endian ), 4 ];\n\t\t\t\tcase 'float32': case 'float':\t return [ dataview.getFloat32( at, little_endian ), 4 ];\n\t\t\t\tcase 'float64': case 'double': return [ dataview.getFloat64( at, little_endian ), 8 ];\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction binaryReadElement( dataview, at, properties, little_endian ) {\n\n\t\t\tvar element = {};\n\t\t\tvar result, read = 0;\n\n\t\t\tfor ( var i = 0; i < properties.length; i ++ ) {\n\n\t\t\t\tif ( properties[ i ].type === 'list' ) {\n\n\t\t\t\t\tvar list = [];\n\n\t\t\t\t\tresult = binaryRead( dataview, at + read, properties[ i ].countType, little_endian );\n\t\t\t\t\tvar n = result[ 0 ];\n\t\t\t\t\tread += result[ 1 ];\n\n\t\t\t\t\tfor ( var j = 0; j < n; j ++ ) {\n\n\t\t\t\t\t\tresult = binaryRead( dataview, at + read, properties[ i ].itemType, little_endian );\n\t\t\t\t\t\tlist.push( result[ 0 ] );\n\t\t\t\t\t\tread += result[ 1 ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\telement[ properties[ i ].name ] = list;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tresult = binaryRead( dataview, at + read, properties[ i ].type, little_endian );\n\t\t\t\t\telement[ properties[ i ].name ] = result[ 0 ];\n\t\t\t\t\tread += result[ 1 ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn [ element, read ];\n\n\t\t}\n\n\t\tfunction parseBinary( data, header ) {\n\n\t\t\tvar buffer = {\n\t\t\t\tindices: [],\n\t\t\t\tvertices: [],\n\t\t\t\tnormals: [],\n\t\t\t\tuvs: [],\n\t\t\t\tfaceVertexUvs: [],\n\t\t\t\tcolors: []\n\t\t\t};\n\n\t\t\tvar little_endian = ( header.format === 'binary_little_endian' );\n\t\t\tvar body = new DataView( data, header.headerLength );\n\t\t\tvar result, loc = 0;\n\n\t\t\tfor ( var currentElement = 0; currentElement < header.elements.length; currentElement ++ ) {\n\n\t\t\t\tfor ( var currentElementCount = 0; currentElementCount < header.elements[ currentElement ].count; currentElementCount ++ ) {\n\n\t\t\t\t\tresult = binaryReadElement( body, loc, header.elements[ currentElement ].properties, little_endian );\n\t\t\t\t\tloc += result[ 1 ];\n\t\t\t\t\tvar element = result[ 0 ];\n\n\t\t\t\t\thandleElement( buffer, header.elements[ currentElement ].name, element );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn postProcess( buffer );\n\n\t\t}\n\n\t\t//\n\n\t\tvar geometry;\n\t\tvar scope = this;\n\n\t\tif ( data instanceof ArrayBuffer ) {\n\n\t\t\tvar text = LoaderUtils.decodeText( new Uint8Array( data ) );\n\t\t\tvar header = parseHeader( text );\n\n\t\t\tgeometry = header.format === 'ascii' ? parseASCII( text, header ) : parseBinary( data, header );\n\n\t\t} else {\n\n\t\t\tgeometry = parseASCII( data, parseHeader( data ) );\n\n\t\t}\n\n\t\treturn geometry;\n\n\t}\n\n};\n\n\n\n// CONCATENATED MODULE: ./node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--12-0!./node_modules/_thread-loader@2.1.2@thread-loader/dist/cjs.js!./node_modules/_babel-loader@8.0.6@babel-loader/lib!./node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!./node_modules/_vue-loader@15.7.0@vue-loader/lib??vue-loader-options!./src/model-ply.vue?vue&type=script&lang=js&\n\n\n\n/* harmony default export */ var model_plyvue_type_script_lang_js_ = ({\n  name: 'model-ply',\n  mixins: [model_mixin],\n  props: {\n    lights: {\n      type: Array,\n      default: function _default() {\n        return [{\n          type: 'HemisphereLight',\n          position: {\n            x: 0,\n            y: 1,\n            z: 0\n          },\n          skyColor: 0xaaaaff,\n          groundColor: 0x806060,\n          intensity: 0.2\n        }, {\n          type: 'DirectionalLight',\n          position: {\n            x: 1,\n            y: 1,\n            z: 1\n          },\n          color: 0xffffff,\n          intensity: 0.8\n        }];\n      }\n    }\n  },\n  data: function data() {\n    return {\n      loader: new PLYLoader()\n    };\n  },\n  methods: {\n    getObject: function getObject(geometry) {\n      geometry.computeVertexNormals();\n      return new Mesh(geometry, new MeshStandardMaterial());\n    }\n  }\n});\n// CONCATENATED MODULE: ./src/model-ply.vue?vue&type=script&lang=js&\n /* harmony default export */ var src_model_plyvue_type_script_lang_js_ = (model_plyvue_type_script_lang_js_); \n// CONCATENATED MODULE: ./src/model-ply.vue\nvar model_ply_render, model_ply_staticRenderFns\n\n\n\n\n/* normalize component */\n\nvar model_ply_component = normalizeComponent(\n  src_model_plyvue_type_script_lang_js_,\n  model_ply_render,\n  model_ply_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ var model_ply = (model_ply_component.exports);\n// CONCATENATED MODULE: ./node_modules/_three@0.105.2@three/examples/jsm/loaders/TGALoader.js\n/*\n * @author Daosheng Mu / https://github.com/DaoshengMu/\n * @author mrdoob / http://mrdoob.com/\n * @author takahirox / https://github.com/takahirox/\n */\n\n\n\nvar TGALoader = function ( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n};\n\nTGALoader.prototype = {\n\n\tconstructor: TGALoader,\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar texture = new Texture();\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setPath( this.path );\n\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\ttexture.image = scope.parse( buffer );\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\tonLoad( texture );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\treturn texture;\n\n\t},\n\n\tparse: function ( buffer ) {\n\n\t\t// reference from vthibault, https://github.com/vthibault/roBrowser/blob/master/src/Loaders/Targa.js\n\n\t\tfunction tgaCheckHeader( header ) {\n\n\t\t\tswitch ( header.image_type ) {\n\n\t\t\t\t// check indexed type\n\n\t\t\t\tcase TGA_TYPE_INDEXED:\n\t\t\t\tcase TGA_TYPE_RLE_INDEXED:\n\t\t\t\t\tif ( header.colormap_length > 256 || header.colormap_size !== 24 || header.colormap_type !== 1 ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.TGALoader: Invalid type colormap data for indexed type.' );\n\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\t// check colormap type\n\n\t\t\t\tcase TGA_TYPE_RGB:\n\t\t\t\tcase TGA_TYPE_GREY:\n\t\t\t\tcase TGA_TYPE_RLE_RGB:\n\t\t\t\tcase TGA_TYPE_RLE_GREY:\n\t\t\t\t\tif ( header.colormap_type ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.TGALoader: Invalid type colormap data for colormap type.' );\n\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\t// What the need of a file without data ?\n\n\t\t\t\tcase TGA_TYPE_NO_DATA:\n\t\t\t\t\tconsole.error( 'THREE.TGALoader: No data.' );\n\n\t\t\t\t// Invalid type ?\n\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.error( 'THREE.TGALoader: Invalid type \"%s\".', header.image_type );\n\n\t\t\t}\n\n\t\t\t// check image width and height\n\n\t\t\tif ( header.width <= 0 || header.height <= 0 ) {\n\n\t\t\t\tconsole.error( 'THREE.TGALoader: Invalid image size.' );\n\n\t\t\t}\n\n\t\t\t// check image pixel size\n\n\t\t\tif ( header.pixel_size !== 8 && header.pixel_size !== 16 &&\n\t\t\t\theader.pixel_size !== 24 && header.pixel_size !== 32 ) {\n\n\t\t\t\tconsole.error( 'THREE.TGALoader: Invalid pixel size \"%s\".', header.pixel_size );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// parse tga image buffer\n\n\t\tfunction tgaParse( use_rle, use_pal, header, offset, data ) {\n\n\t\t\tvar pixel_data,\n\t\t\t\tpixel_size,\n\t\t\t\tpixel_total,\n\t\t\t\tpalettes;\n\n\t\t\tpixel_size = header.pixel_size >> 3;\n\t\t\tpixel_total = header.width * header.height * pixel_size;\n\n\t\t\t // read palettes\n\n\t\t\t if ( use_pal ) {\n\n\t\t\t\t palettes = data.subarray( offset, offset += header.colormap_length * ( header.colormap_size >> 3 ) );\n\n\t\t\t }\n\n\t\t\t // read RLE\n\n\t\t\t if ( use_rle ) {\n\n\t\t\t\t pixel_data = new Uint8Array( pixel_total );\n\n\t\t\t\tvar c, count, i;\n\t\t\t\tvar shift = 0;\n\t\t\t\tvar pixels = new Uint8Array( pixel_size );\n\n\t\t\t\twhile ( shift < pixel_total ) {\n\n\t\t\t\t\tc = data[ offset ++ ];\n\t\t\t\t\tcount = ( c & 0x7f ) + 1;\n\n\t\t\t\t\t// RLE pixels\n\n\t\t\t\t\tif ( c & 0x80 ) {\n\n\t\t\t\t\t\t// bind pixel tmp array\n\n\t\t\t\t\t\tfor ( i = 0; i < pixel_size; ++ i ) {\n\n\t\t\t\t\t\t\tpixels[ i ] = data[ offset ++ ];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// copy pixel array\n\n\t\t\t\t\t\tfor ( i = 0; i < count; ++ i ) {\n\n\t\t\t\t\t\t\tpixel_data.set( pixels, shift + i * pixel_size );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tshift += pixel_size * count;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// raw pixels\n\n\t\t\t\t\t\tcount *= pixel_size;\n\t\t\t\t\t\tfor ( i = 0; i < count; ++ i ) {\n\n\t\t\t\t\t\t\tpixel_data[ shift + i ] = data[ offset ++ ];\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tshift += count;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t } else {\n\n\t\t\t\t// raw pixels\n\n\t\t\t\tpixel_data = data.subarray(\n\t\t\t\t\t offset, offset += ( use_pal ? header.width * header.height : pixel_total )\n\t\t\t\t);\n\n\t\t\t }\n\n\t\t\t return {\n\t\t\t\tpixel_data: pixel_data,\n\t\t\t\tpalettes: palettes\n\t\t\t };\n\n\t\t}\n\n\t\tfunction tgaGetImageData8bits( imageData, y_start, y_step, y_end, x_start, x_step, x_end, image, palettes ) {\n\n\t\t\tvar colormap = palettes;\n\t\t\tvar color, i = 0, x, y;\n\t\t\tvar width = header.width;\n\n\t\t\tfor ( y = y_start; y !== y_end; y += y_step ) {\n\n\t\t\t\tfor ( x = x_start; x !== x_end; x += x_step, i ++ ) {\n\n\t\t\t\t\tcolor = image[ i ];\n\t\t\t\t\timageData[ ( x + width * y ) * 4 + 3 ] = 255;\n\t\t\t\t\timageData[ ( x + width * y ) * 4 + 2 ] = colormap[ ( color * 3 ) + 0 ];\n\t\t\t\t\timageData[ ( x + width * y ) * 4 + 1 ] = colormap[ ( color * 3 ) + 1 ];\n\t\t\t\t\timageData[ ( x + width * y ) * 4 + 0 ] = colormap[ ( color * 3 ) + 2 ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn imageData;\n\n\t\t}\n\n\t\tfunction tgaGetImageData16bits( imageData, y_start, y_step, y_end, x_start, x_step, x_end, image ) {\n\n\t\t\tvar color, i = 0, x, y;\n\t\t\tvar width = header.width;\n\n\t\t\tfor ( y = y_start; y !== y_end; y += y_step ) {\n\n\t\t\t\tfor ( x = x_start; x !== x_end; x += x_step, i += 2 ) {\n\n\t\t\t\t\tcolor = image[ i + 0 ] + ( image[ i + 1 ] << 8 ); // Inversed ?\n\t\t\t\t\timageData[ ( x + width * y ) * 4 + 0 ] = ( color & 0x7C00 ) >> 7;\n\t\t\t\t\timageData[ ( x + width * y ) * 4 + 1 ] = ( color & 0x03E0 ) >> 2;\n\t\t\t\t\timageData[ ( x + width * y ) * 4 + 2 ] = ( color & 0x001F ) >> 3;\n\t\t\t\t\timageData[ ( x + width * y ) * 4 + 3 ] = ( color & 0x8000 ) ? 0 : 255;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn imageData;\n\n\t\t}\n\n\t\tfunction tgaGetImageData24bits( imageData, y_start, y_step, y_end, x_start, x_step, x_end, image ) {\n\n\t\t\tvar i = 0, x, y;\n\t\t\tvar width = header.width;\n\n\t\t\tfor ( y = y_start; y !== y_end; y += y_step ) {\n\n\t\t\t\tfor ( x = x_start; x !== x_end; x += x_step, i += 3 ) {\n\n\t\t\t\t\timageData[ ( x + width * y ) * 4 + 3 ] = 255;\n\t\t\t\t\timageData[ ( x + width * y ) * 4 + 2 ] = image[ i + 0 ];\n\t\t\t\t\timageData[ ( x + width * y ) * 4 + 1 ] = image[ i + 1 ];\n\t\t\t\t\timageData[ ( x + width * y ) * 4 + 0 ] = image[ i + 2 ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn imageData;\n\n\t\t}\n\n\t\tfunction tgaGetImageData32bits( imageData, y_start, y_step, y_end, x_start, x_step, x_end, image ) {\n\n\t\t\tvar i = 0, x, y;\n\t\t\tvar width = header.width;\n\n\t\t\tfor ( y = y_start; y !== y_end; y += y_step ) {\n\n\t\t\t\tfor ( x = x_start; x !== x_end; x += x_step, i += 4 ) {\n\n\t\t\t\t\timageData[ ( x + width * y ) * 4 + 2 ] = image[ i + 0 ];\n\t\t\t\t\timageData[ ( x + width * y ) * 4 + 1 ] = image[ i + 1 ];\n\t\t\t\t\timageData[ ( x + width * y ) * 4 + 0 ] = image[ i + 2 ];\n\t\t\t\t\timageData[ ( x + width * y ) * 4 + 3 ] = image[ i + 3 ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn imageData;\n\n\t\t}\n\n\t\tfunction tgaGetImageDataGrey8bits( imageData, y_start, y_step, y_end, x_start, x_step, x_end, image ) {\n\n\t\t\tvar color, i = 0, x, y;\n\t\t\tvar width = header.width;\n\n\t\t\tfor ( y = y_start; y !== y_end; y += y_step ) {\n\n\t\t\t\tfor ( x = x_start; x !== x_end; x += x_step, i ++ ) {\n\n\t\t\t\t\tcolor = image[ i ];\n\t\t\t\t\timageData[ ( x + width * y ) * 4 + 0 ] = color;\n\t\t\t\t\timageData[ ( x + width * y ) * 4 + 1 ] = color;\n\t\t\t\t\timageData[ ( x + width * y ) * 4 + 2 ] = color;\n\t\t\t\t\timageData[ ( x + width * y ) * 4 + 3 ] = 255;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn imageData;\n\n\t\t}\n\n\t\tfunction tgaGetImageDataGrey16bits( imageData, y_start, y_step, y_end, x_start, x_step, x_end, image ) {\n\n\t\t\tvar i = 0, x, y;\n\t\t\tvar width = header.width;\n\n\t\t\tfor ( y = y_start; y !== y_end; y += y_step ) {\n\n\t\t\t\tfor ( x = x_start; x !== x_end; x += x_step, i += 2 ) {\n\n\t\t\t\t\timageData[ ( x + width * y ) * 4 + 0 ] = image[ i + 0 ];\n\t\t\t\t\timageData[ ( x + width * y ) * 4 + 1 ] = image[ i + 0 ];\n\t\t\t\t\timageData[ ( x + width * y ) * 4 + 2 ] = image[ i + 0 ];\n\t\t\t\t\timageData[ ( x + width * y ) * 4 + 3 ] = image[ i + 1 ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn imageData;\n\n\t\t}\n\n\t\tfunction getTgaRGBA( data, width, height, image, palette ) {\n\n\t\t\tvar x_start,\n\t\t\t\ty_start,\n\t\t\t\tx_step,\n\t\t\t\ty_step,\n\t\t\t\tx_end,\n\t\t\t\ty_end;\n\n\t\t\tswitch ( ( header.flags & TGA_ORIGIN_MASK ) >> TGA_ORIGIN_SHIFT ) {\n\n\t\t\t\tdefault:\n\t\t\t\tcase TGA_ORIGIN_UL:\n\t\t\t\t\tx_start = 0;\n\t\t\t\t\tx_step = 1;\n\t\t\t\t\tx_end = width;\n\t\t\t\t\ty_start = 0;\n\t\t\t\t\ty_step = 1;\n\t\t\t\t\ty_end = height;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase TGA_ORIGIN_BL:\n\t\t\t\t\tx_start = 0;\n\t\t\t\t\tx_step = 1;\n\t\t\t\t\tx_end = width;\n\t\t\t\t\ty_start = height - 1;\n\t\t\t\t\ty_step = - 1;\n\t\t\t\t\ty_end = - 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase TGA_ORIGIN_UR:\n\t\t\t\t\tx_start = width - 1;\n\t\t\t\t\tx_step = - 1;\n\t\t\t\t\tx_end = - 1;\n\t\t\t\t\ty_start = 0;\n\t\t\t\t\ty_step = 1;\n\t\t\t\t\ty_end = height;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase TGA_ORIGIN_BR:\n\t\t\t\t\tx_start = width - 1;\n\t\t\t\t\tx_step = - 1;\n\t\t\t\t\tx_end = - 1;\n\t\t\t\t\ty_start = height - 1;\n\t\t\t\t\ty_step = - 1;\n\t\t\t\t\ty_end = - 1;\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( use_grey ) {\n\n\t\t\t\tswitch ( header.pixel_size ) {\n\n\t\t\t\t\tcase 8:\n\t\t\t\t\t\ttgaGetImageDataGrey8bits( data, y_start, y_step, y_end, x_start, x_step, x_end, image );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 16:\n\t\t\t\t\t\ttgaGetImageDataGrey16bits( data, y_start, y_step, y_end, x_start, x_step, x_end, image );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.error( 'THREE.TGALoader: Format not supported.' );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tswitch ( header.pixel_size ) {\n\n\t\t\t\t\tcase 8:\n\t\t\t\t\t\ttgaGetImageData8bits( data, y_start, y_step, y_end, x_start, x_step, x_end, image, palette );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 16:\n\t\t\t\t\t\ttgaGetImageData16bits( data, y_start, y_step, y_end, x_start, x_step, x_end, image );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 24:\n\t\t\t\t\t\ttgaGetImageData24bits( data, y_start, y_step, y_end, x_start, x_step, x_end, image );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 32:\n\t\t\t\t\t\ttgaGetImageData32bits( data, y_start, y_step, y_end, x_start, x_step, x_end, image );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.error( 'THREE.TGALoader: Format not supported.' );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Load image data according to specific method\n\t\t\t// var func = 'tgaGetImageData' + (use_grey ? 'Grey' : '') + (header.pixel_size) + 'bits';\n\t\t\t// func(data, y_start, y_step, y_end, x_start, x_step, x_end, width, image, palette );\n\t\t\treturn data;\n\n\t\t}\n\n\t\t// TGA constants\n\n\t\tvar TGA_TYPE_NO_DATA = 0,\n\t\t\tTGA_TYPE_INDEXED = 1,\n\t\t\tTGA_TYPE_RGB = 2,\n\t\t\tTGA_TYPE_GREY = 3,\n\t\t\tTGA_TYPE_RLE_INDEXED = 9,\n\t\t\tTGA_TYPE_RLE_RGB = 10,\n\t\t\tTGA_TYPE_RLE_GREY = 11,\n\n\t\t\tTGA_ORIGIN_MASK = 0x30,\n\t\t\tTGA_ORIGIN_SHIFT = 0x04,\n\t\t\tTGA_ORIGIN_BL = 0x00,\n\t\t\tTGA_ORIGIN_BR = 0x01,\n\t\t\tTGA_ORIGIN_UL = 0x02,\n\t\t\tTGA_ORIGIN_UR = 0x03;\n\n\t\tif ( buffer.length < 19 ) console.error( 'THREE.TGALoader: Not enough data to contain header.' );\n\n\t\tvar content = new Uint8Array( buffer ),\n\t\t\toffset = 0,\n\t\t\theader = {\n\t\t\t\tid_length: content[ offset ++ ],\n\t\t\t\tcolormap_type: content[ offset ++ ],\n\t\t\t\timage_type: content[ offset ++ ],\n\t\t\t\tcolormap_index: content[ offset ++ ] | content[ offset ++ ] << 8,\n\t\t\t\tcolormap_length: content[ offset ++ ] | content[ offset ++ ] << 8,\n\t\t\t\tcolormap_size: content[ offset ++ ],\n\t\t\t\torigin: [\n\t\t\t\t\tcontent[ offset ++ ] | content[ offset ++ ] << 8,\n\t\t\t\t\tcontent[ offset ++ ] | content[ offset ++ ] << 8\n\t\t\t\t],\n\t\t\t\twidth: content[ offset ++ ] | content[ offset ++ ] << 8,\n\t\t\t\theight: content[ offset ++ ] | content[ offset ++ ] << 8,\n\t\t\t\tpixel_size: content[ offset ++ ],\n\t\t\t\tflags: content[ offset ++ ]\n\t\t\t};\n\n\t\t\t// check tga if it is valid format\n\n\t\ttgaCheckHeader( header );\n\n\t\tif ( header.id_length + offset > buffer.length ) {\n\n\t\t\tconsole.error( 'THREE.TGALoader: No data.' );\n\n\t\t}\n\n\t\t// skip the needn't data\n\n\t\toffset += header.id_length;\n\n\t\t// get targa information about RLE compression and palette\n\n\t\tvar use_rle = false,\n\t\t\tuse_pal = false,\n\t\t\tuse_grey = false;\n\n\t\tswitch ( header.image_type ) {\n\n\t\t\tcase TGA_TYPE_RLE_INDEXED:\n\t\t\t\tuse_rle = true;\n\t\t\t\tuse_pal = true;\n\t\t\t\tbreak;\n\n\t\t\tcase TGA_TYPE_INDEXED:\n\t\t\t\tuse_pal = true;\n\t\t\t\tbreak;\n\n\t\t\tcase TGA_TYPE_RLE_RGB:\n\t\t\t\tuse_rle = true;\n\t\t\t\tbreak;\n\n\t\t\tcase TGA_TYPE_RGB:\n\t\t\t\tbreak;\n\n\t\t\tcase TGA_TYPE_RLE_GREY:\n\t\t\t\tuse_rle = true;\n\t\t\t\tuse_grey = true;\n\t\t\t\tbreak;\n\n\t\t\tcase TGA_TYPE_GREY:\n\t\t\t\tuse_grey = true;\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\t//\n\n\t\tvar useOffscreen = typeof OffscreenCanvas !== 'undefined';\n\n\t\tvar canvas = useOffscreen ? new OffscreenCanvas( header.width, header.height ) : document.createElement( 'canvas' );\n\t\tcanvas.width = header.width;\n\t\tcanvas.height = header.height;\n\n\t\tvar context = canvas.getContext( '2d' );\n\t\tvar imageData = context.createImageData( header.width, header.height );\n\n\t\tvar result = tgaParse( use_rle, use_pal, header, offset, content );\n\t\tvar rgbaData = getTgaRGBA( imageData.data, header.width, header.height, result.pixel_data, result.palettes );\n\n\t\tcontext.putImageData( imageData, 0, 0 );\n\n\t\treturn useOffscreen ? canvas.transferToImageBitmap() : canvas;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n};\n\n\n\n// CONCATENATED MODULE: ./node_modules/_three@0.105.2@three/examples/jsm/loaders/ColladaLoader.js\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n\n\n\nvar ColladaLoader = function ( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n};\n\nColladaLoader.prototype = {\n\n\tconstructor: ColladaLoader,\n\n\tcrossOrigin: 'anonymous',\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar path = ( scope.path === undefined ) ? LoaderUtils.extractUrlBase( url ) : scope.path;\n\n\t\tvar loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tonLoad( scope.parse( text, path ) );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t},\n\n\tsetResourcePath: function ( value ) {\n\n\t\tthis.resourcePath = value;\n\t\treturn this;\n\n\t},\n\n\toptions: {\n\n\t\tset convertUpAxis( value ) {\n\n\t\t\tconsole.warn( 'THREE.ColladaLoader: options.convertUpAxis() has been removed. Up axis is converted automatically.' );\n\n\t\t}\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t},\n\n\tparse: function ( text, path ) {\n\n\t\tfunction getElementsByTagName( xml, name ) {\n\n\t\t\t// Non recursive xml.getElementsByTagName() ...\n\n\t\t\tvar array = [];\n\t\t\tvar childNodes = xml.childNodes;\n\n\t\t\tfor ( var i = 0, l = childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tvar child = childNodes[ i ];\n\n\t\t\t\tif ( child.nodeName === name ) {\n\n\t\t\t\t\tarray.push( child );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn array;\n\n\t\t}\n\n\t\tfunction parseStrings( text ) {\n\n\t\t\tif ( text.length === 0 ) return [];\n\n\t\t\tvar parts = text.trim().split( /\\s+/ );\n\t\t\tvar array = new Array( parts.length );\n\n\t\t\tfor ( var i = 0, l = parts.length; i < l; i ++ ) {\n\n\t\t\t\tarray[ i ] = parts[ i ];\n\n\t\t\t}\n\n\t\t\treturn array;\n\n\t\t}\n\n\t\tfunction parseFloats( text ) {\n\n\t\t\tif ( text.length === 0 ) return [];\n\n\t\t\tvar parts = text.trim().split( /\\s+/ );\n\t\t\tvar array = new Array( parts.length );\n\n\t\t\tfor ( var i = 0, l = parts.length; i < l; i ++ ) {\n\n\t\t\t\tarray[ i ] = parseFloat( parts[ i ] );\n\n\t\t\t}\n\n\t\t\treturn array;\n\n\t\t}\n\n\t\tfunction parseInts( text ) {\n\n\t\t\tif ( text.length === 0 ) return [];\n\n\t\t\tvar parts = text.trim().split( /\\s+/ );\n\t\t\tvar array = new Array( parts.length );\n\n\t\t\tfor ( var i = 0, l = parts.length; i < l; i ++ ) {\n\n\t\t\t\tarray[ i ] = parseInt( parts[ i ] );\n\n\t\t\t}\n\n\t\t\treturn array;\n\n\t\t}\n\n\t\tfunction parseId( text ) {\n\n\t\t\treturn text.substring( 1 );\n\n\t\t}\n\n\t\tfunction generateId() {\n\n\t\t\treturn 'three_default_' + ( count ++ );\n\n\t\t}\n\n\t\tfunction isEmpty( object ) {\n\n\t\t\treturn Object.keys( object ).length === 0;\n\n\t\t}\n\n\t\t// asset\n\n\t\tfunction parseAsset( xml ) {\n\n\t\t\treturn {\n\t\t\t\tunit: parseAssetUnit( getElementsByTagName( xml, 'unit' )[ 0 ] ),\n\t\t\t\tupAxis: parseAssetUpAxis( getElementsByTagName( xml, 'up_axis' )[ 0 ] )\n\t\t\t};\n\n\t\t}\n\n\t\tfunction parseAssetUnit( xml ) {\n\n\t\t\tif ( ( xml !== undefined ) && ( xml.hasAttribute( 'meter' ) === true ) ) {\n\n\t\t\t\treturn parseFloat( xml.getAttribute( 'meter' ) );\n\n\t\t\t} else {\n\n\t\t\t\treturn 1; // default 1 meter\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction parseAssetUpAxis( xml ) {\n\n\t\t\treturn xml !== undefined ? xml.textContent : 'Y_UP';\n\n\t\t}\n\n\t\t// library\n\n\t\tfunction parseLibrary( xml, libraryName, nodeName, parser ) {\n\n\t\t\tvar library = getElementsByTagName( xml, libraryName )[ 0 ];\n\n\t\t\tif ( library !== undefined ) {\n\n\t\t\t\tvar elements = getElementsByTagName( library, nodeName );\n\n\t\t\t\tfor ( var i = 0; i < elements.length; i ++ ) {\n\n\t\t\t\t\tparser( elements[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction buildLibrary( data, builder ) {\n\n\t\t\tfor ( var name in data ) {\n\n\t\t\t\tvar object = data[ name ];\n\t\t\t\tobject.build = builder( data[ name ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// get\n\n\t\tfunction getBuild( data, builder ) {\n\n\t\t\tif ( data.build !== undefined ) return data.build;\n\n\t\t\tdata.build = builder( data );\n\n\t\t\treturn data.build;\n\n\t\t}\n\n\t\t// animation\n\n\t\tfunction parseAnimation( xml ) {\n\n\t\t\tvar data = {\n\t\t\t\tsources: {},\n\t\t\t\tsamplers: {},\n\t\t\t\tchannels: {}\n\t\t\t};\n\n\t\t\tfor ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tvar child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tvar id;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'source':\n\t\t\t\t\t\tid = child.getAttribute( 'id' );\n\t\t\t\t\t\tdata.sources[ id ] = parseSource( child );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'sampler':\n\t\t\t\t\t\tid = child.getAttribute( 'id' );\n\t\t\t\t\t\tdata.samplers[ id ] = parseAnimationSampler( child );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'channel':\n\t\t\t\t\t\tid = child.getAttribute( 'target' );\n\t\t\t\t\t\tdata.channels[ id ] = parseAnimationChannel( child );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.log( child );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tlibrary.animations[ xml.getAttribute( 'id' ) ] = data;\n\n\t\t}\n\n\t\tfunction parseAnimationSampler( xml ) {\n\n\t\t\tvar data = {\n\t\t\t\tinputs: {},\n\t\t\t};\n\n\t\t\tfor ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tvar child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'input':\n\t\t\t\t\t\tvar id = parseId( child.getAttribute( 'source' ) );\n\t\t\t\t\t\tvar semantic = child.getAttribute( 'semantic' );\n\t\t\t\t\t\tdata.inputs[ semantic ] = id;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction parseAnimationChannel( xml ) {\n\n\t\t\tvar data = {};\n\n\t\t\tvar target = xml.getAttribute( 'target' );\n\n\t\t\t// parsing SID Addressing Syntax\n\n\t\t\tvar parts = target.split( '/' );\n\n\t\t\tvar id = parts.shift();\n\t\t\tvar sid = parts.shift();\n\n\t\t\t// check selection syntax\n\n\t\t\tvar arraySyntax = ( sid.indexOf( '(' ) !== - 1 );\n\t\t\tvar memberSyntax = ( sid.indexOf( '.' ) !== - 1 );\n\n\t\t\tif ( memberSyntax ) {\n\n\t\t\t\t//  member selection access\n\n\t\t\t\tparts = sid.split( '.' );\n\t\t\t\tsid = parts.shift();\n\t\t\t\tdata.member = parts.shift();\n\n\t\t\t} else if ( arraySyntax ) {\n\n\t\t\t\t// array-access syntax. can be used to express fields in one-dimensional vectors or two-dimensional matrices.\n\n\t\t\t\tvar indices = sid.split( '(' );\n\t\t\t\tsid = indices.shift();\n\n\t\t\t\tfor ( var i = 0; i < indices.length; i ++ ) {\n\n\t\t\t\t\tindices[ i ] = parseInt( indices[ i ].replace( /\\)/, '' ) );\n\n\t\t\t\t}\n\n\t\t\t\tdata.indices = indices;\n\n\t\t\t}\n\n\t\t\tdata.id = id;\n\t\t\tdata.sid = sid;\n\n\t\t\tdata.arraySyntax = arraySyntax;\n\t\t\tdata.memberSyntax = memberSyntax;\n\n\t\t\tdata.sampler = parseId( xml.getAttribute( 'source' ) );\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction buildAnimation( data ) {\n\n\t\t\tvar tracks = [];\n\n\t\t\tvar channels = data.channels;\n\t\t\tvar samplers = data.samplers;\n\t\t\tvar sources = data.sources;\n\n\t\t\tfor ( var target in channels ) {\n\n\t\t\t\tif ( channels.hasOwnProperty( target ) ) {\n\n\t\t\t\t\tvar channel = channels[ target ];\n\t\t\t\t\tvar sampler = samplers[ channel.sampler ];\n\n\t\t\t\t\tvar inputId = sampler.inputs.INPUT;\n\t\t\t\t\tvar outputId = sampler.inputs.OUTPUT;\n\n\t\t\t\t\tvar inputSource = sources[ inputId ];\n\t\t\t\t\tvar outputSource = sources[ outputId ];\n\n\t\t\t\t\tvar animation = buildAnimationChannel( channel, inputSource, outputSource );\n\n\t\t\t\t\tcreateKeyframeTracks( animation, tracks );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn tracks;\n\n\t\t}\n\n\t\tfunction getAnimation( id ) {\n\n\t\t\treturn getBuild( library.animations[ id ], buildAnimation );\n\n\t\t}\n\n\t\tfunction buildAnimationChannel( channel, inputSource, outputSource ) {\n\n\t\t\tvar node = library.nodes[ channel.id ];\n\t\t\tvar object3D = getNode( node.id );\n\n\t\t\tvar transform = node.transforms[ channel.sid ];\n\t\t\tvar defaultMatrix = node.matrix.clone().transpose();\n\n\t\t\tvar time, stride;\n\t\t\tvar i, il, j, jl;\n\n\t\t\tvar data = {};\n\n\t\t\t// the collada spec allows the animation of data in various ways.\n\t\t\t// depending on the transform type (matrix, translate, rotate, scale), we execute different logic\n\n\t\t\tswitch ( transform ) {\n\n\t\t\t\tcase 'matrix':\n\n\t\t\t\t\tfor ( i = 0, il = inputSource.array.length; i < il; i ++ ) {\n\n\t\t\t\t\t\ttime = inputSource.array[ i ];\n\t\t\t\t\t\tstride = i * outputSource.stride;\n\n\t\t\t\t\t\tif ( data[ time ] === undefined ) data[ time ] = {};\n\n\t\t\t\t\t\tif ( channel.arraySyntax === true ) {\n\n\t\t\t\t\t\t\tvar value = outputSource.array[ stride ];\n\t\t\t\t\t\t\tvar index = channel.indices[ 0 ] + 4 * channel.indices[ 1 ];\n\n\t\t\t\t\t\t\tdata[ time ][ index ] = value;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( j = 0, jl = outputSource.stride; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\t\tdata[ time ][ j ] = outputSource.array[ stride + j ];\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'translate':\n\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Animation transform type \"%s\" not yet implemented.', transform );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'rotate':\n\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Animation transform type \"%s\" not yet implemented.', transform );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'scale':\n\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Animation transform type \"%s\" not yet implemented.', transform );\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tvar keyframes = prepareAnimationData( data, defaultMatrix );\n\n\t\t\tvar animation = {\n\t\t\t\tname: object3D.uuid,\n\t\t\t\tkeyframes: keyframes\n\t\t\t};\n\n\t\t\treturn animation;\n\n\t\t}\n\n\t\tfunction prepareAnimationData( data, defaultMatrix ) {\n\n\t\t\tvar keyframes = [];\n\n\t\t\t// transfer data into a sortable array\n\n\t\t\tfor ( var time in data ) {\n\n\t\t\t\tkeyframes.push( { time: parseFloat( time ), value: data[ time ] } );\n\n\t\t\t}\n\n\t\t\t// ensure keyframes are sorted by time\n\n\t\t\tkeyframes.sort( ascending );\n\n\t\t\t// now we clean up all animation data, so we can use them for keyframe tracks\n\n\t\t\tfor ( var i = 0; i < 16; i ++ ) {\n\n\t\t\t\ttransformAnimationData( keyframes, i, defaultMatrix.elements[ i ] );\n\n\t\t\t}\n\n\t\t\treturn keyframes;\n\n\t\t\t// array sort function\n\n\t\t\tfunction ascending( a, b ) {\n\n\t\t\t\treturn a.time - b.time;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar position = new Vector3();\n\t\tvar scale = new Vector3();\n\t\tvar quaternion = new Quaternion();\n\n\t\tfunction createKeyframeTracks( animation, tracks ) {\n\n\t\t\tvar keyframes = animation.keyframes;\n\t\t\tvar name = animation.name;\n\n\t\t\tvar times = [];\n\t\t\tvar positionData = [];\n\t\t\tvar quaternionData = [];\n\t\t\tvar scaleData = [];\n\n\t\t\tfor ( var i = 0, l = keyframes.length; i < l; i ++ ) {\n\n\t\t\t\tvar keyframe = keyframes[ i ];\n\n\t\t\t\tvar time = keyframe.time;\n\t\t\t\tvar value = keyframe.value;\n\n\t\t\t\tmatrix.fromArray( value ).transpose();\n\t\t\t\tmatrix.decompose( position, quaternion, scale );\n\n\t\t\t\ttimes.push( time );\n\t\t\t\tpositionData.push( position.x, position.y, position.z );\n\t\t\t\tquaternionData.push( quaternion.x, quaternion.y, quaternion.z, quaternion.w );\n\t\t\t\tscaleData.push( scale.x, scale.y, scale.z );\n\n\t\t\t}\n\n\t\t\tif ( positionData.length > 0 ) tracks.push( new VectorKeyframeTrack( name + '.position', times, positionData ) );\n\t\t\tif ( quaternionData.length > 0 ) tracks.push( new QuaternionKeyframeTrack( name + '.quaternion', times, quaternionData ) );\n\t\t\tif ( scaleData.length > 0 ) tracks.push( new VectorKeyframeTrack( name + '.scale', times, scaleData ) );\n\n\t\t\treturn tracks;\n\n\t\t}\n\n\t\tfunction transformAnimationData( keyframes, property, defaultValue ) {\n\n\t\t\tvar keyframe;\n\n\t\t\tvar empty = true;\n\t\t\tvar i, l;\n\n\t\t\t// check, if values of a property are missing in our keyframes\n\n\t\t\tfor ( i = 0, l = keyframes.length; i < l; i ++ ) {\n\n\t\t\t\tkeyframe = keyframes[ i ];\n\n\t\t\t\tif ( keyframe.value[ property ] === undefined ) {\n\n\t\t\t\t\tkeyframe.value[ property ] = null; // mark as missing\n\n\t\t\t\t} else {\n\n\t\t\t\t\tempty = false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( empty === true ) {\n\n\t\t\t\t// no values at all, so we set a default value\n\n\t\t\t\tfor ( i = 0, l = keyframes.length; i < l; i ++ ) {\n\n\t\t\t\t\tkeyframe = keyframes[ i ];\n\n\t\t\t\t\tkeyframe.value[ property ] = defaultValue;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// filling gaps\n\n\t\t\t\tcreateMissingKeyframes( keyframes, property );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction createMissingKeyframes( keyframes, property ) {\n\n\t\t\tvar prev, next;\n\n\t\t\tfor ( var i = 0, l = keyframes.length; i < l; i ++ ) {\n\n\t\t\t\tvar keyframe = keyframes[ i ];\n\n\t\t\t\tif ( keyframe.value[ property ] === null ) {\n\n\t\t\t\t\tprev = getPrev( keyframes, i, property );\n\t\t\t\t\tnext = getNext( keyframes, i, property );\n\n\t\t\t\t\tif ( prev === null ) {\n\n\t\t\t\t\t\tkeyframe.value[ property ] = next.value[ property ];\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( next === null ) {\n\n\t\t\t\t\t\tkeyframe.value[ property ] = prev.value[ property ];\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tinterpolate( keyframe, prev, next, property );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction getPrev( keyframes, i, property ) {\n\n\t\t\twhile ( i >= 0 ) {\n\n\t\t\t\tvar keyframe = keyframes[ i ];\n\n\t\t\t\tif ( keyframe.value[ property ] !== null ) return keyframe;\n\n\t\t\t\ti --;\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tfunction getNext( keyframes, i, property ) {\n\n\t\t\twhile ( i < keyframes.length ) {\n\n\t\t\t\tvar keyframe = keyframes[ i ];\n\n\t\t\t\tif ( keyframe.value[ property ] !== null ) return keyframe;\n\n\t\t\t\ti ++;\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tfunction interpolate( key, prev, next, property ) {\n\n\t\t\tif ( ( next.time - prev.time ) === 0 ) {\n\n\t\t\t\tkey.value[ property ] = prev.value[ property ];\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tkey.value[ property ] = ( ( key.time - prev.time ) * ( next.value[ property ] - prev.value[ property ] ) / ( next.time - prev.time ) ) + prev.value[ property ];\n\n\t\t}\n\n\t\t// animation clips\n\n\t\tfunction parseAnimationClip( xml ) {\n\n\t\t\tvar data = {\n\t\t\t\tname: xml.getAttribute( 'id' ) || 'default',\n\t\t\t\tstart: parseFloat( xml.getAttribute( 'start' ) || 0 ),\n\t\t\t\tend: parseFloat( xml.getAttribute( 'end' ) || 0 ),\n\t\t\t\tanimations: []\n\t\t\t};\n\n\t\t\tfor ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tvar child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'instance_animation':\n\t\t\t\t\t\tdata.animations.push( parseId( child.getAttribute( 'url' ) ) );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tlibrary.clips[ xml.getAttribute( 'id' ) ] = data;\n\n\t\t}\n\n\t\tfunction buildAnimationClip( data ) {\n\n\t\t\tvar tracks = [];\n\n\t\t\tvar name = data.name;\n\t\t\tvar duration = ( data.end - data.start ) || - 1;\n\t\t\tvar animations = data.animations;\n\n\t\t\tfor ( var i = 0, il = animations.length; i < il; i ++ ) {\n\n\t\t\t\tvar animationTracks = getAnimation( animations[ i ] );\n\n\t\t\t\tfor ( var j = 0, jl = animationTracks.length; j < jl; j ++ ) {\n\n\t\t\t\t\ttracks.push( animationTracks[ j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new AnimationClip( name, duration, tracks );\n\n\t\t}\n\n\t\tfunction getAnimationClip( id ) {\n\n\t\t\treturn getBuild( library.clips[ id ], buildAnimationClip );\n\n\t\t}\n\n\t\t// controller\n\n\t\tfunction parseController( xml ) {\n\n\t\t\tvar data = {};\n\n\t\t\tfor ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tvar child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'skin':\n\t\t\t\t\t\t// there is exactly one skin per controller\n\t\t\t\t\t\tdata.id = parseId( child.getAttribute( 'source' ) );\n\t\t\t\t\t\tdata.skin = parseSkin( child );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'morph':\n\t\t\t\t\t\tdata.id = parseId( child.getAttribute( 'source' ) );\n\t\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Morph target animation not supported yet.' );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tlibrary.controllers[ xml.getAttribute( 'id' ) ] = data;\n\n\t\t}\n\n\t\tfunction parseSkin( xml ) {\n\n\t\t\tvar data = {\n\t\t\t\tsources: {}\n\t\t\t};\n\n\t\t\tfor ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tvar child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'bind_shape_matrix':\n\t\t\t\t\t\tdata.bindShapeMatrix = parseFloats( child.textContent );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'source':\n\t\t\t\t\t\tvar id = child.getAttribute( 'id' );\n\t\t\t\t\t\tdata.sources[ id ] = parseSource( child );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'joints':\n\t\t\t\t\t\tdata.joints = parseJoints( child );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'vertex_weights':\n\t\t\t\t\t\tdata.vertexWeights = parseVertexWeights( child );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction parseJoints( xml ) {\n\n\t\t\tvar data = {\n\t\t\t\tinputs: {}\n\t\t\t};\n\n\t\t\tfor ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tvar child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'input':\n\t\t\t\t\t\tvar semantic = child.getAttribute( 'semantic' );\n\t\t\t\t\t\tvar id = parseId( child.getAttribute( 'source' ) );\n\t\t\t\t\t\tdata.inputs[ semantic ] = id;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction parseVertexWeights( xml ) {\n\n\t\t\tvar data = {\n\t\t\t\tinputs: {}\n\t\t\t};\n\n\t\t\tfor ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tvar child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'input':\n\t\t\t\t\t\tvar semantic = child.getAttribute( 'semantic' );\n\t\t\t\t\t\tvar id = parseId( child.getAttribute( 'source' ) );\n\t\t\t\t\t\tvar offset = parseInt( child.getAttribute( 'offset' ) );\n\t\t\t\t\t\tdata.inputs[ semantic ] = { id: id, offset: offset };\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'vcount':\n\t\t\t\t\t\tdata.vcount = parseInts( child.textContent );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v':\n\t\t\t\t\t\tdata.v = parseInts( child.textContent );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction buildController( data ) {\n\n\t\t\tvar build = {\n\t\t\t\tid: data.id\n\t\t\t};\n\n\t\t\tvar geometry = library.geometries[ build.id ];\n\n\t\t\tif ( data.skin !== undefined ) {\n\n\t\t\t\tbuild.skin = buildSkin( data.skin );\n\n\t\t\t\t// we enhance the 'sources' property of the corresponding geometry with our skin data\n\n\t\t\t\tgeometry.sources.skinIndices = build.skin.indices;\n\t\t\t\tgeometry.sources.skinWeights = build.skin.weights;\n\n\t\t\t}\n\n\t\t\treturn build;\n\n\t\t}\n\n\t\tfunction buildSkin( data ) {\n\n\t\t\tvar BONE_LIMIT = 4;\n\n\t\t\tvar build = {\n\t\t\t\tjoints: [], // this must be an array to preserve the joint order\n\t\t\t\tindices: {\n\t\t\t\t\tarray: [],\n\t\t\t\t\tstride: BONE_LIMIT\n\t\t\t\t},\n\t\t\t\tweights: {\n\t\t\t\t\tarray: [],\n\t\t\t\t\tstride: BONE_LIMIT\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tvar sources = data.sources;\n\t\t\tvar vertexWeights = data.vertexWeights;\n\n\t\t\tvar vcount = vertexWeights.vcount;\n\t\t\tvar v = vertexWeights.v;\n\t\t\tvar jointOffset = vertexWeights.inputs.JOINT.offset;\n\t\t\tvar weightOffset = vertexWeights.inputs.WEIGHT.offset;\n\n\t\t\tvar jointSource = data.sources[ data.joints.inputs.JOINT ];\n\t\t\tvar inverseSource = data.sources[ data.joints.inputs.INV_BIND_MATRIX ];\n\n\t\t\tvar weights = sources[ vertexWeights.inputs.WEIGHT.id ].array;\n\t\t\tvar stride = 0;\n\n\t\t\tvar i, j, l;\n\n\t\t\t// procces skin data for each vertex\n\n\t\t\tfor ( i = 0, l = vcount.length; i < l; i ++ ) {\n\n\t\t\t\tvar jointCount = vcount[ i ]; // this is the amount of joints that affect a single vertex\n\t\t\t\tvar vertexSkinData = [];\n\n\t\t\t\tfor ( j = 0; j < jointCount; j ++ ) {\n\n\t\t\t\t\tvar skinIndex = v[ stride + jointOffset ];\n\t\t\t\t\tvar weightId = v[ stride + weightOffset ];\n\t\t\t\t\tvar skinWeight = weights[ weightId ];\n\n\t\t\t\t\tvertexSkinData.push( { index: skinIndex, weight: skinWeight } );\n\n\t\t\t\t\tstride += 2;\n\n\t\t\t\t}\n\n\t\t\t\t// we sort the joints in descending order based on the weights.\n\t\t\t\t// this ensures, we only procced the most important joints of the vertex\n\n\t\t\t\tvertexSkinData.sort( descending );\n\n\t\t\t\t// now we provide for each vertex a set of four index and weight values.\n\t\t\t\t// the order of the skin data matches the order of vertices\n\n\t\t\t\tfor ( j = 0; j < BONE_LIMIT; j ++ ) {\n\n\t\t\t\t\tvar d = vertexSkinData[ j ];\n\n\t\t\t\t\tif ( d !== undefined ) {\n\n\t\t\t\t\t\tbuild.indices.array.push( d.index );\n\t\t\t\t\t\tbuild.weights.array.push( d.weight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tbuild.indices.array.push( 0 );\n\t\t\t\t\t\tbuild.weights.array.push( 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// setup bind matrix\n\n\t\t\tif ( data.bindShapeMatrix ) {\n\n\t\t\t\tbuild.bindMatrix = new Matrix4().fromArray( data.bindShapeMatrix ).transpose();\n\n\t\t\t} else {\n\n\t\t\t\tbuild.bindMatrix = new Matrix4().identity();\n\n\t\t\t}\n\n\t\t\t// process bones and inverse bind matrix data\n\n\t\t\tfor ( i = 0, l = jointSource.array.length; i < l; i ++ ) {\n\n\t\t\t\tvar name = jointSource.array[ i ];\n\t\t\t\tvar boneInverse = new Matrix4().fromArray( inverseSource.array, i * inverseSource.stride ).transpose();\n\n\t\t\t\tbuild.joints.push( { name: name, boneInverse: boneInverse } );\n\n\t\t\t}\n\n\t\t\treturn build;\n\n\t\t\t// array sort function\n\n\t\t\tfunction descending( a, b ) {\n\n\t\t\t\treturn b.weight - a.weight;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction getController( id ) {\n\n\t\t\treturn getBuild( library.controllers[ id ], buildController );\n\n\t\t}\n\n\t\t// image\n\n\t\tfunction parseImage( xml ) {\n\n\t\t\tvar data = {\n\t\t\t\tinit_from: getElementsByTagName( xml, 'init_from' )[ 0 ].textContent\n\t\t\t};\n\n\t\t\tlibrary.images[ xml.getAttribute( 'id' ) ] = data;\n\n\t\t}\n\n\t\tfunction buildImage( data ) {\n\n\t\t\tif ( data.build !== undefined ) return data.build;\n\n\t\t\treturn data.init_from;\n\n\t\t}\n\n\t\tfunction getImage( id ) {\n\n\t\t\tvar data = library.images[ id ];\n\n\t\t\tif ( data !== undefined ) {\n\n\t\t\t\treturn getBuild( data, buildImage );\n\n\t\t\t}\n\n\t\t\tconsole.warn( 'THREE.ColladaLoader: Couldn\\'t find image with ID:', id );\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// effect\n\n\t\tfunction parseEffect( xml ) {\n\n\t\t\tvar data = {};\n\n\t\t\tfor ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tvar child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'profile_COMMON':\n\t\t\t\t\t\tdata.profile = parseEffectProfileCOMMON( child );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tlibrary.effects[ xml.getAttribute( 'id' ) ] = data;\n\n\t\t}\n\n\t\tfunction parseEffectProfileCOMMON( xml ) {\n\n\t\t\tvar data = {\n\t\t\t\tsurfaces: {},\n\t\t\t\tsamplers: {}\n\t\t\t};\n\n\t\t\tfor ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tvar child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'newparam':\n\t\t\t\t\t\tparseEffectNewparam( child, data );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'technique':\n\t\t\t\t\t\tdata.technique = parseEffectTechnique( child );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'extra':\n\t\t\t\t\t\tdata.extra = parseEffectExtra( child );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction parseEffectNewparam( xml, data ) {\n\n\t\t\tvar sid = xml.getAttribute( 'sid' );\n\n\t\t\tfor ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tvar child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'surface':\n\t\t\t\t\t\tdata.surfaces[ sid ] = parseEffectSurface( child );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'sampler2D':\n\t\t\t\t\t\tdata.samplers[ sid ] = parseEffectSampler( child );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction parseEffectSurface( xml ) {\n\n\t\t\tvar data = {};\n\n\t\t\tfor ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tvar child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'init_from':\n\t\t\t\t\t\tdata.init_from = child.textContent;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction parseEffectSampler( xml ) {\n\n\t\t\tvar data = {};\n\n\t\t\tfor ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tvar child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'source':\n\t\t\t\t\t\tdata.source = child.textContent;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction parseEffectTechnique( xml ) {\n\n\t\t\tvar data = {};\n\n\t\t\tfor ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tvar child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'constant':\n\t\t\t\t\tcase 'lambert':\n\t\t\t\t\tcase 'blinn':\n\t\t\t\t\tcase 'phong':\n\t\t\t\t\t\tdata.type = child.nodeName;\n\t\t\t\t\t\tdata.parameters = parseEffectParameters( child );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction parseEffectParameters( xml ) {\n\n\t\t\tvar data = {};\n\n\t\t\tfor ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tvar child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'emission':\n\t\t\t\t\tcase 'diffuse':\n\t\t\t\t\tcase 'specular':\n\t\t\t\t\tcase 'bump':\n\t\t\t\t\tcase 'ambient':\n\t\t\t\t\tcase 'shininess':\n\t\t\t\t\tcase 'transparency':\n\t\t\t\t\t\tdata[ child.nodeName ] = parseEffectParameter( child );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'transparent':\n\t\t\t\t\t\tdata[ child.nodeName ] = {\n\t\t\t\t\t\t\topaque: child.getAttribute( 'opaque' ),\n\t\t\t\t\t\t\tdata: parseEffectParameter( child )\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction parseEffectParameter( xml ) {\n\n\t\t\tvar data = {};\n\n\t\t\tfor ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tvar child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'color':\n\t\t\t\t\t\tdata[ child.nodeName ] = parseFloats( child.textContent );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'float':\n\t\t\t\t\t\tdata[ child.nodeName ] = parseFloat( child.textContent );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'texture':\n\t\t\t\t\t\tdata[ child.nodeName ] = { id: child.getAttribute( 'texture' ), extra: parseEffectParameterTexture( child ) };\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction parseEffectParameterTexture( xml ) {\n\n\t\t\tvar data = {\n\t\t\t\ttechnique: {}\n\t\t\t};\n\n\t\t\tfor ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tvar child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'extra':\n\t\t\t\t\t\tparseEffectParameterTextureExtra( child, data );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction parseEffectParameterTextureExtra( xml, data ) {\n\n\t\t\tfor ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tvar child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'technique':\n\t\t\t\t\t\tparseEffectParameterTextureExtraTechnique( child, data );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction parseEffectParameterTextureExtraTechnique( xml, data ) {\n\n\t\t\tfor ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tvar child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'repeatU':\n\t\t\t\t\tcase 'repeatV':\n\t\t\t\t\tcase 'offsetU':\n\t\t\t\t\tcase 'offsetV':\n\t\t\t\t\t\tdata.technique[ child.nodeName ] = parseFloat( child.textContent );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'wrapU':\n\t\t\t\t\tcase 'wrapV':\n\n\t\t\t\t\t\t// some files have values for wrapU/wrapV which become NaN via parseInt\n\n\t\t\t\t\t\tif ( child.textContent.toUpperCase() === 'TRUE' ) {\n\n\t\t\t\t\t\t\tdata.technique[ child.nodeName ] = 1;\n\n\t\t\t\t\t\t} else if ( child.textContent.toUpperCase() === 'FALSE' ) {\n\n\t\t\t\t\t\t\tdata.technique[ child.nodeName ] = 0;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tdata.technique[ child.nodeName ] = parseInt( child.textContent );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction parseEffectExtra( xml ) {\n\n\t\t\tvar data = {};\n\n\t\t\tfor ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tvar child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'technique':\n\t\t\t\t\t\tdata.technique = parseEffectExtraTechnique( child );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction parseEffectExtraTechnique( xml ) {\n\n\t\t\tvar data = {};\n\n\t\t\tfor ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tvar child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'double_sided':\n\t\t\t\t\t\tdata[ child.nodeName ] = parseInt( child.textContent );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction buildEffect( data ) {\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction getEffect( id ) {\n\n\t\t\treturn getBuild( library.effects[ id ], buildEffect );\n\n\t\t}\n\n\t\t// material\n\n\t\tfunction parseMaterial( xml ) {\n\n\t\t\tvar data = {\n\t\t\t\tname: xml.getAttribute( 'name' )\n\t\t\t};\n\n\t\t\tfor ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tvar child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'instance_effect':\n\t\t\t\t\t\tdata.url = parseId( child.getAttribute( 'url' ) );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tlibrary.materials[ xml.getAttribute( 'id' ) ] = data;\n\n\t\t}\n\n\t\tfunction getTextureLoader( image ) {\n\n\t\t\tvar loader;\n\n\t\t\tvar extension = image.slice( ( image.lastIndexOf( '.' ) - 1 >>> 0 ) + 2 ); // http://www.jstips.co/en/javascript/get-file-extension/\n\t\t\textension = extension.toLowerCase();\n\n\t\t\tswitch ( extension ) {\n\n\t\t\t\tcase 'tga':\n\t\t\t\t\tloader = tgaLoader;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tloader = textureLoader;\n\n\t\t\t}\n\n\t\t\treturn loader;\n\n\t\t}\n\n\t\tfunction buildMaterial( data ) {\n\n\t\t\tvar effect = getEffect( data.url );\n\t\t\tvar technique = effect.profile.technique;\n\t\t\tvar extra = effect.profile.extra;\n\n\t\t\tvar material;\n\n\t\t\tswitch ( technique.type ) {\n\n\t\t\t\tcase 'phong':\n\t\t\t\tcase 'blinn':\n\t\t\t\t\tmaterial = new MeshPhongMaterial();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'lambert':\n\t\t\t\t\tmaterial = new MeshLambertMaterial();\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tmaterial = new MeshBasicMaterial();\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tmaterial.name = data.name || '';\n\n\t\t\tfunction getTexture( textureObject ) {\n\n\t\t\t\tvar sampler = effect.profile.samplers[ textureObject.id ];\n\t\t\t\tvar image = null;\n\n\t\t\t\t// get image\n\n\t\t\t\tif ( sampler !== undefined ) {\n\n\t\t\t\t\tvar surface = effect.profile.surfaces[ sampler.source ];\n\t\t\t\t\timage = getImage( surface.init_from );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Undefined sampler. Access image directly (see #12530).' );\n\t\t\t\t\timage = getImage( textureObject.id );\n\n\t\t\t\t}\n\n\t\t\t\t// create texture if image is avaiable\n\n\t\t\t\tif ( image !== null ) {\n\n\t\t\t\t\tvar loader = getTextureLoader( image );\n\n\t\t\t\t\tif ( loader !== undefined ) {\n\n\t\t\t\t\t\tvar texture = loader.load( image );\n\n\t\t\t\t\t\tvar extra = textureObject.extra;\n\n\t\t\t\t\t\tif ( extra !== undefined && extra.technique !== undefined && isEmpty( extra.technique ) === false ) {\n\n\t\t\t\t\t\t\tvar technique = extra.technique;\n\n\t\t\t\t\t\t\ttexture.wrapS = technique.wrapU ? RepeatWrapping : ClampToEdgeWrapping;\n\t\t\t\t\t\t\ttexture.wrapT = technique.wrapV ? RepeatWrapping : ClampToEdgeWrapping;\n\n\t\t\t\t\t\t\ttexture.offset.set( technique.offsetU || 0, technique.offsetV || 0 );\n\t\t\t\t\t\t\ttexture.repeat.set( technique.repeatU || 1, technique.repeatV || 1 );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\ttexture.wrapS = RepeatWrapping;\n\t\t\t\t\t\t\ttexture.wrapT = RepeatWrapping;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn texture;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Loader for texture %s not found.', image );\n\n\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Couldn\\'t create texture with ID:', textureObject.id );\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar parameters = technique.parameters;\n\n\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\tvar parameter = parameters[ key ];\n\n\t\t\t\tswitch ( key ) {\n\n\t\t\t\t\tcase 'diffuse':\n\t\t\t\t\t\tif ( parameter.color ) material.color.fromArray( parameter.color );\n\t\t\t\t\t\tif ( parameter.texture ) material.map = getTexture( parameter.texture );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'specular':\n\t\t\t\t\t\tif ( parameter.color && material.specular ) material.specular.fromArray( parameter.color );\n\t\t\t\t\t\tif ( parameter.texture ) material.specularMap = getTexture( parameter.texture );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'bump':\n\t\t\t\t\t\tif ( parameter.texture ) material.normalMap = getTexture( parameter.texture );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'ambient':\n\t\t\t\t\t\tif ( parameter.texture ) material.lightMap = getTexture( parameter.texture );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'shininess':\n\t\t\t\t\t\tif ( parameter.float && material.shininess ) material.shininess = parameter.float;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'emission':\n\t\t\t\t\t\tif ( parameter.color && material.emissive ) material.emissive.fromArray( parameter.color );\n\t\t\t\t\t\tif ( parameter.texture ) material.emissiveMap = getTexture( parameter.texture );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tvar transparent = parameters[ 'transparent' ];\n\t\t\tvar transparency = parameters[ 'transparency' ];\n\n\t\t\t// <transparency> does not exist but <transparent>\n\n\t\t\tif ( transparency === undefined && transparent ) {\n\n\t\t\t\ttransparency = {\n\t\t\t\t\tfloat: 1\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\t// <transparent> does not exist but <transparency>\n\n\t\t\tif ( transparent === undefined && transparency ) {\n\n\t\t\t\ttransparent = {\n\t\t\t\t\topaque: 'A_ONE',\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tcolor: [ 1, 1, 1, 1 ]\n\t\t\t\t\t} };\n\n\t\t\t}\n\n\t\t\tif ( transparent && transparency ) {\n\n\t\t\t\t// handle case if a texture exists but no color\n\n\t\t\t\tif ( transparent.data.texture ) {\n\n\t\t\t\t\t// we do not set an alpha map (see #13792)\n\n\t\t\t\t\tmaterial.transparent = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvar color = transparent.data.color;\n\n\t\t\t\t\tswitch ( transparent.opaque ) {\n\n\t\t\t\t\t\tcase 'A_ONE':\n\t\t\t\t\t\t\tmaterial.opacity = color[ 3 ] * transparency.float;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'RGB_ZERO':\n\t\t\t\t\t\t\tmaterial.opacity = 1 - ( color[ 0 ] * transparency.float );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'A_ZERO':\n\t\t\t\t\t\t\tmaterial.opacity = 1 - ( color[ 3 ] * transparency.float );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'RGB_ONE':\n\t\t\t\t\t\t\tmaterial.opacity = color[ 0 ] * transparency.float;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Invalid opaque type \"%s\" of transparent tag.', transparent.opaque );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( material.opacity < 1 ) material.transparent = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( extra !== undefined && extra.technique !== undefined && extra.technique.double_sided === 1 ) {\n\n\t\t\t\tmaterial.side = DoubleSide;\n\n\t\t\t}\n\n\t\t\treturn material;\n\n\t\t}\n\n\t\tfunction getMaterial( id ) {\n\n\t\t\treturn getBuild( library.materials[ id ], buildMaterial );\n\n\t\t}\n\n\t\t// camera\n\n\t\tfunction parseCamera( xml ) {\n\n\t\t\tvar data = {\n\t\t\t\tname: xml.getAttribute( 'name' )\n\t\t\t};\n\n\t\t\tfor ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tvar child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'optics':\n\t\t\t\t\t\tdata.optics = parseCameraOptics( child );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tlibrary.cameras[ xml.getAttribute( 'id' ) ] = data;\n\n\t\t}\n\n\t\tfunction parseCameraOptics( xml ) {\n\n\t\t\tfor ( var i = 0; i < xml.childNodes.length; i ++ ) {\n\n\t\t\t\tvar child = xml.childNodes[ i ];\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'technique_common':\n\t\t\t\t\t\treturn parseCameraTechnique( child );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn {};\n\n\t\t}\n\n\t\tfunction parseCameraTechnique( xml ) {\n\n\t\t\tvar data = {};\n\n\t\t\tfor ( var i = 0; i < xml.childNodes.length; i ++ ) {\n\n\t\t\t\tvar child = xml.childNodes[ i ];\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'perspective':\n\t\t\t\t\tcase 'orthographic':\n\n\t\t\t\t\t\tdata.technique = child.nodeName;\n\t\t\t\t\t\tdata.parameters = parseCameraParameters( child );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction parseCameraParameters( xml ) {\n\n\t\t\tvar data = {};\n\n\t\t\tfor ( var i = 0; i < xml.childNodes.length; i ++ ) {\n\n\t\t\t\tvar child = xml.childNodes[ i ];\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'xfov':\n\t\t\t\t\tcase 'yfov':\n\t\t\t\t\tcase 'xmag':\n\t\t\t\t\tcase 'ymag':\n\t\t\t\t\tcase 'znear':\n\t\t\t\t\tcase 'zfar':\n\t\t\t\t\tcase 'aspect_ratio':\n\t\t\t\t\t\tdata[ child.nodeName ] = parseFloat( child.textContent );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction buildCamera( data ) {\n\n\t\t\tvar camera;\n\n\t\t\tswitch ( data.optics.technique ) {\n\n\t\t\t\tcase 'perspective':\n\t\t\t\t\tcamera = new PerspectiveCamera(\n\t\t\t\t\t\tdata.optics.parameters.yfov,\n\t\t\t\t\t\tdata.optics.parameters.aspect_ratio,\n\t\t\t\t\t\tdata.optics.parameters.znear,\n\t\t\t\t\t\tdata.optics.parameters.zfar\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'orthographic':\n\t\t\t\t\tvar ymag = data.optics.parameters.ymag;\n\t\t\t\t\tvar xmag = data.optics.parameters.xmag;\n\t\t\t\t\tvar aspectRatio = data.optics.parameters.aspect_ratio;\n\n\t\t\t\t\txmag = ( xmag === undefined ) ? ( ymag * aspectRatio ) : xmag;\n\t\t\t\t\tymag = ( ymag === undefined ) ? ( xmag / aspectRatio ) : ymag;\n\n\t\t\t\t\txmag *= 0.5;\n\t\t\t\t\tymag *= 0.5;\n\n\t\t\t\t\tcamera = new OrthographicCamera(\n\t\t\t\t\t\t- xmag, xmag, ymag, - ymag, // left, right, top, bottom\n\t\t\t\t\t\tdata.optics.parameters.znear,\n\t\t\t\t\t\tdata.optics.parameters.zfar\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tcamera = new PerspectiveCamera();\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tcamera.name = data.name || '';\n\n\t\t\treturn camera;\n\n\t\t}\n\n\t\tfunction getCamera( id ) {\n\n\t\t\tvar data = library.cameras[ id ];\n\n\t\t\tif ( data !== undefined ) {\n\n\t\t\t\treturn getBuild( data, buildCamera );\n\n\t\t\t}\n\n\t\t\tconsole.warn( 'THREE.ColladaLoader: Couldn\\'t find camera with ID:', id );\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// light\n\n\t\tfunction parseLight( xml ) {\n\n\t\t\tvar data = {};\n\n\t\t\tfor ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tvar child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'technique_common':\n\t\t\t\t\t\tdata = parseLightTechnique( child );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tlibrary.lights[ xml.getAttribute( 'id' ) ] = data;\n\n\t\t}\n\n\t\tfunction parseLightTechnique( xml ) {\n\n\t\t\tvar data = {};\n\n\t\t\tfor ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tvar child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'directional':\n\t\t\t\t\tcase 'point':\n\t\t\t\t\tcase 'spot':\n\t\t\t\t\tcase 'ambient':\n\n\t\t\t\t\t\tdata.technique = child.nodeName;\n\t\t\t\t\t\tdata.parameters = parseLightParameters( child );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction parseLightParameters( xml ) {\n\n\t\t\tvar data = {};\n\n\t\t\tfor ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tvar child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'color':\n\t\t\t\t\t\tvar array = parseFloats( child.textContent );\n\t\t\t\t\t\tdata.color = new Color().fromArray( array );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'falloff_angle':\n\t\t\t\t\t\tdata.falloffAngle = parseFloat( child.textContent );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'quadratic_attenuation':\n\t\t\t\t\t\tvar f = parseFloat( child.textContent );\n\t\t\t\t\t\tdata.distance = f ? Math.sqrt( 1 / f ) : 0;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction buildLight( data ) {\n\n\t\t\tvar light;\n\n\t\t\tswitch ( data.technique ) {\n\n\t\t\t\tcase 'directional':\n\t\t\t\t\tlight = new DirectionalLight();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'point':\n\t\t\t\t\tlight = new PointLight();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'spot':\n\t\t\t\t\tlight = new SpotLight();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ambient':\n\t\t\t\t\tlight = new AmbientLight();\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( data.parameters.color ) light.color.copy( data.parameters.color );\n\t\t\tif ( data.parameters.distance ) light.distance = data.parameters.distance;\n\n\t\t\treturn light;\n\n\t\t}\n\n\t\tfunction getLight( id ) {\n\n\t\t\tvar data = library.lights[ id ];\n\n\t\t\tif ( data !== undefined ) {\n\n\t\t\t\treturn getBuild( data, buildLight );\n\n\t\t\t}\n\n\t\t\tconsole.warn( 'THREE.ColladaLoader: Couldn\\'t find light with ID:', id );\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// geometry\n\n\t\tfunction parseGeometry( xml ) {\n\n\t\t\tvar data = {\n\t\t\t\tname: xml.getAttribute( 'name' ),\n\t\t\t\tsources: {},\n\t\t\t\tvertices: {},\n\t\t\t\tprimitives: []\n\t\t\t};\n\n\t\t\tvar mesh = getElementsByTagName( xml, 'mesh' )[ 0 ];\n\n\t\t\t// the following tags inside geometry are not supported yet (see https://github.com/mrdoob/three.js/pull/12606): convex_mesh, spline, brep\n\t\t\tif ( mesh === undefined ) return;\n\n\t\t\tfor ( var i = 0; i < mesh.childNodes.length; i ++ ) {\n\n\t\t\t\tvar child = mesh.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tvar id = child.getAttribute( 'id' );\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'source':\n\t\t\t\t\t\tdata.sources[ id ] = parseSource( child );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'vertices':\n\t\t\t\t\t\t// data.sources[ id ] = data.sources[ parseId( getElementsByTagName( child, 'input' )[ 0 ].getAttribute( 'source' ) ) ];\n\t\t\t\t\t\tdata.vertices = parseGeometryVertices( child );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'polygons':\n\t\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Unsupported primitive type: ', child.nodeName );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'lines':\n\t\t\t\t\tcase 'linestrips':\n\t\t\t\t\tcase 'polylist':\n\t\t\t\t\tcase 'triangles':\n\t\t\t\t\t\tdata.primitives.push( parseGeometryPrimitive( child ) );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.log( child );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tlibrary.geometries[ xml.getAttribute( 'id' ) ] = data;\n\n\t\t}\n\n\t\tfunction parseSource( xml ) {\n\n\t\t\tvar data = {\n\t\t\t\tarray: [],\n\t\t\t\tstride: 3\n\t\t\t};\n\n\t\t\tfor ( var i = 0; i < xml.childNodes.length; i ++ ) {\n\n\t\t\t\tvar child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'float_array':\n\t\t\t\t\t\tdata.array = parseFloats( child.textContent );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Name_array':\n\t\t\t\t\t\tdata.array = parseStrings( child.textContent );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'technique_common':\n\t\t\t\t\t\tvar accessor = getElementsByTagName( child, 'accessor' )[ 0 ];\n\n\t\t\t\t\t\tif ( accessor !== undefined ) {\n\n\t\t\t\t\t\t\tdata.stride = parseInt( accessor.getAttribute( 'stride' ) );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction parseGeometryVertices( xml ) {\n\n\t\t\tvar data = {};\n\n\t\t\tfor ( var i = 0; i < xml.childNodes.length; i ++ ) {\n\n\t\t\t\tvar child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tdata[ child.getAttribute( 'semantic' ) ] = parseId( child.getAttribute( 'source' ) );\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction parseGeometryPrimitive( xml ) {\n\n\t\t\tvar primitive = {\n\t\t\t\ttype: xml.nodeName,\n\t\t\t\tmaterial: xml.getAttribute( 'material' ),\n\t\t\t\tcount: parseInt( xml.getAttribute( 'count' ) ),\n\t\t\t\tinputs: {},\n\t\t\t\tstride: 0,\n\t\t\t\thasUV: false\n\t\t\t};\n\n\t\t\tfor ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tvar child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'input':\n\t\t\t\t\t\tvar id = parseId( child.getAttribute( 'source' ) );\n\t\t\t\t\t\tvar semantic = child.getAttribute( 'semantic' );\n\t\t\t\t\t\tvar offset = parseInt( child.getAttribute( 'offset' ) );\n\t\t\t\t\t\tvar set = parseInt( child.getAttribute( 'set' ) );\n\t\t\t\t\t\tvar inputname = ( set > 0 ? semantic + set : semantic );\n\t\t\t\t\t\tprimitive.inputs[ inputname ] = { id: id, offset: offset };\n\t\t\t\t\t\tprimitive.stride = Math.max( primitive.stride, offset + 1 );\n\t\t\t\t\t\tif ( semantic === 'TEXCOORD' ) primitive.hasUV = true;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'vcount':\n\t\t\t\t\t\tprimitive.vcount = parseInts( child.textContent );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'p':\n\t\t\t\t\t\tprimitive.p = parseInts( child.textContent );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn primitive;\n\n\t\t}\n\n\t\tfunction groupPrimitives( primitives ) {\n\n\t\t\tvar build = {};\n\n\t\t\tfor ( var i = 0; i < primitives.length; i ++ ) {\n\n\t\t\t\tvar primitive = primitives[ i ];\n\n\t\t\t\tif ( build[ primitive.type ] === undefined ) build[ primitive.type ] = [];\n\n\t\t\t\tbuild[ primitive.type ].push( primitive );\n\n\t\t\t}\n\n\t\t\treturn build;\n\n\t\t}\n\n\t\tfunction checkUVCoordinates( primitives ) {\n\n\t\t\tvar count = 0;\n\n\t\t\tfor ( var i = 0, l = primitives.length; i < l; i ++ ) {\n\n\t\t\t\tvar primitive = primitives[ i ];\n\n\t\t\t\tif ( primitive.hasUV === true ) {\n\n\t\t\t\t\tcount ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( count > 0 && count < primitives.length ) {\n\n\t\t\t\tprimitives.uvsNeedsFix = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction buildGeometry( data ) {\n\n\t\t\tvar build = {};\n\n\t\t\tvar sources = data.sources;\n\t\t\tvar vertices = data.vertices;\n\t\t\tvar primitives = data.primitives;\n\n\t\t\tif ( primitives.length === 0 ) return {};\n\n\t\t\t// our goal is to create one buffer geometry for a single type of primitives\n\t\t\t// first, we group all primitives by their type\n\n\t\t\tvar groupedPrimitives = groupPrimitives( primitives );\n\n\t\t\tfor ( var type in groupedPrimitives ) {\n\n\t\t\t\tvar primitiveType = groupedPrimitives[ type ];\n\n\t\t\t\t// second, ensure consistent uv coordinates for each type of primitives (polylist,triangles or lines)\n\n\t\t\t\tcheckUVCoordinates( primitiveType );\n\n\t\t\t\t// third, create a buffer geometry for each type of primitives\n\n\t\t\t\tbuild[ type ] = buildGeometryType( primitiveType, sources, vertices );\n\n\t\t\t}\n\n\t\t\treturn build;\n\n\t\t}\n\n\t\tfunction buildGeometryType( primitives, sources, vertices ) {\n\n\t\t\tvar build = {};\n\n\t\t\tvar position = { array: [], stride: 0 };\n\t\t\tvar normal = { array: [], stride: 0 };\n\t\t\tvar uv = { array: [], stride: 0 };\n\t\t\tvar uv2 = { array: [], stride: 0 };\n\t\t\tvar color = { array: [], stride: 0 };\n\n\t\t\tvar skinIndex = { array: [], stride: 4 };\n\t\t\tvar skinWeight = { array: [], stride: 4 };\n\n\t\t\tvar geometry = new BufferGeometry();\n\n\t\t\tvar materialKeys = [];\n\n\t\t\tvar start = 0;\n\n\t\t\tfor ( var p = 0; p < primitives.length; p ++ ) {\n\n\t\t\t\tvar primitive = primitives[ p ];\n\t\t\t\tvar inputs = primitive.inputs;\n\n\t\t\t\t// groups\n\n\t\t\t\tvar count = 0;\n\n\t\t\t\tswitch ( primitive.type ) {\n\n\t\t\t\t\tcase 'lines':\n\t\t\t\t\tcase 'linestrips':\n\t\t\t\t\t\tcount = primitive.count * 2;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'triangles':\n\t\t\t\t\t\tcount = primitive.count * 3;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'polylist':\n\n\t\t\t\t\t\tfor ( var g = 0; g < primitive.count; g ++ ) {\n\n\t\t\t\t\t\t\tvar vc = primitive.vcount[ g ];\n\n\t\t\t\t\t\t\tswitch ( vc ) {\n\n\t\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\t\tcount += 3; // single triangle\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\t\tcount += 6; // quad, subdivided into two triangles\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\tcount += ( vc - 2 ) * 3; // polylist with more than four vertices\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Unknow primitive type:', primitive.type );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.addGroup( start, count, p );\n\t\t\t\tstart += count;\n\n\t\t\t\t// material\n\n\t\t\t\tif ( primitive.material ) {\n\n\t\t\t\t\tmaterialKeys.push( primitive.material );\n\n\t\t\t\t}\n\n\t\t\t\t// geometry data\n\n\t\t\t\tfor ( var name in inputs ) {\n\n\t\t\t\t\tvar input = inputs[ name ];\n\n\t\t\t\t\tswitch ( name )\t{\n\n\t\t\t\t\t\tcase 'VERTEX':\n\t\t\t\t\t\t\tfor ( var key in vertices ) {\n\n\t\t\t\t\t\t\t\tvar id = vertices[ key ];\n\n\t\t\t\t\t\t\t\tswitch ( key ) {\n\n\t\t\t\t\t\t\t\t\tcase 'POSITION':\n\t\t\t\t\t\t\t\t\t\tvar prevLength = position.array.length;\n\t\t\t\t\t\t\t\t\t\tbuildGeometryData( primitive, sources[ id ], input.offset, position.array );\n\t\t\t\t\t\t\t\t\t\tposition.stride = sources[ id ].stride;\n\n\t\t\t\t\t\t\t\t\t\tif ( sources.skinWeights && sources.skinIndices ) {\n\n\t\t\t\t\t\t\t\t\t\t\tbuildGeometryData( primitive, sources.skinIndices, input.offset, skinIndex.array );\n\t\t\t\t\t\t\t\t\t\t\tbuildGeometryData( primitive, sources.skinWeights, input.offset, skinWeight.array );\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t// see #3803\n\n\t\t\t\t\t\t\t\t\t\tif ( primitive.hasUV === false && primitives.uvsNeedsFix === true ) {\n\n\t\t\t\t\t\t\t\t\t\t\tvar count = ( position.array.length - prevLength ) / position.stride;\n\n\t\t\t\t\t\t\t\t\t\t\tfor ( var i = 0; i < count; i ++ ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\t// fill missing uv coordinates\n\n\t\t\t\t\t\t\t\t\t\t\t\tuv.array.push( 0, 0 );\n\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase 'NORMAL':\n\t\t\t\t\t\t\t\t\t\tbuildGeometryData( primitive, sources[ id ], input.offset, normal.array );\n\t\t\t\t\t\t\t\t\t\tnormal.stride = sources[ id ].stride;\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase 'COLOR':\n\t\t\t\t\t\t\t\t\t\tbuildGeometryData( primitive, sources[ id ], input.offset, color.array );\n\t\t\t\t\t\t\t\t\t\tcolor.stride = sources[ id ].stride;\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase 'TEXCOORD':\n\t\t\t\t\t\t\t\t\t\tbuildGeometryData( primitive, sources[ id ], input.offset, uv.array );\n\t\t\t\t\t\t\t\t\t\tuv.stride = sources[ id ].stride;\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase 'TEXCOORD1':\n\t\t\t\t\t\t\t\t\t\tbuildGeometryData( primitive, sources[ id ], input.offset, uv2.array );\n\t\t\t\t\t\t\t\t\t\tuv.stride = sources[ id ].stride;\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Semantic \"%s\" not handled in geometry build process.', key );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'NORMAL':\n\t\t\t\t\t\t\tbuildGeometryData( primitive, sources[ input.id ], input.offset, normal.array );\n\t\t\t\t\t\t\tnormal.stride = sources[ input.id ].stride;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'COLOR':\n\t\t\t\t\t\t\tbuildGeometryData( primitive, sources[ input.id ], input.offset, color.array );\n\t\t\t\t\t\t\tcolor.stride = sources[ input.id ].stride;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'TEXCOORD':\n\t\t\t\t\t\t\tbuildGeometryData( primitive, sources[ input.id ], input.offset, uv.array );\n\t\t\t\t\t\t\tuv.stride = sources[ input.id ].stride;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'TEXCOORD1':\n\t\t\t\t\t\t\tbuildGeometryData( primitive, sources[ input.id ], input.offset, uv2.array );\n\t\t\t\t\t\t\tuv2.stride = sources[ input.id ].stride;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// build geometry\n\n\t\t\tif ( position.array.length > 0 ) geometry.addAttribute( 'position', new Float32BufferAttribute( position.array, position.stride ) );\n\t\t\tif ( normal.array.length > 0 ) geometry.addAttribute( 'normal', new Float32BufferAttribute( normal.array, normal.stride ) );\n\t\t\tif ( color.array.length > 0 ) geometry.addAttribute( 'color', new Float32BufferAttribute( color.array, color.stride ) );\n\t\t\tif ( uv.array.length > 0 ) geometry.addAttribute( 'uv', new Float32BufferAttribute( uv.array, uv.stride ) );\n\t\t\tif ( uv2.array.length > 0 ) geometry.addAttribute( 'uv2', new Float32BufferAttribute( uv2.array, uv2.stride ) );\n\n\t\t\tif ( skinIndex.array.length > 0 ) geometry.addAttribute( 'skinIndex', new Float32BufferAttribute( skinIndex.array, skinIndex.stride ) );\n\t\t\tif ( skinWeight.array.length > 0 ) geometry.addAttribute( 'skinWeight', new Float32BufferAttribute( skinWeight.array, skinWeight.stride ) );\n\n\t\t\tbuild.data = geometry;\n\t\t\tbuild.type = primitives[ 0 ].type;\n\t\t\tbuild.materialKeys = materialKeys;\n\n\t\t\treturn build;\n\n\t\t}\n\n\t\tfunction buildGeometryData( primitive, source, offset, array ) {\n\n\t\t\tvar indices = primitive.p;\n\t\t\tvar stride = primitive.stride;\n\t\t\tvar vcount = primitive.vcount;\n\n\t\t\tfunction pushVector( i ) {\n\n\t\t\t\tvar index = indices[ i + offset ] * sourceStride;\n\t\t\t\tvar length = index + sourceStride;\n\n\t\t\t\tfor ( ; index < length; index ++ ) {\n\n\t\t\t\t\tarray.push( sourceArray[ index ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar sourceArray = source.array;\n\t\t\tvar sourceStride = source.stride;\n\n\t\t\tif ( primitive.vcount !== undefined ) {\n\n\t\t\t\tvar index = 0;\n\n\t\t\t\tfor ( var i = 0, l = vcount.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar count = vcount[ i ];\n\n\t\t\t\t\tif ( count === 4 ) {\n\n\t\t\t\t\t\tvar a = index + stride * 0;\n\t\t\t\t\t\tvar b = index + stride * 1;\n\t\t\t\t\t\tvar c = index + stride * 2;\n\t\t\t\t\t\tvar d = index + stride * 3;\n\n\t\t\t\t\t\tpushVector( a ); pushVector( b ); pushVector( d );\n\t\t\t\t\t\tpushVector( b ); pushVector( c ); pushVector( d );\n\n\t\t\t\t\t} else if ( count === 3 ) {\n\n\t\t\t\t\t\tvar a = index + stride * 0;\n\t\t\t\t\t\tvar b = index + stride * 1;\n\t\t\t\t\t\tvar c = index + stride * 2;\n\n\t\t\t\t\t\tpushVector( a ); pushVector( b ); pushVector( c );\n\n\t\t\t\t\t} else if ( count > 4 ) {\n\n\t\t\t\t\t\tfor ( var k = 1, kl = ( count - 2 ); k <= kl; k ++ ) {\n\n\t\t\t\t\t\t\tvar a = index + stride * 0;\n\t\t\t\t\t\t\tvar b = index + stride * k;\n\t\t\t\t\t\t\tvar c = index + stride * ( k + 1 );\n\n\t\t\t\t\t\t\tpushVector( a ); pushVector( b ); pushVector( c );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tindex += stride * count;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tfor ( var i = 0, l = indices.length; i < l; i += stride ) {\n\n\t\t\t\t\tpushVector( i );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction getGeometry( id ) {\n\n\t\t\treturn getBuild( library.geometries[ id ], buildGeometry );\n\n\t\t}\n\n\t\t// kinematics\n\n\t\tfunction parseKinematicsModel( xml ) {\n\n\t\t\tvar data = {\n\t\t\t\tname: xml.getAttribute( 'name' ) || '',\n\t\t\t\tjoints: {},\n\t\t\t\tlinks: []\n\t\t\t};\n\n\t\t\tfor ( var i = 0; i < xml.childNodes.length; i ++ ) {\n\n\t\t\t\tvar child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'technique_common':\n\t\t\t\t\t\tparseKinematicsTechniqueCommon( child, data );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tlibrary.kinematicsModels[ xml.getAttribute( 'id' ) ] = data;\n\n\t\t}\n\n\t\tfunction buildKinematicsModel( data ) {\n\n\t\t\tif ( data.build !== undefined ) return data.build;\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction getKinematicsModel( id ) {\n\n\t\t\treturn getBuild( library.kinematicsModels[ id ], buildKinematicsModel );\n\n\t\t}\n\n\t\tfunction parseKinematicsTechniqueCommon( xml, data ) {\n\n\t\t\tfor ( var i = 0; i < xml.childNodes.length; i ++ ) {\n\n\t\t\t\tvar child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'joint':\n\t\t\t\t\t\tdata.joints[ child.getAttribute( 'sid' ) ] = parseKinematicsJoint( child );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'link':\n\t\t\t\t\t\tdata.links.push( parseKinematicsLink( child ) );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction parseKinematicsJoint( xml ) {\n\n\t\t\tvar data;\n\n\t\t\tfor ( var i = 0; i < xml.childNodes.length; i ++ ) {\n\n\t\t\t\tvar child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'prismatic':\n\t\t\t\t\tcase 'revolute':\n\t\t\t\t\t\tdata = parseKinematicsJointParameter( child );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction parseKinematicsJointParameter( xml, data ) {\n\n\t\t\tvar data = {\n\t\t\t\tsid: xml.getAttribute( 'sid' ),\n\t\t\t\tname: xml.getAttribute( 'name' ) || '',\n\t\t\t\taxis: new Vector3(),\n\t\t\t\tlimits: {\n\t\t\t\t\tmin: 0,\n\t\t\t\t\tmax: 0\n\t\t\t\t},\n\t\t\t\ttype: xml.nodeName,\n\t\t\t\tstatic: false,\n\t\t\t\tzeroPosition: 0,\n\t\t\t\tmiddlePosition: 0\n\t\t\t};\n\n\t\t\tfor ( var i = 0; i < xml.childNodes.length; i ++ ) {\n\n\t\t\t\tvar child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'axis':\n\t\t\t\t\t\tvar array = parseFloats( child.textContent );\n\t\t\t\t\t\tdata.axis.fromArray( array );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'limits':\n\t\t\t\t\t\tvar max = child.getElementsByTagName( 'max' )[ 0 ];\n\t\t\t\t\t\tvar min = child.getElementsByTagName( 'min' )[ 0 ];\n\n\t\t\t\t\t\tdata.limits.max = parseFloat( max.textContent );\n\t\t\t\t\t\tdata.limits.min = parseFloat( min.textContent );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// if min is equal to or greater than max, consider the joint static\n\n\t\t\tif ( data.limits.min >= data.limits.max ) {\n\n\t\t\t\tdata.static = true;\n\n\t\t\t}\n\n\t\t\t// calculate middle position\n\n\t\t\tdata.middlePosition = ( data.limits.min + data.limits.max ) / 2.0;\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction parseKinematicsLink( xml ) {\n\n\t\t\tvar data = {\n\t\t\t\tsid: xml.getAttribute( 'sid' ),\n\t\t\t\tname: xml.getAttribute( 'name' ) || '',\n\t\t\t\tattachments: [],\n\t\t\t\ttransforms: []\n\t\t\t};\n\n\t\t\tfor ( var i = 0; i < xml.childNodes.length; i ++ ) {\n\n\t\t\t\tvar child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'attachment_full':\n\t\t\t\t\t\tdata.attachments.push( parseKinematicsAttachment( child ) );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'matrix':\n\t\t\t\t\tcase 'translate':\n\t\t\t\t\tcase 'rotate':\n\t\t\t\t\t\tdata.transforms.push( parseKinematicsTransform( child ) );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction parseKinematicsAttachment( xml ) {\n\n\t\t\tvar data = {\n\t\t\t\tjoint: xml.getAttribute( 'joint' ).split( '/' ).pop(),\n\t\t\t\ttransforms: [],\n\t\t\t\tlinks: []\n\t\t\t};\n\n\t\t\tfor ( var i = 0; i < xml.childNodes.length; i ++ ) {\n\n\t\t\t\tvar child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'link':\n\t\t\t\t\t\tdata.links.push( parseKinematicsLink( child ) );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'matrix':\n\t\t\t\t\tcase 'translate':\n\t\t\t\t\tcase 'rotate':\n\t\t\t\t\t\tdata.transforms.push( parseKinematicsTransform( child ) );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction parseKinematicsTransform( xml ) {\n\n\t\t\tvar data = {\n\t\t\t\ttype: xml.nodeName\n\t\t\t};\n\n\t\t\tvar array = parseFloats( xml.textContent );\n\n\t\t\tswitch ( data.type ) {\n\n\t\t\t\tcase 'matrix':\n\t\t\t\t\tdata.obj = new Matrix4();\n\t\t\t\t\tdata.obj.fromArray( array ).transpose();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'translate':\n\t\t\t\t\tdata.obj = new Vector3();\n\t\t\t\t\tdata.obj.fromArray( array );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'rotate':\n\t\t\t\t\tdata.obj = new Vector3();\n\t\t\t\t\tdata.obj.fromArray( array );\n\t\t\t\t\tdata.angle = _Math.degToRad( array[ 3 ] );\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\t// physics\n\n\t\tfunction parsePhysicsModel( xml ) {\n\n\t\t\tvar data = {\n\t\t\t\tname: xml.getAttribute( 'name' ) || '',\n\t\t\t\trigidBodies: {}\n\t\t\t};\n\n\t\t\tfor ( var i = 0; i < xml.childNodes.length; i ++ ) {\n\n\t\t\t\tvar child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'rigid_body':\n\t\t\t\t\t\tdata.rigidBodies[ child.getAttribute( 'name' ) ] = {};\n\t\t\t\t\t\tparsePhysicsRigidBody( child, data.rigidBodies[ child.getAttribute( 'name' ) ] );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tlibrary.physicsModels[ xml.getAttribute( 'id' ) ] = data;\n\n\t\t}\n\n\t\tfunction parsePhysicsRigidBody( xml, data ) {\n\n\t\t\tfor ( var i = 0; i < xml.childNodes.length; i ++ ) {\n\n\t\t\t\tvar child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'technique_common':\n\t\t\t\t\t\tparsePhysicsTechniqueCommon( child, data );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction parsePhysicsTechniqueCommon( xml, data ) {\n\n\t\t\tfor ( var i = 0; i < xml.childNodes.length; i ++ ) {\n\n\t\t\t\tvar child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'inertia':\n\t\t\t\t\t\tdata.inertia = parseFloats( child.textContent );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'mass':\n\t\t\t\t\t\tdata.mass = parseFloats( child.textContent )[ 0 ];\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// scene\n\n\t\tfunction parseKinematicsScene( xml ) {\n\n\t\t\tvar data = {\n\t\t\t\tbindJointAxis: []\n\t\t\t};\n\n\t\t\tfor ( var i = 0; i < xml.childNodes.length; i ++ ) {\n\n\t\t\t\tvar child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'bind_joint_axis':\n\t\t\t\t\t\tdata.bindJointAxis.push( parseKinematicsBindJointAxis( child ) );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tlibrary.kinematicsScenes[ parseId( xml.getAttribute( 'url' ) ) ] = data;\n\n\t\t}\n\n\t\tfunction parseKinematicsBindJointAxis( xml ) {\n\n\t\t\tvar data = {\n\t\t\t\ttarget: xml.getAttribute( 'target' ).split( '/' ).pop()\n\t\t\t};\n\n\t\t\tfor ( var i = 0; i < xml.childNodes.length; i ++ ) {\n\n\t\t\t\tvar child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'axis':\n\t\t\t\t\t\tvar param = child.getElementsByTagName( 'param' )[ 0 ];\n\t\t\t\t\t\tdata.axis = param.textContent;\n\t\t\t\t\t\tvar tmpJointIndex = data.axis.split( 'inst_' ).pop().split( 'axis' )[ 0 ];\n\t\t\t\t\t\tdata.jointIndex = tmpJointIndex.substr( 0, tmpJointIndex.length - 1 );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction buildKinematicsScene( data ) {\n\n\t\t\tif ( data.build !== undefined ) return data.build;\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction getKinematicsScene( id ) {\n\n\t\t\treturn getBuild( library.kinematicsScenes[ id ], buildKinematicsScene );\n\n\t\t}\n\n\t\tfunction setupKinematics() {\n\n\t\t\tvar kinematicsModelId = Object.keys( library.kinematicsModels )[ 0 ];\n\t\t\tvar kinematicsSceneId = Object.keys( library.kinematicsScenes )[ 0 ];\n\t\t\tvar visualSceneId = Object.keys( library.visualScenes )[ 0 ];\n\n\t\t\tif ( kinematicsModelId === undefined || kinematicsSceneId === undefined ) return;\n\n\t\t\tvar kinematicsModel = getKinematicsModel( kinematicsModelId );\n\t\t\tvar kinematicsScene = getKinematicsScene( kinematicsSceneId );\n\t\t\tvar visualScene = getVisualScene( visualSceneId );\n\n\t\t\tvar bindJointAxis = kinematicsScene.bindJointAxis;\n\t\t\tvar jointMap = {};\n\n\t\t\tfor ( var i = 0, l = bindJointAxis.length; i < l; i ++ ) {\n\n\t\t\t\tvar axis = bindJointAxis[ i ];\n\n\t\t\t\t// the result of the following query is an element of type 'translate', 'rotate','scale' or 'matrix'\n\n\t\t\t\tvar targetElement = collada.querySelector( '[sid=\"' + axis.target + '\"]' );\n\n\t\t\t\tif ( targetElement ) {\n\n\t\t\t\t\t// get the parent of the transfrom element\n\n\t\t\t\t\tvar parentVisualElement = targetElement.parentElement;\n\n\t\t\t\t\t// connect the joint of the kinematics model with the element in the visual scene\n\n\t\t\t\t\tconnect( axis.jointIndex, parentVisualElement );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction connect( jointIndex, visualElement ) {\n\n\t\t\t\tvar visualElementName = visualElement.getAttribute( 'name' );\n\t\t\t\tvar joint = kinematicsModel.joints[ jointIndex ];\n\n\t\t\t\tvisualScene.traverse( function ( object ) {\n\n\t\t\t\t\tif ( object.name === visualElementName ) {\n\n\t\t\t\t\t\tjointMap[ jointIndex ] = {\n\t\t\t\t\t\t\tobject: object,\n\t\t\t\t\t\t\ttransforms: buildTransformList( visualElement ),\n\t\t\t\t\t\t\tjoint: joint,\n\t\t\t\t\t\t\tposition: joint.zeroPosition\n\t\t\t\t\t\t};\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\tvar m0 = new Matrix4();\n\n\t\t\tkinematics = {\n\n\t\t\t\tjoints: kinematicsModel && kinematicsModel.joints,\n\n\t\t\t\tgetJointValue: function ( jointIndex ) {\n\n\t\t\t\t\tvar jointData = jointMap[ jointIndex ];\n\n\t\t\t\t\tif ( jointData ) {\n\n\t\t\t\t\t\treturn jointData.position;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Joint ' + jointIndex + ' doesn\\'t exist.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetJointValue: function ( jointIndex, value ) {\n\n\t\t\t\t\tvar jointData = jointMap[ jointIndex ];\n\n\t\t\t\t\tif ( jointData ) {\n\n\t\t\t\t\t\tvar joint = jointData.joint;\n\n\t\t\t\t\t\tif ( value > joint.limits.max || value < joint.limits.min ) {\n\n\t\t\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Joint ' + jointIndex + ' value ' + value + ' outside of limits (min: ' + joint.limits.min + ', max: ' + joint.limits.max + ').' );\n\n\t\t\t\t\t\t} else if ( joint.static ) {\n\n\t\t\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Joint ' + jointIndex + ' is static.' );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tvar object = jointData.object;\n\t\t\t\t\t\t\tvar axis = joint.axis;\n\t\t\t\t\t\t\tvar transforms = jointData.transforms;\n\n\t\t\t\t\t\t\tmatrix.identity();\n\n\t\t\t\t\t\t\t// each update, we have to apply all transforms in the correct order\n\n\t\t\t\t\t\t\tfor ( var i = 0; i < transforms.length; i ++ ) {\n\n\t\t\t\t\t\t\t\tvar transform = transforms[ i ];\n\n\t\t\t\t\t\t\t\t// if there is a connection of the transform node with a joint, apply the joint value\n\n\t\t\t\t\t\t\t\tif ( transform.sid && transform.sid.indexOf( jointIndex ) !== - 1 ) {\n\n\t\t\t\t\t\t\t\t\tswitch ( joint.type ) {\n\n\t\t\t\t\t\t\t\t\t\tcase 'revolute':\n\t\t\t\t\t\t\t\t\t\t\tmatrix.multiply( m0.makeRotationAxis( axis, _Math.degToRad( value ) ) );\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\t\tcase 'prismatic':\n\t\t\t\t\t\t\t\t\t\t\tmatrix.multiply( m0.makeTranslation( axis.x * value, axis.y * value, axis.z * value ) );\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Unknown joint type: ' + joint.type );\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tswitch ( transform.type ) {\n\n\t\t\t\t\t\t\t\t\t\tcase 'matrix':\n\t\t\t\t\t\t\t\t\t\t\tmatrix.multiply( transform.obj );\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\t\tcase 'translate':\n\t\t\t\t\t\t\t\t\t\t\tmatrix.multiply( m0.makeTranslation( transform.obj.x, transform.obj.y, transform.obj.z ) );\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\t\tcase 'scale':\n\t\t\t\t\t\t\t\t\t\t\tmatrix.scale( transform.obj );\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\t\tcase 'rotate':\n\t\t\t\t\t\t\t\t\t\t\tmatrix.multiply( m0.makeRotationAxis( transform.obj, transform.angle ) );\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tobject.matrix.copy( matrix );\n\t\t\t\t\t\t\tobject.matrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t\t\t\t\t\tjointMap[ jointIndex ].position = value;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.log( 'THREE.ColladaLoader: ' + jointIndex + ' does not exist.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t\tfunction buildTransformList( node ) {\n\n\t\t\tvar transforms = [];\n\n\t\t\tvar xml = collada.querySelector( '[id=\"' + node.id + '\"]' );\n\n\t\t\tfor ( var i = 0; i < xml.childNodes.length; i ++ ) {\n\n\t\t\t\tvar child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'matrix':\n\t\t\t\t\t\tvar array = parseFloats( child.textContent );\n\t\t\t\t\t\tvar matrix = new Matrix4().fromArray( array ).transpose();\n\t\t\t\t\t\ttransforms.push( {\n\t\t\t\t\t\t\tsid: child.getAttribute( 'sid' ),\n\t\t\t\t\t\t\ttype: child.nodeName,\n\t\t\t\t\t\t\tobj: matrix\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'translate':\n\t\t\t\t\tcase 'scale':\n\t\t\t\t\t\tvar array = parseFloats( child.textContent );\n\t\t\t\t\t\tvar vector = new Vector3().fromArray( array );\n\t\t\t\t\t\ttransforms.push( {\n\t\t\t\t\t\t\tsid: child.getAttribute( 'sid' ),\n\t\t\t\t\t\t\ttype: child.nodeName,\n\t\t\t\t\t\t\tobj: vector\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'rotate':\n\t\t\t\t\t\tvar array = parseFloats( child.textContent );\n\t\t\t\t\t\tvar vector = new Vector3().fromArray( array );\n\t\t\t\t\t\tvar angle = _Math.degToRad( array[ 3 ] );\n\t\t\t\t\t\ttransforms.push( {\n\t\t\t\t\t\t\tsid: child.getAttribute( 'sid' ),\n\t\t\t\t\t\t\ttype: child.nodeName,\n\t\t\t\t\t\t\tobj: vector,\n\t\t\t\t\t\t\tangle: angle\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn transforms;\n\n\t\t}\n\n\t\t// nodes\n\n\t\tfunction prepareNodes( xml ) {\n\n\t\t\tvar elements = xml.getElementsByTagName( 'node' );\n\n\t\t\t// ensure all node elements have id attributes\n\n\t\t\tfor ( var i = 0; i < elements.length; i ++ ) {\n\n\t\t\t\tvar element = elements[ i ];\n\n\t\t\t\tif ( element.hasAttribute( 'id' ) === false ) {\n\n\t\t\t\t\telement.setAttribute( 'id', generateId() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar matrix = new Matrix4();\n\t\tvar vector = new Vector3();\n\n\t\tfunction parseNode( xml ) {\n\n\t\t\tvar data = {\n\t\t\t\tname: xml.getAttribute( 'name' ) || '',\n\t\t\t\ttype: xml.getAttribute( 'type' ),\n\t\t\t\tid: xml.getAttribute( 'id' ),\n\t\t\t\tsid: xml.getAttribute( 'sid' ),\n\t\t\t\tmatrix: new Matrix4(),\n\t\t\t\tnodes: [],\n\t\t\t\tinstanceCameras: [],\n\t\t\t\tinstanceControllers: [],\n\t\t\t\tinstanceLights: [],\n\t\t\t\tinstanceGeometries: [],\n\t\t\t\tinstanceNodes: [],\n\t\t\t\ttransforms: {}\n\t\t\t};\n\n\t\t\tfor ( var i = 0; i < xml.childNodes.length; i ++ ) {\n\n\t\t\t\tvar child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'node':\n\t\t\t\t\t\tdata.nodes.push( child.getAttribute( 'id' ) );\n\t\t\t\t\t\tparseNode( child );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'instance_camera':\n\t\t\t\t\t\tdata.instanceCameras.push( parseId( child.getAttribute( 'url' ) ) );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'instance_controller':\n\t\t\t\t\t\tdata.instanceControllers.push( parseNodeInstance( child ) );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'instance_light':\n\t\t\t\t\t\tdata.instanceLights.push( parseId( child.getAttribute( 'url' ) ) );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'instance_geometry':\n\t\t\t\t\t\tdata.instanceGeometries.push( parseNodeInstance( child ) );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'instance_node':\n\t\t\t\t\t\tdata.instanceNodes.push( parseId( child.getAttribute( 'url' ) ) );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'matrix':\n\t\t\t\t\t\tvar array = parseFloats( child.textContent );\n\t\t\t\t\t\tdata.matrix.multiply( matrix.fromArray( array ).transpose() );\n\t\t\t\t\t\tdata.transforms[ child.getAttribute( 'sid' ) ] = child.nodeName;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'translate':\n\t\t\t\t\t\tvar array = parseFloats( child.textContent );\n\t\t\t\t\t\tvector.fromArray( array );\n\t\t\t\t\t\tdata.matrix.multiply( matrix.makeTranslation( vector.x, vector.y, vector.z ) );\n\t\t\t\t\t\tdata.transforms[ child.getAttribute( 'sid' ) ] = child.nodeName;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'rotate':\n\t\t\t\t\t\tvar array = parseFloats( child.textContent );\n\t\t\t\t\t\tvar angle = _Math.degToRad( array[ 3 ] );\n\t\t\t\t\t\tdata.matrix.multiply( matrix.makeRotationAxis( vector.fromArray( array ), angle ) );\n\t\t\t\t\t\tdata.transforms[ child.getAttribute( 'sid' ) ] = child.nodeName;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'scale':\n\t\t\t\t\t\tvar array = parseFloats( child.textContent );\n\t\t\t\t\t\tdata.matrix.scale( vector.fromArray( array ) );\n\t\t\t\t\t\tdata.transforms[ child.getAttribute( 'sid' ) ] = child.nodeName;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'extra':\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.log( child );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasNode( data.id ) ) {\n\n\t\t\t\tconsole.warn( 'THREE.ColladaLoader: There is already a node with ID %s. Exclude current node from further processing.', data.id );\n\n\t\t\t} else {\n\n\t\t\t\tlibrary.nodes[ data.id ] = data;\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction parseNodeInstance( xml ) {\n\n\t\t\tvar data = {\n\t\t\t\tid: parseId( xml.getAttribute( 'url' ) ),\n\t\t\t\tmaterials: {},\n\t\t\t\tskeletons: []\n\t\t\t};\n\n\t\t\tfor ( var i = 0; i < xml.childNodes.length; i ++ ) {\n\n\t\t\t\tvar child = xml.childNodes[ i ];\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'bind_material':\n\t\t\t\t\t\tvar instances = child.getElementsByTagName( 'instance_material' );\n\n\t\t\t\t\t\tfor ( var j = 0; j < instances.length; j ++ ) {\n\n\t\t\t\t\t\t\tvar instance = instances[ j ];\n\t\t\t\t\t\t\tvar symbol = instance.getAttribute( 'symbol' );\n\t\t\t\t\t\t\tvar target = instance.getAttribute( 'target' );\n\n\t\t\t\t\t\t\tdata.materials[ symbol ] = parseId( target );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'skeleton':\n\t\t\t\t\t\tdata.skeletons.push( parseId( child.textContent ) );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction buildSkeleton( skeletons, joints ) {\n\n\t\t\tvar boneData = [];\n\t\t\tvar sortedBoneData = [];\n\n\t\t\tvar i, j, data;\n\n\t\t\t// a skeleton can have multiple root bones. collada expresses this\n\t\t\t// situtation with multiple \"skeleton\" tags per controller instance\n\n\t\t\tfor ( i = 0; i < skeletons.length; i ++ ) {\n\n\t\t\t\tvar skeleton = skeletons[ i ];\n\n\t\t\t\tvar root;\n\n\t\t\t\tif ( hasNode( skeleton ) ) {\n\n\t\t\t\t\troot = getNode( skeleton );\n\t\t\t\t\tbuildBoneHierarchy( root, joints, boneData );\n\n\t\t\t\t} else if ( hasVisualScene( skeleton ) ) {\n\n\t\t\t\t\t// handle case where the skeleton refers to the visual scene (#13335)\n\n\t\t\t\t\tvar visualScene = library.visualScenes[ skeleton ];\n\t\t\t\t\tvar children = visualScene.children;\n\n\t\t\t\t\tfor ( var j = 0; j < children.length; j ++ ) {\n\n\t\t\t\t\t\tvar child = children[ j ];\n\n\t\t\t\t\t\tif ( child.type === 'JOINT' ) {\n\n\t\t\t\t\t\t\tvar root = getNode( child.id );\n\t\t\t\t\t\t\tbuildBoneHierarchy( root, joints, boneData );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.ColladaLoader: Unable to find root bone of skeleton with ID:', skeleton );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// sort bone data (the order is defined in the corresponding controller)\n\n\t\t\tfor ( i = 0; i < joints.length; i ++ ) {\n\n\t\t\t\tfor ( j = 0; j < boneData.length; j ++ ) {\n\n\t\t\t\t\tdata = boneData[ j ];\n\n\t\t\t\t\tif ( data.bone.name === joints[ i ].name ) {\n\n\t\t\t\t\t\tsortedBoneData[ i ] = data;\n\t\t\t\t\t\tdata.processed = true;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add unprocessed bone data at the end of the list\n\n\t\t\tfor ( i = 0; i < boneData.length; i ++ ) {\n\n\t\t\t\tdata = boneData[ i ];\n\n\t\t\t\tif ( data.processed === false ) {\n\n\t\t\t\t\tsortedBoneData.push( data );\n\t\t\t\t\tdata.processed = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// setup arrays for skeleton creation\n\n\t\t\tvar bones = [];\n\t\t\tvar boneInverses = [];\n\n\t\t\tfor ( i = 0; i < sortedBoneData.length; i ++ ) {\n\n\t\t\t\tdata = sortedBoneData[ i ];\n\n\t\t\t\tbones.push( data.bone );\n\t\t\t\tboneInverses.push( data.boneInverse );\n\n\t\t\t}\n\n\t\t\treturn new Skeleton( bones, boneInverses );\n\n\t\t}\n\n\t\tfunction buildBoneHierarchy( root, joints, boneData ) {\n\n\t\t\t// setup bone data from visual scene\n\n\t\t\troot.traverse( function ( object ) {\n\n\t\t\t\tif ( object.isBone === true ) {\n\n\t\t\t\t\tvar boneInverse;\n\n\t\t\t\t\t// retrieve the boneInverse from the controller data\n\n\t\t\t\t\tfor ( var i = 0; i < joints.length; i ++ ) {\n\n\t\t\t\t\t\tvar joint = joints[ i ];\n\n\t\t\t\t\t\tif ( joint.name === object.name ) {\n\n\t\t\t\t\t\t\tboneInverse = joint.boneInverse;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( boneInverse === undefined ) {\n\n\t\t\t\t\t\t// Unfortunately, there can be joints in the visual scene that are not part of the\n\t\t\t\t\t\t// corresponding controller. In this case, we have to create a dummy boneInverse matrix\n\t\t\t\t\t\t// for the respective bone. This bone won't affect any vertices, because there are no skin indices\n\t\t\t\t\t\t// and weights defined for it. But we still have to add the bone to the sorted bone list in order to\n\t\t\t\t\t\t// ensure a correct animation of the model.\n\n\t\t\t\t\t\tboneInverse = new Matrix4();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tboneData.push( { bone: object, boneInverse: boneInverse, processed: false } );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t}\n\n\t\tfunction buildNode( data ) {\n\n\t\t\tvar objects = [];\n\n\t\t\tvar matrix = data.matrix;\n\t\t\tvar nodes = data.nodes;\n\t\t\tvar type = data.type;\n\t\t\tvar instanceCameras = data.instanceCameras;\n\t\t\tvar instanceControllers = data.instanceControllers;\n\t\t\tvar instanceLights = data.instanceLights;\n\t\t\tvar instanceGeometries = data.instanceGeometries;\n\t\t\tvar instanceNodes = data.instanceNodes;\n\n\t\t\t// nodes\n\n\t\t\tfor ( var i = 0, l = nodes.length; i < l; i ++ ) {\n\n\t\t\t\tobjects.push( getNode( nodes[ i ] ) );\n\n\t\t\t}\n\n\t\t\t// instance cameras\n\n\t\t\tfor ( var i = 0, l = instanceCameras.length; i < l; i ++ ) {\n\n\t\t\t\tvar instanceCamera = getCamera( instanceCameras[ i ] );\n\n\t\t\t\tif ( instanceCamera !== null ) {\n\n\t\t\t\t\tobjects.push( instanceCamera.clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// instance controllers\n\n\t\t\tfor ( var i = 0, l = instanceControllers.length; i < l; i ++ ) {\n\n\t\t\t\tvar instance = instanceControllers[ i ];\n\t\t\t\tvar controller = getController( instance.id );\n\t\t\t\tvar geometries = getGeometry( controller.id );\n\t\t\t\tvar newObjects = buildObjects( geometries, instance.materials );\n\n\t\t\t\tvar skeletons = instance.skeletons;\n\t\t\t\tvar joints = controller.skin.joints;\n\n\t\t\t\tvar skeleton = buildSkeleton( skeletons, joints );\n\n\t\t\t\tfor ( var j = 0, jl = newObjects.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar object = newObjects[ j ];\n\n\t\t\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\t\t\tobject.bind( skeleton, controller.skin.bindMatrix );\n\t\t\t\t\t\tobject.normalizeSkinWeights();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobjects.push( object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// instance lights\n\n\t\t\tfor ( var i = 0, l = instanceLights.length; i < l; i ++ ) {\n\n\t\t\t\tvar instanceLight = getLight( instanceLights[ i ] );\n\n\t\t\t\tif ( instanceLight !== null ) {\n\n\t\t\t\t\tobjects.push( instanceLight.clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// instance geometries\n\n\t\t\tfor ( var i = 0, l = instanceGeometries.length; i < l; i ++ ) {\n\n\t\t\t\tvar instance = instanceGeometries[ i ];\n\n\t\t\t\t// a single geometry instance in collada can lead to multiple object3Ds.\n\t\t\t\t// this is the case when primitives are combined like triangles and lines\n\n\t\t\t\tvar geometries = getGeometry( instance.id );\n\t\t\t\tvar newObjects = buildObjects( geometries, instance.materials );\n\n\t\t\t\tfor ( var j = 0, jl = newObjects.length; j < jl; j ++ ) {\n\n\t\t\t\t\tobjects.push( newObjects[ j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// instance nodes\n\n\t\t\tfor ( var i = 0, l = instanceNodes.length; i < l; i ++ ) {\n\n\t\t\t\tobjects.push( getNode( instanceNodes[ i ] ).clone() );\n\n\t\t\t}\n\n\t\t\tvar object;\n\n\t\t\tif ( nodes.length === 0 && objects.length === 1 ) {\n\n\t\t\t\tobject = objects[ 0 ];\n\n\t\t\t} else {\n\n\t\t\t\tobject = ( type === 'JOINT' ) ? new Bone() : new Group();\n\n\t\t\t\tfor ( var i = 0; i < objects.length; i ++ ) {\n\n\t\t\t\t\tobject.add( objects[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( object.name === '' ) {\n\n\t\t\t\tobject.name = ( type === 'JOINT' ) ? data.sid : data.name;\n\n\t\t\t}\n\n\t\t\tobject.matrix.copy( matrix );\n\t\t\tobject.matrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t\treturn object;\n\n\t\t}\n\n\t\tvar fallbackMaterial = new MeshBasicMaterial( { color: 0xff00ff } );\n\n\t\tfunction resolveMaterialBinding( keys, instanceMaterials ) {\n\n\t\t\tvar materials = [];\n\n\t\t\tfor ( var i = 0, l = keys.length; i < l; i ++ ) {\n\n\t\t\t\tvar id = instanceMaterials[ keys[ i ] ];\n\n\t\t\t\tif ( id === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Material with key %s not found. Apply fallback material.', keys[ i ] );\n\t\t\t\t\tmaterials.push( fallbackMaterial );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tmaterials.push( getMaterial( id ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn materials;\n\n\t\t}\n\n\t\tfunction buildObjects( geometries, instanceMaterials ) {\n\n\t\t\tvar objects = [];\n\n\t\t\tfor ( var type in geometries ) {\n\n\t\t\t\tvar geometry = geometries[ type ];\n\n\t\t\t\tvar materials = resolveMaterialBinding( geometry.materialKeys, instanceMaterials );\n\n\t\t\t\t// handle case if no materials are defined\n\n\t\t\t\tif ( materials.length === 0 ) {\n\n\t\t\t\t\tif ( type === 'lines' || type === 'linestrips' ) {\n\n\t\t\t\t\t\tmaterials.push( new LineBasicMaterial() );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tmaterials.push( new MeshPhongMaterial() );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// regard skinning\n\n\t\t\t\tvar skinning = ( geometry.data.attributes.skinIndex !== undefined );\n\n\t\t\t\tif ( skinning ) {\n\n\t\t\t\t\tfor ( var i = 0, l = materials.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tmaterials[ i ].skinning = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// choose between a single or multi materials (material array)\n\n\t\t\t\tvar material = ( materials.length === 1 ) ? materials[ 0 ] : materials;\n\n\t\t\t\t// now create a specific 3D object\n\n\t\t\t\tvar object;\n\n\t\t\t\tswitch ( type ) {\n\n\t\t\t\t\tcase 'lines':\n\t\t\t\t\t\tobject = new LineSegments( geometry.data, material );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'linestrips':\n\t\t\t\t\t\tobject = new Line( geometry.data, material );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'triangles':\n\t\t\t\t\tcase 'polylist':\n\t\t\t\t\t\tif ( skinning ) {\n\n\t\t\t\t\t\t\tobject = new SkinnedMesh( geometry.data, material );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tobject = new Mesh( geometry.data, material );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tobjects.push( object );\n\n\t\t\t}\n\n\t\t\treturn objects;\n\n\t\t}\n\n\t\tfunction hasNode( id ) {\n\n\t\t\treturn library.nodes[ id ] !== undefined;\n\n\t\t}\n\n\t\tfunction getNode( id ) {\n\n\t\t\treturn getBuild( library.nodes[ id ], buildNode );\n\n\t\t}\n\n\t\t// visual scenes\n\n\t\tfunction parseVisualScene( xml ) {\n\n\t\t\tvar data = {\n\t\t\t\tname: xml.getAttribute( 'name' ),\n\t\t\t\tchildren: []\n\t\t\t};\n\n\t\t\tprepareNodes( xml );\n\n\t\t\tvar elements = getElementsByTagName( xml, 'node' );\n\n\t\t\tfor ( var i = 0; i < elements.length; i ++ ) {\n\n\t\t\t\tdata.children.push( parseNode( elements[ i ] ) );\n\n\t\t\t}\n\n\t\t\tlibrary.visualScenes[ xml.getAttribute( 'id' ) ] = data;\n\n\t\t}\n\n\t\tfunction buildVisualScene( data ) {\n\n\t\t\tvar group = new Group();\n\t\t\tgroup.name = data.name;\n\n\t\t\tvar children = data.children;\n\n\t\t\tfor ( var i = 0; i < children.length; i ++ ) {\n\n\t\t\t\tvar child = children[ i ];\n\n\t\t\t\tgroup.add( getNode( child.id ) );\n\n\t\t\t}\n\n\t\t\treturn group;\n\n\t\t}\n\n\t\tfunction hasVisualScene( id ) {\n\n\t\t\treturn library.visualScenes[ id ] !== undefined;\n\n\t\t}\n\n\t\tfunction getVisualScene( id ) {\n\n\t\t\treturn getBuild( library.visualScenes[ id ], buildVisualScene );\n\n\t\t}\n\n\t\t// scenes\n\n\t\tfunction parseScene( xml ) {\n\n\t\t\tvar instance = getElementsByTagName( xml, 'instance_visual_scene' )[ 0 ];\n\t\t\treturn getVisualScene( parseId( instance.getAttribute( 'url' ) ) );\n\n\t\t}\n\n\t\tfunction setupAnimations() {\n\n\t\t\tvar clips = library.clips;\n\n\t\t\tif ( isEmpty( clips ) === true ) {\n\n\t\t\t\tif ( isEmpty( library.animations ) === false ) {\n\n\t\t\t\t\t// if there are animations but no clips, we create a default clip for playback\n\n\t\t\t\t\tvar tracks = [];\n\n\t\t\t\t\tfor ( var id in library.animations ) {\n\n\t\t\t\t\t\tvar animationTracks = getAnimation( id );\n\n\t\t\t\t\t\tfor ( var i = 0, l = animationTracks.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\ttracks.push( animationTracks[ i ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tanimations.push( new AnimationClip( 'default', - 1, tracks ) );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tfor ( var id in clips ) {\n\n\t\t\t\t\tanimations.push( getAnimationClip( id ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// convert the parser error element into text with each child elements text\n\t\t// separated by new lines.\n\n\t\tfunction parserErrorToText( parserError ) {\n\n\t\t\tvar result = '';\n\t\t\tvar stack = [ parserError ];\n\n\t\t\twhile ( stack.length ) {\n\n\t\t\t\tvar node = stack.shift();\n\n\t\t\t\tif ( node.nodeType === Node.TEXT_NODE ) {\n\n\t\t\t\t\tresult += node.textContent;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tresult += '\\n';\n\t\t\t\t\tstack.push.apply( stack, node.childNodes );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn result.trim();\n\n\t\t}\n\n\t\tif ( text.length === 0 ) {\n\n\t\t\treturn { scene: new Scene() };\n\n\t\t}\n\n\t\tvar xml = new DOMParser().parseFromString( text, 'application/xml' );\n\n\t\tvar collada = getElementsByTagName( xml, 'COLLADA' )[ 0 ];\n\n\t\tvar parserError = xml.getElementsByTagName( 'parsererror' )[ 0 ];\n\t\tif ( parserError !== undefined ) {\n\n\t\t\t// Chrome will return parser error with a div in it\n\n\t\t\tvar errorElement = getElementsByTagName( parserError, 'div' )[ 0 ];\n\t\t\tvar errorText;\n\n\t\t\tif ( errorElement ) {\n\n\t\t\t\terrorText = errorElement.textContent;\n\n\t\t\t} else {\n\n\t\t\t\terrorText = parserErrorToText( parserError );\n\n\t\t\t}\n\n\t\t\tconsole.error( 'THREE.ColladaLoader: Failed to parse collada file.\\n', errorText );\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// metadata\n\n\t\tvar version = collada.getAttribute( 'version' );\n\t\tconsole.log( 'THREE.ColladaLoader: File version', version );\n\n\t\tvar asset = parseAsset( getElementsByTagName( collada, 'asset' )[ 0 ] );\n\t\tvar textureLoader = new TextureLoader( this.manager );\n\t\ttextureLoader.setPath( this.resourcePath || path ).setCrossOrigin( this.crossOrigin );\n\n\t\tvar tgaLoader;\n\n\t\tif ( TGALoader ) {\n\n\t\t\ttgaLoader = new TGALoader( this.manager );\n\t\t\ttgaLoader.setPath( this.resourcePath || path );\n\n\t\t}\n\n\t\t//\n\n\t\tvar animations = [];\n\t\tvar kinematics = {};\n\t\tvar count = 0;\n\n\t\t//\n\n\t\tvar library = {\n\t\t\tanimations: {},\n\t\t\tclips: {},\n\t\t\tcontrollers: {},\n\t\t\timages: {},\n\t\t\teffects: {},\n\t\t\tmaterials: {},\n\t\t\tcameras: {},\n\t\t\tlights: {},\n\t\t\tgeometries: {},\n\t\t\tnodes: {},\n\t\t\tvisualScenes: {},\n\t\t\tkinematicsModels: {},\n\t\t\tphysicsModels: {},\n\t\t\tkinematicsScenes: {}\n\t\t};\n\n\t\tparseLibrary( collada, 'library_animations', 'animation', parseAnimation );\n\t\tparseLibrary( collada, 'library_animation_clips', 'animation_clip', parseAnimationClip );\n\t\tparseLibrary( collada, 'library_controllers', 'controller', parseController );\n\t\tparseLibrary( collada, 'library_images', 'image', parseImage );\n\t\tparseLibrary( collada, 'library_effects', 'effect', parseEffect );\n\t\tparseLibrary( collada, 'library_materials', 'material', parseMaterial );\n\t\tparseLibrary( collada, 'library_cameras', 'camera', parseCamera );\n\t\tparseLibrary( collada, 'library_lights', 'light', parseLight );\n\t\tparseLibrary( collada, 'library_geometries', 'geometry', parseGeometry );\n\t\tparseLibrary( collada, 'library_nodes', 'node', parseNode );\n\t\tparseLibrary( collada, 'library_visual_scenes', 'visual_scene', parseVisualScene );\n\t\tparseLibrary( collada, 'library_kinematics_models', 'kinematics_model', parseKinematicsModel );\n\t\tparseLibrary( collada, 'library_physics_models', 'physics_model', parsePhysicsModel );\n\t\tparseLibrary( collada, 'scene', 'instance_kinematics_scene', parseKinematicsScene );\n\n\t\tbuildLibrary( library.animations, buildAnimation );\n\t\tbuildLibrary( library.clips, buildAnimationClip );\n\t\tbuildLibrary( library.controllers, buildController );\n\t\tbuildLibrary( library.images, buildImage );\n\t\tbuildLibrary( library.effects, buildEffect );\n\t\tbuildLibrary( library.materials, buildMaterial );\n\t\tbuildLibrary( library.cameras, buildCamera );\n\t\tbuildLibrary( library.lights, buildLight );\n\t\tbuildLibrary( library.geometries, buildGeometry );\n\t\tbuildLibrary( library.visualScenes, buildVisualScene );\n\n\t\tsetupAnimations();\n\t\tsetupKinematics();\n\n\t\tvar scene = parseScene( getElementsByTagName( collada, 'scene' )[ 0 ] );\n\n\t\tif ( asset.upAxis === 'Z_UP' ) {\n\n\t\t\tscene.quaternion.setFromEuler( new Euler( - Math.PI / 2, 0, 0 ) );\n\n\t\t}\n\n\t\tscene.scale.multiplyScalar( asset.unit );\n\n\t\treturn {\n\t\t\tanimations: animations,\n\t\t\tkinematics: kinematics,\n\t\t\tlibrary: library,\n\t\t\tscene: scene\n\t\t};\n\n\t}\n\n};\n\n\n\n// CONCATENATED MODULE: ./node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--12-0!./node_modules/_thread-loader@2.1.2@thread-loader/dist/cjs.js!./node_modules/_babel-loader@8.0.6@babel-loader/lib!./node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!./node_modules/_vue-loader@15.7.0@vue-loader/lib??vue-loader-options!./src/model-collada.vue?vue&type=script&lang=js&\n\n\n/* harmony default export */ var model_colladavue_type_script_lang_js_ = ({\n  name: 'model-collada',\n  mixins: [model_mixin],\n  props: {\n    lights: {\n      type: Array,\n      default: function _default() {\n        return [{\n          type: 'HemisphereLight',\n          position: {\n            x: 0,\n            y: 1,\n            z: 0\n          },\n          skyColor: 0xaaaaff,\n          groundColor: 0x806060,\n          intensity: 0.2\n        }, {\n          type: 'DirectionalLight',\n          position: {\n            x: 1,\n            y: 1,\n            z: 1\n          },\n          color: 0xffffff,\n          intensity: 0.8\n        }];\n      }\n    },\n    smoothing: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: function data() {\n    var loader = new ColladaLoader();\n    loader.setCrossOrigin(this.crossOrigin);\n    return {\n      loader: loader\n    };\n  },\n  methods: {\n    getObject: function getObject(collada) {\n      return collada.scene;\n    }\n  }\n});\n// CONCATENATED MODULE: ./src/model-collada.vue?vue&type=script&lang=js&\n /* harmony default export */ var src_model_colladavue_type_script_lang_js_ = (model_colladavue_type_script_lang_js_); \n// CONCATENATED MODULE: ./src/model-collada.vue\nvar model_collada_render, model_collada_staticRenderFns\n\n\n\n\n/* normalize component */\n\nvar model_collada_component = normalizeComponent(\n  src_model_colladavue_type_script_lang_js_,\n  model_collada_render,\n  model_collada_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ var model_collada = (model_collada_component.exports);\n// CONCATENATED MODULE: ./node_modules/_three@0.105.2@three/examples/jsm/loaders/GLTFLoader.js\n/**\n * @author Rich Tibbett / https://github.com/richtr\n * @author mrdoob / http://mrdoob.com/\n * @author Tony Parisi / http://www.tonyparisi.com/\n * @author Takahiro / https://github.com/takahirox\n * @author Don McCurdy / https://www.donmccurdy.com\n */\n\n\n\nvar GLTFLoader_GLTFLoader = ( function () {\n\n\tfunction GLTFLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\t\tthis.dracoLoader = null;\n\n\t}\n\n\tGLTFLoader.prototype = {\n\n\t\tconstructor: GLTFLoader,\n\n\t\tcrossOrigin: 'anonymous',\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar resourcePath;\n\n\t\t\tif ( this.resourcePath !== undefined ) {\n\n\t\t\t\tresourcePath = this.resourcePath;\n\n\t\t\t} else if ( this.path !== undefined ) {\n\n\t\t\t\tresourcePath = this.path;\n\n\t\t\t} else {\n\n\t\t\t\tresourcePath = LoaderUtils.extractUrlBase( url );\n\n\t\t\t}\n\n\t\t\t// Tells the LoadingManager to track an extra item, which resolves after\n\t\t\t// the model is fully loaded. This means the count of items loaded will\n\t\t\t// be incorrect, but ensures manager.onLoad() does not fire early.\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tvar _onError = function ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t};\n\n\t\t\tvar loader = new FileLoader( scope.manager );\n\n\t\t\tloader.setPath( this.path );\n\t\t\tloader.setResponseType( 'arraybuffer' );\n\n\t\t\tloader.load( url, function ( data ) {\n\n\t\t\t\ttry {\n\n\t\t\t\t\tscope.parse( data, resourcePath, function ( gltf ) {\n\n\t\t\t\t\t\tonLoad( gltf );\n\n\t\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t\t}, _onError );\n\n\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\t_onError( e );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, _onError );\n\n\t\t},\n\n\t\tsetCrossOrigin: function ( value ) {\n\n\t\t\tthis.crossOrigin = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetPath: function ( value ) {\n\n\t\t\tthis.path = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetResourcePath: function ( value ) {\n\n\t\t\tthis.resourcePath = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetDRACOLoader: function ( dracoLoader ) {\n\n\t\t\tthis.dracoLoader = dracoLoader;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tparse: function ( data, path, onLoad, onError ) {\n\n\t\t\tvar content;\n\t\t\tvar extensions = {};\n\n\t\t\tif ( typeof data === 'string' ) {\n\n\t\t\t\tcontent = data;\n\n\t\t\t} else {\n\n\t\t\t\tvar magic = LoaderUtils.decodeText( new Uint8Array( data, 0, 4 ) );\n\n\t\t\t\tif ( magic === BINARY_EXTENSION_HEADER_MAGIC ) {\n\n\t\t\t\t\ttry {\n\n\t\t\t\t\t\textensions[ EXTENSIONS.KHR_BINARY_GLTF ] = new GLTFBinaryExtension( data );\n\n\t\t\t\t\t} catch ( error ) {\n\n\t\t\t\t\t\tif ( onError ) onError( error );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontent = extensions[ EXTENSIONS.KHR_BINARY_GLTF ].content;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcontent = LoaderUtils.decodeText( new Uint8Array( data ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar json = JSON.parse( content );\n\n\t\t\tif ( json.asset === undefined || json.asset.version[ 0 ] < 2 ) {\n\n\t\t\t\tif ( onError ) onError( new Error( 'THREE.GLTFLoader: Unsupported asset. glTF versions >=2.0 are supported. Use LegacyGLTFLoader instead.' ) );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( json.extensionsUsed ) {\n\n\t\t\t\tfor ( var i = 0; i < json.extensionsUsed.length; ++ i ) {\n\n\t\t\t\t\tvar extensionName = json.extensionsUsed[ i ];\n\t\t\t\t\tvar extensionsRequired = json.extensionsRequired || [];\n\n\t\t\t\t\tswitch ( extensionName ) {\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_LIGHTS_PUNCTUAL:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFLightsExtension( json );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_MATERIALS_UNLIT:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFMaterialsUnlitExtension( json );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFMaterialsPbrSpecularGlossinessExtension( json );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_DRACO_MESH_COMPRESSION:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFDracoMeshCompressionExtension( json, this.dracoLoader );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.MSFT_TEXTURE_DDS:\n\t\t\t\t\t\t\textensions[ EXTENSIONS.MSFT_TEXTURE_DDS ] = new GLTFTextureDDSExtension();\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_TEXTURE_TRANSFORM:\n\t\t\t\t\t\t\textensions[ EXTENSIONS.KHR_TEXTURE_TRANSFORM ] = new GLTFTextureTransformExtension( json );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tif ( extensionsRequired.indexOf( extensionName ) >= 0 ) {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Unknown extension \"' + extensionName + '\".' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar parser = new GLTFParser( json, extensions, {\n\n\t\t\t\tpath: path || this.resourcePath || '',\n\t\t\t\tcrossOrigin: this.crossOrigin,\n\t\t\t\tmanager: this.manager\n\n\t\t\t} );\n\n\t\t\tparser.parse( onLoad, onError );\n\n\t\t}\n\n\t};\n\n\t/* GLTFREGISTRY */\n\n\tfunction GLTFRegistry() {\n\n\t\tvar objects = {};\n\n\t\treturn\t{\n\n\t\t\tget: function ( key ) {\n\n\t\t\t\treturn objects[ key ];\n\n\t\t\t},\n\n\t\t\tadd: function ( key, object ) {\n\n\t\t\t\tobjects[ key ] = object;\n\n\t\t\t},\n\n\t\t\tremove: function ( key ) {\n\n\t\t\t\tdelete objects[ key ];\n\n\t\t\t},\n\n\t\t\tremoveAll: function () {\n\n\t\t\t\tobjects = {};\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t/*********************************/\n\t/********** EXTENSIONS ***********/\n\t/*********************************/\n\n\tvar EXTENSIONS = {\n\t\tKHR_BINARY_GLTF: 'KHR_binary_glTF',\n\t\tKHR_DRACO_MESH_COMPRESSION: 'KHR_draco_mesh_compression',\n\t\tKHR_LIGHTS_PUNCTUAL: 'KHR_lights_punctual',\n\t\tKHR_MATERIALS_PBR_SPECULAR_GLOSSINESS: 'KHR_materials_pbrSpecularGlossiness',\n\t\tKHR_MATERIALS_UNLIT: 'KHR_materials_unlit',\n\t\tKHR_TEXTURE_TRANSFORM: 'KHR_texture_transform',\n\t\tMSFT_TEXTURE_DDS: 'MSFT_texture_dds'\n\t};\n\n\t/**\n\t * DDS Texture Extension\n\t *\n\t * Specification:\n\t * https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Vendor/MSFT_texture_dds\n\t *\n\t */\n\tfunction GLTFTextureDDSExtension() {\n\n\t\tif ( ! THREE.DDSLoader ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: Attempting to load .dds texture without importing THREE.DDSLoader' );\n\n\t\t}\n\n\t\tthis.name = EXTENSIONS.MSFT_TEXTURE_DDS;\n\t\tthis.ddsLoader = new THREE.DDSLoader();\n\n\t}\n\n\t/**\n\t * Lights Extension\n\t *\n\t * Specification: PENDING\n\t */\n\tfunction GLTFLightsExtension( json ) {\n\n\t\tthis.name = EXTENSIONS.KHR_LIGHTS_PUNCTUAL;\n\n\t\tvar extension = ( json.extensions && json.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ] ) || {};\n\t\tthis.lightDefs = extension.lights || [];\n\n\t}\n\n\tGLTFLightsExtension.prototype.loadLight = function ( lightIndex ) {\n\n\t\tvar lightDef = this.lightDefs[ lightIndex ];\n\t\tvar lightNode;\n\n\t\tvar color = new Color( 0xffffff );\n\t\tif ( lightDef.color !== undefined ) color.fromArray( lightDef.color );\n\n\t\tvar range = lightDef.range !== undefined ? lightDef.range : 0;\n\n\t\tswitch ( lightDef.type ) {\n\n\t\t\tcase 'directional':\n\t\t\t\tlightNode = new DirectionalLight( color );\n\t\t\t\tlightNode.target.position.set( 0, 0, - 1 );\n\t\t\t\tlightNode.add( lightNode.target );\n\t\t\t\tbreak;\n\n\t\t\tcase 'point':\n\t\t\t\tlightNode = new PointLight( color );\n\t\t\t\tlightNode.distance = range;\n\t\t\t\tbreak;\n\n\t\t\tcase 'spot':\n\t\t\t\tlightNode = new SpotLight( color );\n\t\t\t\tlightNode.distance = range;\n\t\t\t\t// Handle spotlight properties.\n\t\t\t\tlightDef.spot = lightDef.spot || {};\n\t\t\t\tlightDef.spot.innerConeAngle = lightDef.spot.innerConeAngle !== undefined ? lightDef.spot.innerConeAngle : 0;\n\t\t\t\tlightDef.spot.outerConeAngle = lightDef.spot.outerConeAngle !== undefined ? lightDef.spot.outerConeAngle : Math.PI / 4.0;\n\t\t\t\tlightNode.angle = lightDef.spot.outerConeAngle;\n\t\t\t\tlightNode.penumbra = 1.0 - lightDef.spot.innerConeAngle / lightDef.spot.outerConeAngle;\n\t\t\t\tlightNode.target.position.set( 0, 0, - 1 );\n\t\t\t\tlightNode.add( lightNode.target );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tthrow new Error( 'THREE.GLTFLoader: Unexpected light type, \"' + lightDef.type + '\".' );\n\n\t\t}\n\n\t\t// Some lights (e.g. spot) default to a position other than the origin. Reset the position\n\t\t// here, because node-level parsing will only override position if explicitly specified.\n\t\tlightNode.position.set( 0, 0, 0 );\n\n\t\tlightNode.decay = 2;\n\n\t\tif ( lightDef.intensity !== undefined ) lightNode.intensity = lightDef.intensity;\n\n\t\tlightNode.name = lightDef.name || ( 'light_' + lightIndex );\n\n\t\treturn Promise.resolve( lightNode );\n\n\t};\n\n\t/**\n\t * Unlit Materials Extension (pending)\n\t *\n\t * PR: https://github.com/KhronosGroup/glTF/pull/1163\n\t */\n\tfunction GLTFMaterialsUnlitExtension() {\n\n\t\tthis.name = EXTENSIONS.KHR_MATERIALS_UNLIT;\n\n\t}\n\n\tGLTFMaterialsUnlitExtension.prototype.getMaterialType = function () {\n\n\t\treturn MeshBasicMaterial;\n\n\t};\n\n\tGLTFMaterialsUnlitExtension.prototype.extendParams = function ( materialParams, materialDef, parser ) {\n\n\t\tvar pending = [];\n\n\t\tmaterialParams.color = new Color( 1.0, 1.0, 1.0 );\n\t\tmaterialParams.opacity = 1.0;\n\n\t\tvar metallicRoughness = materialDef.pbrMetallicRoughness;\n\n\t\tif ( metallicRoughness ) {\n\n\t\t\tif ( Array.isArray( metallicRoughness.baseColorFactor ) ) {\n\n\t\t\t\tvar array = metallicRoughness.baseColorFactor;\n\n\t\t\t\tmaterialParams.color.fromArray( array );\n\t\t\t\tmaterialParams.opacity = array[ 3 ];\n\n\t\t\t}\n\n\t\t\tif ( metallicRoughness.baseColorTexture !== undefined ) {\n\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'map', metallicRoughness.baseColorTexture ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Promise.all( pending );\n\n\t};\n\n\t/* BINARY EXTENSION */\n\n\tvar BINARY_EXTENSION_BUFFER_NAME = 'binary_glTF';\n\tvar BINARY_EXTENSION_HEADER_MAGIC = 'glTF';\n\tvar BINARY_EXTENSION_HEADER_LENGTH = 12;\n\tvar BINARY_EXTENSION_CHUNK_TYPES = { JSON: 0x4E4F534A, BIN: 0x004E4942 };\n\n\tfunction GLTFBinaryExtension( data ) {\n\n\t\tthis.name = EXTENSIONS.KHR_BINARY_GLTF;\n\t\tthis.content = null;\n\t\tthis.body = null;\n\n\t\tvar headerView = new DataView( data, 0, BINARY_EXTENSION_HEADER_LENGTH );\n\n\t\tthis.header = {\n\t\t\tmagic: LoaderUtils.decodeText( new Uint8Array( data.slice( 0, 4 ) ) ),\n\t\t\tversion: headerView.getUint32( 4, true ),\n\t\t\tlength: headerView.getUint32( 8, true )\n\t\t};\n\n\t\tif ( this.header.magic !== BINARY_EXTENSION_HEADER_MAGIC ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: Unsupported glTF-Binary header.' );\n\n\t\t} else if ( this.header.version < 2.0 ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: Legacy binary file detected. Use LegacyGLTFLoader instead.' );\n\n\t\t}\n\n\t\tvar chunkView = new DataView( data, BINARY_EXTENSION_HEADER_LENGTH );\n\t\tvar chunkIndex = 0;\n\n\t\twhile ( chunkIndex < chunkView.byteLength ) {\n\n\t\t\tvar chunkLength = chunkView.getUint32( chunkIndex, true );\n\t\t\tchunkIndex += 4;\n\n\t\t\tvar chunkType = chunkView.getUint32( chunkIndex, true );\n\t\t\tchunkIndex += 4;\n\n\t\t\tif ( chunkType === BINARY_EXTENSION_CHUNK_TYPES.JSON ) {\n\n\t\t\t\tvar contentArray = new Uint8Array( data, BINARY_EXTENSION_HEADER_LENGTH + chunkIndex, chunkLength );\n\t\t\t\tthis.content = LoaderUtils.decodeText( contentArray );\n\n\t\t\t} else if ( chunkType === BINARY_EXTENSION_CHUNK_TYPES.BIN ) {\n\n\t\t\t\tvar byteOffset = BINARY_EXTENSION_HEADER_LENGTH + chunkIndex;\n\t\t\t\tthis.body = data.slice( byteOffset, byteOffset + chunkLength );\n\n\t\t\t}\n\n\t\t\t// Clients must ignore chunks with unknown types.\n\n\t\t\tchunkIndex += chunkLength;\n\n\t\t}\n\n\t\tif ( this.content === null ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: JSON content not found.' );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * DRACO Mesh Compression Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/pull/874\n\t */\n\tfunction GLTFDracoMeshCompressionExtension( json, dracoLoader ) {\n\n\t\tif ( ! dracoLoader ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: No DRACOLoader instance provided.' );\n\n\t\t}\n\n\t\tthis.name = EXTENSIONS.KHR_DRACO_MESH_COMPRESSION;\n\t\tthis.json = json;\n\t\tthis.dracoLoader = dracoLoader;\n\n\t}\n\n\tGLTFDracoMeshCompressionExtension.prototype.decodePrimitive = function ( primitive, parser ) {\n\n\t\tvar json = this.json;\n\t\tvar dracoLoader = this.dracoLoader;\n\t\tvar bufferViewIndex = primitive.extensions[ this.name ].bufferView;\n\t\tvar gltfAttributeMap = primitive.extensions[ this.name ].attributes;\n\t\tvar threeAttributeMap = {};\n\t\tvar attributeNormalizedMap = {};\n\t\tvar attributeTypeMap = {};\n\n\t\tfor ( var attributeName in gltfAttributeMap ) {\n\n\t\t\tvar threeAttributeName = ATTRIBUTES[ attributeName ] || attributeName.toLowerCase();\n\n\t\t\tthreeAttributeMap[ threeAttributeName ] = gltfAttributeMap[ attributeName ];\n\n\t\t}\n\n\t\tfor ( attributeName in primitive.attributes ) {\n\n\t\t\tvar threeAttributeName = ATTRIBUTES[ attributeName ] || attributeName.toLowerCase();\n\n\t\t\tif ( gltfAttributeMap[ attributeName ] !== undefined ) {\n\n\t\t\t\tvar accessorDef = json.accessors[ primitive.attributes[ attributeName ] ];\n\t\t\t\tvar componentType = WEBGL_COMPONENT_TYPES[ accessorDef.componentType ];\n\n\t\t\t\tattributeTypeMap[ threeAttributeName ] = componentType;\n\t\t\t\tattributeNormalizedMap[ threeAttributeName ] = accessorDef.normalized === true;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn parser.getDependency( 'bufferView', bufferViewIndex ).then( function ( bufferView ) {\n\n\t\t\treturn new Promise( function ( resolve ) {\n\n\t\t\t\tdracoLoader.decodeDracoFile( bufferView, function ( geometry ) {\n\n\t\t\t\t\tfor ( var attributeName in geometry.attributes ) {\n\n\t\t\t\t\t\tvar attribute = geometry.attributes[ attributeName ];\n\t\t\t\t\t\tvar normalized = attributeNormalizedMap[ attributeName ];\n\n\t\t\t\t\t\tif ( normalized !== undefined ) attribute.normalized = normalized;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tresolve( geometry );\n\n\t\t\t\t}, threeAttributeMap, attributeTypeMap );\n\n\t\t\t} );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Texture Transform Extension\n\t *\n\t * Specification:\n\t */\n\tfunction GLTFTextureTransformExtension() {\n\n\t\tthis.name = EXTENSIONS.KHR_TEXTURE_TRANSFORM;\n\n\t}\n\n\tGLTFTextureTransformExtension.prototype.extendTexture = function ( texture, transform ) {\n\n\t\ttexture = texture.clone();\n\n\t\tif ( transform.offset !== undefined ) {\n\n\t\t\ttexture.offset.fromArray( transform.offset );\n\n\t\t}\n\n\t\tif ( transform.rotation !== undefined ) {\n\n\t\t\ttexture.rotation = transform.rotation;\n\n\t\t}\n\n\t\tif ( transform.scale !== undefined ) {\n\n\t\t\ttexture.repeat.fromArray( transform.scale );\n\n\t\t}\n\n\t\tif ( transform.texCoord !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.GLTFLoader: Custom UV sets in \"' + this.name + '\" extension not yet supported.' );\n\n\t\t}\n\n\t\ttexture.needsUpdate = true;\n\n\t\treturn texture;\n\n\t};\n\n\t/**\n\t * Specular-Glossiness Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_pbrSpecularGlossiness\n\t */\n\tfunction GLTFMaterialsPbrSpecularGlossinessExtension() {\n\n\t\treturn {\n\n\t\t\tname: EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS,\n\n\t\t\tspecularGlossinessParams: [\n\t\t\t\t'color',\n\t\t\t\t'map',\n\t\t\t\t'lightMap',\n\t\t\t\t'lightMapIntensity',\n\t\t\t\t'aoMap',\n\t\t\t\t'aoMapIntensity',\n\t\t\t\t'emissive',\n\t\t\t\t'emissiveIntensity',\n\t\t\t\t'emissiveMap',\n\t\t\t\t'bumpMap',\n\t\t\t\t'bumpScale',\n\t\t\t\t'normalMap',\n\t\t\t\t'displacementMap',\n\t\t\t\t'displacementScale',\n\t\t\t\t'displacementBias',\n\t\t\t\t'specularMap',\n\t\t\t\t'specular',\n\t\t\t\t'glossinessMap',\n\t\t\t\t'glossiness',\n\t\t\t\t'alphaMap',\n\t\t\t\t'envMap',\n\t\t\t\t'envMapIntensity',\n\t\t\t\t'refractionRatio',\n\t\t\t],\n\n\t\t\tgetMaterialType: function () {\n\n\t\t\t\treturn ShaderMaterial;\n\n\t\t\t},\n\n\t\t\textendParams: function ( materialParams, materialDef, parser ) {\n\n\t\t\t\tvar pbrSpecularGlossiness = materialDef.extensions[ this.name ];\n\n\t\t\t\tvar shader = ShaderLib[ 'standard' ];\n\n\t\t\t\tvar uniforms = UniformsUtils.clone( shader.uniforms );\n\n\t\t\t\tvar specularMapParsFragmentChunk = [\n\t\t\t\t\t'#ifdef USE_SPECULARMAP',\n\t\t\t\t\t'\tuniform sampler2D specularMap;',\n\t\t\t\t\t'#endif'\n\t\t\t\t].join( '\\n' );\n\n\t\t\t\tvar glossinessMapParsFragmentChunk = [\n\t\t\t\t\t'#ifdef USE_GLOSSINESSMAP',\n\t\t\t\t\t'\tuniform sampler2D glossinessMap;',\n\t\t\t\t\t'#endif'\n\t\t\t\t].join( '\\n' );\n\n\t\t\t\tvar specularMapFragmentChunk = [\n\t\t\t\t\t'vec3 specularFactor = specular;',\n\t\t\t\t\t'#ifdef USE_SPECULARMAP',\n\t\t\t\t\t'\tvec4 texelSpecular = texture2D( specularMap, vUv );',\n\t\t\t\t\t'\ttexelSpecular = sRGBToLinear( texelSpecular );',\n\t\t\t\t\t'\t// reads channel RGB, compatible with a glTF Specular-Glossiness (RGBA) texture',\n\t\t\t\t\t'\tspecularFactor *= texelSpecular.rgb;',\n\t\t\t\t\t'#endif'\n\t\t\t\t].join( '\\n' );\n\n\t\t\t\tvar glossinessMapFragmentChunk = [\n\t\t\t\t\t'float glossinessFactor = glossiness;',\n\t\t\t\t\t'#ifdef USE_GLOSSINESSMAP',\n\t\t\t\t\t'\tvec4 texelGlossiness = texture2D( glossinessMap, vUv );',\n\t\t\t\t\t'\t// reads channel A, compatible with a glTF Specular-Glossiness (RGBA) texture',\n\t\t\t\t\t'\tglossinessFactor *= texelGlossiness.a;',\n\t\t\t\t\t'#endif'\n\t\t\t\t].join( '\\n' );\n\n\t\t\t\tvar lightPhysicalFragmentChunk = [\n\t\t\t\t\t'PhysicalMaterial material;',\n\t\t\t\t\t'material.diffuseColor = diffuseColor.rgb;',\n\t\t\t\t\t'material.specularRoughness = clamp( 1.0 - glossinessFactor, 0.04, 1.0 );',\n\t\t\t\t\t'material.specularColor = specularFactor.rgb;',\n\t\t\t\t].join( '\\n' );\n\n\t\t\t\tvar fragmentShader = shader.fragmentShader\n\t\t\t\t\t.replace( 'uniform float roughness;', 'uniform vec3 specular;' )\n\t\t\t\t\t.replace( 'uniform float metalness;', 'uniform float glossiness;' )\n\t\t\t\t\t.replace( '#include <roughnessmap_pars_fragment>', specularMapParsFragmentChunk )\n\t\t\t\t\t.replace( '#include <metalnessmap_pars_fragment>', glossinessMapParsFragmentChunk )\n\t\t\t\t\t.replace( '#include <roughnessmap_fragment>', specularMapFragmentChunk )\n\t\t\t\t\t.replace( '#include <metalnessmap_fragment>', glossinessMapFragmentChunk )\n\t\t\t\t\t.replace( '#include <lights_physical_fragment>', lightPhysicalFragmentChunk );\n\n\t\t\t\tdelete uniforms.roughness;\n\t\t\t\tdelete uniforms.metalness;\n\t\t\t\tdelete uniforms.roughnessMap;\n\t\t\t\tdelete uniforms.metalnessMap;\n\n\t\t\t\tuniforms.specular = { value: new Color().setHex( 0x111111 ) };\n\t\t\t\tuniforms.glossiness = { value: 0.5 };\n\t\t\t\tuniforms.specularMap = { value: null };\n\t\t\t\tuniforms.glossinessMap = { value: null };\n\n\t\t\t\tmaterialParams.vertexShader = shader.vertexShader;\n\t\t\t\tmaterialParams.fragmentShader = fragmentShader;\n\t\t\t\tmaterialParams.uniforms = uniforms;\n\t\t\t\tmaterialParams.defines = { 'STANDARD': '' };\n\n\t\t\t\tmaterialParams.color = new Color( 1.0, 1.0, 1.0 );\n\t\t\t\tmaterialParams.opacity = 1.0;\n\n\t\t\t\tvar pending = [];\n\n\t\t\t\tif ( Array.isArray( pbrSpecularGlossiness.diffuseFactor ) ) {\n\n\t\t\t\t\tvar array = pbrSpecularGlossiness.diffuseFactor;\n\n\t\t\t\t\tmaterialParams.color.fromArray( array );\n\t\t\t\t\tmaterialParams.opacity = array[ 3 ];\n\n\t\t\t\t}\n\n\t\t\t\tif ( pbrSpecularGlossiness.diffuseTexture !== undefined ) {\n\n\t\t\t\t\tpending.push( parser.assignTexture( materialParams, 'map', pbrSpecularGlossiness.diffuseTexture ) );\n\n\t\t\t\t}\n\n\t\t\t\tmaterialParams.emissive = new Color( 0.0, 0.0, 0.0 );\n\t\t\t\tmaterialParams.glossiness = pbrSpecularGlossiness.glossinessFactor !== undefined ? pbrSpecularGlossiness.glossinessFactor : 1.0;\n\t\t\t\tmaterialParams.specular = new Color( 1.0, 1.0, 1.0 );\n\n\t\t\t\tif ( Array.isArray( pbrSpecularGlossiness.specularFactor ) ) {\n\n\t\t\t\t\tmaterialParams.specular.fromArray( pbrSpecularGlossiness.specularFactor );\n\n\t\t\t\t}\n\n\t\t\t\tif ( pbrSpecularGlossiness.specularGlossinessTexture !== undefined ) {\n\n\t\t\t\t\tvar specGlossMapDef = pbrSpecularGlossiness.specularGlossinessTexture;\n\t\t\t\t\tpending.push( parser.assignTexture( materialParams, 'glossinessMap', specGlossMapDef ) );\n\t\t\t\t\tpending.push( parser.assignTexture( materialParams, 'specularMap', specGlossMapDef ) );\n\n\t\t\t\t}\n\n\t\t\t\treturn Promise.all( pending );\n\n\t\t\t},\n\n\t\t\tcreateMaterial: function ( params ) {\n\n\t\t\t\t// setup material properties based on MeshStandardMaterial for Specular-Glossiness\n\n\t\t\t\tvar material = new ShaderMaterial( {\n\t\t\t\t\tdefines: params.defines,\n\t\t\t\t\tvertexShader: params.vertexShader,\n\t\t\t\t\tfragmentShader: params.fragmentShader,\n\t\t\t\t\tuniforms: params.uniforms,\n\t\t\t\t\tfog: true,\n\t\t\t\t\tlights: true,\n\t\t\t\t\topacity: params.opacity,\n\t\t\t\t\ttransparent: params.transparent\n\t\t\t\t} );\n\n\t\t\t\tmaterial.isGLTFSpecularGlossinessMaterial = true;\n\n\t\t\t\tmaterial.color = params.color;\n\n\t\t\t\tmaterial.map = params.map === undefined ? null : params.map;\n\n\t\t\t\tmaterial.lightMap = null;\n\t\t\t\tmaterial.lightMapIntensity = 1.0;\n\n\t\t\t\tmaterial.aoMap = params.aoMap === undefined ? null : params.aoMap;\n\t\t\t\tmaterial.aoMapIntensity = 1.0;\n\n\t\t\t\tmaterial.emissive = params.emissive;\n\t\t\t\tmaterial.emissiveIntensity = 1.0;\n\t\t\t\tmaterial.emissiveMap = params.emissiveMap === undefined ? null : params.emissiveMap;\n\n\t\t\t\tmaterial.bumpMap = params.bumpMap === undefined ? null : params.bumpMap;\n\t\t\t\tmaterial.bumpScale = 1;\n\n\t\t\t\tmaterial.normalMap = params.normalMap === undefined ? null : params.normalMap;\n\n\t\t\t\tif ( params.normalScale ) material.normalScale = params.normalScale;\n\n\t\t\t\tmaterial.displacementMap = null;\n\t\t\t\tmaterial.displacementScale = 1;\n\t\t\t\tmaterial.displacementBias = 0;\n\n\t\t\t\tmaterial.specularMap = params.specularMap === undefined ? null : params.specularMap;\n\t\t\t\tmaterial.specular = params.specular;\n\n\t\t\t\tmaterial.glossinessMap = params.glossinessMap === undefined ? null : params.glossinessMap;\n\t\t\t\tmaterial.glossiness = params.glossiness;\n\n\t\t\t\tmaterial.alphaMap = null;\n\n\t\t\t\tmaterial.envMap = params.envMap === undefined ? null : params.envMap;\n\t\t\t\tmaterial.envMapIntensity = 1.0;\n\n\t\t\t\tmaterial.refractionRatio = 0.98;\n\n\t\t\t\tmaterial.extensions.derivatives = true;\n\n\t\t\t\treturn material;\n\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Clones a GLTFSpecularGlossinessMaterial instance. The ShaderMaterial.copy() method can\n\t\t\t * copy only properties it knows about or inherits, and misses many properties that would\n\t\t\t * normally be defined by MeshStandardMaterial.\n\t\t\t *\n\t\t\t * This method allows GLTFSpecularGlossinessMaterials to be cloned in the process of\n\t\t\t * loading a glTF model, but cloning later (e.g. by the user) would require these changes\n\t\t\t * AND also updating `.onBeforeRender` on the parent mesh.\n\t\t\t *\n\t\t\t * @param  {ShaderMaterial} source\n\t\t\t * @return {ShaderMaterial}\n\t\t\t */\n\t\t\tcloneMaterial: function ( source ) {\n\n\t\t\t\tvar target = source.clone();\n\n\t\t\t\ttarget.isGLTFSpecularGlossinessMaterial = true;\n\n\t\t\t\tvar params = this.specularGlossinessParams;\n\n\t\t\t\tfor ( var i = 0, il = params.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar value = source[ params[ i ] ];\n\t\t\t\t\ttarget[ params[ i ] ] = ( value && value.isColor ) ? value.clone() : value;\n\n\t\t\t\t}\n\n\t\t\t\treturn target;\n\n\t\t\t},\n\n\t\t\t// Here's based on refreshUniformsCommon() and refreshUniformsStandard() in WebGLRenderer.\n\t\t\trefreshUniforms: function ( renderer, scene, camera, geometry, material, group ) {\n\n\t\t\t\tif ( material.isGLTFSpecularGlossinessMaterial !== true ) {\n\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tvar uniforms = material.uniforms;\n\t\t\t\tvar defines = material.defines;\n\n\t\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t\t\tuniforms.diffuse.value.copy( material.color );\n\t\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t\t\tuniforms.map.value = material.map;\n\t\t\t\tuniforms.specularMap.value = material.specularMap;\n\t\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\t\tuniforms.lightMap.value = material.lightMap;\n\t\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\n\n\t\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t\t\t// uv repeat and offset setting priorities\n\t\t\t\t// 1. color map\n\t\t\t\t// 2. specular map\n\t\t\t\t// 3. normal map\n\t\t\t\t// 4. bump map\n\t\t\t\t// 5. alpha map\n\t\t\t\t// 6. emissive map\n\n\t\t\t\tvar uvScaleMap;\n\n\t\t\t\tif ( material.map ) {\n\n\t\t\t\t\tuvScaleMap = material.map;\n\n\t\t\t\t} else if ( material.specularMap ) {\n\n\t\t\t\t\tuvScaleMap = material.specularMap;\n\n\t\t\t\t} else if ( material.displacementMap ) {\n\n\t\t\t\t\tuvScaleMap = material.displacementMap;\n\n\t\t\t\t} else if ( material.normalMap ) {\n\n\t\t\t\t\tuvScaleMap = material.normalMap;\n\n\t\t\t\t} else if ( material.bumpMap ) {\n\n\t\t\t\t\tuvScaleMap = material.bumpMap;\n\n\t\t\t\t} else if ( material.glossinessMap ) {\n\n\t\t\t\t\tuvScaleMap = material.glossinessMap;\n\n\t\t\t\t} else if ( material.alphaMap ) {\n\n\t\t\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t\t\t} else if ( material.emissiveMap ) {\n\n\t\t\t\t\tuvScaleMap = material.emissiveMap;\n\n\t\t\t\t}\n\n\t\t\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\t\t\t// backwards compatibility\n\t\t\t\t\tif ( uvScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\t\t\tuvScaleMap = uvScaleMap.texture;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t\t\t}\n\n\t\t\t\tif ( material.envMap ) {\n\n\t\t\t\t\tuniforms.envMap.value = material.envMap;\n\t\t\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t\t\t\t// don't flip CubeTexture envMaps, flip everything else:\n\t\t\t\t\t//  WebGLRenderTargetCube will be flipped for backwards compatibility\n\t\t\t\t\t//  WebGLRenderTargetCube.texture will be flipped because it's a Texture and NOT a CubeTexture\n\t\t\t\t\t// this check must be handled differently, or removed entirely, if WebGLRenderTargetCube uses a CubeTexture in the future\n\t\t\t\t\tuniforms.flipEnvMap.value = material.envMap.isCubeTexture ? - 1 : 1;\n\n\t\t\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t\t\t\tuniforms.maxMipLevel.value = renderer.properties.get( material.envMap ).__maxMipLevel;\n\n\t\t\t\t}\n\n\t\t\t\tuniforms.specular.value.copy( material.specular );\n\t\t\t\tuniforms.glossiness.value = material.glossiness;\n\n\t\t\t\tuniforms.glossinessMap.value = material.glossinessMap;\n\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t\t\tif ( uniforms.glossinessMap.value !== null && defines.USE_GLOSSINESSMAP === undefined ) {\n\n\t\t\t\t\tdefines.USE_GLOSSINESSMAP = '';\n\t\t\t\t\t// set USE_ROUGHNESSMAP to enable vUv\n\t\t\t\t\tdefines.USE_ROUGHNESSMAP = '';\n\n\t\t\t\t}\n\n\t\t\t\tif ( uniforms.glossinessMap.value === null && defines.USE_GLOSSINESSMAP !== undefined ) {\n\n\t\t\t\t\tdelete defines.USE_GLOSSINESSMAP;\n\t\t\t\t\tdelete defines.USE_ROUGHNESSMAP;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t/*********************************/\n\t/********** INTERPOLATION ********/\n\t/*********************************/\n\n\t// Spline Interpolation\n\t// Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#appendix-c-spline-interpolation\n\tfunction GLTFCubicSplineInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tGLTFCubicSplineInterpolant.prototype = Object.create( Interpolant.prototype );\n\tGLTFCubicSplineInterpolant.prototype.constructor = GLTFCubicSplineInterpolant;\n\n\tGLTFCubicSplineInterpolant.prototype.copySampleValue_ = function ( index ) {\n\n\t\t// Copies a sample value to the result buffer. See description of glTF\n\t\t// CUBICSPLINE values layout in interpolate_() function below.\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tvalueSize = this.valueSize,\n\t\t\toffset = index * valueSize * 3 + valueSize;\n\n\t\tfor ( var i = 0; i !== valueSize; i ++ ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t};\n\n\tGLTFCubicSplineInterpolant.prototype.beforeStart_ = GLTFCubicSplineInterpolant.prototype.copySampleValue_;\n\n\tGLTFCubicSplineInterpolant.prototype.afterEnd_ = GLTFCubicSplineInterpolant.prototype.copySampleValue_;\n\n\tGLTFCubicSplineInterpolant.prototype.interpolate_ = function ( i1, t0, t, t1 ) {\n\n\t\tvar result = this.resultBuffer;\n\t\tvar values = this.sampleValues;\n\t\tvar stride = this.valueSize;\n\n\t\tvar stride2 = stride * 2;\n\t\tvar stride3 = stride * 3;\n\n\t\tvar td = t1 - t0;\n\n\t\tvar p = ( t - t0 ) / td;\n\t\tvar pp = p * p;\n\t\tvar ppp = pp * p;\n\n\t\tvar offset1 = i1 * stride3;\n\t\tvar offset0 = offset1 - stride3;\n\n\t\tvar s2 = - 2 * ppp + 3 * pp;\n\t\tvar s3 = ppp - pp;\n\t\tvar s0 = 1 - s2;\n\t\tvar s1 = s3 - pp + p;\n\n\t\t// Layout of keyframe output values for CUBICSPLINE animations:\n\t\t//   [ inTangent_1, splineVertex_1, outTangent_1, inTangent_2, splineVertex_2, ... ]\n\t\tfor ( var i = 0; i !== stride; i ++ ) {\n\n\t\t\tvar p0 = values[ offset0 + i + stride ]; // splineVertex_k\n\t\t\tvar m0 = values[ offset0 + i + stride2 ] * td; // outTangent_k * (t_k+1 - t_k)\n\t\t\tvar p1 = values[ offset1 + i + stride ]; // splineVertex_k+1\n\t\t\tvar m1 = values[ offset1 + i ] * td; // inTangent_k+1 * (t_k+1 - t_k)\n\n\t\t\tresult[ i ] = s0 * p0 + s1 * m0 + s2 * p1 + s3 * m1;\n\n\t\t}\n\n\t\treturn result;\n\n\t};\n\n\t/*********************************/\n\t/********** INTERNALS ************/\n\t/*********************************/\n\n\t/* CONSTANTS */\n\n\tvar WEBGL_CONSTANTS = {\n\t\tFLOAT: 5126,\n\t\t//FLOAT_MAT2: 35674,\n\t\tFLOAT_MAT3: 35675,\n\t\tFLOAT_MAT4: 35676,\n\t\tFLOAT_VEC2: 35664,\n\t\tFLOAT_VEC3: 35665,\n\t\tFLOAT_VEC4: 35666,\n\t\tLINEAR: 9729,\n\t\tREPEAT: 10497,\n\t\tSAMPLER_2D: 35678,\n\t\tPOINTS: 0,\n\t\tLINES: 1,\n\t\tLINE_LOOP: 2,\n\t\tLINE_STRIP: 3,\n\t\tTRIANGLES: 4,\n\t\tTRIANGLE_STRIP: 5,\n\t\tTRIANGLE_FAN: 6,\n\t\tUNSIGNED_BYTE: 5121,\n\t\tUNSIGNED_SHORT: 5123\n\t};\n\n\tvar WEBGL_TYPE = {\n\t\t5126: Number,\n\t\t//35674: THREE.Matrix2,\n\t\t35675: Matrix3,\n\t\t35676: Matrix4,\n\t\t35664: Vector2,\n\t\t35665: Vector3,\n\t\t35666: Vector4,\n\t\t35678: Texture\n\t};\n\n\tvar WEBGL_COMPONENT_TYPES = {\n\t\t5120: Int8Array,\n\t\t5121: Uint8Array,\n\t\t5122: Int16Array,\n\t\t5123: Uint16Array,\n\t\t5125: Uint32Array,\n\t\t5126: Float32Array\n\t};\n\n\tvar WEBGL_FILTERS = {\n\t\t9728: NearestFilter,\n\t\t9729: LinearFilter,\n\t\t9984: NearestMipMapNearestFilter,\n\t\t9985: LinearMipMapNearestFilter,\n\t\t9986: NearestMipMapLinearFilter,\n\t\t9987: LinearMipMapLinearFilter\n\t};\n\n\tvar WEBGL_WRAPPINGS = {\n\t\t33071: ClampToEdgeWrapping,\n\t\t33648: MirroredRepeatWrapping,\n\t\t10497: RepeatWrapping\n\t};\n\n\tvar WEBGL_SIDES = {\n\t\t1028: BackSide, // Culling front\n\t\t1029: FrontSide // Culling back\n\t\t//1032: THREE.NoSide   // Culling front and back, what to do?\n\t};\n\n\tvar WEBGL_DEPTH_FUNCS = {\n\t\t512: NeverDepth,\n\t\t513: LessDepth,\n\t\t514: EqualDepth,\n\t\t515: LessEqualDepth,\n\t\t516: GreaterEqualDepth,\n\t\t517: NotEqualDepth,\n\t\t518: GreaterEqualDepth,\n\t\t519: AlwaysDepth\n\t};\n\n\tvar WEBGL_BLEND_EQUATIONS = {\n\t\t32774: AddEquation,\n\t\t32778: SubtractEquation,\n\t\t32779: ReverseSubtractEquation\n\t};\n\n\tvar WEBGL_BLEND_FUNCS = {\n\t\t0: ZeroFactor,\n\t\t1: OneFactor,\n\t\t768: SrcColorFactor,\n\t\t769: OneMinusSrcColorFactor,\n\t\t770: SrcAlphaFactor,\n\t\t771: OneMinusSrcAlphaFactor,\n\t\t772: DstAlphaFactor,\n\t\t773: OneMinusDstAlphaFactor,\n\t\t774: DstColorFactor,\n\t\t775: OneMinusDstColorFactor,\n\t\t776: SrcAlphaSaturateFactor\n\t\t// The followings are not supported by Three.js yet\n\t\t//32769: CONSTANT_COLOR,\n\t\t//32770: ONE_MINUS_CONSTANT_COLOR,\n\t\t//32771: CONSTANT_ALPHA,\n\t\t//32772: ONE_MINUS_CONSTANT_COLOR\n\t};\n\n\tvar WEBGL_TYPE_SIZES = {\n\t\t'SCALAR': 1,\n\t\t'VEC2': 2,\n\t\t'VEC3': 3,\n\t\t'VEC4': 4,\n\t\t'MAT2': 4,\n\t\t'MAT3': 9,\n\t\t'MAT4': 16\n\t};\n\n\tvar ATTRIBUTES = {\n\t\tPOSITION: 'position',\n\t\tNORMAL: 'normal',\n\t\tTANGENT: 'tangent',\n\t\tTEXCOORD_0: 'uv',\n\t\tTEXCOORD_1: 'uv2',\n\t\tCOLOR_0: 'color',\n\t\tWEIGHTS_0: 'skinWeight',\n\t\tJOINTS_0: 'skinIndex',\n\t};\n\n\tvar PATH_PROPERTIES = {\n\t\tscale: 'scale',\n\t\ttranslation: 'position',\n\t\trotation: 'quaternion',\n\t\tweights: 'morphTargetInfluences'\n\t};\n\n\tvar INTERPOLATION = {\n\t\tCUBICSPLINE: undefined, // We use a custom interpolant (GLTFCubicSplineInterpolation) for CUBICSPLINE tracks. Each\n\t\t                        // keyframe track will be initialized with a default interpolation type, then modified.\n\t\tLINEAR: InterpolateLinear,\n\t\tSTEP: InterpolateDiscrete\n\t};\n\n\tvar STATES_ENABLES = {\n\t\t2884: 'CULL_FACE',\n\t\t2929: 'DEPTH_TEST',\n\t\t3042: 'BLEND',\n\t\t3089: 'SCISSOR_TEST',\n\t\t32823: 'POLYGON_OFFSET_FILL',\n\t\t32926: 'SAMPLE_ALPHA_TO_COVERAGE'\n\t};\n\n\tvar ALPHA_MODES = {\n\t\tOPAQUE: 'OPAQUE',\n\t\tMASK: 'MASK',\n\t\tBLEND: 'BLEND'\n\t};\n\n\tvar MIME_TYPE_FORMATS = {\n\t\t'image/png': RGBAFormat,\n\t\t'image/jpeg': RGBFormat\n\t};\n\n\t/* UTILITY FUNCTIONS */\n\n\tfunction resolveURL( url, path ) {\n\n\t\t// Invalid URL\n\t\tif ( typeof url !== 'string' || url === '' ) return '';\n\n\t\t// Absolute URL http://,https://,//\n\t\tif ( /^(https?:)?\\/\\//i.test( url ) ) return url;\n\n\t\t// Data URI\n\t\tif ( /^data:.*,.*$/i.test( url ) ) return url;\n\n\t\t// Blob URL\n\t\tif ( /^blob:.*$/i.test( url ) ) return url;\n\n\t\t// Relative URL\n\t\treturn path + url;\n\n\t}\n\n\tvar defaultMaterial;\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#default-material\n\t */\n\tfunction createDefaultMaterial() {\n\n\t\tdefaultMaterial = defaultMaterial || new MeshStandardMaterial( {\n\t\t\tcolor: 0xFFFFFF,\n\t\t\temissive: 0x000000,\n\t\t\tmetalness: 1,\n\t\t\troughness: 1,\n\t\t\ttransparent: false,\n\t\t\tdepthTest: true,\n\t\t\tside: FrontSide\n\t\t} );\n\n\t\treturn defaultMaterial;\n\n\t}\n\n\tfunction addUnknownExtensionsToUserData( knownExtensions, object, objectDef ) {\n\n\t\t// Add unknown glTF extensions to an object's userData.\n\n\t\tfor ( var name in objectDef.extensions ) {\n\n\t\t\tif ( knownExtensions[ name ] === undefined ) {\n\n\t\t\t\tobject.userData.gltfExtensions = object.userData.gltfExtensions || {};\n\t\t\t\tobject.userData.gltfExtensions[ name ] = objectDef.extensions[ name ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * @param {Object3D|Material|BufferGeometry} object\n\t * @param {GLTF.definition} gltfDef\n\t */\n\tfunction assignExtrasToUserData( object, gltfDef ) {\n\n\t\tif ( gltfDef.extras !== undefined ) {\n\n\t\t\tif ( typeof gltfDef.extras === 'object' ) {\n\n\t\t\t\tObject.assign( object.userData, gltfDef.extras );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Ignoring primitive type .extras, ' + gltfDef.extras );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#morph-targets\n\t *\n\t * @param {BufferGeometry} geometry\n\t * @param {Array<GLTF.Target>} targets\n\t * @param {GLTFParser} parser\n\t * @return {Promise<BufferGeometry>}\n\t */\n\tfunction addMorphTargets( geometry, targets, parser ) {\n\n\t\tvar hasMorphPosition = false;\n\t\tvar hasMorphNormal = false;\n\n\t\tfor ( var i = 0, il = targets.length; i < il; i ++ ) {\n\n\t\t\tvar target = targets[ i ];\n\n\t\t\tif ( target.POSITION !== undefined ) hasMorphPosition = true;\n\t\t\tif ( target.NORMAL !== undefined ) hasMorphNormal = true;\n\n\t\t\tif ( hasMorphPosition && hasMorphNormal ) break;\n\n\t\t}\n\n\t\tif ( ! hasMorphPosition && ! hasMorphNormal ) return Promise.resolve( geometry );\n\n\t\tvar pendingPositionAccessors = [];\n\t\tvar pendingNormalAccessors = [];\n\n\t\tfor ( var i = 0, il = targets.length; i < il; i ++ ) {\n\n\t\t\tvar target = targets[ i ];\n\n\t\t\tif ( hasMorphPosition ) {\n\n\t\t\t\tvar pendingAccessor = target.POSITION !== undefined\n\t\t\t\t\t? parser.getDependency( 'accessor', target.POSITION )\n\t\t\t\t\t: geometry.attributes.position;\n\n\t\t\t\tpendingPositionAccessors.push( pendingAccessor );\n\n\t\t\t}\n\n\t\t\tif ( hasMorphNormal ) {\n\n\t\t\t\tvar pendingAccessor = target.NORMAL !== undefined\n\t\t\t\t\t? parser.getDependency( 'accessor', target.NORMAL )\n\t\t\t\t\t: geometry.attributes.normal;\n\n\t\t\t\tpendingNormalAccessors.push( pendingAccessor );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Promise.all( [\n\t\t\tPromise.all( pendingPositionAccessors ),\n\t\t\tPromise.all( pendingNormalAccessors )\n\t\t] ).then( function ( accessors ) {\n\n\t\t\tvar morphPositions = accessors[ 0 ];\n\t\t\tvar morphNormals = accessors[ 1 ];\n\n\t\t\t// Clone morph target accessors before modifying them.\n\n\t\t\tfor ( var i = 0, il = morphPositions.length; i < il; i ++ ) {\n\n\t\t\t\tif ( geometry.attributes.position === morphPositions[ i ] ) continue;\n\n\t\t\t\tmorphPositions[ i ] = cloneBufferAttribute( morphPositions[ i ] );\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0, il = morphNormals.length; i < il; i ++ ) {\n\n\t\t\t\tif ( geometry.attributes.normal === morphNormals[ i ] ) continue;\n\n\t\t\t\tmorphNormals[ i ] = cloneBufferAttribute( morphNormals[ i ] );\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0, il = targets.length; i < il; i ++ ) {\n\n\t\t\t\tvar target = targets[ i ];\n\t\t\t\tvar attributeName = 'morphTarget' + i;\n\n\t\t\t\tif ( hasMorphPosition ) {\n\n\t\t\t\t\t// Three.js morph position is absolute value. The formula is\n\t\t\t\t\t//   basePosition\n\t\t\t\t\t//     + weight0 * ( morphPosition0 - basePosition )\n\t\t\t\t\t//     + weight1 * ( morphPosition1 - basePosition )\n\t\t\t\t\t//     ...\n\t\t\t\t\t// while the glTF one is relative\n\t\t\t\t\t//   basePosition\n\t\t\t\t\t//     + weight0 * glTFmorphPosition0\n\t\t\t\t\t//     + weight1 * glTFmorphPosition1\n\t\t\t\t\t//     ...\n\t\t\t\t\t// then we need to convert from relative to absolute here.\n\n\t\t\t\t\tif ( target.POSITION !== undefined ) {\n\n\t\t\t\t\t\tvar positionAttribute = morphPositions[ i ];\n\t\t\t\t\t\tpositionAttribute.name = attributeName;\n\n\t\t\t\t\t\tvar position = geometry.attributes.position;\n\n\t\t\t\t\t\tfor ( var j = 0, jl = positionAttribute.count; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tpositionAttribute.setXYZ(\n\t\t\t\t\t\t\t\tj,\n\t\t\t\t\t\t\t\tpositionAttribute.getX( j ) + position.getX( j ),\n\t\t\t\t\t\t\t\tpositionAttribute.getY( j ) + position.getY( j ),\n\t\t\t\t\t\t\t\tpositionAttribute.getZ( j ) + position.getZ( j )\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasMorphNormal ) {\n\n\t\t\t\t\t// see target.POSITION's comment\n\n\t\t\t\t\tif ( target.NORMAL !== undefined ) {\n\n\t\t\t\t\t\tvar normalAttribute = morphNormals[ i ];\n\t\t\t\t\t\tnormalAttribute.name = attributeName;\n\n\t\t\t\t\t\tvar normal = geometry.attributes.normal;\n\n\t\t\t\t\t\tfor ( var j = 0, jl = normalAttribute.count; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tnormalAttribute.setXYZ(\n\t\t\t\t\t\t\t\tj,\n\t\t\t\t\t\t\t\tnormalAttribute.getX( j ) + normal.getX( j ),\n\t\t\t\t\t\t\t\tnormalAttribute.getY( j ) + normal.getY( j ),\n\t\t\t\t\t\t\t\tnormalAttribute.getZ( j ) + normal.getZ( j )\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasMorphPosition ) geometry.morphAttributes.position = morphPositions;\n\t\t\tif ( hasMorphNormal ) geometry.morphAttributes.normal = morphNormals;\n\n\t\t\treturn geometry;\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * @param {Mesh} mesh\n\t * @param {GLTF.Mesh} meshDef\n\t */\n\tfunction updateMorphTargets( mesh, meshDef ) {\n\n\t\tmesh.updateMorphTargets();\n\n\t\tif ( meshDef.weights !== undefined ) {\n\n\t\t\tfor ( var i = 0, il = meshDef.weights.length; i < il; i ++ ) {\n\n\t\t\t\tmesh.morphTargetInfluences[ i ] = meshDef.weights[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// .extras has user-defined data, so check that .extras.targetNames is an array.\n\t\tif ( meshDef.extras && Array.isArray( meshDef.extras.targetNames ) ) {\n\n\t\t\tvar targetNames = meshDef.extras.targetNames;\n\n\t\t\tif ( mesh.morphTargetInfluences.length === targetNames.length ) {\n\n\t\t\t\tmesh.morphTargetDictionary = {};\n\n\t\t\t\tfor ( var i = 0, il = targetNames.length; i < il; i ++ ) {\n\n\t\t\t\t\tmesh.morphTargetDictionary[ targetNames[ i ] ] = i;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Invalid extras.targetNames length. Ignoring names.' );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\tfunction isObjectEqual( a, b ) {\n\n\t\tif ( Object.keys( a ).length !== Object.keys( b ).length ) return false;\n\n\t\tfor ( var key in a ) {\n\n\t\t\tif ( a[ key ] !== b[ key ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfunction createPrimitiveKey( primitiveDef ) {\n\n\t\tvar dracoExtension = primitiveDef.extensions && primitiveDef.extensions[ EXTENSIONS.KHR_DRACO_MESH_COMPRESSION ];\n\t\tvar geometryKey;\n\n\t\tif ( dracoExtension ) {\n\n\t\t\tgeometryKey = 'draco:' + dracoExtension.bufferView\n\t\t\t\t+ ':' + dracoExtension.indices\n\t\t\t\t+ ':' + createAttributesKey( dracoExtension.attributes );\n\n\t\t} else {\n\n\t\t\tgeometryKey = primitiveDef.indices + ':' + createAttributesKey( primitiveDef.attributes ) + ':' + primitiveDef.mode;\n\n\t\t}\n\n\t\treturn geometryKey;\n\n\t}\n\n\tfunction createAttributesKey( attributes ) {\n\n\t\tvar attributesKey = '';\n\n\t\tvar keys = Object.keys( attributes ).sort();\n\n\t\tfor ( var i = 0, il = keys.length; i < il; i ++ ) {\n\n\t\t\tattributesKey += keys[ i ] + ':' + attributes[ keys[ i ] ] + ';';\n\n\t\t}\n\n\t\treturn attributesKey;\n\n\t}\n\n\tfunction cloneBufferAttribute( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\tvar count = attribute.count;\n\t\t\tvar itemSize = attribute.itemSize;\n\t\t\tvar array = attribute.array.slice( 0, count * itemSize );\n\n\t\t\tfor ( var i = 0, j = 0; i < count; ++ i ) {\n\n\t\t\t\tarray[ j ++ ] = attribute.getX( i );\n\t\t\t\tif ( itemSize >= 2 ) array[ j ++ ] = attribute.getY( i );\n\t\t\t\tif ( itemSize >= 3 ) array[ j ++ ] = attribute.getZ( i );\n\t\t\t\tif ( itemSize >= 4 ) array[ j ++ ] = attribute.getW( i );\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( array, itemSize, attribute.normalized );\n\n\t\t}\n\n\t\treturn attribute.clone();\n\n\t}\n\n\t/* GLTF PARSER */\n\n\tfunction GLTFParser( json, extensions, options ) {\n\n\t\tthis.json = json || {};\n\t\tthis.extensions = extensions || {};\n\t\tthis.options = options || {};\n\n\t\t// loader object cache\n\t\tthis.cache = new GLTFRegistry();\n\n\t\t// BufferGeometry caching\n\t\tthis.primitiveCache = {};\n\n\t\tthis.textureLoader = new TextureLoader( this.options.manager );\n\t\tthis.textureLoader.setCrossOrigin( this.options.crossOrigin );\n\n\t\tthis.fileLoader = new FileLoader( this.options.manager );\n\t\tthis.fileLoader.setResponseType( 'arraybuffer' );\n\n\t}\n\n\tGLTFParser.prototype.parse = function ( onLoad, onError ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\t\tvar extensions = this.extensions;\n\n\t\t// Clear the loader cache\n\t\tthis.cache.removeAll();\n\n\t\t// Mark the special nodes/meshes in json for efficient parse\n\t\tthis.markDefs();\n\n\t\tPromise.all( [\n\n\t\t\tthis.getDependencies( 'scene' ),\n\t\t\tthis.getDependencies( 'animation' ),\n\t\t\tthis.getDependencies( 'camera' ),\n\n\t\t] ).then( function ( dependencies ) {\n\n\t\t\tvar result = {\n\t\t\t\tscene: dependencies[ 0 ][ json.scene || 0 ],\n\t\t\t\tscenes: dependencies[ 0 ],\n\t\t\t\tanimations: dependencies[ 1 ],\n\t\t\t\tcameras: dependencies[ 2 ],\n\t\t\t\tasset: json.asset,\n\t\t\t\tparser: parser,\n\t\t\t\tuserData: {}\n\t\t\t};\n\n\t\t\taddUnknownExtensionsToUserData( extensions, result, json );\n\n\t\t\tonLoad( result );\n\n\t\t} ).catch( onError );\n\n\t};\n\n\t/**\n\t * Marks the special nodes/meshes in json for efficient parse.\n\t */\n\tGLTFParser.prototype.markDefs = function () {\n\n\t\tvar nodeDefs = this.json.nodes || [];\n\t\tvar skinDefs = this.json.skins || [];\n\t\tvar meshDefs = this.json.meshes || [];\n\n\t\tvar meshReferences = {};\n\t\tvar meshUses = {};\n\n\t\t// Nothing in the node definition indicates whether it is a Bone or an\n\t\t// Object3D. Use the skins' joint references to mark bones.\n\t\tfor ( var skinIndex = 0, skinLength = skinDefs.length; skinIndex < skinLength; skinIndex ++ ) {\n\n\t\t\tvar joints = skinDefs[ skinIndex ].joints;\n\n\t\t\tfor ( var i = 0, il = joints.length; i < il; i ++ ) {\n\n\t\t\t\tnodeDefs[ joints[ i ] ].isBone = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Meshes can (and should) be reused by multiple nodes in a glTF asset. To\n\t\t// avoid having more than one Mesh with the same name, count\n\t\t// references and rename instances below.\n\t\t//\n\t\t// Example: CesiumMilkTruck sample model reuses \"Wheel\" meshes.\n\t\tfor ( var nodeIndex = 0, nodeLength = nodeDefs.length; nodeIndex < nodeLength; nodeIndex ++ ) {\n\n\t\t\tvar nodeDef = nodeDefs[ nodeIndex ];\n\n\t\t\tif ( nodeDef.mesh !== undefined ) {\n\n\t\t\t\tif ( meshReferences[ nodeDef.mesh ] === undefined ) {\n\n\t\t\t\t\tmeshReferences[ nodeDef.mesh ] = meshUses[ nodeDef.mesh ] = 0;\n\n\t\t\t\t}\n\n\t\t\t\tmeshReferences[ nodeDef.mesh ] ++;\n\n\t\t\t\t// Nothing in the mesh definition indicates whether it is\n\t\t\t\t// a SkinnedMesh or Mesh. Use the node's mesh reference\n\t\t\t\t// to mark SkinnedMesh if node has skin.\n\t\t\t\tif ( nodeDef.skin !== undefined ) {\n\n\t\t\t\t\tmeshDefs[ nodeDef.mesh ].isSkinnedMesh = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.json.meshReferences = meshReferences;\n\t\tthis.json.meshUses = meshUses;\n\n\t};\n\n\t/**\n\t * Requests the specified dependency asynchronously, with caching.\n\t * @param {string} type\n\t * @param {number} index\n\t * @return {Promise<Object3D|Material|Texture|AnimationClip|ArrayBuffer|Object>}\n\t */\n\tGLTFParser.prototype.getDependency = function ( type, index ) {\n\n\t\tvar cacheKey = type + ':' + index;\n\t\tvar dependency = this.cache.get( cacheKey );\n\n\t\tif ( ! dependency ) {\n\n\t\t\tswitch ( type ) {\n\n\t\t\t\tcase 'scene':\n\t\t\t\t\tdependency = this.loadScene( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'node':\n\t\t\t\t\tdependency = this.loadNode( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'mesh':\n\t\t\t\t\tdependency = this.loadMesh( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'accessor':\n\t\t\t\t\tdependency = this.loadAccessor( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bufferView':\n\t\t\t\t\tdependency = this.loadBufferView( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'buffer':\n\t\t\t\t\tdependency = this.loadBuffer( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'material':\n\t\t\t\t\tdependency = this.loadMaterial( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'texture':\n\t\t\t\t\tdependency = this.loadTexture( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'skin':\n\t\t\t\t\tdependency = this.loadSkin( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'animation':\n\t\t\t\t\tdependency = this.loadAnimation( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'camera':\n\t\t\t\t\tdependency = this.loadCamera( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'light':\n\t\t\t\t\tdependency = this.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ].loadLight( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error( 'Unknown type: ' + type );\n\n\t\t\t}\n\n\t\t\tthis.cache.add( cacheKey, dependency );\n\n\t\t}\n\n\t\treturn dependency;\n\n\t};\n\n\t/**\n\t * Requests all dependencies of the specified type asynchronously, with caching.\n\t * @param {string} type\n\t * @return {Promise<Array<Object>>}\n\t */\n\tGLTFParser.prototype.getDependencies = function ( type ) {\n\n\t\tvar dependencies = this.cache.get( type );\n\n\t\tif ( ! dependencies ) {\n\n\t\t\tvar parser = this;\n\t\t\tvar defs = this.json[ type + ( type === 'mesh' ? 'es' : 's' ) ] || [];\n\n\t\t\tdependencies = Promise.all( defs.map( function ( def, index ) {\n\n\t\t\t\treturn parser.getDependency( type, index );\n\n\t\t\t} ) );\n\n\t\t\tthis.cache.add( type, dependencies );\n\n\t\t}\n\n\t\treturn dependencies;\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\n\t * @param {number} bufferIndex\n\t * @return {Promise<ArrayBuffer>}\n\t */\n\tGLTFParser.prototype.loadBuffer = function ( bufferIndex ) {\n\n\t\tvar bufferDef = this.json.buffers[ bufferIndex ];\n\t\tvar loader = this.fileLoader;\n\n\t\tif ( bufferDef.type && bufferDef.type !== 'arraybuffer' ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: ' + bufferDef.type + ' buffer type is not supported.' );\n\n\t\t}\n\n\t\t// If present, GLB container is required to be the first buffer.\n\t\tif ( bufferDef.uri === undefined && bufferIndex === 0 ) {\n\n\t\t\treturn Promise.resolve( this.extensions[ EXTENSIONS.KHR_BINARY_GLTF ].body );\n\n\t\t}\n\n\t\tvar options = this.options;\n\n\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\tloader.load( resolveURL( bufferDef.uri, options.path ), resolve, undefined, function () {\n\n\t\t\t\treject( new Error( 'THREE.GLTFLoader: Failed to load buffer \"' + bufferDef.uri + '\".' ) );\n\n\t\t\t} );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\n\t * @param {number} bufferViewIndex\n\t * @return {Promise<ArrayBuffer>}\n\t */\n\tGLTFParser.prototype.loadBufferView = function ( bufferViewIndex ) {\n\n\t\tvar bufferViewDef = this.json.bufferViews[ bufferViewIndex ];\n\n\t\treturn this.getDependency( 'buffer', bufferViewDef.buffer ).then( function ( buffer ) {\n\n\t\t\tvar byteLength = bufferViewDef.byteLength || 0;\n\t\t\tvar byteOffset = bufferViewDef.byteOffset || 0;\n\t\t\treturn buffer.slice( byteOffset, byteOffset + byteLength );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#accessors\n\t * @param {number} accessorIndex\n\t * @return {Promise<BufferAttribute|InterleavedBufferAttribute>}\n\t */\n\tGLTFParser.prototype.loadAccessor = function ( accessorIndex ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\n\t\tvar accessorDef = this.json.accessors[ accessorIndex ];\n\n\t\tif ( accessorDef.bufferView === undefined && accessorDef.sparse === undefined ) {\n\n\t\t\t// Ignore empty accessors, which may be used to declare runtime\n\t\t\t// information about attributes coming from another source (e.g. Draco\n\t\t\t// compression extension).\n\t\t\treturn Promise.resolve( null );\n\n\t\t}\n\n\t\tvar pendingBufferViews = [];\n\n\t\tif ( accessorDef.bufferView !== undefined ) {\n\n\t\t\tpendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.bufferView ) );\n\n\t\t} else {\n\n\t\t\tpendingBufferViews.push( null );\n\n\t\t}\n\n\t\tif ( accessorDef.sparse !== undefined ) {\n\n\t\t\tpendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.sparse.indices.bufferView ) );\n\t\t\tpendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.sparse.values.bufferView ) );\n\n\t\t}\n\n\t\treturn Promise.all( pendingBufferViews ).then( function ( bufferViews ) {\n\n\t\t\tvar bufferView = bufferViews[ 0 ];\n\n\t\t\tvar itemSize = WEBGL_TYPE_SIZES[ accessorDef.type ];\n\t\t\tvar TypedArray = WEBGL_COMPONENT_TYPES[ accessorDef.componentType ];\n\n\t\t\t// For VEC3: itemSize is 3, elementBytes is 4, itemBytes is 12.\n\t\t\tvar elementBytes = TypedArray.BYTES_PER_ELEMENT;\n\t\t\tvar itemBytes = elementBytes * itemSize;\n\t\t\tvar byteOffset = accessorDef.byteOffset || 0;\n\t\t\tvar byteStride = accessorDef.bufferView !== undefined ? json.bufferViews[ accessorDef.bufferView ].byteStride : undefined;\n\t\t\tvar normalized = accessorDef.normalized === true;\n\t\t\tvar array, bufferAttribute;\n\n\t\t\t// The buffer is not interleaved if the stride is the item size in bytes.\n\t\t\tif ( byteStride && byteStride !== itemBytes ) {\n\n\t\t\t\tvar ibCacheKey = 'InterleavedBuffer:' + accessorDef.bufferView + ':' + accessorDef.componentType;\n\t\t\t\tvar ib = parser.cache.get( ibCacheKey );\n\n\t\t\t\tif ( ! ib ) {\n\n\t\t\t\t\t// Use the full buffer if it's interleaved.\n\t\t\t\t\tarray = new TypedArray( bufferView );\n\n\t\t\t\t\t// Integer parameters to IB/IBA are in array elements, not bytes.\n\t\t\t\t\tib = new InterleavedBuffer( array, byteStride / elementBytes );\n\n\t\t\t\t\tparser.cache.add( ibCacheKey, ib );\n\n\t\t\t\t}\n\n\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( ib, itemSize, byteOffset / elementBytes, normalized );\n\n\t\t\t} else {\n\n\t\t\t\tif ( bufferView === null ) {\n\n\t\t\t\t\tarray = new TypedArray( accessorDef.count * itemSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tarray = new TypedArray( bufferView, byteOffset, accessorDef.count * itemSize );\n\n\t\t\t\t}\n\n\t\t\t\tbufferAttribute = new BufferAttribute( array, itemSize, normalized );\n\n\t\t\t}\n\n\t\t\t// https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#sparse-accessors\n\t\t\tif ( accessorDef.sparse !== undefined ) {\n\n\t\t\t\tvar itemSizeIndices = WEBGL_TYPE_SIZES.SCALAR;\n\t\t\t\tvar TypedArrayIndices = WEBGL_COMPONENT_TYPES[ accessorDef.sparse.indices.componentType ];\n\n\t\t\t\tvar byteOffsetIndices = accessorDef.sparse.indices.byteOffset || 0;\n\t\t\t\tvar byteOffsetValues = accessorDef.sparse.values.byteOffset || 0;\n\n\t\t\t\tvar sparseIndices = new TypedArrayIndices( bufferViews[ 1 ], byteOffsetIndices, accessorDef.sparse.count * itemSizeIndices );\n\t\t\t\tvar sparseValues = new TypedArray( bufferViews[ 2 ], byteOffsetValues, accessorDef.sparse.count * itemSize );\n\n\t\t\t\tif ( bufferView !== null ) {\n\n\t\t\t\t\t// Avoid modifying the original ArrayBuffer, if the bufferView wasn't initialized with zeroes.\n\t\t\t\t\tbufferAttribute.setArray( bufferAttribute.array.slice() );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var i = 0, il = sparseIndices.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar index = sparseIndices[ i ];\n\n\t\t\t\t\tbufferAttribute.setX( index, sparseValues[ i * itemSize ] );\n\t\t\t\t\tif ( itemSize >= 2 ) bufferAttribute.setY( index, sparseValues[ i * itemSize + 1 ] );\n\t\t\t\t\tif ( itemSize >= 3 ) bufferAttribute.setZ( index, sparseValues[ i * itemSize + 2 ] );\n\t\t\t\t\tif ( itemSize >= 4 ) bufferAttribute.setW( index, sparseValues[ i * itemSize + 3 ] );\n\t\t\t\t\tif ( itemSize >= 5 ) throw new Error( 'THREE.GLTFLoader: Unsupported itemSize in sparse BufferAttribute.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn bufferAttribute;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#textures\n\t * @param {number} textureIndex\n\t * @return {Promise<Texture>}\n\t */\n\tGLTFParser.prototype.loadTexture = function ( textureIndex ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\t\tvar options = this.options;\n\t\tvar textureLoader = this.textureLoader;\n\n\t\tvar URL = window.URL || window.webkitURL;\n\n\t\tvar textureDef = json.textures[ textureIndex ];\n\n\t\tvar textureExtensions = textureDef.extensions || {};\n\n\t\tvar source;\n\n\t\tif ( textureExtensions[ EXTENSIONS.MSFT_TEXTURE_DDS ] ) {\n\n\t\t\tsource = json.images[ textureExtensions[ EXTENSIONS.MSFT_TEXTURE_DDS ].source ];\n\n\t\t} else {\n\n\t\t\tsource = json.images[ textureDef.source ];\n\n\t\t}\n\n\t\tvar sourceURI = source.uri;\n\t\tvar isObjectURL = false;\n\n\t\tif ( source.bufferView !== undefined ) {\n\n\t\t\t// Load binary image data from bufferView, if provided.\n\n\t\t\tsourceURI = parser.getDependency( 'bufferView', source.bufferView ).then( function ( bufferView ) {\n\n\t\t\t\tisObjectURL = true;\n\t\t\t\tvar blob = new Blob( [ bufferView ], { type: source.mimeType } );\n\t\t\t\tsourceURI = URL.createObjectURL( blob );\n\t\t\t\treturn sourceURI;\n\n\t\t\t} );\n\n\t\t}\n\n\t\treturn Promise.resolve( sourceURI ).then( function ( sourceURI ) {\n\n\t\t\t// Load Texture resource.\n\n\t\t\tvar loader = Loader.Handlers.get( sourceURI );\n\n\t\t\tif ( ! loader ) {\n\n\t\t\t\tloader = textureExtensions[ EXTENSIONS.MSFT_TEXTURE_DDS ]\n\t\t\t\t\t? parser.extensions[ EXTENSIONS.MSFT_TEXTURE_DDS ].ddsLoader\n\t\t\t\t\t: textureLoader;\n\n\t\t\t}\n\n\t\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\t\tloader.load( resolveURL( sourceURI, options.path ), resolve, undefined, reject );\n\n\t\t\t} );\n\n\t\t} ).then( function ( texture ) {\n\n\t\t\t// Clean up resources and configure Texture.\n\n\t\t\tif ( isObjectURL === true ) {\n\n\t\t\t\tURL.revokeObjectURL( sourceURI );\n\n\t\t\t}\n\n\t\t\ttexture.flipY = false;\n\n\t\t\tif ( textureDef.name !== undefined ) texture.name = textureDef.name;\n\n\t\t\t// Ignore unknown mime types, like DDS files.\n\t\t\tif ( source.mimeType in MIME_TYPE_FORMATS ) {\n\n\t\t\t\ttexture.format = MIME_TYPE_FORMATS[ source.mimeType ];\n\n\t\t\t}\n\n\t\t\tvar samplers = json.samplers || {};\n\t\t\tvar sampler = samplers[ textureDef.sampler ] || {};\n\n\t\t\ttexture.magFilter = WEBGL_FILTERS[ sampler.magFilter ] || LinearFilter;\n\t\t\ttexture.minFilter = WEBGL_FILTERS[ sampler.minFilter ] || LinearMipMapLinearFilter;\n\t\t\ttexture.wrapS = WEBGL_WRAPPINGS[ sampler.wrapS ] || RepeatWrapping;\n\t\t\ttexture.wrapT = WEBGL_WRAPPINGS[ sampler.wrapT ] || RepeatWrapping;\n\n\t\t\treturn texture;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Asynchronously assigns a texture to the given material parameters.\n\t * @param {Object} materialParams\n\t * @param {string} mapName\n\t * @param {Object} mapDef\n\t * @return {Promise}\n\t */\n\tGLTFParser.prototype.assignTexture = function ( materialParams, mapName, mapDef ) {\n\n\t\tvar parser = this;\n\n\t\treturn this.getDependency( 'texture', mapDef.index ).then( function ( texture ) {\n\n\t\t\tif ( ! texture.isCompressedTexture ) {\n\n\t\t\t\tswitch ( mapName ) {\n\n\t\t\t\t\tcase 'aoMap':\n\t\t\t\t\tcase 'emissiveMap':\n\t\t\t\t\tcase 'metalnessMap':\n\t\t\t\t\tcase 'normalMap':\n\t\t\t\t\tcase 'roughnessMap':\n\t\t\t\t\t\ttexture.format = RGBFormat;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( parser.extensions[ EXTENSIONS.KHR_TEXTURE_TRANSFORM ] ) {\n\n\t\t\t\tvar transform = mapDef.extensions !== undefined ? mapDef.extensions[ EXTENSIONS.KHR_TEXTURE_TRANSFORM ] : undefined;\n\n\t\t\t\tif ( transform ) {\n\n\t\t\t\t\ttexture = parser.extensions[ EXTENSIONS.KHR_TEXTURE_TRANSFORM ].extendTexture( texture, transform );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tmaterialParams[ mapName ] = texture;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Assigns final material to a Mesh, Line, or Points instance. The instance\n\t * already has a material (generated from the glTF material options alone)\n\t * but reuse of the same glTF material may require multiple threejs materials\n\t * to accomodate different primitive types, defines, etc. New materials will\n\t * be created if necessary, and reused from a cache.\n\t * @param  {Object3D} mesh Mesh, Line, or Points instance.\n\t */\n\tGLTFParser.prototype.assignFinalMaterial = function ( mesh ) {\n\n\t\tvar geometry = mesh.geometry;\n\t\tvar material = mesh.material;\n\t\tvar extensions = this.extensions;\n\n\t\tvar useVertexTangents = geometry.attributes.tangent !== undefined;\n\t\tvar useVertexColors = geometry.attributes.color !== undefined;\n\t\tvar useFlatShading = geometry.attributes.normal === undefined;\n\t\tvar useSkinning = mesh.isSkinnedMesh === true;\n\t\tvar useMorphTargets = Object.keys( geometry.morphAttributes ).length > 0;\n\t\tvar useMorphNormals = useMorphTargets && geometry.morphAttributes.normal !== undefined;\n\n\t\tif ( mesh.isPoints ) {\n\n\t\t\tvar cacheKey = 'PointsMaterial:' + material.uuid;\n\n\t\t\tvar pointsMaterial = this.cache.get( cacheKey );\n\n\t\t\tif ( ! pointsMaterial ) {\n\n\t\t\t\tpointsMaterial = new PointsMaterial();\n\t\t\t\tMaterial.prototype.copy.call( pointsMaterial, material );\n\t\t\t\tpointsMaterial.color.copy( material.color );\n\t\t\t\tpointsMaterial.map = material.map;\n\t\t\t\tpointsMaterial.lights = false; // PointsMaterial doesn't support lights yet\n\n\t\t\t\tthis.cache.add( cacheKey, pointsMaterial );\n\n\t\t\t}\n\n\t\t\tmaterial = pointsMaterial;\n\n\t\t} else if ( mesh.isLine ) {\n\n\t\t\tvar cacheKey = 'LineBasicMaterial:' + material.uuid;\n\n\t\t\tvar lineMaterial = this.cache.get( cacheKey );\n\n\t\t\tif ( ! lineMaterial ) {\n\n\t\t\t\tlineMaterial = new LineBasicMaterial();\n\t\t\t\tMaterial.prototype.copy.call( lineMaterial, material );\n\t\t\t\tlineMaterial.color.copy( material.color );\n\t\t\t\tlineMaterial.lights = false; // LineBasicMaterial doesn't support lights yet\n\n\t\t\t\tthis.cache.add( cacheKey, lineMaterial );\n\n\t\t\t}\n\n\t\t\tmaterial = lineMaterial;\n\n\t\t}\n\n\t\t// Clone the material if it will be modified\n\t\tif ( useVertexTangents || useVertexColors || useFlatShading || useSkinning || useMorphTargets ) {\n\n\t\t\tvar cacheKey = 'ClonedMaterial:' + material.uuid + ':';\n\n\t\t\tif ( material.isGLTFSpecularGlossinessMaterial ) cacheKey += 'specular-glossiness:';\n\t\t\tif ( useSkinning ) cacheKey += 'skinning:';\n\t\t\tif ( useVertexTangents ) cacheKey += 'vertex-tangents:';\n\t\t\tif ( useVertexColors ) cacheKey += 'vertex-colors:';\n\t\t\tif ( useFlatShading ) cacheKey += 'flat-shading:';\n\t\t\tif ( useMorphTargets ) cacheKey += 'morph-targets:';\n\t\t\tif ( useMorphNormals ) cacheKey += 'morph-normals:';\n\n\t\t\tvar cachedMaterial = this.cache.get( cacheKey );\n\n\t\t\tif ( ! cachedMaterial ) {\n\n\t\t\t\tcachedMaterial = material.isGLTFSpecularGlossinessMaterial\n\t\t\t\t\t? extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ].cloneMaterial( material )\n\t\t\t\t\t: material.clone();\n\n\t\t\t\tif ( useSkinning ) cachedMaterial.skinning = true;\n\t\t\t\tif ( useVertexTangents ) cachedMaterial.vertexTangents = true;\n\t\t\t\tif ( useVertexColors ) cachedMaterial.vertexColors = VertexColors;\n\t\t\t\tif ( useFlatShading ) cachedMaterial.flatShading = true;\n\t\t\t\tif ( useMorphTargets ) cachedMaterial.morphTargets = true;\n\t\t\t\tif ( useMorphNormals ) cachedMaterial.morphNormals = true;\n\n\t\t\t\tthis.cache.add( cacheKey, cachedMaterial );\n\n\t\t\t}\n\n\t\t\tmaterial = cachedMaterial;\n\n\t\t}\n\n\t\t// workarounds for mesh and geometry\n\n\t\tif ( material.aoMap && geometry.attributes.uv2 === undefined && geometry.attributes.uv !== undefined ) {\n\n\t\t\tconsole.log( 'THREE.GLTFLoader: Duplicating UVs to support aoMap.' );\n\t\t\tgeometry.addAttribute( 'uv2', new BufferAttribute( geometry.attributes.uv.array, 2 ) );\n\n\t\t}\n\n\t\tif ( material.isGLTFSpecularGlossinessMaterial ) {\n\n\t\t\t// for GLTFSpecularGlossinessMaterial(ShaderMaterial) uniforms runtime update\n\t\t\tmesh.onBeforeRender = extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ].refreshUniforms;\n\n\t\t}\n\n\t\tmesh.material = material;\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#materials\n\t * @param {number} materialIndex\n\t * @return {Promise<Material>}\n\t */\n\tGLTFParser.prototype.loadMaterial = function ( materialIndex ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\t\tvar extensions = this.extensions;\n\t\tvar materialDef = json.materials[ materialIndex ];\n\n\t\tvar materialType;\n\t\tvar materialParams = {};\n\t\tvar materialExtensions = materialDef.extensions || {};\n\n\t\tvar pending = [];\n\n\t\tif ( materialExtensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ] ) {\n\n\t\t\tvar sgExtension = extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ];\n\t\t\tmaterialType = sgExtension.getMaterialType();\n\t\t\tpending.push( sgExtension.extendParams( materialParams, materialDef, parser ) );\n\n\t\t} else if ( materialExtensions[ EXTENSIONS.KHR_MATERIALS_UNLIT ] ) {\n\n\t\t\tvar kmuExtension = extensions[ EXTENSIONS.KHR_MATERIALS_UNLIT ];\n\t\t\tmaterialType = kmuExtension.getMaterialType();\n\t\t\tpending.push( kmuExtension.extendParams( materialParams, materialDef, parser ) );\n\n\t\t} else {\n\n\t\t\t// Specification:\n\t\t\t// https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#metallic-roughness-material\n\n\t\t\tmaterialType = MeshStandardMaterial;\n\n\t\t\tvar metallicRoughness = materialDef.pbrMetallicRoughness || {};\n\n\t\t\tmaterialParams.color = new Color( 1.0, 1.0, 1.0 );\n\t\t\tmaterialParams.opacity = 1.0;\n\n\t\t\tif ( Array.isArray( metallicRoughness.baseColorFactor ) ) {\n\n\t\t\t\tvar array = metallicRoughness.baseColorFactor;\n\n\t\t\t\tmaterialParams.color.fromArray( array );\n\t\t\t\tmaterialParams.opacity = array[ 3 ];\n\n\t\t\t}\n\n\t\t\tif ( metallicRoughness.baseColorTexture !== undefined ) {\n\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'map', metallicRoughness.baseColorTexture ) );\n\n\t\t\t}\n\n\t\t\tmaterialParams.metalness = metallicRoughness.metallicFactor !== undefined ? metallicRoughness.metallicFactor : 1.0;\n\t\t\tmaterialParams.roughness = metallicRoughness.roughnessFactor !== undefined ? metallicRoughness.roughnessFactor : 1.0;\n\n\t\t\tif ( metallicRoughness.metallicRoughnessTexture !== undefined ) {\n\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'metalnessMap', metallicRoughness.metallicRoughnessTexture ) );\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'roughnessMap', metallicRoughness.metallicRoughnessTexture ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( materialDef.doubleSided === true ) {\n\n\t\t\tmaterialParams.side = DoubleSide;\n\n\t\t}\n\n\t\tvar alphaMode = materialDef.alphaMode || ALPHA_MODES.OPAQUE;\n\n\t\tif ( alphaMode === ALPHA_MODES.BLEND ) {\n\n\t\t\tmaterialParams.transparent = true;\n\n\t\t} else {\n\n\t\t\tmaterialParams.transparent = false;\n\n\t\t\tif ( alphaMode === ALPHA_MODES.MASK ) {\n\n\t\t\t\tmaterialParams.alphaTest = materialDef.alphaCutoff !== undefined ? materialDef.alphaCutoff : 0.5;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( materialDef.normalTexture !== undefined && materialType !== MeshBasicMaterial ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'normalMap', materialDef.normalTexture ) );\n\n\t\t\tmaterialParams.normalScale = new Vector2( 1, 1 );\n\n\t\t\tif ( materialDef.normalTexture.scale !== undefined ) {\n\n\t\t\t\tmaterialParams.normalScale.set( materialDef.normalTexture.scale, materialDef.normalTexture.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( materialDef.occlusionTexture !== undefined && materialType !== MeshBasicMaterial ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'aoMap', materialDef.occlusionTexture ) );\n\n\t\t\tif ( materialDef.occlusionTexture.strength !== undefined ) {\n\n\t\t\t\tmaterialParams.aoMapIntensity = materialDef.occlusionTexture.strength;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( materialDef.emissiveFactor !== undefined && materialType !== MeshBasicMaterial ) {\n\n\t\t\tmaterialParams.emissive = new Color().fromArray( materialDef.emissiveFactor );\n\n\t\t}\n\n\t\tif ( materialDef.emissiveTexture !== undefined && materialType !== MeshBasicMaterial ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'emissiveMap', materialDef.emissiveTexture ) );\n\n\t\t}\n\n\t\treturn Promise.all( pending ).then( function () {\n\n\t\t\tvar material;\n\n\t\t\tif ( materialType === ShaderMaterial ) {\n\n\t\t\t\tmaterial = extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ].createMaterial( materialParams );\n\n\t\t\t} else {\n\n\t\t\t\tmaterial = new materialType( materialParams );\n\n\t\t\t}\n\n\t\t\tif ( materialDef.name !== undefined ) material.name = materialDef.name;\n\n\t\t\t// baseColorTexture, emissiveTexture, and specularGlossinessTexture use sRGB encoding.\n\t\t\tif ( material.map ) material.map.encoding = sRGBEncoding;\n\t\t\tif ( material.emissiveMap ) material.emissiveMap.encoding = sRGBEncoding;\n\t\t\tif ( material.specularMap ) material.specularMap.encoding = sRGBEncoding;\n\n\t\t\tassignExtrasToUserData( material, materialDef );\n\n\t\t\tif ( materialDef.extensions ) addUnknownExtensionsToUserData( extensions, material, materialDef );\n\n\t\t\treturn material;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * @param {BufferGeometry} geometry\n\t * @param {GLTF.Primitive} primitiveDef\n\t * @param {GLTFParser} parser\n\t * @return {Promise<BufferGeometry>}\n\t */\n\tfunction addPrimitiveAttributes( geometry, primitiveDef, parser ) {\n\n\t\tvar attributes = primitiveDef.attributes;\n\n\t\tvar pending = [];\n\n\t\tfunction assignAttributeAccessor( accessorIndex, attributeName ) {\n\n\t\t\treturn parser.getDependency( 'accessor', accessorIndex )\n\t\t\t\t.then( function ( accessor ) {\n\n\t\t\t\t\tgeometry.addAttribute( attributeName, accessor );\n\n\t\t\t\t} );\n\n\t\t}\n\n\t\tfor ( var gltfAttributeName in attributes ) {\n\n\t\t\tvar threeAttributeName = ATTRIBUTES[ gltfAttributeName ] || gltfAttributeName.toLowerCase();\n\n\t\t\t// Skip attributes already provided by e.g. Draco extension.\n\t\t\tif ( threeAttributeName in geometry.attributes ) continue;\n\n\t\t\tpending.push( assignAttributeAccessor( attributes[ gltfAttributeName ], threeAttributeName ) );\n\n\t\t}\n\n\t\tif ( primitiveDef.indices !== undefined && ! geometry.index ) {\n\n\t\t\tvar accessor = parser.getDependency( 'accessor', primitiveDef.indices ).then( function ( accessor ) {\n\n\t\t\t\tgeometry.setIndex( accessor );\n\n\t\t\t} );\n\n\t\t\tpending.push( accessor );\n\n\t\t}\n\n\t\tassignExtrasToUserData( geometry, primitiveDef );\n\n\t\treturn Promise.all( pending ).then( function () {\n\n\t\t\treturn primitiveDef.targets !== undefined\n\t\t\t\t? addMorphTargets( geometry, primitiveDef.targets, parser )\n\t\t\t\t: geometry;\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#geometry\n\t *\n\t * Creates BufferGeometries from primitives.\n\t *\n\t * @param {Array<GLTF.Primitive>} primitives\n\t * @return {Promise<Array<BufferGeometry>>}\n\t */\n\tGLTFParser.prototype.loadGeometries = function ( primitives ) {\n\n\t\tvar parser = this;\n\t\tvar extensions = this.extensions;\n\t\tvar cache = this.primitiveCache;\n\n\t\tfunction createDracoPrimitive( primitive ) {\n\n\t\t\treturn extensions[ EXTENSIONS.KHR_DRACO_MESH_COMPRESSION ]\n\t\t\t\t.decodePrimitive( primitive, parser )\n\t\t\t\t.then( function ( geometry ) {\n\n\t\t\t\t\treturn addPrimitiveAttributes( geometry, primitive, parser );\n\n\t\t\t\t} );\n\n\t\t}\n\n\t\tvar pending = [];\n\n\t\tfor ( var i = 0, il = primitives.length; i < il; i ++ ) {\n\n\t\t\tvar primitive = primitives[ i ];\n\t\t\tvar cacheKey = createPrimitiveKey( primitive );\n\n\t\t\t// See if we've already created this geometry\n\t\t\tvar cached = cache[ cacheKey ];\n\n\t\t\tif ( cached ) {\n\n\t\t\t\t// Use the cached geometry if it exists\n\t\t\t\tpending.push( cached.promise );\n\n\t\t\t} else {\n\n\t\t\t\tvar geometryPromise;\n\n\t\t\t\tif ( primitive.extensions && primitive.extensions[ EXTENSIONS.KHR_DRACO_MESH_COMPRESSION ] ) {\n\n\t\t\t\t\t// Use DRACO geometry if available\n\t\t\t\t\tgeometryPromise = createDracoPrimitive( primitive );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Otherwise create a new geometry\n\t\t\t\t\tgeometryPromise = addPrimitiveAttributes( new BufferGeometry(), primitive, parser );\n\n\t\t\t\t}\n\n\t\t\t\t// Cache this geometry\n\t\t\t\tcache[ cacheKey ] = { primitive: primitive, promise: geometryPromise };\n\n\t\t\t\tpending.push( geometryPromise );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Promise.all( pending );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#meshes\n\t * @param {number} meshIndex\n\t * @return {Promise<Group|Mesh|SkinnedMesh>}\n\t */\n\tGLTFParser.prototype.loadMesh = function ( meshIndex ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\t\tvar extensions = this.extensions;\n\n\t\tvar meshDef = json.meshes[ meshIndex ];\n\t\tvar primitives = meshDef.primitives;\n\n\t\tvar pending = [];\n\n\t\tfor ( var i = 0, il = primitives.length; i < il; i ++ ) {\n\n\t\t\tvar material = primitives[ i ].material === undefined\n\t\t\t\t? createDefaultMaterial()\n\t\t\t\t: this.getDependency( 'material', primitives[ i ].material );\n\n\t\t\tpending.push( material );\n\n\t\t}\n\n\t\treturn Promise.all( pending ).then( function ( originalMaterials ) {\n\n\t\t\treturn parser.loadGeometries( primitives ).then( function ( geometries ) {\n\n\t\t\t\tvar meshes = [];\n\n\t\t\t\tfor ( var i = 0, il = geometries.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar geometry = geometries[ i ];\n\t\t\t\t\tvar primitive = primitives[ i ];\n\n\t\t\t\t\t// 1. create Mesh\n\n\t\t\t\t\tvar mesh;\n\n\t\t\t\t\tvar material = originalMaterials[ i ];\n\n\t\t\t\t\tif ( primitive.mode === WEBGL_CONSTANTS.TRIANGLES ||\n\t\t\t\t\t\tprimitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP ||\n\t\t\t\t\t\tprimitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN ||\n\t\t\t\t\t\tprimitive.mode === undefined ) {\n\n\t\t\t\t\t\t// .isSkinnedMesh isn't in glTF spec. See .markDefs()\n\t\t\t\t\t\tmesh = meshDef.isSkinnedMesh === true\n\t\t\t\t\t\t\t? new SkinnedMesh( geometry, material )\n\t\t\t\t\t\t\t: new Mesh( geometry, material );\n\n\t\t\t\t\t\tif ( mesh.isSkinnedMesh === true ) mesh.normalizeSkinWeights(); // #15319\n\n\t\t\t\t\t\tif ( primitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP ) {\n\n\t\t\t\t\t\t\tmesh.drawMode = TriangleStripDrawMode;\n\n\t\t\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN ) {\n\n\t\t\t\t\t\t\tmesh.drawMode = TriangleFanDrawMode;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.LINES ) {\n\n\t\t\t\t\t\tmesh = new LineSegments( geometry, material );\n\n\t\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.LINE_STRIP ) {\n\n\t\t\t\t\t\tmesh = new Line( geometry, material );\n\n\t\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.LINE_LOOP ) {\n\n\t\t\t\t\t\tmesh = new LineLoop( geometry, material );\n\n\t\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.POINTS ) {\n\n\t\t\t\t\t\tmesh = new Points( geometry, material );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthrow new Error( 'THREE.GLTFLoader: Primitive mode unsupported: ' + primitive.mode );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( Object.keys( mesh.geometry.morphAttributes ).length > 0 ) {\n\n\t\t\t\t\t\tupdateMorphTargets( mesh, meshDef );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmesh.name = meshDef.name || ( 'mesh_' + meshIndex );\n\n\t\t\t\t\tif ( geometries.length > 1 ) mesh.name += '_' + i;\n\n\t\t\t\t\tassignExtrasToUserData( mesh, meshDef );\n\n\t\t\t\t\tparser.assignFinalMaterial( mesh );\n\n\t\t\t\t\tmeshes.push( mesh );\n\n\t\t\t\t}\n\n\t\t\t\tif ( meshes.length === 1 ) {\n\n\t\t\t\t\treturn meshes[ 0 ];\n\n\t\t\t\t}\n\n\t\t\t\tvar group = new Group();\n\n\t\t\t\tfor ( var i = 0, il = meshes.length; i < il; i ++ ) {\n\n\t\t\t\t\tgroup.add( meshes[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn group;\n\n\t\t\t} );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#cameras\n\t * @param {number} cameraIndex\n\t * @return {Promise<Camera>}\n\t */\n\tGLTFParser.prototype.loadCamera = function ( cameraIndex ) {\n\n\t\tvar camera;\n\t\tvar cameraDef = this.json.cameras[ cameraIndex ];\n\t\tvar params = cameraDef[ cameraDef.type ];\n\n\t\tif ( ! params ) {\n\n\t\t\tconsole.warn( 'THREE.GLTFLoader: Missing camera parameters.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( cameraDef.type === 'perspective' ) {\n\n\t\t\tcamera = new PerspectiveCamera( _Math.radToDeg( params.yfov ), params.aspectRatio || 1, params.znear || 1, params.zfar || 2e6 );\n\n\t\t} else if ( cameraDef.type === 'orthographic' ) {\n\n\t\t\tcamera = new OrthographicCamera( params.xmag / - 2, params.xmag / 2, params.ymag / 2, params.ymag / - 2, params.znear, params.zfar );\n\n\t\t}\n\n\t\tif ( cameraDef.name !== undefined ) camera.name = cameraDef.name;\n\n\t\tassignExtrasToUserData( camera, cameraDef );\n\n\t\treturn Promise.resolve( camera );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#skins\n\t * @param {number} skinIndex\n\t * @return {Promise<Object>}\n\t */\n\tGLTFParser.prototype.loadSkin = function ( skinIndex ) {\n\n\t\tvar skinDef = this.json.skins[ skinIndex ];\n\n\t\tvar skinEntry = { joints: skinDef.joints };\n\n\t\tif ( skinDef.inverseBindMatrices === undefined ) {\n\n\t\t\treturn Promise.resolve( skinEntry );\n\n\t\t}\n\n\t\treturn this.getDependency( 'accessor', skinDef.inverseBindMatrices ).then( function ( accessor ) {\n\n\t\t\tskinEntry.inverseBindMatrices = accessor;\n\n\t\t\treturn skinEntry;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#animations\n\t * @param {number} animationIndex\n\t * @return {Promise<AnimationClip>}\n\t */\n\tGLTFParser.prototype.loadAnimation = function ( animationIndex ) {\n\n\t\tvar json = this.json;\n\n\t\tvar animationDef = json.animations[ animationIndex ];\n\n\t\tvar pendingNodes = [];\n\t\tvar pendingInputAccessors = [];\n\t\tvar pendingOutputAccessors = [];\n\t\tvar pendingSamplers = [];\n\t\tvar pendingTargets = [];\n\n\t\tfor ( var i = 0, il = animationDef.channels.length; i < il; i ++ ) {\n\n\t\t\tvar channel = animationDef.channels[ i ];\n\t\t\tvar sampler = animationDef.samplers[ channel.sampler ];\n\t\t\tvar target = channel.target;\n\t\t\tvar name = target.node !== undefined ? target.node : target.id; // NOTE: target.id is deprecated.\n\t\t\tvar input = animationDef.parameters !== undefined ? animationDef.parameters[ sampler.input ] : sampler.input;\n\t\t\tvar output = animationDef.parameters !== undefined ? animationDef.parameters[ sampler.output ] : sampler.output;\n\n\t\t\tpendingNodes.push( this.getDependency( 'node', name ) );\n\t\t\tpendingInputAccessors.push( this.getDependency( 'accessor', input ) );\n\t\t\tpendingOutputAccessors.push( this.getDependency( 'accessor', output ) );\n\t\t\tpendingSamplers.push( sampler );\n\t\t\tpendingTargets.push( target );\n\n\t\t}\n\n\t\treturn Promise.all( [\n\n\t\t\tPromise.all( pendingNodes ),\n\t\t\tPromise.all( pendingInputAccessors ),\n\t\t\tPromise.all( pendingOutputAccessors ),\n\t\t\tPromise.all( pendingSamplers ),\n\t\t\tPromise.all( pendingTargets )\n\n\t\t] ).then( function ( dependencies ) {\n\n\t\t\tvar nodes = dependencies[ 0 ];\n\t\t\tvar inputAccessors = dependencies[ 1 ];\n\t\t\tvar outputAccessors = dependencies[ 2 ];\n\t\t\tvar samplers = dependencies[ 3 ];\n\t\t\tvar targets = dependencies[ 4 ];\n\n\t\t\tvar tracks = [];\n\n\t\t\tfor ( var i = 0, il = nodes.length; i < il; i ++ ) {\n\n\t\t\t\tvar node = nodes[ i ];\n\t\t\t\tvar inputAccessor = inputAccessors[ i ];\n\t\t\t\tvar outputAccessor = outputAccessors[ i ];\n\t\t\t\tvar sampler = samplers[ i ];\n\t\t\t\tvar target = targets[ i ];\n\n\t\t\t\tif ( node === undefined ) continue;\n\n\t\t\t\tnode.updateMatrix();\n\t\t\t\tnode.matrixAutoUpdate = true;\n\n\t\t\t\tvar TypedKeyframeTrack;\n\n\t\t\t\tswitch ( PATH_PROPERTIES[ target.path ] ) {\n\n\t\t\t\t\tcase PATH_PROPERTIES.weights:\n\n\t\t\t\t\t\tTypedKeyframeTrack = NumberKeyframeTrack;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase PATH_PROPERTIES.rotation:\n\n\t\t\t\t\t\tTypedKeyframeTrack = QuaternionKeyframeTrack;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase PATH_PROPERTIES.position:\n\t\t\t\t\tcase PATH_PROPERTIES.scale:\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tTypedKeyframeTrack = VectorKeyframeTrack;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tvar targetName = node.name ? node.name : node.uuid;\n\n\t\t\t\tvar interpolation = sampler.interpolation !== undefined ? INTERPOLATION[ sampler.interpolation ] : InterpolateLinear;\n\n\t\t\t\tvar targetNames = [];\n\n\t\t\t\tif ( PATH_PROPERTIES[ target.path ] === PATH_PROPERTIES.weights ) {\n\n\t\t\t\t\t// Node may be a Group (glTF mesh with several primitives) or a Mesh.\n\t\t\t\t\tnode.traverse( function ( object ) {\n\n\t\t\t\t\t\tif ( object.isMesh === true && object.morphTargetInfluences ) {\n\n\t\t\t\t\t\t\ttargetNames.push( object.name ? object.name : object.uuid );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttargetNames.push( targetName );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var j = 0, jl = targetNames.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar track = new TypedKeyframeTrack(\n\t\t\t\t\t\ttargetNames[ j ] + '.' + PATH_PROPERTIES[ target.path ],\n\t\t\t\t\t\tinputAccessor.array,\n\t\t\t\t\t\toutputAccessor.array,\n\t\t\t\t\t\tinterpolation\n\t\t\t\t\t);\n\n\t\t\t\t\t// Override interpolation with custom factory method.\n\t\t\t\t\tif ( sampler.interpolation === 'CUBICSPLINE' ) {\n\n\t\t\t\t\t\ttrack.createInterpolant = function InterpolantFactoryMethodGLTFCubicSpline( result ) {\n\n\t\t\t\t\t\t\t// A CUBICSPLINE keyframe in glTF has three output values for each input value,\n\t\t\t\t\t\t\t// representing inTangent, splineVertex, and outTangent. As a result, track.getValueSize()\n\t\t\t\t\t\t\t// must be divided by three to get the interpolant's sampleSize argument.\n\n\t\t\t\t\t\t\treturn new GLTFCubicSplineInterpolant( this.times, this.values, this.getValueSize() / 3, result );\n\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// Mark as CUBICSPLINE. `track.getInterpolation()` doesn't support custom interpolants.\n\t\t\t\t\t\ttrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( track );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar name = animationDef.name !== undefined ? animationDef.name : 'animation_' + animationIndex;\n\n\t\t\treturn new AnimationClip( name, undefined, tracks );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#nodes-and-hierarchy\n\t * @param {number} nodeIndex\n\t * @return {Promise<Object3D>}\n\t */\n\tGLTFParser.prototype.loadNode = function ( nodeIndex ) {\n\n\t\tvar json = this.json;\n\t\tvar extensions = this.extensions;\n\t\tvar parser = this;\n\n\t\tvar meshReferences = json.meshReferences;\n\t\tvar meshUses = json.meshUses;\n\n\t\tvar nodeDef = json.nodes[ nodeIndex ];\n\n\t\treturn ( function () {\n\n\t\t\t// .isBone isn't in glTF spec. See .markDefs\n\t\t\tif ( nodeDef.isBone === true ) {\n\n\t\t\t\treturn Promise.resolve( new Bone() );\n\n\t\t\t} else if ( nodeDef.mesh !== undefined ) {\n\n\t\t\t\treturn parser.getDependency( 'mesh', nodeDef.mesh ).then( function ( mesh ) {\n\n\t\t\t\t\tvar node;\n\n\t\t\t\t\tif ( meshReferences[ nodeDef.mesh ] > 1 ) {\n\n\t\t\t\t\t\tvar instanceNum = meshUses[ nodeDef.mesh ] ++;\n\n\t\t\t\t\t\tnode = mesh.clone();\n\t\t\t\t\t\tnode.name += '_instance_' + instanceNum;\n\n\t\t\t\t\t\t// onBeforeRender copy for Specular-Glossiness\n\t\t\t\t\t\tnode.onBeforeRender = mesh.onBeforeRender;\n\n\t\t\t\t\t\tfor ( var i = 0, il = node.children.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\tnode.children[ i ].name += '_instance_' + instanceNum;\n\t\t\t\t\t\t\tnode.children[ i ].onBeforeRender = mesh.children[ i ].onBeforeRender;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tnode = mesh;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// if weights are provided on the node, override weights on the mesh.\n\t\t\t\t\tif ( nodeDef.weights !== undefined ) {\n\n\t\t\t\t\t\tnode.traverse( function ( o ) {\n\n\t\t\t\t\t\t\tif ( ! o.isMesh ) return;\n\n\t\t\t\t\t\t\tfor ( var i = 0, il = nodeDef.weights.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\t\to.morphTargetInfluences[ i ] = nodeDef.weights[ i ];\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn node;\n\n\t\t\t\t} );\n\n\t\t\t} else if ( nodeDef.camera !== undefined ) {\n\n\t\t\t\treturn parser.getDependency( 'camera', nodeDef.camera );\n\n\t\t\t} else if ( nodeDef.extensions\n\t\t\t\t&& nodeDef.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ]\n\t\t\t\t&& nodeDef.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ].light !== undefined ) {\n\n\t\t\t\treturn parser.getDependency( 'light', nodeDef.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ].light );\n\n\t\t\t} else {\n\n\t\t\t\treturn Promise.resolve( new Object3D() );\n\n\t\t\t}\n\n\t\t}() ).then( function ( node ) {\n\n\t\t\tif ( nodeDef.name !== undefined ) {\n\n\t\t\t\tnode.userData.name = nodeDef.name;\n\t\t\t\tnode.name = PropertyBinding.sanitizeNodeName( nodeDef.name );\n\n\t\t\t}\n\n\t\t\tassignExtrasToUserData( node, nodeDef );\n\n\t\t\tif ( nodeDef.extensions ) addUnknownExtensionsToUserData( extensions, node, nodeDef );\n\n\t\t\tif ( nodeDef.matrix !== undefined ) {\n\n\t\t\t\tvar matrix = new Matrix4();\n\t\t\t\tmatrix.fromArray( nodeDef.matrix );\n\t\t\t\tnode.applyMatrix( matrix );\n\n\t\t\t} else {\n\n\t\t\t\tif ( nodeDef.translation !== undefined ) {\n\n\t\t\t\t\tnode.position.fromArray( nodeDef.translation );\n\n\t\t\t\t}\n\n\t\t\t\tif ( nodeDef.rotation !== undefined ) {\n\n\t\t\t\t\tnode.quaternion.fromArray( nodeDef.rotation );\n\n\t\t\t\t}\n\n\t\t\t\tif ( nodeDef.scale !== undefined ) {\n\n\t\t\t\t\tnode.scale.fromArray( nodeDef.scale );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn node;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#scenes\n\t * @param {number} sceneIndex\n\t * @return {Promise<Scene>}\n\t */\n\tGLTFParser.prototype.loadScene = function () {\n\n\t\t// scene node hierachy builder\n\n\t\tfunction buildNodeHierachy( nodeId, parentObject, json, parser ) {\n\n\t\t\tvar nodeDef = json.nodes[ nodeId ];\n\n\t\t\treturn parser.getDependency( 'node', nodeId ).then( function ( node ) {\n\n\t\t\t\tif ( nodeDef.skin === undefined ) return node;\n\n\t\t\t\t// build skeleton here as well\n\n\t\t\t\tvar skinEntry;\n\n\t\t\t\treturn parser.getDependency( 'skin', nodeDef.skin ).then( function ( skin ) {\n\n\t\t\t\t\tskinEntry = skin;\n\n\t\t\t\t\tvar pendingJoints = [];\n\n\t\t\t\t\tfor ( var i = 0, il = skinEntry.joints.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tpendingJoints.push( parser.getDependency( 'node', skinEntry.joints[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Promise.all( pendingJoints );\n\n\t\t\t\t} ).then( function ( jointNodes ) {\n\n\t\t\t\t\tvar meshes = node.isGroup === true ? node.children : [ node ];\n\n\t\t\t\t\tfor ( var i = 0, il = meshes.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar mesh = meshes[ i ];\n\n\t\t\t\t\t\tvar bones = [];\n\t\t\t\t\t\tvar boneInverses = [];\n\n\t\t\t\t\t\tfor ( var j = 0, jl = jointNodes.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tvar jointNode = jointNodes[ j ];\n\n\t\t\t\t\t\t\tif ( jointNode ) {\n\n\t\t\t\t\t\t\t\tbones.push( jointNode );\n\n\t\t\t\t\t\t\t\tvar mat = new Matrix4();\n\n\t\t\t\t\t\t\t\tif ( skinEntry.inverseBindMatrices !== undefined ) {\n\n\t\t\t\t\t\t\t\t\tmat.fromArray( skinEntry.inverseBindMatrices.array, j * 16 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tboneInverses.push( mat );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Joint \"%s\" could not be found.', skinEntry.joints[ j ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmesh.bind( new Skeleton( bones, boneInverses ), mesh.matrixWorld );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn node;\n\n\t\t\t\t} );\n\n\t\t\t} ).then( function ( node ) {\n\n\t\t\t\t// build node hierachy\n\n\t\t\t\tparentObject.add( node );\n\n\t\t\t\tvar pending = [];\n\n\t\t\t\tif ( nodeDef.children ) {\n\n\t\t\t\t\tvar children = nodeDef.children;\n\n\t\t\t\t\tfor ( var i = 0, il = children.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar child = children[ i ];\n\t\t\t\t\t\tpending.push( buildNodeHierachy( child, node, json, parser ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn Promise.all( pending );\n\n\t\t\t} );\n\n\t\t}\n\n\t\treturn function loadScene( sceneIndex ) {\n\n\t\t\tvar json = this.json;\n\t\t\tvar extensions = this.extensions;\n\t\t\tvar sceneDef = this.json.scenes[ sceneIndex ];\n\t\t\tvar parser = this;\n\n\t\t\tvar scene = new Scene();\n\t\t\tif ( sceneDef.name !== undefined ) scene.name = sceneDef.name;\n\n\t\t\tassignExtrasToUserData( scene, sceneDef );\n\n\t\t\tif ( sceneDef.extensions ) addUnknownExtensionsToUserData( extensions, scene, sceneDef );\n\n\t\t\tvar nodeIds = sceneDef.nodes || [];\n\n\t\t\tvar pending = [];\n\n\t\t\tfor ( var i = 0, il = nodeIds.length; i < il; i ++ ) {\n\n\t\t\t\tpending.push( buildNodeHierachy( nodeIds[ i ], scene, json, parser ) );\n\n\t\t\t}\n\n\t\t\treturn Promise.all( pending ).then( function () {\n\n\t\t\t\treturn scene;\n\n\t\t\t} );\n\n\t\t};\n\n\t}();\n\n\treturn GLTFLoader;\n\n} )();\n\n\n\n// CONCATENATED MODULE: ./node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--12-0!./node_modules/_thread-loader@2.1.2@thread-loader/dist/cjs.js!./node_modules/_babel-loader@8.0.6@babel-loader/lib!./node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!./node_modules/_vue-loader@15.7.0@vue-loader/lib??vue-loader-options!./src/model-gltf.vue?vue&type=script&lang=js&\n\n\n/* harmony default export */ var model_gltfvue_type_script_lang_js_ = ({\n  name: 'model-gltf',\n  mixins: [model_mixin],\n  props: {\n    lights: {\n      type: Array,\n      default: function _default() {\n        return [{\n          type: 'AmbientLight',\n          color: 0xaaaaaa\n        }, {\n          type: 'DirectionalLight',\n          position: {\n            x: 1,\n            y: 1,\n            z: 1\n          },\n          color: 0xffffff,\n          intensity: 0.8\n        }];\n      }\n    },\n    gammaOutput: {\n      type: Boolean,\n      default: true\n    }\n  },\n  data: function data() {\n    var loader = new GLTFLoader_GLTFLoader();\n    loader.setCrossOrigin(this.crossOrigin);\n    return {\n      loader: loader\n    };\n  },\n  methods: {\n    load: function load() {\n      var _this = this;\n\n      if (!this.src) return;\n\n      if (this.object) {\n        this.wrapper.remove(this.object);\n      }\n\n      this.loader.load(this.src, function (data) {\n        _this.addObject(data.scene);\n\n        _this.$emit('on-load');\n      }, function (xhr) {\n        _this.$emit('on-progress', xhr);\n      }, function (err) {\n        console.log(err);\n\n        _this.$emit('on-error', err);\n      });\n    }\n  }\n});\n// CONCATENATED MODULE: ./src/model-gltf.vue?vue&type=script&lang=js&\n /* harmony default export */ var src_model_gltfvue_type_script_lang_js_ = (model_gltfvue_type_script_lang_js_); \n// CONCATENATED MODULE: ./src/model-gltf.vue\nvar model_gltf_render, model_gltf_staticRenderFns\n\n\n\n\n/* normalize component */\n\nvar model_gltf_component = normalizeComponent(\n  src_model_gltfvue_type_script_lang_js_,\n  model_gltf_render,\n  model_gltf_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ var model_gltf = (model_gltf_component.exports);\n// CONCATENATED MODULE: ./src/index.js\n\n\n\n\n\n\n\n\n // alias\n\nvar ModelJson = external_commonjs_vue_commonjs2_vue_root_Vue_default.a.extend(model_three, {\n  name: 'model-json'\n});\nvar ModelDae = external_commonjs_vue_commonjs2_vue_root_Vue_default.a.extend(model_collada, {\n  name: 'model-dae'\n});\nvar components = [model_obj, model_three, ModelJson, model_stl, model_ply, model_collada, ModelDae, model_gltf];\n/* eslint-disable no-shadow */\n\nvar install = function install(Vue) {\n  components.forEach(function (component) {\n    Vue.component(component.name, component);\n  });\n};\n\nif (typeof window !== 'undefined' && window.Vue) {\n  install(window.Vue);\n}\n\n/* harmony default export */ var src = ({\n  install: install,\n  ModelObj: model_obj,\n  ModelThree: model_three,\n  ModelJson: ModelJson,\n  ModelStl: model_stl,\n  ModelPly: model_ply,\n  ModelCollada: model_collada,\n  ModelDae: ModelDae,\n  ModelGltf: model_gltf\n});\n\n// CONCATENATED MODULE: ./node_modules/_@vue_cli-service@3.8.4@@vue/cli-service/lib/commands/build/entry-lib.js\n/* concated harmony reexport install */__webpack_require__.d(__webpack_exports__, \"install\", function() { return install; });\n/* concated harmony reexport ModelObj */__webpack_require__.d(__webpack_exports__, \"ModelObj\", function() { return model_obj; });\n/* concated harmony reexport ModelThree */__webpack_require__.d(__webpack_exports__, \"ModelThree\", function() { return model_three; });\n/* concated harmony reexport ModelJson */__webpack_require__.d(__webpack_exports__, \"ModelJson\", function() { return ModelJson; });\n/* concated harmony reexport ModelStl */__webpack_require__.d(__webpack_exports__, \"ModelStl\", function() { return model_stl; });\n/* concated harmony reexport ModelPly */__webpack_require__.d(__webpack_exports__, \"ModelPly\", function() { return model_ply; });\n/* concated harmony reexport ModelCollada */__webpack_require__.d(__webpack_exports__, \"ModelCollada\", function() { return model_collada; });\n/* concated harmony reexport ModelDae */__webpack_require__.d(__webpack_exports__, \"ModelDae\", function() { return ModelDae; });\n/* concated harmony reexport ModelGltf */__webpack_require__.d(__webpack_exports__, \"ModelGltf\", function() { return model_gltf; });\n\n\n/* harmony default export */ var entry_lib = __webpack_exports__[\"default\"] = (src);\n\n\n\n/***/ }),\n\n/***/ \"c615\":\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(\"9253\")('Uint32', 4, function (init) {\n  return function Uint32Array(data, byteOffset, length) {\n    return init(this, data, byteOffset, length);\n  };\n});\n\n\n/***/ }),\n\n/***/ \"c650\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar global = __webpack_require__(\"3754\");\nvar dP = __webpack_require__(\"ddf7\");\nvar DESCRIPTORS = __webpack_require__(\"dad2\");\nvar SPECIES = __webpack_require__(\"8b37\")('species');\n\nmodule.exports = function (KEY) {\n  var C = global[KEY];\n  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {\n    configurable: true,\n    get: function () { return this; }\n  });\n};\n\n\n/***/ }),\n\n/***/ \"c847\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// check on default Array iterator\nvar Iterators = __webpack_require__(\"14fc\");\nvar ITERATOR = __webpack_require__(\"8b37\")('iterator');\nvar ArrayProto = Array.prototype;\n\nmodule.exports = function (it) {\n  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);\n};\n\n\n/***/ }),\n\n/***/ \"c9ea\":\n/***/ (function(module, exports) {\n\nmodule.exports = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' +\n  '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF';\n\n\n/***/ }),\n\n/***/ \"ca2b\":\n/***/ (function(module, exports) {\n\nmodule.exports = false;\n\n\n/***/ }),\n\n/***/ \"cfc7\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys = __webpack_require__(\"fb6d\");\nvar enumBugKeys = __webpack_require__(\"b4e0\");\n\nmodule.exports = Object.keys || function keys(O) {\n  return $keys(O, enumBugKeys);\n};\n\n\n/***/ }),\n\n/***/ \"d217\":\n/***/ (function(module, exports) {\n\nexports.f = {}.propertyIsEnumerable;\n\n\n/***/ }),\n\n/***/ \"d4d5\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar global = __webpack_require__(\"3754\");\nvar has = __webpack_require__(\"03b3\");\nvar cof = __webpack_require__(\"94ac\");\nvar inheritIfRequired = __webpack_require__(\"44de\");\nvar toPrimitive = __webpack_require__(\"5325\");\nvar fails = __webpack_require__(\"b6f1\");\nvar gOPN = __webpack_require__(\"a891\").f;\nvar gOPD = __webpack_require__(\"acb9\").f;\nvar dP = __webpack_require__(\"ddf7\").f;\nvar $trim = __webpack_require__(\"539d\").trim;\nvar NUMBER = 'Number';\nvar $Number = global[NUMBER];\nvar Base = $Number;\nvar proto = $Number.prototype;\n// Opera ~12 has broken Object#toString\nvar BROKEN_COF = cof(__webpack_require__(\"a7b8\")(proto)) == NUMBER;\nvar TRIM = 'trim' in String.prototype;\n\n// 7.1.3 ToNumber(argument)\nvar toNumber = function (argument) {\n  var it = toPrimitive(argument, false);\n  if (typeof it == 'string' && it.length > 2) {\n    it = TRIM ? it.trim() : $trim(it, 3);\n    var first = it.charCodeAt(0);\n    var third, radix, maxCode;\n    if (first === 43 || first === 45) {\n      third = it.charCodeAt(2);\n      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix\n    } else if (first === 48) {\n      switch (it.charCodeAt(1)) {\n        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal /^0b[01]+$/i\n        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal /^0o[0-7]+$/i\n        default: return +it;\n      }\n      for (var digits = it.slice(2), i = 0, l = digits.length, code; i < l; i++) {\n        code = digits.charCodeAt(i);\n        // parseInt parses a string to a first unavailable symbol\n        // but ToNumber should return NaN if a string contains unavailable symbols\n        if (code < 48 || code > maxCode) return NaN;\n      } return parseInt(digits, radix);\n    }\n  } return +it;\n};\n\nif (!$Number(' 0o1') || !$Number('0b1') || $Number('+0x1')) {\n  $Number = function Number(value) {\n    var it = arguments.length < 1 ? 0 : value;\n    var that = this;\n    return that instanceof $Number\n      // check on 1..constructor(foo) case\n      && (BROKEN_COF ? fails(function () { proto.valueOf.call(that); }) : cof(that) != NUMBER)\n        ? inheritIfRequired(new Base(toNumber(it)), that, $Number) : toNumber(it);\n  };\n  for (var keys = __webpack_require__(\"dad2\") ? gOPN(Base) : (\n    // ES3:\n    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +\n    // ES6 (in case, if modules with ES6 Number statics required before):\n    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +\n    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'\n  ).split(','), j = 0, key; keys.length > j; j++) {\n    if (has(Base, key = keys[j]) && !has($Number, key)) {\n      dP($Number, key, gOPD(Base, key));\n    }\n  }\n  $Number.prototype = proto;\n  proto.constructor = $Number;\n  __webpack_require__(\"e5ef\")(global, NUMBER, $Number);\n}\n\n\n/***/ }),\n\n/***/ \"d74e\":\n/***/ (function(module, exports) {\n\nmodule.exports = function (it, Constructor, name, forbiddenField) {\n  if (!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)) {\n    throw TypeError(name + ': incorrect invocation!');\n  } return it;\n};\n\n\n/***/ }),\n\n/***/ \"dac5\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar addToUnscopables = __webpack_require__(\"644a\");\nvar step = __webpack_require__(\"e650\");\nvar Iterators = __webpack_require__(\"14fc\");\nvar toIObject = __webpack_require__(\"3a68\");\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports = __webpack_require__(\"7656\")(Array, 'Array', function (iterated, kind) {\n  this._t = toIObject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var kind = this._k;\n  var index = this._i++;\n  if (!O || index >= O.length) {\n    this._t = undefined;\n    return step(1);\n  }\n  if (kind == 'keys') return step(0, index);\n  if (kind == 'values') return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n\n\n/***/ }),\n\n/***/ \"dad2\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// Thank's IE8 for his funny defineProperty\nmodule.exports = !__webpack_require__(\"b6f1\")(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n\n\n/***/ }),\n\n/***/ \"daf2\":\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(\"adbd\")('native-function-to-string', Function.toString);\n\n\n/***/ }),\n\n/***/ \"db4b\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// 7.1.13 ToObject(argument)\nvar defined = __webpack_require__(\"f01a\");\nmodule.exports = function (it) {\n  return Object(defined(it));\n};\n\n\n/***/ }),\n\n/***/ \"ddf7\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar anObject = __webpack_require__(\"a013\");\nvar IE8_DOM_DEFINE = __webpack_require__(\"568a\");\nvar toPrimitive = __webpack_require__(\"5325\");\nvar dP = Object.defineProperty;\n\nexports.f = __webpack_require__(\"dad2\") ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n\n\n/***/ }),\n\n/***/ \"dfab\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar shared = __webpack_require__(\"adbd\")('keys');\nvar uid = __webpack_require__(\"9d01\");\nmodule.exports = function (key) {\n  return shared[key] || (shared[key] = uid(key));\n};\n\n\n/***/ }),\n\n/***/ \"e3e0\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isObject = __webpack_require__(\"88dd\");\nvar document = __webpack_require__(\"3754\").document;\n// typeof document.createElement is 'object' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n\n\n/***/ }),\n\n/***/ \"e5ef\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar global = __webpack_require__(\"3754\");\nvar hide = __webpack_require__(\"743d\");\nvar has = __webpack_require__(\"03b3\");\nvar SRC = __webpack_require__(\"9d01\")('src');\nvar $toString = __webpack_require__(\"daf2\");\nvar TO_STRING = 'toString';\nvar TPL = ('' + $toString).split(TO_STRING);\n\n__webpack_require__(\"a4cc\").inspectSource = function (it) {\n  return $toString.call(it);\n};\n\n(module.exports = function (O, key, val, safe) {\n  var isFunction = typeof val == 'function';\n  if (isFunction) has(val, 'name') || hide(val, 'name', key);\n  if (O[key] === val) return;\n  if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));\n  if (O === global) {\n    O[key] = val;\n  } else if (!safe) {\n    delete O[key];\n    hide(O, key, val);\n  } else if (O[key]) {\n    O[key] = val;\n  } else {\n    hide(O, key, val);\n  }\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n})(Function.prototype, TO_STRING, function toString() {\n  return typeof this == 'function' && this[SRC] || $toString.call(this);\n});\n\n\n/***/ }),\n\n/***/ \"e650\":\n/***/ (function(module, exports) {\n\nmodule.exports = function (done, value) {\n  return { value: value, done: !!done };\n};\n\n\n/***/ }),\n\n/***/ \"e67d\":\n/***/ (function(module, exports) {\n\n// document.currentScript polyfill by Adam Miller\n\n// MIT license\n\n(function(document){\n  var currentScript = \"currentScript\",\n      scripts = document.getElementsByTagName('script'); // Live NodeList collection\n\n  // If browser needs currentScript polyfill, add get currentScript() to the document object\n  if (!(currentScript in document)) {\n    Object.defineProperty(document, currentScript, {\n      get: function(){\n\n        // IE 6-10 supports script readyState\n        // IE 10+ support stack trace\n        try { throw new Error(); }\n        catch (err) {\n\n          // Find the second match for the \"at\" string to get file src url from stack.\n          // Specifically works with the format of stack traces in IE.\n          var i, res = ((/.*at [^\\(]*\\((.*):.+:.+\\)$/ig).exec(err.stack) || [false])[1];\n\n          // For all scripts on the page, if src matches or if ready state is interactive, return the script tag\n          for(i in scripts){\n            if(scripts[i].src == res || scripts[i].readyState == \"interactive\"){\n              return scripts[i];\n            }\n          }\n\n          // If no match, return null\n          return null;\n        }\n      }\n    });\n  }\n})(document);\n\n\n/***/ }),\n\n/***/ \"f01a\":\n/***/ (function(module, exports) {\n\n// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n\n\n/***/ }),\n\n/***/ \"f216\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar redefine = __webpack_require__(\"e5ef\");\nmodule.exports = function (target, src, safe) {\n  for (var key in src) redefine(target, key, src[key], safe);\n  return target;\n};\n\n\n/***/ }),\n\n/***/ \"f691\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isObject = __webpack_require__(\"88dd\");\nvar isArray = __webpack_require__(\"b5b8\");\nvar SPECIES = __webpack_require__(\"8b37\")('species');\n\nmodule.exports = function (original) {\n  var C;\n  if (isArray(original)) {\n    C = original.constructor;\n    // cross-realm fallback\n    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;\n    if (isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  } return C === undefined ? Array : C;\n};\n\n\n/***/ }),\n\n/***/ \"f763\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar $iterators = __webpack_require__(\"dac5\");\nvar getKeys = __webpack_require__(\"cfc7\");\nvar redefine = __webpack_require__(\"e5ef\");\nvar global = __webpack_require__(\"3754\");\nvar hide = __webpack_require__(\"743d\");\nvar Iterators = __webpack_require__(\"14fc\");\nvar wks = __webpack_require__(\"8b37\");\nvar ITERATOR = wks('iterator');\nvar TO_STRING_TAG = wks('toStringTag');\nvar ArrayValues = Iterators.Array;\n\nvar DOMIterables = {\n  CSSRuleList: true, // TODO: Not spec compliant, should be false.\n  CSSStyleDeclaration: false,\n  CSSValueList: false,\n  ClientRectList: false,\n  DOMRectList: false,\n  DOMStringList: false,\n  DOMTokenList: true,\n  DataTransferItemList: false,\n  FileList: false,\n  HTMLAllCollection: false,\n  HTMLCollection: false,\n  HTMLFormElement: false,\n  HTMLSelectElement: false,\n  MediaList: true, // TODO: Not spec compliant, should be false.\n  MimeTypeArray: false,\n  NamedNodeMap: false,\n  NodeList: true,\n  PaintRequestList: false,\n  Plugin: false,\n  PluginArray: false,\n  SVGLengthList: false,\n  SVGNumberList: false,\n  SVGPathSegList: false,\n  SVGPointList: false,\n  SVGStringList: false,\n  SVGTransformList: false,\n  SourceBufferList: false,\n  StyleSheetList: true, // TODO: Not spec compliant, should be false.\n  TextTrackCueList: false,\n  TextTrackList: false,\n  TouchList: false\n};\n\nfor (var collections = getKeys(DOMIterables), i = 0; i < collections.length; i++) {\n  var NAME = collections[i];\n  var explicit = DOMIterables[NAME];\n  var Collection = global[NAME];\n  var proto = Collection && Collection.prototype;\n  var key;\n  if (proto) {\n    if (!proto[ITERATOR]) hide(proto, ITERATOR, ArrayValues);\n    if (!proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);\n    Iterators[NAME] = ArrayValues;\n    if (explicit) for (key in $iterators) if (!proto[key]) redefine(proto, key, $iterators[key], true);\n  }\n}\n\n\n/***/ }),\n\n/***/ \"fb6d\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar has = __webpack_require__(\"03b3\");\nvar toIObject = __webpack_require__(\"3a68\");\nvar arrayIndexOf = __webpack_require__(\"9f58\")(false);\nvar IE_PROTO = __webpack_require__(\"dfab\")('IE_PROTO');\n\nmodule.exports = function (object, names) {\n  var O = toIObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n\n\n/***/ })\n\n/******/ });\n});\n//# sourceMappingURL=vue-3d-model.umd.js.map"],"sourceRoot":""}